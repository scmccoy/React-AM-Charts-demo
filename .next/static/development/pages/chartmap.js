((window["webpackJsonp"] = window["webpackJsonp"] || []).push([["static/development/pages/chartmap.js"],{

/***/ "./components/Map.js":
/*!***************************!*\
  !*** ./components/Map.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _amcharts_amcharts4_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @amcharts/amcharts4/core */ "./node_modules/@amcharts/amcharts4/core.js");
/* harmony import */ var _amcharts_amcharts4_maps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @amcharts/amcharts4/maps */ "./node_modules/@amcharts/amcharts4/maps.js");
/* harmony import */ var _amcharts_amcharts4_geodata_region_usa_orLow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @amcharts/amcharts4-geodata/region/usa/orLow */ "./node_modules/@amcharts/amcharts4-geodata/region/usa/orLow.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
var _jsxFileName = "/Users/shanemccoy/Desktop/code/React-AM-Charts-demo/components/Map.js";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







var Map =
/*#__PURE__*/
function (_Component) {
  _inherits(Map, _Component);

  function Map() {
    _classCallCheck(this, Map);

    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));
  }

  _createClass(Map, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // Create map instance
      var chart = _amcharts_amcharts4_core__WEBPACK_IMPORTED_MODULE_1__["create"]("chartdiv", _amcharts_amcharts4_maps__WEBPACK_IMPORTED_MODULE_2__["MapChart"]); // Set map definition

      chart.geodata = _amcharts_amcharts4_geodata_region_usa_orLow__WEBPACK_IMPORTED_MODULE_3__["default"]; // Set projection

      chart.projection = new _amcharts_amcharts4_maps__WEBPACK_IMPORTED_MODULE_2__["projections"].Miller(); // Create map polygon series

      var polygonSeries = chart.series.push(new _amcharts_amcharts4_maps__WEBPACK_IMPORTED_MODULE_2__["MapPolygonSeries"]()); // Exclude Antartica

      polygonSeries.exclude = ["AQ"]; // Make map load polygon (like country names) data from GeoJSON

      polygonSeries.useGeodata = true; // Configure series

      var polygonTemplate = polygonSeries.mapPolygons.template;
      polygonTemplate.tooltipText = "{name}";
      polygonTemplate.fill = _amcharts_amcharts4_core__WEBPACK_IMPORTED_MODULE_1__["color"]("#74B266"); // Create hover state and set alternative fill color

      var hs = polygonTemplate.states.create("hover");
      hs.properties.fill = _amcharts_amcharts4_core__WEBPACK_IMPORTED_MODULE_1__["color"]("#367B25");
    }
  }, {
    key: "render",
    value: function render() {
      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 39
        },
        __self: this
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        id: "chartdiv",
        style: {
          width: "100%",
          height: "500px"
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 40
        },
        __self: this
      }));
    }
  }]);

  return Map;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);

/* harmony default export */ __webpack_exports__["default"] = (Map);

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4-geodata/region/usa/orLow.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4-geodata/region/usa/orLow.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({ "type": "FeatureCollection", "features": [
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-122.867, 45.317], [-122.867, 45.259], [-122.85, 45.259], [-122.868, 45.253], [-122.948, 45.268], [-122.966, 45.285], [-122.998, 45.262], [-123.002, 45.223], [-123.042, 45.22], [-123.012, 45.173], [-123.009, 45.11], [-123.04, 45.102], [-123.069, 45.074], [-123.329, 45.076], [-123.628, 45.075], [-123.723, 45.075], [-123.789, 45.075], [-123.788, 45.217], [-123.607, 45.214], [-123.465, 45.215], [-123.466, 45.434], [-123.136, 45.434], [-123.116, 45.42], [-123.116, 45.405], [-123.035, 45.404], [-123.035, 45.389], [-122.971, 45.346], [-122.91, 45.346], [-122.91, 45.316], [-122.867, 45.317]]] }, "properties": { "name": "Yamhill", "id": "41071", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41071" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-120.493, 45.069], [-120.254, 45.065], [-120.131, 45.066], [-119.91, 45.064], [-119.788, 45.067], [-119.784, 44.994], [-119.668, 44.993], [-119.671, 44.823], [-119.651, 44.823], [-119.654, 44.651], [-119.657, 44.307], [-119.902, 44.308], [-119.9, 44.392], [-120.021, 44.392], [-120.022, 44.439], [-120.385, 44.438], [-120.386, 44.565], [-120.384, 44.768], [-120.398, 44.775], [-120.394, 44.803], [-120.378, 44.818], [-120.411, 44.85], [-120.45, 44.864], [-120.458, 44.876], [-120.435, 44.896], [-120.461, 44.904], [-120.485, 44.959], [-120.477, 44.966], [-120.486, 45.001], [-120.48, 45.019], [-120.493, 45.069]]] }, "properties": { "name": "Wheeler", "id": "41069", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41069" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.362, 45.781], [-123.035, 45.779], [-123.034, 45.752], [-122.992, 45.752], [-122.992, 45.736], [-122.929, 45.736], [-122.929, 45.721], [-122.931, 45.635], [-122.868, 45.592], [-122.846, 45.592], [-122.743, 45.519], [-122.744, 45.432], [-122.743, 45.332], [-122.802, 45.333], [-122.803, 45.345], [-122.846, 45.345], [-122.847, 45.318], [-122.867, 45.317], [-122.91, 45.316], [-122.91, 45.346], [-122.971, 45.346], [-123.035, 45.389], [-123.035, 45.404], [-123.116, 45.405], [-123.116, 45.42], [-123.136, 45.434], [-123.466, 45.434], [-123.465, 45.493], [-123.445, 45.494], [-123.444, 45.519], [-123.403, 45.55], [-123.362, 45.55], [-123.362, 45.578], [-123.319, 45.579], [-123.302, 45.607], [-123.341, 45.607], [-123.341, 45.622], [-123.382, 45.622], [-123.381, 45.637], [-123.425, 45.638], [-123.445, 45.665], [-123.485, 45.679], [-123.486, 45.709], [-123.362, 45.71], [-123.362, 45.781]]] }, "properties": { "name": "Washington", "id": "41067", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41067" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-120.915, 45.645], [-120.902, 45.619], [-120.91, 45.608], [-120.894, 45.588], [-120.905, 45.561], [-120.879, 45.529], [-120.828, 45.518], [-120.835, 45.473], [-120.856, 45.46], [-120.867, 45.403], [-120.899, 45.362], [-120.934, 45.346], [-120.955, 45.307], [-121.007, 45.307], [-121.018, 45.294], [-121.022, 45.22], [-120.984, 45.199], [-120.921, 45.202], [-120.867, 45.198], [-120.803, 45.166], [-120.771, 45.161], [-120.764, 45.148], [-120.723, 45.129], [-120.729, 45.083], [-120.504, 45.084], [-120.493, 45.069], [-120.48, 45.019], [-120.486, 45.001], [-120.477, 44.966], [-120.485, 44.959], [-120.461, 44.904], [-120.435, 44.896], [-120.458, 44.876], [-120.45, 44.864], [-120.411, 44.85], [-120.378, 44.818], [-120.384, 44.821], [-120.985, 44.823], [-121.085, 44.822], [-121.112, 44.825], [-121.413, 44.825], [-121.425, 44.827], [-121.748, 44.827], [-121.749, 44.864], [-121.732, 44.887], [-121.713, 44.901], [-121.743, 44.913], [-121.761, 44.939], [-121.796, 44.938], [-121.789, 44.959], [-121.805, 45.008], [-121.78, 45.021], [-121.768, 45.041], [-121.741, 45.034], [-121.689, 45.066], [-121.66, 45.067], [-121.652, 45.095], [-121.665, 45.119], [-121.696, 45.125], [-121.747, 45.192], [-121.746, 45.204], [-121.68, 45.225], [-121.68, 45.246], [-121.695, 45.258], [-121.48, 45.259], [-121.481, 45.432], [-121.48, 45.52], [-121.439, 45.52], [-121.441, 45.701], [-121.418, 45.693], [-121.345, 45.707], [-121.3, 45.699], [-121.279, 45.685], [-121.217, 45.672], [-121.2, 45.654], [-121.193, 45.619], [-121.176, 45.606], [-121.129, 45.613], [-121.079, 45.654], [-121.016, 45.656], [-120.979, 45.651], [-120.944, 45.66], [-120.915, 45.645]]] }, "properties": { "name": "Wasco", "id": "41065", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41065" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-116.78, 45.081], [-117.147, 45.081], [-117.266, 45.081], [-117.265, 45.167], [-117.48, 45.167], [-117.48, 45.21], [-117.52, 45.21], [-117.521, 45.268], [-117.542, 45.268], [-117.543, 45.296], [-117.584, 45.31], [-117.584, 45.338], [-117.645, 45.338], [-117.645, 45.366], [-117.667, 45.366], [-117.666, 45.427], [-117.681, 45.427], [-117.682, 45.515], [-117.729, 45.514], [-117.73, 45.618], [-117.749, 45.619], [-117.749, 45.662], [-117.769, 45.663], [-117.769, 45.69], [-117.789, 45.689], [-117.788, 45.775], [-117.748, 45.775], [-117.748, 45.86], [-117.972, 45.86], [-117.978, 45.86], [-117.978, 46.001], [-117.788, 46.002], [-117.353, 45.997], [-116.913, 45.997], [-116.891, 45.978], [-116.874, 45.948], [-116.866, 45.915], [-116.838, 45.889], [-116.789, 45.859], [-116.787, 45.832], [-116.761, 45.817], [-116.734, 45.827], [-116.694, 45.818], [-116.662, 45.781], [-116.631, 45.785], [-116.592, 45.779], [-116.534, 45.735], [-116.534, 45.693], [-116.486, 45.649], [-116.462, 45.609], [-116.481, 45.577], [-116.52, 45.555], [-116.53, 45.529], [-116.552, 45.506], [-116.55, 45.47], [-116.585, 45.441], [-116.593, 45.411], [-116.613, 45.397], [-116.667, 45.327], [-116.673, 45.277], [-116.69, 45.262], [-116.728, 45.145], [-116.754, 45.116], [-116.781, 45.097], [-116.78, 45.081]]] }, "properties": { "name": "Wallowa", "id": "41063", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41063" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-117.266, 45.081], [-117.566, 45.08], [-117.567, 44.994], [-117.778, 44.993], [-117.78, 45.01], [-117.823, 45.029], [-117.845, 45.059], [-117.884, 45.058], [-117.899, 45.037], [-117.961, 45.001], [-118.002, 44.997], [-118.068, 45.015], [-118.097, 45.044], [-118.13, 45.044], [-118.16, 45.017], [-118.207, 45.012], [-118.214, 44.991], [-118.243, 44.956], [-118.296, 44.962], [-118.358, 44.991], [-118.369, 44.982], [-118.437, 44.963], [-118.437, 44.984], [-118.465, 44.995], [-118.52, 44.995], [-118.519, 45.082], [-118.548, 45.081], [-118.549, 45.196], [-118.654, 45.196], [-118.654, 45.257], [-118.694, 45.256], [-118.698, 45.341], [-118.614, 45.339], [-118.613, 45.355], [-118.431, 45.356], [-118.432, 45.43], [-118.407, 45.441], [-118.368, 45.43], [-118.243, 45.431], [-118.201, 45.429], [-118.2, 45.471], [-118.119, 45.471], [-118.123, 45.514], [-118.124, 45.689], [-118.073, 45.69], [-118.07, 45.776], [-118.048, 45.775], [-118.047, 45.815], [-117.973, 45.816], [-117.972, 45.86], [-117.748, 45.86], [-117.748, 45.775], [-117.788, 45.775], [-117.789, 45.689], [-117.769, 45.69], [-117.769, 45.663], [-117.749, 45.662], [-117.749, 45.619], [-117.73, 45.618], [-117.729, 45.514], [-117.682, 45.515], [-117.681, 45.427], [-117.666, 45.427], [-117.667, 45.366], [-117.645, 45.366], [-117.645, 45.338], [-117.584, 45.338], [-117.584, 45.31], [-117.543, 45.296], [-117.542, 45.268], [-117.521, 45.268], [-117.52, 45.21], [-117.48, 45.21], [-117.48, 45.167], [-117.265, 45.167], [-117.266, 45.081]]] }, "properties": { "name": "Union", "id": "41061", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41061" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-117.978, 46.001], [-117.978, 45.86], [-117.972, 45.86], [-117.973, 45.816], [-118.047, 45.815], [-118.048, 45.775], [-118.07, 45.776], [-118.073, 45.69], [-118.124, 45.689], [-118.123, 45.514], [-118.119, 45.471], [-118.2, 45.471], [-118.201, 45.429], [-118.243, 45.431], [-118.368, 45.43], [-118.407, 45.441], [-118.432, 45.43], [-118.431, 45.356], [-118.613, 45.355], [-118.614, 45.339], [-118.698, 45.341], [-118.694, 45.256], [-118.654, 45.257], [-118.654, 45.196], [-118.549, 45.196], [-118.548, 45.081], [-118.519, 45.082], [-118.52, 44.995], [-118.808, 44.997], [-119.042, 44.996], [-119.163, 44.996], [-119.167, 45.082], [-119.152, 45.082], [-119.15, 45.254], [-119.148, 45.516], [-119.25, 45.517], [-119.25, 45.602], [-119.434, 45.602], [-119.435, 45.807], [-119.432, 45.919], [-119.346, 45.927], [-119.302, 45.938], [-119.26, 45.939], [-119.185, 45.927], [-119.108, 45.939], [-119.028, 45.968], [-118.98, 46.003], [-118.599, 46.004], [-118.118, 46.002], [-117.978, 46.001]]] }, "properties": { "name": "Umatilla", "id": "41059", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41059" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.362, 45.781], [-123.362, 45.71], [-123.486, 45.709], [-123.485, 45.679], [-123.445, 45.665], [-123.425, 45.638], [-123.381, 45.637], [-123.382, 45.622], [-123.341, 45.622], [-123.341, 45.607], [-123.302, 45.607], [-123.319, 45.579], [-123.362, 45.578], [-123.362, 45.55], [-123.403, 45.55], [-123.444, 45.519], [-123.445, 45.494], [-123.465, 45.493], [-123.466, 45.434], [-123.465, 45.215], [-123.607, 45.214], [-123.788, 45.217], [-123.789, 45.075], [-123.723, 45.075], [-123.723, 45.045], [-124, 45.046], [-124.018, 45.051], [-124.01, 45.077], [-123.987, 45.108], [-123.974, 45.157], [-123.935, 45.172], [-123.97, 45.204], [-123.972, 45.238], [-123.964, 45.265], [-123.95, 45.27], [-123.97, 45.326], [-123.992, 45.346], [-123.974, 45.356], [-123.964, 45.399], [-123.933, 45.403], [-123.976, 45.465], [-123.977, 45.487], [-123.945, 45.507], [-123.906, 45.478], [-123.881, 45.49], [-123.902, 45.539], [-123.922, 45.557], [-123.955, 45.57], [-123.935, 45.684], [-123.946, 45.733], [-123.962, 45.743], [-123.969, 45.784], [-123.722, 45.781], [-123.721, 45.774], [-123.488, 45.775], [-123.488, 45.781], [-123.362, 45.781]]] }, "properties": { "name": "Tillamook", "id": "41057", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41057" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-120.504, 45.084], [-120.729, 45.083], [-120.723, 45.129], [-120.764, 45.148], [-120.771, 45.161], [-120.803, 45.166], [-120.867, 45.198], [-120.921, 45.202], [-120.984, 45.199], [-121.022, 45.22], [-121.018, 45.294], [-121.007, 45.307], [-120.955, 45.307], [-120.934, 45.346], [-120.899, 45.362], [-120.867, 45.403], [-120.856, 45.46], [-120.835, 45.473], [-120.828, 45.518], [-120.879, 45.529], [-120.905, 45.561], [-120.894, 45.588], [-120.91, 45.608], [-120.902, 45.619], [-120.915, 45.645], [-120.886, 45.651], [-120.849, 45.674], [-120.69, 45.717], [-120.656, 45.739], [-120.602, 45.704], [-120.569, 45.692], [-120.549, 45.671], [-120.514, 45.667], [-120.469, 45.62], [-120.411, 45.595], [-120.402, 45.554], [-120.38, 45.538], [-120.378, 45.52], [-120.359, 45.511], [-120.37, 45.493], [-120.427, 45.495], [-120.41, 45.48], [-120.43, 45.469], [-120.454, 45.483], [-120.492, 45.461], [-120.501, 45.417], [-120.534, 45.368], [-120.526, 45.327], [-120.555, 45.281], [-120.543, 45.271], [-120.556, 45.25], [-120.538, 45.21], [-120.504, 45.195], [-120.471, 45.164], [-120.459, 45.121], [-120.472, 45.109], [-120.507, 45.102], [-120.504, 45.084]]] }, "properties": { "name": "Sherman", "id": "41055", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41055" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.069, 45.074], [-123.076, 45.015], [-123.066, 44.991], [-123.043, 44.99], [-123.042, 44.948], [-123.077, 44.929], [-123.105, 44.932], [-123.125, 44.911], [-123.155, 44.861], [-123.18, 44.861], [-123.181, 44.842], [-123.164, 44.829], [-123.129, 44.827], [-123.096, 44.817], [-123.133, 44.785], [-123.148, 44.764], [-123.139, 44.738], [-123.15, 44.721], [-123.357, 44.72], [-123.606, 44.72], [-123.707, 44.721], [-123.728, 44.739], [-123.728, 44.912], [-123.723, 45.045], [-123.723, 45.075], [-123.628, 45.075], [-123.329, 45.076], [-123.069, 45.074]]] }, "properties": { "name": "Polk", "id": "41053", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41053" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.926, 45.65], [-121.925, 45.611], [-121.913, 45.598], [-121.918, 45.544], [-121.912, 45.523], [-121.873, 45.516], [-121.863, 45.491], [-121.821, 45.462], [-122.128, 45.463], [-122.496, 45.461], [-122.635, 45.461], [-122.655, 45.457], [-122.651, 45.432], [-122.744, 45.432], [-122.743, 45.519], [-122.846, 45.592], [-122.868, 45.592], [-122.931, 45.635], [-122.929, 45.721], [-122.786, 45.721], [-122.772, 45.728], [-122.781, 45.679], [-122.768, 45.653], [-122.746, 45.635], [-122.684, 45.604], [-122.603, 45.599], [-122.543, 45.57], [-122.5, 45.56], [-122.462, 45.558], [-122.376, 45.569], [-122.327, 45.537], [-122.262, 45.541], [-122.138, 45.578], [-122.065, 45.592], [-122.028, 45.609], [-121.991, 45.617], [-121.926, 45.65]]] }, "properties": { "name": "Multnomah", "id": "41051", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41051" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-119.432, 45.919], [-119.435, 45.807], [-119.434, 45.602], [-119.25, 45.602], [-119.25, 45.517], [-119.148, 45.516], [-119.15, 45.254], [-119.152, 45.082], [-119.167, 45.082], [-119.163, 44.996], [-119.432, 44.994], [-119.5, 44.996], [-119.668, 44.993], [-119.784, 44.994], [-119.788, 45.067], [-119.758, 45.082], [-119.76, 45.169], [-119.884, 45.169], [-119.883, 45.254], [-120.008, 45.255], [-120.004, 45.52], [-119.998, 45.52], [-119.999, 45.604], [-119.996, 45.779], [-119.997, 45.815], [-119.962, 45.828], [-119.908, 45.828], [-119.83, 45.848], [-119.76, 45.851], [-119.725, 45.857], [-119.67, 45.859], [-119.61, 45.917], [-119.578, 45.926], [-119.526, 45.907], [-119.506, 45.905], [-119.432, 45.919]]] }, "properties": { "name": "Morrow", "id": "41049", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41049" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-122.85, 45.259], [-122.834, 45.274], [-122.785, 45.273], [-122.783, 45.259], [-122.745, 45.259], [-122.751, 45.244], [-122.752, 45.179], [-122.781, 45.149], [-122.786, 45.127], [-122.724, 45.083], [-122.715, 45.069], [-122.647, 45.03], [-122.593, 45.017], [-122.593, 44.991], [-122.575, 44.986], [-122.535, 44.938], [-122.501, 44.918], [-122.486, 44.922], [-122.446, 44.905], [-122.404, 44.905], [-122.397, 44.886], [-122.008, 44.886], [-121.732, 44.887], [-121.749, 44.864], [-121.748, 44.827], [-121.81, 44.813], [-121.82, 44.794], [-121.773, 44.761], [-121.795, 44.74], [-121.8, 44.683], [-121.961, 44.684], [-121.98, 44.691], [-122.035, 44.685], [-122.097, 44.703], [-122.146, 44.726], [-122.201, 44.695], [-122.235, 44.702], [-122.271, 44.732], [-122.282, 44.749], [-122.318, 44.757], [-122.388, 44.754], [-122.468, 44.757], [-122.504, 44.751], [-122.526, 44.765], [-122.565, 44.771], [-122.62, 44.79], [-122.683, 44.777], [-122.723, 44.792], [-122.797, 44.791], [-122.845, 44.772], [-122.954, 44.72], [-122.973, 44.699], [-123.008, 44.689], [-123.014, 44.715], [-123.065, 44.747], [-123.109, 44.752], [-123.139, 44.738], [-123.148, 44.764], [-123.133, 44.785], [-123.096, 44.817], [-123.129, 44.827], [-123.164, 44.829], [-123.181, 44.842], [-123.18, 44.861], [-123.155, 44.861], [-123.125, 44.911], [-123.105, 44.932], [-123.077, 44.929], [-123.042, 44.948], [-123.043, 44.99], [-123.066, 44.991], [-123.076, 45.015], [-123.069, 45.074], [-123.04, 45.102], [-123.009, 45.11], [-123.012, 45.173], [-123.042, 45.22], [-123.002, 45.223], [-122.998, 45.262], [-122.966, 45.285], [-122.948, 45.268], [-122.868, 45.253], [-122.85, 45.259]]] }, "properties": { "name": "Marion", "id": "41047", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41047" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-117.218, 44.302], [-117.181, 44.264], [-117.141, 44.259], [-117.124, 44.279], [-117.092, 44.272], [-117.083, 44.253], [-117.052, 44.233], [-117.03, 44.25], [-116.99, 44.247], [-116.973, 44.239], [-116.966, 44.196], [-116.939, 44.194], [-116.903, 44.179], [-116.893, 44.159], [-116.909, 44.139], [-116.92, 44.108], [-116.969, 44.087], [-116.968, 44.05], [-116.938, 44.034], [-116.936, 43.992], [-116.976, 43.966], [-116.961, 43.951], [-116.962, 43.913], [-116.973, 43.902], [-116.983, 43.867], [-117.032, 43.83], [-117.027, 43.807], [-117.028, 43.564], [-117.028, 43.235], [-117.028, 43.031], [-117.029, 42.756], [-117.028, 42.628], [-117.029, 42.328], [-117.029, 42], [-117.286, 41.999], [-117.829, 41.998], [-118.195, 41.996], [-118.192, 42.136], [-118.191, 42.275], [-118.212, 42.275], [-118.216, 42.637], [-118.217, 42.913], [-118.228, 42.913], [-118.227, 43.044], [-118.23, 43.349], [-118.236, 43.349], [-118.233, 43.698], [-118.23, 43.779], [-118.229, 44.039], [-118.231, 44.212], [-118.233, 44.256], [-118.194, 44.256], [-118.193, 44.271], [-118.154, 44.271], [-118.153, 44.3], [-118.133, 44.3], [-118.095, 44.329], [-118.071, 44.371], [-118.052, 44.371], [-118.033, 44.392], [-118.032, 44.415], [-118.011, 44.428], [-117.971, 44.427], [-117.972, 44.443], [-117.591, 44.446], [-117.569, 44.432], [-117.569, 44.417], [-117.528, 44.417], [-117.485, 44.387], [-117.484, 44.3], [-117.218, 44.302]]] }, "properties": { "name": "Malheur", "id": "41045", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41045" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.8, 44.683], [-121.798, 44.645], [-121.807, 44.617], [-121.795, 44.595], [-121.802, 44.56], [-121.818, 44.528], [-121.808, 44.516], [-121.846, 44.491], [-121.841, 44.393], [-121.844, 44.352], [-121.83, 44.288], [-121.798, 44.26], [-121.989, 44.259], [-122.027, 44.256], [-122.262, 44.256], [-122.323, 44.253], [-122.329, 44.231], [-122.364, 44.211], [-122.409, 44.22], [-122.446, 44.216], [-122.551, 44.234], [-122.575, 44.229], [-122.593, 44.242], [-122.645, 44.253], [-122.648, 44.268], [-122.76, 44.291], [-122.816, 44.277], [-122.864, 44.287], [-122.864, 44.259], [-122.903, 44.26], [-122.907, 44.201], [-123.164, 44.201], [-123.149, 44.227], [-123.177, 44.251], [-123.175, 44.273], [-123.203, 44.285], [-123.199, 44.31], [-123.237, 44.331], [-123.231, 44.357], [-123.239, 44.374], [-123.222, 44.386], [-123.232, 44.409], [-123.21, 44.435], [-123.216, 44.476], [-123.212, 44.497], [-123.231, 44.55], [-123.252, 44.57], [-123.198, 44.6], [-123.167, 44.635], [-123.114, 44.639], [-123.076, 44.652], [-123.088, 44.674], [-123.113, 44.677], [-123.15, 44.721], [-123.139, 44.738], [-123.109, 44.752], [-123.065, 44.747], [-123.014, 44.715], [-123.008, 44.689], [-122.973, 44.699], [-122.954, 44.72], [-122.845, 44.772], [-122.797, 44.791], [-122.723, 44.792], [-122.683, 44.777], [-122.62, 44.79], [-122.565, 44.771], [-122.526, 44.765], [-122.504, 44.751], [-122.468, 44.757], [-122.388, 44.754], [-122.318, 44.757], [-122.282, 44.749], [-122.271, 44.732], [-122.235, 44.702], [-122.201, 44.695], [-122.146, 44.726], [-122.097, 44.703], [-122.035, 44.685], [-121.98, 44.691], [-121.961, 44.684], [-121.8, 44.683]]] }, "properties": { "name": "Linn", "id": "41043", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41043" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.723, 45.045], [-123.728, 44.912], [-123.728, 44.739], [-123.707, 44.721], [-123.606, 44.72], [-123.607, 44.652], [-123.598, 44.652], [-123.6, 44.433], [-123.719, 44.434], [-123.714, 44.361], [-123.735, 44.345], [-123.816, 44.344], [-123.815, 44.316], [-123.774, 44.316], [-123.774, 44.282], [-123.941, 44.282], [-123.941, 44.275], [-124.117, 44.277], [-124.111, 44.318], [-124.101, 44.337], [-124.086, 44.419], [-124.078, 44.432], [-124.085, 44.503], [-124.075, 44.543], [-124.068, 44.615], [-124.047, 44.623], [-124.03, 44.602], [-124.012, 44.628], [-124.066, 44.633], [-124.057, 44.661], [-124.074, 44.673], [-124.058, 44.74], [-124.074, 44.771], [-124.067, 44.831], [-124.052, 44.843], [-124.037, 44.893], [-124.01, 44.898], [-124.008, 44.914], [-124.027, 44.931], [-124.01, 45.02], [-124, 45.046], [-123.723, 45.045]]] }, "properties": { "name": "Lincoln", "id": "41041", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41041" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.798, 44.26], [-121.774, 44.19], [-121.781, 44.142], [-121.77, 44.121], [-121.775, 44.088], [-121.804, 44.055], [-121.833, 44.038], [-121.824, 44.023], [-121.827, 43.979], [-121.858, 43.958], [-121.868, 43.915], [-121.885, 43.91], [-121.922, 43.921], [-121.929, 43.896], [-121.975, 43.854], [-121.975, 43.8], [-121.962, 43.761], [-121.978, 43.741], [-121.966, 43.701], [-121.99, 43.672], [-121.969, 43.627], [-122, 43.617], [-122.091, 43.579], [-122.131, 43.555], [-122.149, 43.519], [-122.126, 43.503], [-122.152, 43.446], [-122.133, 43.438], [-122.389, 43.438], [-122.743, 43.44], [-122.745, 43.544], [-122.973, 43.542], [-122.988, 43.539], [-123.109, 43.538], [-123.11, 43.603], [-123.139, 43.603], [-123.141, 43.78], [-123.349, 43.779], [-123.35, 43.809], [-123.471, 43.81], [-123.471, 43.83], [-123.531, 43.831], [-123.531, 43.867], [-123.581, 43.869], [-123.58, 43.892], [-123.622, 43.892], [-123.621, 43.921], [-123.66, 43.922], [-123.659, 43.936], [-123.705, 43.945], [-123.826, 43.946], [-123.837, 43.928], [-123.876, 43.916], [-123.895, 43.897], [-123.924, 43.896], [-123.924, 43.866], [-123.946, 43.863], [-124.063, 43.862], [-124.157, 43.864], [-124.138, 43.997], [-124.138, 44.024], [-124.123, 44.106], [-124.127, 44.122], [-124.116, 44.175], [-124.111, 44.264], [-124.117, 44.277], [-123.941, 44.275], [-123.941, 44.282], [-123.774, 44.282], [-123.61, 44.281], [-123.37, 44.283], [-123.203, 44.285], [-123.175, 44.273], [-123.177, 44.251], [-123.149, 44.227], [-123.164, 44.201], [-122.907, 44.201], [-122.903, 44.26], [-122.864, 44.259], [-122.864, 44.287], [-122.816, 44.277], [-122.76, 44.291], [-122.648, 44.268], [-122.645, 44.253], [-122.593, 44.242], [-122.575, 44.229], [-122.551, 44.234], [-122.446, 44.216], [-122.409, 44.22], [-122.364, 44.211], [-122.329, 44.231], [-122.323, 44.253], [-122.262, 44.256], [-122.027, 44.256], [-121.989, 44.259], [-121.798, 44.26]]] }, "properties": { "name": "Lane", "id": "41039", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41039" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-119.899, 43.608], [-119.9, 43.509], [-119.898, 43.177], [-119.94, 43.175], [-119.938, 43.001], [-119.935, 42.912], [-119.942, 42.913], [-119.942, 42.741], [-119.703, 42.743], [-119.703, 42.745], [-119.364, 42.747], [-119.364, 42.486], [-119.364, 42.224], [-119.359, 42.136], [-119.357, 41.993], [-119.506, 41.992], [-119.861, 41.996], [-120, 41.995], [-120.43, 41.994], [-120.883, 41.994], [-120.882, 42.063], [-120.882, 42.396], [-120.884, 42.603], [-120.883, 42.744], [-121.349, 42.745], [-121.347, 42.905], [-121.344, 43.266], [-121.345, 43.357], [-121.328, 43.357], [-121.329, 43.616], [-121.09, 43.617], [-120.93, 43.613], [-120.614, 43.614], [-120.376, 43.615], [-120.377, 43.609], [-120.258, 43.609], [-120.038, 43.607], [-119.899, 43.608]]] }, "properties": { "name": "Lake", "id": "41037", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41037" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.329, 43.616], [-121.328, 43.357], [-121.345, 43.357], [-121.344, 43.266], [-121.347, 42.905], [-121.349, 42.745], [-120.883, 42.744], [-120.884, 42.603], [-120.882, 42.396], [-120.882, 42.063], [-120.883, 41.994], [-121.002, 41.993], [-121.107, 41.998], [-121.473, 41.998], [-121.877, 42.003], [-122.188, 42.009], [-122.287, 42.009], [-122.286, 42.271], [-122.289, 42.474], [-122.284, 42.561], [-122.284, 42.736], [-122.283, 42.995], [-122.281, 43.067], [-122.07, 43.068], [-122.093, 43.079], [-122.086, 43.107], [-122.064, 43.14], [-122.035, 43.216], [-122.002, 43.235], [-121.983, 43.265], [-122.007, 43.292], [-121.999, 43.308], [-122.014, 43.323], [-122.01, 43.343], [-122.033, 43.359], [-122.095, 43.427], [-122.133, 43.438], [-122.152, 43.446], [-122.126, 43.503], [-122.149, 43.519], [-122.131, 43.555], [-122.091, 43.579], [-122, 43.617], [-121.464, 43.618], [-121.329, 43.616]]] }, "properties": { "name": "Klamath", "id": "41035", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41035" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.229, 42.708], [-123.229, 42.372], [-123.23, 42.14], [-123.228, 42.003], [-123.334, 41.999], [-123.625, 42], [-123.656, 41.996], [-123.821, 41.996], [-123.849, 42.041], [-123.822, 42.088], [-123.852, 42.144], [-123.818, 42.161], [-123.819, 42.192], [-123.805, 42.217], [-123.791, 42.222], [-123.843, 42.299], [-123.84, 42.313], [-123.871, 42.324], [-123.879, 42.343], [-123.909, 42.345], [-123.936, 42.358], [-124.025, 42.361], [-124.041, 42.387], [-124.012, 42.414], [-124.012, 42.436], [-124, 42.465], [-124.008, 42.496], [-123.98, 42.494], [-123.944, 42.501], [-123.924, 42.494], [-123.888, 42.499], [-123.875, 42.51], [-123.864, 42.564], [-123.82, 42.611], [-123.829, 42.632], [-123.766, 42.706], [-123.719, 42.783], [-123.716, 42.738], [-123.583, 42.738], [-123.544, 42.71], [-123.483, 42.703], [-123.402, 42.713], [-123.367, 42.732], [-123.274, 42.731], [-123.229, 42.708]]] }, "properties": { "name": "Josephine", "id": "41033", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41033" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-120.378, 44.818], [-120.394, 44.803], [-120.398, 44.775], [-120.384, 44.768], [-120.386, 44.565], [-120.826, 44.563], [-120.828, 44.477], [-120.986, 44.476], [-120.984, 44.391], [-121.105, 44.391], [-121.228, 44.392], [-121.309, 44.394], [-121.841, 44.393], [-121.846, 44.491], [-121.808, 44.516], [-121.818, 44.528], [-121.802, 44.56], [-121.795, 44.595], [-121.807, 44.617], [-121.798, 44.645], [-121.8, 44.683], [-121.795, 44.74], [-121.773, 44.761], [-121.82, 44.794], [-121.81, 44.813], [-121.748, 44.827], [-121.425, 44.827], [-121.413, 44.825], [-121.112, 44.825], [-121.085, 44.822], [-120.985, 44.823], [-120.384, 44.821], [-120.378, 44.818]]] }, "properties": { "name": "Jefferson", "id": "41031", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41031" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-122.287, 42.009], [-122.35, 42.01], [-122.597, 42.006], [-123.051, 42.003], [-123.138, 42.008], [-123.228, 42.003], [-123.23, 42.14], [-123.229, 42.372], [-123.229, 42.708], [-123.211, 42.708], [-123.18, 42.736], [-123.153, 42.736], [-123.153, 42.754], [-123.015, 42.754], [-122.973, 42.759], [-122.951, 42.774], [-122.855, 42.773], [-122.796, 42.779], [-122.776, 42.808], [-122.775, 42.828], [-122.738, 42.823], [-122.678, 42.865], [-122.677, 42.88], [-122.636, 42.88], [-122.636, 42.894], [-122.602, 42.895], [-122.559, 42.923], [-122.559, 42.938], [-122.46, 42.938], [-122.421, 42.966], [-122.402, 42.995], [-122.283, 42.995], [-122.284, 42.736], [-122.284, 42.561], [-122.289, 42.474], [-122.286, 42.271], [-122.287, 42.009]]] }, "properties": { "name": "Jackson", "id": "41029", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41029" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.441, 45.701], [-121.439, 45.52], [-121.48, 45.52], [-121.481, 45.432], [-121.48, 45.259], [-121.695, 45.258], [-121.682, 45.294], [-121.702, 45.331], [-121.699, 45.374], [-121.719, 45.39], [-121.773, 45.404], [-121.794, 45.417], [-121.81, 45.456], [-121.821, 45.462], [-121.863, 45.491], [-121.873, 45.516], [-121.912, 45.523], [-121.918, 45.544], [-121.913, 45.598], [-121.925, 45.611], [-121.926, 45.65], [-121.909, 45.655], [-121.899, 45.678], [-121.842, 45.703], [-121.809, 45.709], [-121.71, 45.696], [-121.669, 45.707], [-121.638, 45.708], [-121.542, 45.726], [-121.503, 45.723], [-121.441, 45.701]]] }, "properties": { "name": "Hood River", "id": "41027", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41027" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-118.229, 44.039], [-118.23, 43.779], [-118.233, 43.698], [-118.236, 43.349], [-118.23, 43.349], [-118.227, 43.044], [-118.228, 42.913], [-118.217, 42.913], [-118.216, 42.637], [-118.212, 42.275], [-118.191, 42.275], [-118.192, 42.136], [-118.195, 41.996], [-118.429, 41.995], [-118.776, 41.993], [-119.048, 41.995], [-119.357, 41.993], [-119.359, 42.136], [-119.364, 42.224], [-119.364, 42.486], [-119.364, 42.747], [-119.703, 42.745], [-119.703, 42.743], [-119.942, 42.741], [-119.942, 42.913], [-119.935, 42.912], [-119.938, 43.001], [-119.94, 43.175], [-119.898, 43.177], [-119.9, 43.509], [-119.899, 43.608], [-119.898, 43.697], [-119.779, 43.698], [-119.779, 43.785], [-119.776, 43.958], [-119.659, 43.958], [-119.416, 43.96], [-119.178, 43.96], [-118.817, 43.962], [-118.816, 44.047], [-118.588, 44.047], [-118.588, 44.041], [-118.347, 44.041], [-118.229, 44.039]]] }, "properties": { "name": "Harney", "id": "41025", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41025" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-118.52, 44.995], [-118.465, 44.995], [-118.437, 44.984], [-118.437, 44.963], [-118.369, 44.982], [-118.358, 44.991], [-118.296, 44.962], [-118.243, 44.956], [-118.228, 44.939], [-118.238, 44.902], [-118.227, 44.874], [-118.242, 44.862], [-118.291, 44.864], [-118.317, 44.837], [-118.296, 44.81], [-118.285, 44.75], [-118.322, 44.742], [-118.366, 44.746], [-118.398, 44.727], [-118.442, 44.723], [-118.471, 44.705], [-118.495, 44.713], [-118.516, 44.705], [-118.505, 44.666], [-118.395, 44.641], [-118.367, 44.642], [-118.342, 44.628], [-118.339, 44.613], [-118.312, 44.596], [-118.32, 44.563], [-118.34, 44.563], [-118.38, 44.512], [-118.358, 44.483], [-118.376, 44.459], [-118.423, 44.449], [-118.418, 44.437], [-118.434, 44.404], [-118.414, 44.38], [-118.437, 44.353], [-118.453, 44.35], [-118.499, 44.287], [-118.499, 44.257], [-118.233, 44.256], [-118.231, 44.212], [-118.229, 44.039], [-118.347, 44.041], [-118.588, 44.041], [-118.588, 44.047], [-118.816, 44.047], [-118.817, 43.962], [-119.178, 43.96], [-119.416, 43.96], [-119.659, 43.958], [-119.657, 44.307], [-119.654, 44.651], [-119.651, 44.823], [-119.671, 44.823], [-119.668, 44.993], [-119.5, 44.996], [-119.432, 44.994], [-119.163, 44.996], [-119.042, 44.996], [-118.808, 44.997], [-118.52, 44.995]]] }, "properties": { "name": "Grant", "id": "41023", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41023" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-119.788, 45.067], [-119.91, 45.064], [-120.131, 45.066], [-120.254, 45.065], [-120.493, 45.069], [-120.504, 45.084], [-120.507, 45.102], [-120.472, 45.109], [-120.459, 45.121], [-120.471, 45.164], [-120.504, 45.195], [-120.538, 45.21], [-120.556, 45.25], [-120.543, 45.271], [-120.555, 45.281], [-120.526, 45.327], [-120.534, 45.368], [-120.501, 45.417], [-120.492, 45.461], [-120.454, 45.483], [-120.43, 45.469], [-120.41, 45.48], [-120.427, 45.495], [-120.37, 45.493], [-120.359, 45.511], [-120.378, 45.52], [-120.38, 45.538], [-120.402, 45.554], [-120.411, 45.595], [-120.469, 45.62], [-120.514, 45.667], [-120.549, 45.671], [-120.569, 45.692], [-120.602, 45.704], [-120.656, 45.739], [-120.631, 45.748], [-120.591, 45.749], [-120.554, 45.74], [-120.526, 45.716], [-120.492, 45.697], [-120.426, 45.7], [-120.334, 45.712], [-120.276, 45.724], [-120.2, 45.731], [-120.177, 45.759], [-120.124, 45.779], [-120.059, 45.791], [-119.997, 45.815], [-119.996, 45.779], [-119.999, 45.604], [-119.998, 45.52], [-120.004, 45.52], [-120.008, 45.255], [-119.883, 45.254], [-119.884, 45.169], [-119.76, 45.169], [-119.758, 45.082], [-119.788, 45.067]]] }, "properties": { "name": "Gilliam", "id": "41021", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41021" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-122.133, 43.438], [-122.095, 43.427], [-122.033, 43.359], [-122.01, 43.343], [-122.014, 43.323], [-121.999, 43.308], [-122.007, 43.292], [-121.983, 43.265], [-122.002, 43.235], [-122.035, 43.216], [-122.064, 43.14], [-122.086, 43.107], [-122.093, 43.079], [-122.07, 43.068], [-122.281, 43.067], [-122.283, 42.995], [-122.402, 42.995], [-122.421, 42.966], [-122.46, 42.938], [-122.559, 42.938], [-122.559, 42.923], [-122.602, 42.895], [-122.636, 42.894], [-122.636, 42.88], [-122.677, 42.88], [-122.678, 42.865], [-122.738, 42.823], [-122.775, 42.828], [-122.776, 42.808], [-122.796, 42.779], [-122.855, 42.773], [-122.951, 42.774], [-122.973, 42.759], [-123.015, 42.754], [-123.153, 42.754], [-123.153, 42.736], [-123.18, 42.736], [-123.211, 42.708], [-123.229, 42.708], [-123.274, 42.731], [-123.367, 42.732], [-123.402, 42.713], [-123.483, 42.703], [-123.544, 42.71], [-123.583, 42.738], [-123.716, 42.738], [-123.719, 42.783], [-123.787, 42.799], [-123.81, 42.789], [-123.819, 42.826], [-123.82, 42.995], [-123.76, 42.997], [-123.761, 43.083], [-123.701, 43.084], [-123.704, 43.258], [-123.765, 43.257], [-123.764, 43.432], [-123.82, 43.431], [-123.816, 43.516], [-123.874, 43.516], [-123.876, 43.609], [-123.949, 43.608], [-124.217, 43.611], [-124.2, 43.669], [-124.153, 43.7], [-124.141, 43.73], [-124.169, 43.728], [-124.166, 43.702], [-124.193, 43.702], [-124.167, 43.809], [-124.157, 43.864], [-124.063, 43.862], [-123.946, 43.863], [-123.924, 43.866], [-123.924, 43.896], [-123.895, 43.897], [-123.876, 43.916], [-123.837, 43.928], [-123.826, 43.946], [-123.705, 43.945], [-123.659, 43.936], [-123.66, 43.922], [-123.621, 43.921], [-123.622, 43.892], [-123.58, 43.892], [-123.581, 43.869], [-123.531, 43.867], [-123.531, 43.831], [-123.471, 43.83], [-123.471, 43.81], [-123.35, 43.809], [-123.349, 43.779], [-123.141, 43.78], [-123.139, 43.603], [-123.11, 43.603], [-123.109, 43.538], [-122.988, 43.539], [-122.973, 43.542], [-122.745, 43.544], [-122.743, 43.44], [-122.389, 43.438], [-122.133, 43.438]]] }, "properties": { "name": "Douglas", "id": "41019", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41019" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.105, 44.391], [-121.108, 44.219], [-121.101, 44.219], [-121.101, 44.139], [-120.986, 44.135], [-120.985, 43.959], [-120.864, 43.959], [-120.751, 43.956], [-120.75, 43.87], [-120.382, 43.872], [-120.38, 43.784], [-120.262, 43.784], [-120.261, 43.696], [-120.037, 43.695], [-119.898, 43.697], [-119.899, 43.608], [-120.038, 43.607], [-120.258, 43.609], [-120.377, 43.609], [-120.376, 43.615], [-120.614, 43.614], [-120.93, 43.613], [-121.09, 43.617], [-121.329, 43.616], [-121.464, 43.618], [-122, 43.617], [-121.969, 43.627], [-121.99, 43.672], [-121.966, 43.701], [-121.978, 43.741], [-121.962, 43.761], [-121.975, 43.8], [-121.975, 43.854], [-121.929, 43.896], [-121.922, 43.921], [-121.885, 43.91], [-121.868, 43.915], [-121.858, 43.958], [-121.827, 43.979], [-121.824, 44.023], [-121.833, 44.038], [-121.804, 44.055], [-121.775, 44.088], [-121.77, 44.121], [-121.781, 44.142], [-121.774, 44.19], [-121.798, 44.26], [-121.83, 44.288], [-121.844, 44.352], [-121.841, 44.393], [-121.309, 44.394], [-121.228, 44.392], [-121.105, 44.391]]] }, "properties": { "name": "Deschutes", "id": "41017", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41017" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.81, 42.789], [-123.787, 42.799], [-123.719, 42.783], [-123.766, 42.706], [-123.829, 42.632], [-123.82, 42.611], [-123.864, 42.564], [-123.875, 42.51], [-123.888, 42.499], [-123.924, 42.494], [-123.944, 42.501], [-123.98, 42.494], [-124.008, 42.496], [-124, 42.465], [-124.012, 42.436], [-124.012, 42.414], [-124.041, 42.387], [-124.025, 42.361], [-123.936, 42.358], [-123.909, 42.345], [-123.879, 42.343], [-123.871, 42.324], [-123.84, 42.313], [-123.843, 42.299], [-123.791, 42.222], [-123.805, 42.217], [-123.819, 42.192], [-123.818, 42.161], [-123.852, 42.144], [-123.822, 42.088], [-123.849, 42.041], [-123.821, 41.996], [-124.118, 41.997], [-124.212, 42], [-124.263, 42.041], [-124.299, 42.052], [-124.347, 42.101], [-124.353, 42.134], [-124.367, 42.157], [-124.361, 42.181], [-124.377, 42.219], [-124.41, 42.251], [-124.406, 42.271], [-124.414, 42.314], [-124.433, 42.328], [-124.424, 42.362], [-124.428, 42.425], [-124.418, 42.499], [-124.39, 42.565], [-124.411, 42.652], [-124.451, 42.677], [-124.47, 42.726], [-124.495, 42.742], [-124.515, 42.741], [-124.522, 42.782], [-124.539, 42.82], [-124.558, 42.834], [-124.498, 42.919], [-124.48, 42.954], [-124.416, 42.955], [-124.253, 42.954], [-124.253, 42.94], [-124.22, 42.932], [-124.215, 42.903], [-124.185, 42.897], [-124.143, 42.86], [-124.143, 42.829], [-124.165, 42.829], [-124.159, 42.74], [-124.139, 42.74], [-124.138, 42.67], [-124.089, 42.685], [-123.995, 42.686], [-123.924, 42.74], [-123.923, 42.775], [-123.867, 42.774], [-123.848, 42.789], [-123.81, 42.789]]] }, "properties": { "name": "Curry", "id": "41015", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41015" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-119.657, 44.307], [-119.659, 43.958], [-119.776, 43.958], [-119.779, 43.785], [-119.779, 43.698], [-119.898, 43.697], [-120.037, 43.695], [-120.261, 43.696], [-120.262, 43.784], [-120.38, 43.784], [-120.382, 43.872], [-120.75, 43.87], [-120.751, 43.956], [-120.864, 43.959], [-120.985, 43.959], [-120.986, 44.135], [-121.101, 44.139], [-121.101, 44.219], [-121.108, 44.219], [-121.105, 44.391], [-120.984, 44.391], [-120.986, 44.476], [-120.828, 44.477], [-120.826, 44.563], [-120.386, 44.565], [-120.385, 44.438], [-120.022, 44.439], [-120.021, 44.392], [-119.9, 44.392], [-119.902, 44.308], [-119.657, 44.307]]] }, "properties": { "name": "Crook", "id": "41013", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41013" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-124.217, 43.611], [-123.949, 43.608], [-123.876, 43.609], [-123.874, 43.516], [-123.816, 43.516], [-123.82, 43.431], [-123.764, 43.432], [-123.765, 43.257], [-123.704, 43.258], [-123.701, 43.084], [-123.761, 43.083], [-123.76, 42.997], [-123.82, 42.995], [-123.819, 42.826], [-123.81, 42.789], [-123.848, 42.789], [-123.867, 42.774], [-123.923, 42.775], [-123.924, 42.74], [-123.995, 42.686], [-124.089, 42.685], [-124.138, 42.67], [-124.139, 42.74], [-124.159, 42.74], [-124.165, 42.829], [-124.143, 42.829], [-124.143, 42.86], [-124.185, 42.897], [-124.215, 42.903], [-124.22, 42.932], [-124.253, 42.94], [-124.253, 42.954], [-124.416, 42.955], [-124.48, 42.954], [-124.44, 43.05], [-124.429, 43.095], [-124.434, 43.114], [-124.399, 43.186], [-124.395, 43.226], [-124.381, 43.269], [-124.4, 43.304], [-124.375, 43.338], [-124.301, 43.36], [-124.277, 43.398], [-124.252, 43.42], [-124.215, 43.423], [-124.219, 43.384], [-124.204, 43.372], [-124.174, 43.385], [-124.196, 43.399], [-124.193, 43.416], [-124.208, 43.432], [-124.27, 43.424], [-124.285, 43.398], [-124.308, 43.398], [-124.283, 43.441], [-124.243, 43.532], [-124.217, 43.611]]] }, "properties": { "name": "Coos", "id": "41011", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41011" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-122.772, 45.728], [-122.786, 45.721], [-122.929, 45.721], [-122.929, 45.736], [-122.992, 45.736], [-122.992, 45.752], [-123.034, 45.752], [-123.035, 45.779], [-123.362, 45.781], [-123.361, 46.001], [-123.368, 46.042], [-123.365, 46.142], [-123.292, 46.139], [-123.274, 46.133], [-123.228, 46.141], [-123.195, 46.176], [-123.097, 46.167], [-123.067, 46.155], [-123.039, 46.128], [-122.999, 46.12], [-122.906, 46.079], [-122.888, 46.051], [-122.866, 45.995], [-122.824, 45.961], [-122.818, 45.91], [-122.793, 45.858], [-122.806, 45.841], [-122.801, 45.811], [-122.775, 45.776], [-122.772, 45.728]]] }, "properties": { "name": "Columbia", "id": "41009", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41009" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.365, 46.142], [-123.368, 46.042], [-123.361, 46.001], [-123.362, 45.781], [-123.488, 45.781], [-123.488, 45.775], [-123.721, 45.774], [-123.722, 45.781], [-123.969, 45.784], [-123.961, 45.822], [-123.962, 45.899], [-123.99, 45.948], [-123.965, 45.971], [-123.937, 45.976], [-123.925, 46.017], [-123.929, 46.057], [-123.943, 46.115], [-123.971, 46.17], [-123.992, 46.197], [-123.956, 46.209], [-123.893, 46.164], [-123.862, 46.156], [-123.83, 46.163], [-123.862, 46.183], [-123.851, 46.192], [-123.764, 46.197], [-123.747, 46.179], [-123.7, 46.171], [-123.653, 46.172], [-123.586, 46.19], [-123.578, 46.208], [-123.54, 46.236], [-123.5, 46.235], [-123.446, 46.205], [-123.435, 46.175], [-123.395, 46.149], [-123.365, 46.142]]] }, "properties": { "name": "Clatsop", "id": "41007", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41007" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-121.821, 45.462], [-121.81, 45.456], [-121.794, 45.417], [-121.773, 45.404], [-121.719, 45.39], [-121.699, 45.374], [-121.702, 45.331], [-121.682, 45.294], [-121.695, 45.258], [-121.68, 45.246], [-121.68, 45.225], [-121.746, 45.204], [-121.747, 45.192], [-121.696, 45.125], [-121.665, 45.119], [-121.652, 45.095], [-121.66, 45.067], [-121.689, 45.066], [-121.741, 45.034], [-121.768, 45.041], [-121.78, 45.021], [-121.805, 45.008], [-121.789, 44.959], [-121.796, 44.938], [-121.761, 44.939], [-121.743, 44.913], [-121.713, 44.901], [-121.732, 44.887], [-122.008, 44.886], [-122.397, 44.886], [-122.404, 44.905], [-122.446, 44.905], [-122.486, 44.922], [-122.501, 44.918], [-122.535, 44.938], [-122.575, 44.986], [-122.593, 44.991], [-122.593, 45.017], [-122.647, 45.03], [-122.715, 45.069], [-122.724, 45.083], [-122.786, 45.127], [-122.781, 45.149], [-122.752, 45.179], [-122.751, 45.244], [-122.745, 45.259], [-122.783, 45.259], [-122.785, 45.273], [-122.834, 45.274], [-122.85, 45.259], [-122.867, 45.259], [-122.867, 45.317], [-122.847, 45.318], [-122.846, 45.345], [-122.803, 45.345], [-122.802, 45.333], [-122.743, 45.332], [-122.744, 45.432], [-122.651, 45.432], [-122.655, 45.457], [-122.635, 45.461], [-122.496, 45.461], [-122.128, 45.463], [-121.821, 45.462]]] }, "properties": { "name": "Clackamas", "id": "41005", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41005" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-123.15, 44.721], [-123.113, 44.677], [-123.088, 44.674], [-123.076, 44.652], [-123.114, 44.639], [-123.167, 44.635], [-123.198, 44.6], [-123.252, 44.57], [-123.231, 44.55], [-123.212, 44.497], [-123.216, 44.476], [-123.21, 44.435], [-123.232, 44.409], [-123.222, 44.386], [-123.239, 44.374], [-123.231, 44.357], [-123.237, 44.331], [-123.199, 44.31], [-123.203, 44.285], [-123.37, 44.283], [-123.61, 44.281], [-123.774, 44.282], [-123.774, 44.316], [-123.815, 44.316], [-123.816, 44.344], [-123.735, 44.345], [-123.714, 44.361], [-123.719, 44.434], [-123.6, 44.433], [-123.598, 44.652], [-123.607, 44.652], [-123.606, 44.72], [-123.357, 44.72], [-123.15, 44.721]]] }, "properties": { "name": "Benton", "id": "41003", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41003" },
        { "type": "Feature", "geometry": { "type": "Polygon", "coordinates": [[[-116.78, 45.081], [-116.796, 45.061], [-116.841, 45.029], [-116.853, 44.979], [-116.833, 44.939], [-116.855, 44.882], [-116.888, 44.852], [-116.927, 44.807], [-116.935, 44.783], [-116.995, 44.757], [-117.029, 44.751], [-117.06, 44.726], [-117.062, 44.708], [-117.096, 44.66], [-117.103, 44.634], [-117.119, 44.615], [-117.125, 44.581], [-117.141, 44.57], [-117.147, 44.535], [-117.183, 44.518], [-117.196, 44.495], [-117.224, 44.48], [-117.213, 44.428], [-117.237, 44.397], [-117.229, 44.373], [-117.192, 44.344], [-117.192, 44.325], [-117.218, 44.302], [-117.484, 44.3], [-117.485, 44.387], [-117.528, 44.417], [-117.569, 44.417], [-117.569, 44.432], [-117.591, 44.446], [-117.972, 44.443], [-117.971, 44.427], [-118.011, 44.428], [-118.032, 44.415], [-118.033, 44.392], [-118.052, 44.371], [-118.071, 44.371], [-118.095, 44.329], [-118.133, 44.3], [-118.153, 44.3], [-118.154, 44.271], [-118.193, 44.271], [-118.194, 44.256], [-118.233, 44.256], [-118.499, 44.257], [-118.499, 44.287], [-118.453, 44.35], [-118.437, 44.353], [-118.414, 44.38], [-118.434, 44.404], [-118.418, 44.437], [-118.423, 44.449], [-118.376, 44.459], [-118.358, 44.483], [-118.38, 44.512], [-118.34, 44.563], [-118.32, 44.563], [-118.312, 44.596], [-118.339, 44.613], [-118.342, 44.628], [-118.367, 44.642], [-118.395, 44.641], [-118.505, 44.666], [-118.516, 44.705], [-118.495, 44.713], [-118.471, 44.705], [-118.442, 44.723], [-118.398, 44.727], [-118.366, 44.746], [-118.322, 44.742], [-118.285, 44.75], [-118.296, 44.81], [-118.317, 44.837], [-118.291, 44.864], [-118.242, 44.862], [-118.227, 44.874], [-118.238, 44.902], [-118.228, 44.939], [-118.243, 44.956], [-118.214, 44.991], [-118.207, 45.012], [-118.16, 45.017], [-118.13, 45.044], [-118.097, 45.044], [-118.068, 45.015], [-118.002, 44.997], [-117.961, 45.001], [-117.899, 45.037], [-117.884, 45.058], [-117.845, 45.059], [-117.823, 45.029], [-117.78, 45.01], [-117.778, 44.993], [-117.567, 44.994], [-117.566, 45.08], [-117.266, 45.081], [-117.147, 45.081], [-116.78, 45.081]]] }, "properties": { "name": "Baker", "id": "41001", "STATE": "OR", "TYPE": "County", "CNTRY": "USA" }, "id": "41001" }
    ] });


/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js":
/*!********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js ***!
  \********************************************************************/
/*! exports provided: ChartDataItem, Chart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartDataItem", function() { return ChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chart", function() { return Chart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * [[Chart]] class provides base functionality for all chart types to inherit.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Chart]].
 *
 * @see {@link DataItem}
 */
var ChartDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ChartDataItem, _super);
    /**
     * Constructor
     */
    function ChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return ChartDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_6__["DataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all Charts.
 *
 * @see {@link IChartEvents} for a list of available Events
 * @see {@link IChartAdapters} for a list of available Adapters
 */
var Chart = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Chart, _super);
    /**
     * Constructor
     */
    function Chart() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A reference to chart's [[Legend]].
         * @ignore
         * @type {Legend}
         */
        _this._legend = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "Chart";
        // Create a list of titles
        var template = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_5__["Label"]();
        _this.titles = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](template);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.titles));
        _this._disposers.push(template);
        // Chart component is also a container. it holds _chartAndLegendCont and titles
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        _this.layout = "vertical";
        // Chart and legend
        var chartAndLegendContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__["Container"]);
        chartAndLegendContainer.shouldClone = false;
        chartAndLegendContainer.layout = "vertical";
        chartAndLegendContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        chartAndLegendContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        _this.chartAndLegendContainer = chartAndLegendContainer;
        // Chart container holds all the elements of a chart, extept titles and legend
        var chartContainer = chartAndLegendContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__["Container"]);
        chartContainer.shouldClone = false;
        chartContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        chartContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        _this.chartContainer = chartContainer;
        _this.showOnInit = true;
        _this._disposers.push(_this._legend);
        // Add title list events to apply certain formatting options and to make
        // the chart reference them as accessible screen reader labels
        _this.titles.events.on("inserted", function (label) {
            _this.processTitle(label);
            _this.updateReaderTitleReferences();
        }, _this, false);
        _this.titles.events.on("removed", function (label) {
            _this.updateReaderTitleReferences();
        }, _this, false);
        // Accessibility
        // It seems we can't set focusable on the whole chart because it seems to
        // mess up the whole focus event system - getting a focus on an inside
        // object also trigger focus on parent
        //this.focusable = true;
        _this.role = "region";
        _this.defaultState.transitionDuration = 1;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Chart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Chart");
        }
    };
    /**
     * Initiates drawing of the chart.
     *
     * @ignore Exclude from docs
     */
    Chart.prototype.draw = function () {
        this.fixLayout();
        _super.prototype.draw.call(this);
    };
    /**
     * Updates legend's hierarchy based on the position.
     */
    Chart.prototype.fixLayout = function () {
        var legend = this.legend;
        if (legend) {
            var chartAndLegendContainer = this.chartAndLegendContainer;
            var chartContainer = this.chartContainer;
            chartContainer.x = undefined;
            chartContainer.y = undefined;
            legend.x = undefined;
            legend.y = undefined;
            switch (legend.position) {
                case "left":
                    chartAndLegendContainer.layout = "horizontal";
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](legend.width)) {
                        legend.width = 200;
                    }
                    //legend.maxWidth = legend.width;
                    legend.toBack();
                    break;
                case "right":
                    chartAndLegendContainer.layout = "horizontal";
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](legend.width)) {
                        legend.width = 200;
                    }
                    //legend.maxWidth = legend.width;
                    legend.toFront();
                    break;
                case "top":
                    chartAndLegendContainer.layout = "vertical";
                    legend.maxWidth = undefined;
                    legend.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
                    legend.toBack();
                    break;
                case "bottom":
                    chartAndLegendContainer.layout = "vertical";
                    legend.maxWidth = undefined;
                    legend.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
                    legend.toFront();
            }
        }
    };
    /**
     * Setups the legend to use the chart's data.
     */
    Chart.prototype.feedLegend = function () {
        // Nothing here. This method is provided only as a "placeholder" for
        // extending classes to override
    };
    /**
     * Adds a new title to the chart when it is inserted into chart's titles
     * list.
     * @param  {IListEvents<Label>["inserted"]}  event  An event object which is triggered when inserting into titles list
     * @return {Label}                               Label object
     */
    Chart.prototype.processTitle = function (event) {
        var title = event.newValue;
        title.parent = this;
        title.toBack();
        title.shouldClone = false;
        title.align = "center";
        // Need to explicitly apply the `id` attribute so it can be referenced by
        // `aria-labelledby`
        title.uidAttr();
        return title;
    };
    /**
     * Checks if chart has any title elements. If it does, we will use them in an
     * `aria-labelledby` attribute so that screen readers can use them to properly
     * describe the chart when it is focused or hovered.
     *
     * @ignore Exclude from docs
     */
    Chart.prototype.updateReaderTitleReferences = function () {
        if (this.titles.length) {
            var titleIds_1 = [];
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.titles.iterator(), function (title) {
                titleIds_1.push(title.uid);
            });
            this.setSVGAttribute({ "aria-labelledby": titleIds_1.join(" ") });
        }
        else {
            this.removeSVGAttribute("aria-labelledby");
        }
    };
    Object.defineProperty(Chart.prototype, "legend", {
        /**
         * @return {Legend} Legend
         */
        get: function () {
            return this._legend.get();
        },
        /**
         * Holds the instance of chart's [[Leged]].
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends
         * @param {Legend} Legend
         */
        set: function (legend) {
            this.setLegend(legend);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Prepares the legend instance for use in this chart.
     *
     * @param {Legend}  legend  Legend
     */
    Chart.prototype.setLegend = function (legend) {
        var _this = this;
        if (this._legend.get() !== legend) {
            if (legend) {
                // Set legend options
                legend.parent = this.chartAndLegendContainer;
                this._legend.set(legend, legend.events.on("propertychanged", function (event) {
                    if (event.property == "position" || event.property == "width") {
                        _this.fixLayout();
                    }
                }, undefined, false));
            }
            else {
                this._legend.reset();
            }
            this.feedLegend();
        }
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    Chart.prototype.processConfig = function (config) {
        if (config) {
            // Set up legend
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.legend) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.legend.type)) {
                config.legend.type = "Legend";
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param {Series}  source  Source series
     */
    Chart.prototype.copyFrom = function (source) {
        this.titles.copyFrom(source.titles);
        if (source.legend) {
            this.legend = source.legend.clone();
        }
        _super.prototype.copyFrom.call(this, source);
    };
    return Chart;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

//# sourceMappingURL=Chart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js ***!
  \*********************************************************************/
/*! exports provided: LegendDataItem, LegendSettings, Legend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendDataItem", function() { return LegendDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return LegendSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return Legend; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/**
 * Legend-related functionality.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Legend]].
 *
 * @see {@link DataItem}
 */
var LegendDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LegendDataItem, _super);
    /**
     * Constructor
     */
    function LegendDataItem() {
        var _this = _super.call(this) || this;
        /**
         * @ignore
         */
        _this.childrenCreated = false;
        _this.className = "LegendDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(LegendDataItem.prototype, "label", {
        /**
         * A legend item's [[Label]] element.
         *
         * @return {Label} Label
         */
        get: function () {
            var _this = this;
            if (!this._label) {
                var label_1 = this.component.labels.create();
                this._label = label_1;
                this.addSprite(label_1);
                this._disposers.push(label_1);
                label_1.parent = this.itemContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_14__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](_this.component)) {
                        _this.component.labels.removeValue(label_1);
                    }
                }));
            }
            return this._label;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "color", {
        /**
         * @return {Color | Pattern | LinearGradient | RadialGradient} Main color
         */
        get: function () {
            return this.properties.color;
        },
        /**
         * Main color of legend data item.
         *
         * This is set by the target element this legend item represents, like
         * a Series or a Slice.
         *
         * It can be used to derive a color in legend's sub-items, like label:
         *
         * ```TypeScript
         * chart.legend.labels.template.text = "[{color}]{name}[/]";
         * ```
         * ```JavaScript
         * chart.legend.labels.template.text = "[{color}]{name}[/]";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "legend": {
         *     // ...
         *     "labels": {
         *       "text": "[{color}]{name}[/]"
         *     }
         *   }
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.
         * @param {Color | Pattern | LinearGradient | RadialGradient}  value  Main color
         */
        set: function (value) {
            this.setProperty("color", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "valueLabel", {
        /**
         * A legend item's [[Label]] element for "value label".
         *
         * @return {Label} Label
         */
        get: function () {
            var _this = this;
            if (!this._valueLabel) {
                var valueLabel_1 = this.component.valueLabels.create();
                this._valueLabel = valueLabel_1;
                this.addSprite(valueLabel_1);
                this._disposers.push(valueLabel_1);
                valueLabel_1.parent = this.itemContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_14__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](_this.component)) {
                        _this.component.valueLabels.removeValue(valueLabel_1);
                    }
                }));
            }
            return this._valueLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "itemContainer", {
        /**
         * A reference to the main [[Container]] that holds legend item's elements:
         * marker and labels.
         *
         * @return {Container} Item container
         */
        get: function () {
            var _this = this;
            if (!this._itemContainer) {
                var itemContainer_1 = this.component.itemContainers.create();
                this._itemContainer = itemContainer_1;
                this.addSprite(itemContainer_1);
                this._disposers.push(itemContainer_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_14__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](_this.component)) {
                        _this.component.itemContainers.removeValue(itemContainer_1);
                    }
                }));
                if (this.dataContext.uidAttr) {
                    itemContainer_1.readerControls = this.dataContext.uidAttr();
                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();
                }
                var sprite = this.dataContext;
                if (sprite instanceof _core_DataItem__WEBPACK_IMPORTED_MODULE_2__["DataItem"] || sprite instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_13__["Sprite"]) {
                    itemContainer_1.addDisposer(sprite.events.on("visibilitychanged", function (ev) {
                        itemContainer_1.readerChecked = ev.visible;
                        itemContainer_1.events.disableType("toggled");
                        itemContainer_1.isActive = !ev.visible;
                        itemContainer_1.events.enableType("toggled");
                    }, undefined, false));
                    sprite.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_14__["Disposer"](function () {
                        if (_this.component) {
                            _this.component.dataItems.remove(_this);
                        }
                    }));
                    if (sprite instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_13__["Sprite"]) {
                        itemContainer_1.addDisposer(sprite.events.on("hidden", function (ev) {
                            itemContainer_1.readerChecked = true;
                            itemContainer_1.events.disableType("toggled");
                            itemContainer_1.isActive = true;
                            itemContainer_1.events.enableType("toggled");
                        }, undefined, false));
                        itemContainer_1.addDisposer(sprite.events.on("shown", function (ev) {
                            itemContainer_1.readerChecked = false;
                            itemContainer_1.events.disableType("toggled");
                            itemContainer_1.isActive = false;
                            itemContainer_1.events.enableType("toggled");
                        }, undefined, false));
                    }
                }
            }
            return this._itemContainer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "marker", {
        /**
         * A [[Container]] that holds legend item's marker element.
         *
         * @return {Container} Marker
         */
        get: function () {
            var _this = this;
            if (!this._marker) {
                var marker_1 = this.component.markers.create();
                this._marker = marker_1;
                marker_1.parent = this.itemContainer;
                this.addSprite(marker_1);
                this._disposers.push(marker_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_14__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](_this.component)) {
                        _this.component.markers.removeValue(marker_1);
                    }
                }));
            }
            return this._marker;
        },
        enumerable: true,
        configurable: true
    });
    return LegendDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_2__["DataItem"]));

/**
 * ============================================================================
 * REQUISITES
 * ============================================================================
 * @hidden
 */
/**
 * Defines a class that carries legend settings.
 *
 * A legend might change its settings dynamically. Legend can also be shared
 * by several elements, requiring different settings.
 *
 * Having legend's settings in a separate object is a good way to "hot swap"
 * a set of settings for the legend.
 */
var LegendSettings = /** @class */ (function () {
    function LegendSettings() {
        /**
         * Should marker be created for each legend item.
         *
         * @type {boolean}
         */
        this.createMarker = true;
    }
    return LegendSettings;
}());

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * [[Legend]] class is used to create legend for the chart.
 *
 * @see {@link ILegendEvents} for a list of available events
 * @see {@link ILegendAdapters} for a list of available Adapters
 * @todo Verify/implement dynamic updating of legend items once the properties of related Series change
 */
var Legend = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Legend, _super);
    /**
     * Constructor
     */
    function Legend() {
        var _this = _super.call(this) || this;
        _this.className = "Legend";
        // Set defaults
        _this.layout = "grid";
        _this.setPropertyValue("useDefaultMarker", false);
        _this.setPropertyValue("contentAlign", "center");
        // Create a template container and list for legend items
        var itemContainer = new _core_Container__WEBPACK_IMPORTED_MODULE_5__["Container"]();
        itemContainer.applyOnClones = true;
        itemContainer.padding(10, 0, 10, 0);
        itemContainer.margin(0, 10, 0, 0);
        itemContainer.layout = "horizontal";
        itemContainer.clickable = true;
        itemContainer.focusable = true;
        itemContainer.role = "checkbox";
        itemContainer.togglable = true;
        itemContainer.cursorOverStyle = _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_15__["MouseCursorStyle"].pointer;
        itemContainer.background.fillOpacity = 0; // creates hit area
        // Add click/tap event to toggle item
        // not good to listen to "toggled" as we will get to stackoverflow
        itemContainer.events.on("toggled", function (ev) {
            _this.toggleDataItem(ev.target.dataItem);
        }, _this);
        // Add focus event so that we can track which object is currently in focus
        // for keyboard toggling
        itemContainer.events.on("focus", function (ev) {
            _this.focusedItem = ev.target.dataItem;
        });
        itemContainer.events.on("blur", function (ev) {
            _this.focusedItem = undefined;
        });
        // Create container list using item template we just created
        _this.itemContainers = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](itemContainer);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.itemContainers));
        _this._disposers.push(_this.itemContainers.template);
        // Set up global keyboard events for toggling elements
        _this._disposers.push(Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_9__["getInteraction"])().body.events.on("keyup", function (ev) {
            if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_7__["keyboard"].isKey(ev.event, "enter") && _this.focusedItem) {
                _this.toggleDataItem(_this.focusedItem);
            }
        }, _this));
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__["InterfaceColorSet"]();
        // Create a template container and list for the a marker
        var marker = new _core_Container__WEBPACK_IMPORTED_MODULE_5__["Container"]();
        marker.width = 23;
        marker.height = 23;
        marker.interactionsEnabled = false;
        marker.applyOnClones = true;
        marker.setStateOnChildren = true;
        marker.background.fillOpacity = 0;
        marker.background.strokeOpacity = 0;
        marker.propertyFields.fill = "fill";
        marker.valign = "middle";
        var disabledColor = interfaceColors.getFor("disabledBackground");
        marker.events.on("childadded", function (event) {
            var child = event.newValue;
            var activeState = child.states.create("active");
            activeState.properties.stroke = disabledColor;
            activeState.properties.fill = disabledColor;
        });
        _this.markers = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](marker);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.markers));
        _this._disposers.push(_this.markers.template);
        // Create a legend background element
        var rectangle = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__["RoundedRectangle"]);
        rectangle.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        rectangle.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        rectangle.applyOnClones = true;
        rectangle.propertyFields.fill = "fill";
        rectangle.strokeOpacity = 0;
        // Create a template container and list for item labels
        var label = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__["Label"]();
        label.text = "{name}";
        label.margin(0, 5, 0, 5);
        label.valign = "middle";
        label.applyOnClones = true;
        label.states.create("active").properties.fill = interfaceColors.getFor("disabledBackground");
        _this.labels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](label);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.labels));
        _this._disposers.push(_this.labels.template);
        label.interactionsEnabled = false;
        // Create a template container and list for item value labels
        var valueLabel = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__["Label"]();
        valueLabel.margin(0, 5, 0, 0);
        valueLabel.valign = "middle";
        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.
        valueLabel.align = "right";
        valueLabel.textAlign = "end";
        valueLabel.applyOnClones = true;
        valueLabel.states.create("active").properties.fill = interfaceColors.getFor("disabledBackground");
        valueLabel.interactionsEnabled = false;
        _this.valueLabels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](valueLabel);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.valueLabels));
        _this._disposers.push(_this.valueLabels.template);
        _this.position = "bottom"; // don't use setPropertyValue here!
        // Create a state for disabled legend items
        itemContainer.states.create("active");
        itemContainer.setStateOnChildren = true;
        // Apply accessibility settings
        _this.role = "group";
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Legend.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Legend");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {LegendDataItem} Data Item
     */
    Legend.prototype.createDataItem = function () {
        return new LegendDataItem();
    };
    /**
     * [validateDataElement description]
     *
     * @ignore Exclude from docs
     * @param {LegendDataItem} dataItem Data item
     * @todo Description
     * @todo Figure out how to update appearance of legend item without losing focus
     * @todo Update legend marker appearance as apperance of related series changes
     */
    Legend.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        // Get data item (legend item's) container
        var container = dataItem.itemContainer;
        var marker = dataItem.marker;
        var label = dataItem.label;
        var valueLabel = dataItem.valueLabel;
        // Set parent and update current state
        container.parent = this;
        container.readerChecked = dataItem.dataContext.visible;
        // Tell series its legend data item
        dataItem.dataContext.legendDataItem = dataItem;
        var legendSettings = dataItem.dataContext.legendSettings;
        // If we are not using default markers, create a unique legend marker based
        // on the data item type
        var dataContext = dataItem.dataContext;
        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_13__["Sprite"]))) {
            if (!dataItem.childrenCreated) {
                dataContext.createLegendMarker(marker);
                dataItem.childrenCreated = true;
                if (dataContext.updateLegendValue) {
                    dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values
                }
            }
        }
        if (valueLabel.invalid) {
            valueLabel.validate();
        }
        if (valueLabel.currentText == "" || valueLabel.currentText == undefined) {
            valueLabel.__disabled = true;
        }
        else {
            valueLabel.__disabled = false;
        }
        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {
            valueLabel.__disabled = false;
        }
        var visible = dataItem.dataContext.visible;
        if (visible === undefined) {
            visible = true;
        }
        visible = _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["toBoolean"](visible);
        dataItem.dataContext.visible = visible;
        container.events.disableType("toggled");
        container.isActive = !visible;
        container.events.enableType("toggled");
    };
    Object.defineProperty(Legend.prototype, "position", {
        /**
         * @return {LegendPosition} Position
         */
        get: function () {
            return this.getPropertyValue("position");
        },
        /**
         * Position of the legend.
         *
         * Options: "left", "right", "top", "bottom" (default), or "absolute".
         *
         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different
         * layout structure than other charts.
         *
         * To position legend in [[MapChart]] set legend's `align` (`"left"` or
         * `"right"`) and `valign` (`"top"` or `"bottom"`) properties instead.
         *
         * @default "bottom"
         * @param {LegendPosition}  value  Position
         */
        set: function (value) {
            if (this.setPropertyValue("position", value)) {
                if (value == "left" || value == "right") {
                    this.margin(10, 20, 10, 20);
                    this.valign = "middle";
                    this.itemContainers.template.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                    this.valueLabels.template.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                    this.labels.template.truncate = true;
                    this.labels.template.fullWords = false;
                }
                else {
                    this.itemContainers.template.width = undefined;
                    this.itemContainers.template.maxWidth = undefined;
                    this.valueLabels.template.width = 50;
                    this.labels.template.truncate = false;
                    this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                }
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Legend.prototype, "useDefaultMarker", {
        /**
         * @return {boolean} Use default marker?
         */
        get: function () {
            return this.getPropertyValue("useDefaultMarker");
        },
        /**
         * Should legend try to mirror the look of the related item when building
         * the marker for legend item?
         *
         * If set to `true` it will try to make the marker look like its related
         * item.
         *
         * E.g. if an item is for a Line Series, it will display a line of the
         * same thickness, color, and will use the same bullets if series have them.
         *
         * @default false
         * @param {boolean} value Use default marker?
         */
        set: function (value) {
            this.setPropertyValue("useDefaultMarker", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Toggles a legend item.
     *
     * @ignore Exclude from docs
     * @param {this["_dataItem"]} item Legend item
     * @todo Maybe do it with togglable instead
     */
    Legend.prototype.toggleDataItem = function (item) {
        var dataContext = item.dataContext;
        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_13__["Sprite"] && dataContext.isHidden)) {
            item.color = item.colorOrig;
            item.itemContainer.isActive = false;
            if (dataContext.hidden === true) {
                dataContext.hidden = false;
            }
            if (dataContext.show) {
                dataContext.show();
            }
            else {
                dataContext.visible = true;
            }
        }
        else {
            item.itemContainer.isActive = true;
            if (dataContext.hide) {
                dataContext.hide();
            }
            else {
                dataContext.visible = false;
            }
            item.color = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__["InterfaceColorSet"]().getFor("disabledBackground");
        }
    };
    Object.defineProperty(Legend.prototype, "preloader", {
        /**
         * Override preloader method so that legend does not accidentally show its
         * own preloader.
         *
         * @ignore Exclude from docs
         * @return {Preloader} Always `undefined`
         */
        get: function () {
            return;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [handleDataItemPropertyChange description]
     *
     * @ignore Exclude from docs
     */
    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {
        dataItem.valueLabel.invalidate();
        dataItem.label.invalidate();
    };
    return Legend;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["Legend"] = Legend;
//# sourceMappingURL=Legend.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js ***!
  \************************************************************************/
/*! exports provided: AxisDataItem, AxisItemLocation, Axis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisDataItem", function() { return AxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisItemLocation", function() { return AxisItemLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return Axis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _AxisBreak__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/elements/Tooltip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js");
/* harmony import */ var _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/SortedList */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Base class for all Axis
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Axis]].
 *
 * @see {@link DataItem}
 */
var AxisDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisDataItem, _super);
    /**
     * Constructor
     */
    function AxisDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "AxisDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisDataItem.prototype, "grid", {
        /**
         * @return {Grid} Grid element
         */
        get: function () {
            if (!this._grid) {
                var component_1 = this.component;
                if (component_1) {
                    var template = void 0;
                    var grid_1;
                    if (this.isRange) {
                        template = component_1.axisRanges.template.grid;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            grid_1 = template.clone();
                        }
                    }
                    else {
                        template = component_1.renderer.grid.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            grid_1 = component_1.renderer.grid.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_1.renderer.grid.removeValue(grid_1);
                            }));
                        }
                    }
                    this.grid = grid_1;
                    this._disposers.push(grid_1);
                    grid_1.axis = this.component;
                }
            }
            return this._grid;
        },
        /**
         * A [[Grid]] element associated with this data item.
         *
         * If there is no grid element associated with data item, a new one is
         * created and returned.
         *
         * @param {Grid}  grid  Grid element
         */
        set: function (grid) {
            if (this._grid && this._grid != grid) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._grid);
                this._grid.dataItem = undefined;
            }
            if (grid) {
                if (grid.dataItem && grid.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](grid.dataItem.sprites, grid);
                    grid.dataItem.grid = undefined;
                }
                this.addSprite(grid);
            }
            this._grid = grid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "tick", {
        /**
         * @return {AxisTick} Tick element
         */
        get: function () {
            if (!this._tick) {
                var component_2 = this.component;
                if (component_2) {
                    var template = void 0;
                    var tick_1;
                    if (this.isRange) {
                        template = component_2.axisRanges.template.tick;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            tick_1 = template.clone();
                        }
                    }
                    else {
                        template = component_2.renderer.ticks.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            tick_1 = component_2.renderer.ticks.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_2.renderer.ticks.removeValue(tick_1);
                            }));
                        }
                    }
                    this.tick = tick_1;
                    tick_1.axis = this.component;
                    this._disposers.push(tick_1);
                }
            }
            return this._tick;
        },
        /**
         * An [[AxisTick]] element associated with this data item.
         *
         * If there is no tick element associated with data item, a new one is
         * created and returned.
         *
         * @param {AxisTick}  tick  Tick element
         */
        set: function (tick) {
            if (this._tick && this._tick != tick) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._tick);
                this._tick.dataItem = undefined;
            }
            if (tick) {
                if (tick.dataItem && tick.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](tick.dataItem.sprites, tick);
                    tick.dataItem.tick = undefined;
                }
                this.addSprite(tick);
            }
            this._tick = tick;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "label", {
        /**
         * @return {AxisLabel} Label element
         */
        get: function () {
            if (!this._label) {
                var component_3 = this.component;
                if (component_3) {
                    var template = void 0;
                    var label_1;
                    if (this.isRange) {
                        template = component_3.axisRanges.template.label;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            label_1 = template.clone();
                        }
                    }
                    else {
                        template = component_3.renderer.labels.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            label_1 = component_3.renderer.labels.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_3.renderer.labels.removeValue(label_1);
                            }));
                        }
                    }
                    this._disposers.push(label_1);
                    this.label = label_1;
                    label_1.axis = this.component;
                    label_1.virtualParent = component_3;
                }
            }
            return this._label;
        },
        /**
         * An [[AxisLabel]] element associated with this data item.
         *
         * If there is no label element associated with data item, a new one is
         * created and returned.
         *
         * @param {AxisLabel} label Label element
         */
        set: function (label) {
            if (this._label && this._label != label) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._label);
                this._label.dataItem = undefined;
            }
            if (label) {
                if (label.dataItem && label.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](label.dataItem.sprites, label);
                    label.dataItem.label = undefined;
                }
                this.addSprite(label);
            }
            this._label = label;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "axisFill", {
        /**
         * @return {AxisFill} Label element
         */
        get: function () {
            if (!this._axisFill) {
                var component_4 = this.component;
                if (component_4) {
                    var template = void 0;
                    var axisFill_1;
                    if (this.isRange) {
                        template = component_4.axisRanges.template.axisFill;
                        if (!this.isTemplate && template.disabled) {
                            return;
                        }
                        else {
                            axisFill_1 = template.clone();
                        }
                    }
                    else {
                        template = component_4.renderer.axisFills.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            axisFill_1 = component_4.renderer.axisFills.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_4.renderer.axisFills.removeValue(axisFill_1);
                            }));
                        }
                    }
                    this.axisFill = axisFill_1;
                    this._disposers.push(axisFill_1);
                }
            }
            return this._axisFill;
        },
        /**
         * An [[AxisFill]] associated element with this data item.
         *
         * If there is no fill element associated with data item, a new one is
         * created and returned.
         *
         * @param {AxisFill} label Label element
         */
        set: function (axisFill) {
            if (this._axisFill && this._axisFill != axisFill) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._axisFill);
                this._axisFill.dataItem = undefined;
            }
            if (axisFill) {
                if (axisFill.dataItem && axisFill.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](axisFill.dataItem.sprites, axisFill);
                    axisFill.dataItem.axisFill = undefined;
                }
                axisFill.axis = this.component;
                this.addSprite(axisFill);
            }
            this._axisFill = axisFill;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "text", {
        /**
         * @return {string} Text label
         */
        get: function () {
            return this._text;
        },
        /**
         * Text to be used as data item's label.
         *
         * @param {string} text Text label
         */
        set: function (text) {
            this._text = text;
            if (this._label) { // do not use getter, it will create unwanted instances!
                this._label.text = text;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "mask", {
        /**
         * Data item's mask.
         *
         * @return {AxisFill} Mask
         */
        get: function () {
            return this._mask;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "contents", {
        /**
         * Returns a [[Container]] to place all visual elements, related to data item
         * in.
         *
         * If there is no Container, a new one is created.
         *
         * @return {Container} Contents container
         */
        get: function () {
            if (!this._contents) {
                var contents = new _core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]();
                this.addSprite(contents);
                contents.isMeasured = false;
                this._contents = contents;
                var component = this.component;
                if (component) {
                    var mask = component.renderer.createFill(this.component);
                    mask.disabled = false;
                    mask.axis = component;
                    this.addSprite(mask);
                    this._mask = mask;
                    contents.mask = mask;
                }
            }
            return this._contents;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "axisBreak", {
        /**
         * @return {AxisBreak} Axis break
         */
        get: function () {
            return this._axisBreak;
        },
        /**
         * An [[AxisBreak]] this data item falls within.
         *
         * @param {AxisBreak} axisBreak Axis break
         */
        set: function (axisBreak) {
            if (this._axisBreak) {
                this._axisBreak.dataItems.removeValue(this);
            }
            if (axisBreak) {
                axisBreak.dataItems.push(this);
            }
            this._axisBreak = axisBreak;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Re-draws the element.
     *
     * @ignore Exclude from docs
     */
    AxisDataItem.prototype.validate = function () {
        if (this.component) {
            this.component.validateDataElement(this);
        }
    };
    /**
     * Appends data item's elements to the parent [[Container]].
     *
     * @ignore Exclude from docs
     */
    AxisDataItem.prototype.appendChildren = function () {
        if (this.component) {
            this.component.appendDataItem(this);
        }
    };
    /**
     * Ordering function used in JSON setup.
     *
     * @param  {string}  a  Item A
     * @param  {string}  b  Item B
     * @return {Ordering}   Order
     */
    AxisDataItem.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        else if (a == "language") {
            return -1;
        }
        else if (b == "language") {
            return 1;
        }
        else if (a == "component") {
            return -1;
        }
        else if (b == "component") {
            return 1;
        }
        else {
            return 0;
        }
    };
    /**
     * Checks if data item has particular property set.
     *
     * @param  {string}   prop  Property name
     * @return {boolean}        Property set?
     */
    AxisDataItem.prototype.hasProperty = function (prop) {
        return prop == "component" ? true : _super.prototype.hasProperty.call(this, prop);
    };
    /**
     * Copies all parameters from another [[AxisDataItem]].
     *
     * @param {AxisDataItem} source Source AxisDataItem
     */
    AxisDataItem.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.text = source.text;
    };
    return AxisDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_3__["DataItem"]));

/**
 * ============================================================================
 * REQUISITES
 * ============================================================================
 * @hidden
 */
/**
 * Defines named positions for data item's location within [[Axis]].
 */
var AxisItemLocation;
(function (AxisItemLocation) {
    AxisItemLocation[AxisItemLocation["Start"] = 0] = "Start";
    AxisItemLocation[AxisItemLocation["Middle"] = 0.5] = "Middle";
    AxisItemLocation[AxisItemLocation["End"] = 1] = "End";
})(AxisItemLocation || (AxisItemLocation = {}));
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all Axis elements.
 *
 * @see {@link IAxisEvents} for a list of available Events
 * @see {@link IAxisAdapters} for a list of available Adapters
 */
var Axis = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Axis, _super);
    /**
     * Constructor
     */
    function Axis() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Number of Grid elements on the axis.
         *
         * @type {number}
         */
        _this._gridCount = 10;
        /**
         * A list of [[XYSeries]] that are using this Axis.
         *
         * @type {List<XYSeries>}
         */
        _this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["List"]();
        /**
         * Specifies if axis should be automatically disposed when removing from
         * chart's axis list.
         *
         * @default true
         * @type {boolean}
         */
        _this.autoDispose = true;
        _this.className = "Axis";
        _this.shouldClone = false;
        _this.setPropertyValue("cursorTooltipEnabled", true);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__["InterfaceColorSet"]();
        // Create title
        _this.title = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_5__["Label"]();
        _this.title.shouldClone = false;
        _this._disposers.push(_this.title);
        _this.setPropertyValue("startLocation", 0);
        _this.setPropertyValue("endLocation", 1);
        // Data item iterator
        _this._dataItemsIterator = new _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["ListIterator"](_this.dataItems, function () { return _this.dataItems.create(); });
        _this._dataItemsIterator.createNewItems = true;
        // Create tooltip
        var tooltip = new _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_6__["Tooltip"]();
        _this._disposers.push(tooltip);
        tooltip.label.padding(5, 10, 5, 10);
        tooltip.background.pointerLength = 5;
        tooltip.fitPointerToBounds = true;
        tooltip.background.filters.clear();
        // Set virtual parentfor the tooltip so that it can properly inheirt
        // formatters from the axis.
        tooltip.virtualParent = _this;
        // Create background element for the tooltip
        var background = tooltip.background;
        background.cornerRadius = 0;
        background.fill = interfaceColors.getFor("alternativeBackground");
        background.stroke = background.fill;
        background.strokeWidth = 1;
        background.fillOpacity = 1;
        tooltip.label.fill = interfaceColors.getFor("alternativeText");
        _this.tooltip = tooltip;
        _this.applyTheme();
        return _this;
    }
    /**
     * Holds reference to a function that accepts a DataItem and its index as
     * parameters.
     *
     * It can either return a fill opacity for a fill, or manipulate data item
     * directly, to create various highlighting scenarios.
     *
     * For example, you can set it up to highlight only weekends on a
     * [[DateAxis]].
     *
     * @todo type
     */
    Axis.prototype.fillRule = function (dataItem, index) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](index)) {
            index = dataItem.index;
        }
        if (index / 2 == Math.round(index / 2)) {
            dataItem.axisFill.__disabled = true;
            dataItem.axisFill.opacity = 0;
        }
        else {
            dataItem.axisFill.opacity = 1;
            dataItem.axisFill.__disabled = false;
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {AxisDataItem} Data Item
     */
    Axis.prototype.createDataItem = function () {
        return new AxisDataItem();
    };
    /**
     * Invalidates layout.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.invalidateLayout = function () {
        _super.prototype.invalidateLayout.call(this);
        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.series.iterator(), function (series) {
            series.invalidateLayout();
        });
    };
    /**
     * Invalidates series of this axis.
     *
     */
    Axis.prototype.invalidateSeries = function () {
        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.series.iterator(), function (series) {
            series.invalidate();
        });
    };
    /**
     * Override to cancel super call for data element validation.
     * @ignore
     */
    Axis.prototype.validateDataElements = function () {
        if (this.ghostLabel) {
            this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);
        }
    };
    /**
     * Recalculates the number of grid items on the axis.
     */
    Axis.prototype.updateGridCount = function () {
        if (this.renderer) {
            this._gridCount = this.axisLength / this.renderer.minGridDistance;
        }
    };
    /**
     * Redraws the element.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validateLayout = function () {
        this.axisFullLength = this.axisLength / (this.end - this.start);
        _super.prototype.validateLayout.call(this);
        this.updateGridCount();
        this.renderer.updateAxisLine();
        this.renderer.updateTooltip();
        this.renderer.updateBaseGridElement();
        if (this._prevLength != this.axisLength) {
            this.dispatchImmediately("lengthchanged");
            this._prevLength = this.axisLength;
        }
    };
    /**
     * Initializes Axis' renderer.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.initRenderer = function () {
    };
    /**
     * Adds a data item to the Axis.
     *
     * @param {this["_dataItem"]} dataItem Data item
     */
    Axis.prototype.appendDataItem = function (dataItem) {
        var renderer = this.renderer;
        if (dataItem.tick) {
            dataItem.tick.parent = renderer.gridContainer;
        }
        if (dataItem.label) {
            dataItem.label.parent = renderer;
        }
        if (dataItem.grid) {
            dataItem.grid.parent = renderer.gridContainer;
        }
        if (dataItem.axisFill) {
            dataItem.axisFill.parent = renderer.gridContainer;
        }
    };
    /**
     * Redraws Axis' related items.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validate = function () {
        _super.prototype.validate.call(this);
        this.validateLayout();
    };
    /**
     * Redars Axis ranges.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validateAxisRanges = function () {
        var _this = this;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.axisRanges.iterator(), function (axisRange) {
            _this.appendDataItem(axisRange);
            _this.validateDataElement(axisRange);
            if (axisRange.grid) {
                axisRange.grid.validate();
            }
            if (axisRange.tick) {
                axisRange.tick.validate();
            }
            if (axisRange.axisFill) {
                axisRange.axisFill.validate();
            }
            if (axisRange.label) {
                axisRange.label.validate();
            }
        });
    };
    /**
     * Invalidates all axis breaks, so they are redrawn.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validateBreaks = function () {
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.axisBreaks.iterator(), function (axisBreak) {
            axisBreak.invalidate();
        });
    };
    /**
     * Associates an Axis break with this Axis, after it is inserted into
     * `axisBreaks`.
     *
     * @ignore Exclude from docs
     * @param {IListEvents<this["_axisBreak"]>["inserted"]} event Event
     */
    Axis.prototype.processBreak = function (event) {
        var axisBreak = event.newValue;
        axisBreak.parent = this.renderer.breakContainer;
        axisBreak.axis = this;
    };
    /**
     * Registers a [[XYSeries]] element with this Axis.
     *
     * Returns a [[Disposer]] for all events, added to Series for watching
     * changes in Axis, and vice versa.
     * @ignore
     * @param  {XYSeries}     series  Series
     * @return {IDisposer}          Event disposer
     */
    Axis.prototype.registerSeries = function (series) {
        var _this = this;
        this.series.moveValue(series);
        return new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["MultiDisposer"]([
            new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                _this.series.removeValue(series);
            }),
            this.events.on("lengthchanged", series.invalidate, series, false),
            this.events.on("startchanged", series.invalidate, series, false),
            this.events.on("endchanged", series.invalidate, series, false)
            // TODO should these be disposed of ?
            //series.events.on("datavalidated", this.processSeriesDataItems, this),
            //series.events.on("visibilitychanged", this.processSeriesDataItems, this),
            //series.events.on("hidden", this.processSeriesDataItems, this)
        ]);
    };
    Object.defineProperty(Axis.prototype, "renderer", {
        /**
         * @return {this["_renderer"]} Renderer
         */
        get: function () {
            return this._renderer;
        },
        /**
         * An [[AxisRenderer]] to be used to render this Axis.
         *
         * Please note that most of the settings, related to Axis' appearance are set
         * via its renderer. Not directly on the Axis.
         *
         * E.g.:
         *
         * ```TypeScript
         * axis.renderer.inside = true;
         * axis.renderer.minLabelPosition = 0.1;
         * axis.renderer.maxLabelPosition = 0.9;
         * ```
         * ```JavaScript
         * axis.renderer.inside = true;
         * axis.renderer.minLabelPosition = 0.1;
         * axis.renderer.maxLabelPosition = 0.9;
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info
         * @param {this["_renderer"]}  renderer  Renderer
         */
        set: function (renderer) {
            if (renderer != this._renderer) {
                this._renderer = renderer;
                renderer.chart = this.chart;
                renderer.axis = this;
                renderer.parent = this;
                this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only
                this.initRenderer();
                this._disposers.push(renderer.gridContainer.events.on("maxsizechanged", this.invalidate, this, false));
                var ghostLabel_1 = this.renderer.labels.create();
                this._disposers.push(ghostLabel_1);
                ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail
                ghostLabel_1.text = "L";
                ghostLabel_1.parent = this.renderer;
                ghostLabel_1.fillOpacity = 0;
                ghostLabel_1.opacity = 0;
                ghostLabel_1.strokeOpacity = 0;
                ghostLabel_1.validate();
                this.ghostLabel = ghostLabel_1;
                this.events.on("beforedatavalidated", function () {
                    ghostLabel_1.text = "L";
                }, undefined, false);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a relative position to angle. (for circular axes)
     *
     * @param  {number} position Position (0-1)
     * @return {number}          Angle
     */
    Axis.prototype.positionToAngle = function (position) {
        return this.renderer.positionToAngle(position);
    };
    /**
     * Converts pixel coordinates to a relative position. (0-1)
     *
     * @param {IPoint}   point  Coorinates (px)
     * @return {number}         Position (0-1)
     */
    Axis.prototype.pointToPosition = function (point) {
        return this.renderer.pointToPosition(point);
    };
    /**
     * [getAnyRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {any}     start  [description]
     * @param  {any}     end    [description]
     * @return {string}         [description]
     */
    Axis.prototype.getAnyRangePath = function (start, end) {
        return this.renderer.getPositionRangePath(start, end);
    };
    /**
     * Converts any positional parameter to a relative position on axis.
     *
     * @todo Description (review)
     * @param  {any}     value  Pisition
     * @return {number}         Position (0-1)
     */
    Axis.prototype.anyToPosition = function (value) {
        return 0;
    };
    /**
     * Converts any positional parameter to a relative position on axis.
     *
     * @todo Description (review)
     * @param  {any}     value  Pisition
     * @return {IOrientationPoint}  Orientation point
     */
    Axis.prototype.anyToPoint = function (value) {
        return { x: 0, y: 0, angle: 0 };
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number} startPosition [description]
     * @param  {number} endPosition   [description]
     * @return {string}               [description]
     */
    Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {
        return this.renderer.getPositionRangePath(startPosition, endPosition);
    };
    Object.defineProperty(Axis.prototype, "axisLength", {
        /**
         * Actual axis length in pixels.
         *
         * @return {number} Axis length (px)
         */
        get: function () {
            return this.renderer.axisLength;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "cursorTooltipEnabled", {
        /**
         * @return {boolean} Display tooltip?
         */
        get: function () {
            return this.getPropertyValue("cursorTooltipEnabled");
        },
        /**
         * Indicates if axis should display a tooltip for chart's cursor.
         *
         * @param {boolean} value Display tooltip?
         */
        set: function (value) {
            if (this.setPropertyValue("cursorTooltipEnabled", value)) {
                if (value && this.renderer) {
                    this.renderer.updateTooltip();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows Axis tooltip at specific relative position within Axis. (0-1)
     *
     * @param {number} position Position (0-1)
     * @param {boolean} local or global position
     */
    Axis.prototype.showTooltipAtPosition = function (position, local) {
        var tooltip = this._tooltip;
        if (!local) {
            position = this.toAxisPosition(position);
        }
        var renderer = this.renderer;
        if (tooltip && this.dataItems.length > 0) {
            //@todo: think of how to solve this better
            if (tooltip && !tooltip.parent) {
                tooltip.parent = this.tooltipContainer;
            }
            var tooltipLocation = renderer.tooltipLocation;
            var startPosition = this.getCellStartPosition(position);
            var endPosition = this.getCellEndPosition(position);
            if (this.tooltipPosition == "fixed") {
                position = startPosition + (endPosition - startPosition) * tooltipLocation;
            }
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["fitToRange"](position, this.start, this.end);
            var startPoint = renderer.positionToPoint(startPosition);
            var endPoint = renderer.positionToPoint(endPosition);
            // save values so cursor could use them
            this.currentItemStartPoint = startPoint;
            this.currentItemEndPoint = endPoint;
            if (renderer.fullWidthTooltip) {
                tooltip.width = endPoint.x - startPoint.x;
                tooltip.height = endPoint.y - startPoint.y;
            }
            var point = renderer.positionToPoint(position);
            var globalPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__["spritePointToSvg"](point, this.renderer.line);
            tooltip.text = this.getTooltipText(position);
            if (tooltip.text) {
                tooltip.pointTo(globalPoint);
                tooltip.show();
            }
            if (!this.cursorTooltipEnabled) {
                tooltip.hide(0);
            }
        }
    };
    /**
     * Converts relative position (0-1) to Axis position with zoom level and
     * inversed taken into account.
     *
     * @param  {number} position Global position (0-1)
     * @return {number}          Position within Axis (0-1)
     */
    Axis.prototype.toAxisPosition = function (position) {
        position = position * (this.end - this.start);
        if (this.renderer.inversed) {
            position = this.end - position;
        }
        else {
            position = this.start + position;
        }
        return position;
    };
    /**
     * Converts position on the axis with zoom level and
     * inversed taken into account to global position.
     *
     * @param  {number} position Axis position (0-1)
     * @return {number}          Global position (0-1)
     */
    Axis.prototype.toGlobalPosition = function (position) {
        if (this.renderer.inversed) {
            position = this.end - position;
        }
        else {
            position = position - this.start;
        }
        return position / (this.end - this.start);
    };
    /**
     * Returns text to be used for cursor's Axis tooltip.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param  {number}  position  Position coordinate (px)
     * @return {string}            Label text
     */
    Axis.prototype.getTooltipText = function (position) {
        return;
    };
    /**
     * Updates Axis' tooltip's position and possibly size, and pointer (stem)
     * place.
     *
     * @ignore Exclude from docs
     * @param {PointerOrientation}  pointerOrientation  Pointer (stem) orientation
     * @param {IRectangle}          boundingRectangle   A rectangle for tooltip to fit within
     */
    Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {
        var tooltip = this._tooltip;
        if (tooltip) {
            tooltip.pointerOrientation = pointerOrientation;
            tooltip.setBounds(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__["spriteRectToSvg"](boundingRectangle, this.renderer.line));
        }
    };
    /**
     * [roundPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number}            position  Relative position
     * @param  {AxisItemLocation}  location  Location on axis
     * @return {number}                      Rounded position
     */
    Axis.prototype.roundPosition = function (position, location) {
        return position;
    };
    /**
     * [getCellStartPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number} position [description]
     * @return {number}          [description]
     */
    Axis.prototype.getCellStartPosition = function (position) {
        return position;
    };
    /**
     * [getCellEndPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number} position [description]
     * @return {number}          [description]
     */
    Axis.prototype.getCellEndPosition = function (position) {
        return position;
    };
    Object.defineProperty(Axis.prototype, "axisRanges", {
        /**
         * A list of axis ranges for this Axis.
         *
         * @return {ListTemplate} Axis ranges
         */
        get: function () {
            if (!this._axisRanges) {
                var dataItem = this.createDataItem();
                dataItem.isRange = true;
                dataItem.axisFill = this.renderer.axisFills.template.clone();
                dataItem.grid = this.renderer.grid.template.clone();
                dataItem.tick = this.renderer.ticks.template.clone();
                dataItem.label = this.renderer.labels.template.clone();
                dataItem.isTemplate = true;
                dataItem.component = this;
                dataItem.axisFill.disabled = false;
                dataItem.tick.disabled = false;
                dataItem.grid.disabled = false;
                dataItem.label.disabled = false;
                this._axisRanges = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListTemplate"](dataItem);
                this._axisRanges.events.on("inserted", this.processAxisRange, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._axisRanges));
                this._disposers.push(this._axisRanges.template);
            }
            return this._axisRanges;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates an axis range after it has been added to the axis range list.
     *
     * @param {IListEvents<this["_dataItem"]>["inserted"]} event Event
     */
    Axis.prototype.processAxisRange = function (event) {
        var axisRange = event.newValue;
        axisRange.component = this;
        axisRange.isRange = true;
    };
    Object.defineProperty(Axis.prototype, "axisBreaks", {
        /**
         * A list of axis breaks on this Axis.
         *
         * @return {SortedListTemplate} Axis breaks.
         */
        get: function () {
            if (!this._axisBreaks) {
                this._axisBreaks = new _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_7__["SortedListTemplate"](this.createAxisBreak(), function (a, b) {
                    return _core_utils_Number__WEBPACK_IMPORTED_MODULE_15__["order"](a.adjustedStartValue, b.adjustedStartValue);
                });
                this._axisBreaks.events.on("inserted", this.processBreak, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._axisBreaks));
                this._disposers.push(this._axisBreaks.template);
            }
            return this._axisBreaks;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a new axis break.
     *
     * @return {this["_axisBreak"]} Axis break
     */
    Axis.prototype.createAxisBreak = function () {
        return new _AxisBreak__WEBPACK_IMPORTED_MODULE_4__["AxisBreak"]();
    };
    Object.defineProperty(Axis.prototype, "series", {
        /**
         * A list of Series currently associated with this Axis.
         *
         * @return {List<XYSeries>} Series
         */
        get: function () {
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["List"]();
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes Series' data items.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.processSeriesDataItems = function () {
    };
    /**
     * Processes Series' single data item.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param {XYSeriesDataItem} dataItem Data item
     */
    Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {
    };
    /**
     * Post-processes Serie's data items.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.postProcessSeriesDataItems = function () {
    };
    /**
     * Post-processes Serie's single data item.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param {XYSeriesDataItem} dataItem Data item
     */
    Axis.prototype.postProcessSeriesDataItem = function (dataItem) {
    };
    //
    /**
     * Updates Axis based on all Series that might influence it.
     *
     * Called by Series after Series data is validated.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.updateAxisBySeries = function () {
    };
    /**
     * Hides unused data items.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.hideUnusedDataItems = function () {
        var _this = this;
        // hide all unused
        var dataItemsIterator = this._dataItemsIterator;
        dataItemsIterator.createNewItems = false;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](dataItemsIterator.iterator(), function (dataItem) {
            _this.validateDataElement(dataItem); // solves shrinking
            dataItem.__disabled = true;
        });
        dataItemsIterator.clear();
        dataItemsIterator.createNewItems = true;
    };
    /**
     * Returns a Series' data item that corresponds to specific position on Axis.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param  {Series}          series    Series
     * @param  {number}          position  Position (0-1)
     * @param  {boolean}         findNearest  Should axis try to find nearest tooltip if there is no data item at exact position
     * @return {XYSeriesDataItem}            Data item
     */
    Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {
        return;
    };
    /**
     * Returns an angle that corresponds to specific position on axis.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {XYSeriesDataItem}  dataItem  Data item
     * @param  {string}          key       ???
     * @param  {number}          location  Location
     * @param  {string}          stackKey  ???
     * @return {number}                    Angle
     */
    Axis.prototype.getAngle = function (dataItem, key, location, stackKey) {
        return;
    };
    /**
     * [getX description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {XYSeriesDataItem} dataItem [description]
     * @param  {string}         key      [description]
     * @param  {number}         location [description]
     * @param  {string}         stackKey [description]
     * @return {number}                  [description]
     */
    Axis.prototype.getX = function (dataItem, key, location, stackKey) {
        return;
    };
    /**
     * [getY description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {XYSeriesDataItem} dataItem [description]
     * @param  {string}         key      [description]
     * @param  {number}         location [description]
     * @param  {string}         stackKey [description]
     * @return {number}                  [description]
     */
    Axis.prototype.getY = function (dataItem, key, location, stackKey) {
        return;
    };
    Object.defineProperty(Axis.prototype, "basePoint", {
        /**
         * Coordinates of the actual axis start.
         *
         * @ignore Exclude from docs
         * @return {IPoint} Base point coordinates
         */
        get: function () {
            return { x: 0, y: 0 };
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [dataChangeUpdate description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Axis.prototype.dataChangeUpdate = function () {
    };
    /**
     * [dataChangeUpdate description]
     *
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Axis.prototype.seriesDataChangeUpdate = function (series) {
    };
    /**
     * Removes axis breaks that fall between `min` and `max` (???)
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {number}  min  Start value
     * @param  {number}  max  End value
     * @return {number}       Spread o
     */
    Axis.prototype.adjustDifference = function (min, max) {
        var difference = max - min;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](difference)) {
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["eachContinue"](this.axisBreaks.iterator(), function (axisBreak) {
                var startValue = axisBreak.adjustedStartValue;
                var endValue = axisBreak.adjustedEndValue;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](startValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](endValue)) {
                    // breaks are sorted, we don't need go further anymore
                    if (startValue > max) {
                        return false;
                    }
                    if (endValue >= min) {
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](startValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](endValue)) {
                            var breakSize = axisBreak.breakSize;
                            var intersection = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["intersection"]({ start: startValue, end: endValue }, { start: min, end: max });
                            if (intersection) {
                                difference -= (intersection.end - intersection.start) * (1 - breakSize);
                            }
                        }
                    }
                    return true;
                }
            });
            return difference;
        }
    };
    /**
     * Checks if specific value falls within a break.
     *
     * Returns [[AxisBreak]] the value falls into.
     *
     * @param  {number}     value  Value to check
     * @return {this["_axisBreak"]}         Axis break
     */
    Axis.prototype.isInBreak = function (value) {
        return _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["find"](this.axisBreaks.iterator(), function (axisBreak) {
            return value >= axisBreak.adjustedStartValue &&
                value <= axisBreak.adjustedEndValue;
        });
    };
    /**
     * [fixAxisBreaks description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Axis.prototype.fixAxisBreaks = function () {
        var _this = this;
        var axisBreaks = this.axisBreaks;
        if (axisBreaks.length > 0) {
            // first make sure that startValue is <= end value
            // This needs to make a copy of axisBreaks because it mutates the list while traversing
            // TODO very inefficient
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["toArray"](axisBreaks.iterator()), function (axisBreak) {
                var startValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["min"](axisBreak.startValue, axisBreak.endValue);
                var endValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["max"](axisBreak.startValue, axisBreak.endValue);
                axisBreak.adjustedStartValue = startValue;
                axisBreak.adjustedEndValue = endValue;
                _this.axisBreaks.update(axisBreak);
            });
            var firstAxisBreak = axisBreaks.first;
            var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);
            // process breaks
            // TODO does this need to call axisBreaks.update ?
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.axisBreaks.iterator(), function (axisBreak) {
                var startValue = axisBreak.adjustedStartValue;
                var endValue = axisBreak.adjustedEndValue;
                // breaks can't overlap
                // if break starts before previous break ends
                if (startValue < previousEndValue_1) {
                    startValue = previousEndValue_1;
                    if (endValue < previousEndValue_1) {
                        endValue = previousEndValue_1;
                    }
                }
                axisBreak.adjustedStartValue = startValue;
                axisBreak.adjustedEndValue = endValue;
            });
        }
    };
    Object.defineProperty(Axis.prototype, "startIndex", {
        /**
         * @ignore Exclude from docs
         * @return {number} [description]
         */
        get: function () {
            return 0;
        },
        /**
         * We need start/end indexes of axes to be 0 - `dataItems.length`.
         *
         * Yes, also for category axis, this helps to avoid jumping of categories
         * while scrolling and does not do a lot of extra work as we use
         * protected `_startIndex` and `_endIndex` when working with items.
         *
         * @hidden
         */
        /**
         * [startIndex description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @param {number} value [description]
         */
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "endIndex", {
        /**
         * @ignore Exclude from docs
         * @return {number} [description]
         */
        get: function () {
            return this.dataItems.length;
        },
        /**
         * [endIndex description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @param {number} value [description]
         */
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a formatted label based on position.
     *
     * Individual axis types should override this method to generate a label
     * that is relevant to axis type.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param  {number}  position  Relative position on axis (0-1)
     * @return {string}            Position label
     */
    Axis.prototype.getPositionLabel = function (position) {
        return Math.round(position * 100) + "%x";
    };
    Object.defineProperty(Axis.prototype, "chart", {
        /**
         * @return {Chart} Chart
         */
        get: function () {
            return this._chart;
        },
        /**
         * A Chart this Axis belongs to.
         *
         * @param {Chart}  value  Chart
         */
        set: function (value) {
            this._chart = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a data item for a Series range.
     *
     * @param  {XYSeries}  series  Target Series
     * @return {this}            Range data item
     */
    Axis.prototype.createSeriesRange = function (series) {
        var range = this.axisRanges.create();
        range.component = this;
        range.axisFill = this.renderer.axisFills.template.clone();
        range.axisFill.disabled = false;
        range.axisFill.fillOpacity = 0;
        range.grid = this.renderer.grid.template.clone();
        range.grid.disabled = true;
        range.tick = this.renderer.ticks.template.clone();
        range.tick.disabled = true;
        range.label = this.renderer.labels.template.clone();
        range.label.disabled = true;
        series.axisRanges.push(range);
        return range;
    };
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param {this} source Source Axis
     */
    Axis.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.renderer) {
            this.renderer.copyFrom(source.renderer);
        }
        if (source.title) {
            this.title = source.title.clone();
        }
    };
    /**
     * Resets internal iterator.
     */
    Axis.prototype.resetIterators = function () {
        this._dataItemsIterator.reset();
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    Axis.prototype.processConfig = function (config) {
        if (config) {
            // Set up axis ranges
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](config.axisRanges) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isArray"](config.axisRanges)) {
                for (var i = 0, len = config.axisRanges.length; i < len; i++) {
                    var range = config.axisRanges[i];
                    // If `series` is set, we know it's a series range
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](range["series"])) {
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isString"](range["series"])) {
                            if (this.map.hasKey(range["series"])) {
                                //range["series"] = this.map.getKey(range["series"]);
                                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range["series"]));
                                delete (range["series"]);
                                config.axisRanges[i].config = range;
                            }
                        }
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    Object.defineProperty(Axis.prototype, "startLocation", {
        /**
         * @return {number} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("startLocation");
        },
        /**
         * Axis start location. Works on Date/Category axis, doesn't work on Value axis.
         *
         * * 0 - Full first cell is shown.
         * * 0.5 - Half of first cell is shown.
         * * 1 - None of the first cell is visible. (you probably don't want that)
         *
         * @param {number} value Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("startLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "endLocation", {
        /**
         * @return {number} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("endLocation");
        },
        /**
         * Axis end location. Works on Date/Category axis, doesn't work on Value axis.
         *
         * * 0 - None of the last cell is shown. (don't do that)
         * * 0.5 - Half of the last cell is shown.
         * * 1 - Full last cell is shown.
         *
         * @param {number} value Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("endLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Axis;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["Axis"] = Axis;
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["AxisDataItem"] = AxisDataItem;
//# sourceMappingURL=Axis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js ***!
  \*****************************************************************************/
/*! exports provided: AxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisBreak", function() { return AxisBreak; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Axis break module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class to define "breaks" on axes.
 *
 * @see {@link IAxisBreakEvents} for a list of available events
 * @see {@link IAxisBreakAdapters} for a list of available Adapters
 * @important
 */
var AxisBreak = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisBreak, _super);
    /**
     * Constructor
     */
    function AxisBreak() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Reference to parent Axis.
         *
         * @type {MutableValueDisposer}
         */
        _this._axis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        /**
         * A list of axis data items which fall within this break.
         *
         * @type {List<AxisDataItem>}
         */
        _this.dataItems = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["List"]();
        _this.className = "AxisBreak";
        // Set defaults
        _this.breakSize = 0.01;
        _this.marginLeft = -5;
        _this.marginRight = -5;
        _this.marginTop = -5;
        _this.marginBottom = -5;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__["InterfaceColorSet"]();
        // Create elements
        // (these won't be used actually, just for setting properties)
        var fillShape = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        fillShape.fill = interfaceColors.getFor("background");
        fillShape.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])();
        fillShape.fillOpacity = 0.9;
        fillShape.zIndex = 0;
        _this._fillShape = fillShape;
        var startLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        startLine.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])();
        startLine.stroke = interfaceColors.getFor("grid");
        startLine.strokeOpacity = 0.3;
        startLine.zIndex = 1;
        _this._startLine = startLine;
        var endLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        endLine.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])();
        endLine.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])("#000000"); // interfaceColors.getFor("grid");
        endLine.strokeOpacity = 0.3;
        endLine.zIndex = 2;
        _this._endLine = endLine;
        _this._disposers.push(_this._axis);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    AxisBreak.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this._fillShape) {
            this._fillShape.dispose();
        }
        if (this._startLine) {
            this._startLine.dispose();
        }
        if (this._endLine) {
            this._endLine.dispose();
        }
    };
    Object.defineProperty(AxisBreak.prototype, "startLine", {
        /**
         * @return {IWavedShape} Element
         */
        get: function () {
            return this._startLine;
        },
        /**
         * An element used for the starting line of the break.
         *
         * @param {IWavedShape}  sprite  Element
         */
        set: function (sprite) {
            if (this._startLine) {
                this._startLine.dispose();
            }
            this._startLine = sprite;
            this.addBreakSprite(sprite);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endLine", {
        /**
         * @return {IWavedShape} Element
         */
        get: function () {
            return this._endLine;
        },
        /**
         * An element used for the end line of the break.
         *
         * @param {IWavedShape} sprite Element
         */
        set: function (sprite) {
            if (this._endLine) {
                this._endLine.dispose();
            }
            this._endLine = sprite;
            this.addBreakSprite(sprite);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "fillShape", {
        /**
         * @return {IWavedShape} Element
         */
        get: function () {
            return this._fillShape;
        },
        /**
         * An element used for fill of the break.
         *
         * @param {IWavedShape} sprite Element
         */
        set: function (sprite) {
            if (this._fillShape) {
                this._fillShape.dispose();
            }
            this._fillShape = sprite;
            this.addBreakSprite(sprite);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds a break element (e.g. lines, fill) to the break, which is
     * [[Container]].
     *
     * @ignore Exclude from docs
     * @param {IWavedShape} sprite Element to add
     */
    AxisBreak.prototype.addBreakSprite = function (sprite) {
        sprite.parent = this;
        sprite.isMeasured = false;
        this._disposers.push(sprite);
    };
    Object.defineProperty(AxisBreak.prototype, "axis", {
        /**
         * @return {Axis} Axis
         */
        get: function () {
            return this._axis.get();
        },
        /**
         * An Axis this Break is associated with.
         *
         * @param {Axis}  axis  Axis
         */
        set: function (axis) {
            if (this._axis.get() !== axis) {
                this._axis.set(axis, axis.renderer.gridContainer.events.on("transformed", this.invalidate, this, false));
                axis.renderer.createBreakSprites(this);
                // this can't go to copyFrom, as axis is set later
                var breakTemplate = axis.axisBreaks.template;
                this.startLine.copyFrom(breakTemplate.startLine);
                this.endLine.copyFrom(breakTemplate.endLine);
                this.fillShape.copyFrom(breakTemplate.fillShape);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "breakSize", {
        /**
         * @return {number} Relative axis break
         */
        get: function () {
            return this.getPropertyValue("breakSize");
        },
        /**
         * A size of the break relative to the actual size of the scope break spans.
         *
         * For example, if `breakSize = 0.1` and unbroken scope of balues it spans
         * would be 100 pixels, the break would be 10 pixels wide.
         *
         * 0 means the break will completely collapse and hide the values.
         * 1 means break would be not collapse at all, which would make it
         * effectively useless.
         *
         * @default 0.01
         * @param {number}  value  Relative axis break
         */
        set: function (value) {
            if (this.setPropertyValue("breakSize", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "startPoint", {
        /**
         * Returns pixel coordinates of axis break's start.
         *
         * @return {IPoint} Start point
         */
        get: function () {
            var renderer = this.axis.renderer;
            if (renderer) {
                return renderer.positionToPoint(this.startPosition);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endPoint", {
        /**
         * Returns pixel coordinates of axis break's end.
         *
         * @return {IPoint} End point
         */
        get: function () {
            var renderer = this.axis.renderer;
            if (renderer) {
                return renderer.positionToPoint(this.endPosition);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "startPosition", {
        /**
         * Returns a relative position at which axis break starts.
         *
         * This is a calculated position, meaning it shows relative position of the
         * break after break is applied.
         *
         * @return {number} Start position
         */
        get: function () {
            return;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endPosition", {
        /**
         * Returns a relative position at which axis break ends.
         *
         * This is a calculated position, meaning it shows relative position of the
         * break after break is applied.
         *
         * @return {number} End position
         */
        get: function () {
            return;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Draws the axis break.
     *
     * @ignore Exclude from docs
     */
    AxisBreak.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.axis) {
            var renderer = this.axis.renderer;
            renderer.updateBreakElement(this);
        }
    };
    Object.defineProperty(AxisBreak.prototype, "startValue", {
        /**
         * @return {number} Starting value
         */
        get: function () {
            return this.getPropertyValue("startValue");
        },
        /**
         * A starting value for the break.
         *
         * @param {number}  value  Starting value
         */
        set: function (value) {
            if (this.setPropertyValue("startValue", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endValue", {
        /**
         * @return {number} End value
         */
        get: function () {
            return this.getPropertyValue("endValue");
        },
        /**
         * An end value for the break.
         *
         * @param {number}  value  End value
         */
        set: function (value) {
            if (this.setPropertyValue("endValue", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return AxisBreak;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["AxisBreak"] = AxisBreak;
//# sourceMappingURL=AxisBreak.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js ***!
  \****************************************************************************/
/*! exports provided: AxisFill */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisFill", function() { return AxisFill; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * AxisFill is a base class used to defines fill shapes for various
 * type-specific Axes.
 *
 * Axis fills are used to add fills to specific ranges of those axes.
 *
 * @see {@link IAxisFillEvents} for a list of available events
 * @see {@link IAxisFillAdapters} for a list of available Adapters
 * @important
 */
var AxisFill = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisFill, _super);
    /**
     * Constructor.
     *
     * @param {Axis} axis Axis
     */
    function AxisFill(axis) {
        var _this = _super.call(this) || this;
        _this.axis = axis;
        _this.element = _this.paper.add("path");
        _this.className = "AxisFill";
        _this.isMeasured = false;
        _this.location = 0;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
        _this.fill = interfaceColors.getFor("alternativeBackground");
        _this.fillOpacity = 0;
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    AxisFill.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    /**
     * Draws the fill element.
     *
     * @ignore Exclude from docs
     */
    AxisFill.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.axis && _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.startPosition) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.endPosition)) {
            this.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);
            this.path = this.fillPath;
        }
    };
    Object.defineProperty(AxisFill.prototype, "startPosition", {
        /**
         * @return {number} Start position
         */
        get: function () {
            return this.getPropertyValue("startPosition");
        },
        /**
         * An actual starting position of the fill.
         *
         * @param {number}  value  Starting position
         */
        set: function (value) {
            this.setPropertyValue("startPosition", value);
            this.invalidate(); // this is needed as relative position might not change when zooming
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisFill.prototype, "endPosition", {
        /**
         * @return {number} End position
         */
        get: function () {
            return this.getPropertyValue("endPosition");
        },
        /**
         * An actual end position of the fill.
         *
         * @param {number} value End position
         */
        set: function (value) {
            this.setPropertyValue("endPosition", value);
            this.invalidate(); // this is needed as relative position might not change when zooming
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisFill.prototype, "location", {
        /**
         * @return {AxisItemLocation} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Relative location of the fill. (0-1)
         *
         * @param {number} value Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return AxisFill;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisFill"] = AxisFill;
//# sourceMappingURL=AxisFill.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js ***!
  \*****************************************************************************/
/*! exports provided: AxisLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLabel", function() { return AxisLabel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Axis Label module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Use to create labels on Axis.
 *
 * @see {@link IAxisLabelEvents} for a list of available events
 * @see {@link IAxisLabelAdapters} for a list of available Adapters
 * @important
 */
var AxisLabel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisLabel, _super);
    /**
     * Constructor
     */
    function AxisLabel() {
        var _this = _super.call(this) || this;
        _this.className = "AxisLabel";
        _this.isMeasured = false;
        _this.padding(10, 10, 10, 10);
        _this.location = 0.5;
        //this.nonScaling = true; // not good for perf
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisLabel.prototype, "location", {
        /**
         * @return {AxisItemLocation} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Relative location of the label. (0-1)
         *
         * @param {AxisItemLocation}  value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisLabel.prototype, "inside", {
        /**
         * Returns if label is set to be drawn inside axis.
         *
         * @return {boolean} Inside?
         */
        get: function () {
            return this.getPropertyValue("inside");
        },
        /**
         * Sets if label should be drawn inside axis.
         *
         * @param {boolean}  value  Inside?
         */
        set: function (value) {
            this.setPropertyValue("inside", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    AxisLabel.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return AxisLabel;
}(_core_elements_Label__WEBPACK_IMPORTED_MODULE_1__["Label"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisLabel"] = AxisLabel;
//# sourceMappingURL=AxisLabel.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js ***!
  \****************************************************************************/
/*! exports provided: AxisLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLine", function() { return AxisLine; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 *
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw Axis line.
 *
 * @see {@link IAxisLineEvents} for a list of available events
 * @see {@link IAxisLineAdapters} for a list of available Adapters
 */
var AxisLine = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisLine, _super);
    /**
     * Constructor
     */
    function AxisLine() {
        var _this = _super.call(this) || this;
        _this.className = "AxisLine";
        _this.element = _this.paper.add("path");
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("grid");
        _this.strokeOpacity = 0.15;
        _this.pixelPerfect = true;
        _this.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_3__["color"])();
        _this.applyTheme();
        _this.interactionsEnabled = false;
        return _this;
        //this.element.moveTo({ x: 0, y: 0 });
    }
    return AxisLine;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisLine"] = AxisLine;
//# sourceMappingURL=AxisLine.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js ***!
  \********************************************************************************/
/*! exports provided: AxisRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRenderer", function() { return AxisRenderer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _AxisLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AxisLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js");
/* harmony import */ var _AxisFill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxisFill */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js");
/* harmony import */ var _Grid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Grid */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js");
/* harmony import */ var _AxisLabel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AxisLabel */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js");
/* harmony import */ var _AxisTick__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AxisTick */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Module, defining base Axis Renderer.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all axis renderers.
 *
 * @see {@link IAxisRendererEvents} for a list of available events
 * @see {@link IAxisRendererAdapters} for a list of available Adapters
 */
var AxisRenderer = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisRenderer, _super);
    /**
     * Constructor.
     *
     * @param {Axis} axis Related axis
     */
    function AxisRenderer() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A related chart.
         *
         * @type {MutableValueDisposer}
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "AxisRenderer";
        // Set defaults
        _this.minGridDistance = 50;
        _this.inside = false;
        _this.inversed = false;
        _this.tooltipLocation = 0.5;
        _this.fullWidthTooltip = false;
        _this.cellStartLocation = 0;
        _this.cellEndLocation = 1;
        _this.minLabelPosition = 0;
        _this.maxLabelPosition = 1;
        _this.shouldClone = false;
        var gridContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        gridContainer.shouldClone = false;
        gridContainer.layout = "none";
        gridContainer.isMeasured = false;
        gridContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        gridContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        _this.gridContainer = gridContainer;
        // not good without this
        gridContainer.events.on("maxsizechanged", function () {
            if (_this.inited) {
                _this.invalidateAxisItems();
            }
        }, _this, false);
        var breakContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        breakContainer.shouldClone = false;
        breakContainer.isMeasured = false;
        breakContainer.layout = "none";
        breakContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        breakContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        _this.breakContainer = breakContainer;
        _this.line = _this.createChild(_AxisLine__WEBPACK_IMPORTED_MODULE_3__["AxisLine"]);
        _this.line.shouldClone = false;
        _this.line.strokeOpacity = 0;
        var baseGrid = _this.createChild(_Grid__WEBPACK_IMPORTED_MODULE_5__["Grid"]);
        baseGrid.shouldClone = false;
        _this.baseGrid = baseGrid;
        // Make elements disposable
        var disposers = _this._disposers;
        disposers.push(baseGrid);
        disposers.push(_this.line);
        disposers.push(gridContainer);
        disposers.push(breakContainer);
        disposers.push(_this._chart);
        _this.ticks.template.disabled = true;
        _this.axisFills.template.disabled = true;
        _this.axisFills.template.interactionsEnabled = false;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisRenderer.prototype, "axis", {
        get: function () {
            return this._axis;
        },
        set: function (axis) {
            this.setAxis(axis);
        },
        enumerable: true,
        configurable: true
    });
    /**
    * @ignore
    */
    AxisRenderer.prototype.setAxis = function (axis) {
        this._axis = axis;
        this.baseGrid.parent = axis;
        this.line.parent = axis;
        this.gridContainer.bind("opacity", axis);
    };
    /**
     * Called when rendered is attached to an Axis, as well as a property of
     * Axis that might affect the appearance is updated.
     *
     * E.g. `axis.opposite`, `axis.inside`, etc.
     *
     * This method is called **before** draw, so that any related setting
     * changed in this method can be changed.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.processRenderer = function () {
        this.events.on("sizechanged", this.updateTooltip, this, false);
        this.events.on("positionchanged", this.updateTooltip, this, false);
        this.labels.template.inside = this.inside;
        this.ticks.template.inside = this.inside;
    };
    /**
     * Updates Axis' tooltip.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.updateTooltip = function () {
        // This is a placeholder method for extending classes to override.
    };
    Object.defineProperty(AxisRenderer.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return {number} Length (px)
         */
        get: function () {
            // This is a placeholder method for extending classes to override.
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Re-positions an element to new coordinates.
     *
     * @ignore Exclude from docs
     * @param {Sprite}  item   A target element
     * @param {IPoint}  point  New coordinates
     */
    AxisRenderer.prototype.positionItem = function (item, point) {
        if (item) {
            item.moveTo(point);
        }
    };
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @ignore Exclude from docs
     * @param  {number}  position  Position (0-1)
     * @return {IPoint}            Point
     */
    AxisRenderer.prototype.positionToPoint = function (position) {
        // This is a placeholder method for extending classes to override.
        return { x: 0, y: 0 };
    };
    /**
     * Converts relative position on axis to angle.
     *
     * @ignore Exclude from docs
     * @todo Description (review / units)
     * @param  {number}  position  Position (0-1)
     * @return {number}            Angle
     */
    AxisRenderer.prototype.positionToAngle = function (position) {
        // This is a placeholder method for extending classes to override.
        return 0;
    };
    /**
     * Converts relative position (0-1) on axis to a pixel coordinate.
     *
     * @param  {number}  position  Position (0-1)
     * @return {number}            Coordinate (px)
     */
    AxisRenderer.prototype.positionToCoordinate = function (position) {
        var coordinate;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (axis.renderer.inversed) {
            coordinate = (axis.end - position) * axisFullLength;
        }
        else {
            coordinate = (position - axis.start) * axisFullLength;
        }
        return coordinate;
    };
    AxisRenderer.prototype.getHeight = function () {
        var axis = this.axis;
        if (axis && axis.chart) {
            var chart = this.axis.chart;
            if (chart.plotContainer) {
                return chart.plotContainer.pixelHeight || 0;
            }
        }
        return this.gridContainer.pixelHeight || 0;
    };
    AxisRenderer.prototype.getWidth = function () {
        var axis = this.axis;
        if (axis && axis.chart) {
            var chart = this.axis.chart;
            if (chart.plotContainer) {
                return chart.plotContainer.pixelWidth || 0;
            }
        }
        return this.gridContainer.pixelWidth || 0;
    };
    /**
     * Converts a coordinate in pixels to a relative position. (0-1)
     *
     * @param  {number}  coordinate  Coordinate (px)
     * @return {number}              Position (0-1)
     */
    AxisRenderer.prototype.coordinateToPosition = function (coordinate) {
        var position;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (axis.renderer.inversed) {
            position = axis.end - coordinate / axisFullLength;
        }
        else {
            position = coordinate / axisFullLength + axis.start;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["round"](position, 5);
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @ignore Exclude from docs
     * @param  {IPoint}  point  Point
     * @return {number}         Position (0-1)
     */
    AxisRenderer.prototype.pointToPosition = function (point) {
        // This is a placeholder method for extending classes to override.
        return 0;
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number}  startPosition  Starting position
     * @param  {number}  endPosition    End position
     * @return {string}                 SVG path
     */
    AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {
        return "";
    };
    /**
     * Invalidates all axis data items, effectively causing them re-evaluated.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    AxisRenderer.prototype.invalidateAxisItems = function () {
        var axis = this.axis;
        if (axis) {
            axis.invalidateDataItems();
        }
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param {Grid}    grid         Grid element
     * @param {number}  position     Starting position
     * @param {number}  endPosition  End position
     */
    AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param {AxisTick}  tick         Tick element
     * @param {number}    position     Starting position
     * @param {number}    endPosition  End position
     */
    AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param {AxisLabel}  label        Label element
     * @param {number}     position     Starting position
     * @param {number}     endPosition  Ending position
     */
    AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions the axis fill element.
     *
     * @ignore Exclude from docs
     * @param {AxisFill}  fill         Fill element
     * @param {number}    position     Starting position
     * @param {number}    endPosition  Ending position
     */
    AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {
        fill.startPosition = position;
        fill.endPosition = endPosition;
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.updateAxisLine = function () {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.updateBaseGridElement = function () {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param {AxisBreak} axisBreak Break element
     */
    AxisRenderer.prototype.updateBreakElement = function (axisBreak) {
        this.positionItem(axisBreak.startLine, axisBreak.startPoint);
        this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);
        this.positionItem(axisBreak.endLine, axisBreak.endPoint);
        this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);
    };
    Object.defineProperty(AxisRenderer.prototype, "minGridDistance", {
        /**
         * @return {number} Min distance (px)
         */
        get: function () {
            return this.getPropertyValue("minGridDistance");
        },
        /**
         * Minimum distance in pixels between grid elements.
         *
         * @param {number}  value  Min distance (px)
         */
        set: function (value) {
            if (this.setPropertyValue("minGridDistance", value)) {
                if (this.axis) {
                    this.axis.invalidateLayout();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "chart", {
        /**
         * @ignore Exclude from docs
         * @return {Chart} Chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A chart, associated with the Axis.
         *
         * @ignore Exclude from docs
         * @param {Chart}  value  Chart
         */
        set: function (value) {
            this._chart.set(value, null);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Toggles visibility of an element, based on its current position and
     * min/max position settings.
     *
     * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.
     *
     * @ignore Exclude from docs
     * @param {Sprite}  sprite       An element to toggle
     * @param {number}  position     Elements current position
     * @param {number}  minPosition  Min position setting
     * @param {number}  maxPosition  Max position setting
     */
    AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {
        var axis = this.axis;
        var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.00001);
        var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.00001);
        if (!sprite.disabled) {
            if (position < updatedStart || position > updatedEnd) {
                sprite.__disabled = true;
            }
            else {
                sprite.__disabled = false;
            }
        }
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param {AxisBreak} axisBreak Axis break
     */
    AxisRenderer.prototype.createBreakSprites = function (axisBreak) {
        // This is a placeholder method for extending classes to override.
    };
    Object.defineProperty(AxisRenderer.prototype, "axisFills", {
        /**
         * A list of Axis' Fill elements.
         *
         * Those are fill elements that cover the space between every second set
         * of grid lines, and can be configured to create striped charts.
         *
         * Please note that these are disabled by default. To enable them, set
         * template to true.
         *
         * ```TypeScript
         * categoryAxis.renderer.axisFills.template.disabled = false;
         * ```
         * ```JavaScript
         * categoryAxis.renderer.axisFills.template.disabled = false;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     // ...
         *     "renderer": {
         *       "axisFills": {
         *         "disabled": false
         *       }
         *     }
         *   }]
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.
         * @return {ListTemplate} Fill elements
         */
        get: function () {
            if (!this._axisFills) {
                var fill = this.createFill(this.axis);
                this._axisFills = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListTemplate"](fill);
                fill.applyOnClones = true;
                fill.events.on("enabled", this.invalidateAxisItems, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._axisFills));
                this._disposers.push(this._axisFills.template);
            }
            return this._axisFills;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new fill element, suitable for this Axis Renderer type.
     *
     * @return {AxisFill} Fill element
     */
    AxisRenderer.prototype.createFill = function (axis) {
        return new _AxisFill__WEBPACK_IMPORTED_MODULE_4__["AxisFill"](axis);
    };
    Object.defineProperty(AxisRenderer.prototype, "grid", {
        /**
         * A list of Axis' Grid elements.
         *
         * @return {ListTemplate} Grid elements
         */
        get: function () {
            if (!this._grid) {
                var grid = this.createGrid();
                this._grid = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListTemplate"](grid);
                grid.applyOnClones = true;
                grid.events.on("enabled", this.invalidateAxisItems, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._grid));
                this._disposers.push(this._grid.template);
            }
            return this._grid;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new grid element, suitable for this Axis Renderer type.
     *
     * @return {Grid} Grid element
     */
    AxisRenderer.prototype.createGrid = function () {
        return new _Grid__WEBPACK_IMPORTED_MODULE_5__["Grid"]();
    };
    Object.defineProperty(AxisRenderer.prototype, "ticks", {
        /**
         * A list of Axis' Tick elements.
         *
         * Please note that these are disabled by default. To enable them, set
         * template to true.
         *
         * ```TypeScript
         * categoryAxis.renderer.ticks.template.disabled = false;
         * ```
         * ```JavaScript
         * categoryAxis.renderer.ticks.template.disabled = false;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     // ...
         *     "renderer": {
         *       "ticks": {
         *         "disabled": false
         *       }
         *     }
         *   }]
         * }
         * ```
         *
         * @return {ListTemplate} Tick elements
         */
        get: function () {
            if (!this._ticks) {
                var tick = this.createTick();
                tick.applyOnClones = true;
                tick.isMeasured = false;
                tick.events.on("enabled", this.invalidateAxisItems, this, false);
                this._ticks = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListTemplate"](tick);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._ticks));
                this._disposers.push(this._ticks.template);
            }
            return this._ticks;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new tick element, suitable for this Axis Renderer type.
     *
     * @return {AxisTick} Tick element
     */
    AxisRenderer.prototype.createTick = function () {
        return new _AxisTick__WEBPACK_IMPORTED_MODULE_7__["AxisTick"]();
    };
    Object.defineProperty(AxisRenderer.prototype, "labels", {
        /**
         * A list of Axis' Label elements.
         *
         * @return {ListTemplate} Label elements
         */
        get: function () {
            if (!this._labels) {
                var label = this.createLabel();
                this._labels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListTemplate"](label);
                label.applyOnClones = true;
                label.events.on("enabled", this.invalidateAxisItems, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._labels));
                this._disposers.push(this._labels.template);
            }
            return this._labels;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new label element, suitable for this Axis Renderer type.
     *
     * @return {AxisLabel} Label element
     */
    AxisRenderer.prototype.createLabel = function () {
        return new _AxisLabel__WEBPACK_IMPORTED_MODULE_6__["AxisLabel"]();
    };
    Object.defineProperty(AxisRenderer.prototype, "inside", {
        /**
         * @return {boolean} Labels inside?
         */
        get: function () {
            return this.getPropertyValue("inside");
        },
        /**
         * Indicates whether Axis' labels and ticks should be drawn inside Plot area.
         *
         * Does not work with all renderers, like AxisRendererRadial.
         *
         * @param {boolean}  value  Labels inside?
         */
        set: function (value) {
            if (this.setPropertyValue("inside", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                }
            }
            if (value) {
                this.width = 0;
                this.height = 0;
            }
            else {
                this.width = undefined;
                this.height = undefined;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "opposite", {
        /**
         * @return {boolean} Draw axis on opposite side?
         */
        get: function () {
            return this.getPropertyValue("opposite");
        },
        /**
         * Indicates whether Axis should be drawn on the opposite side of the plot
         * area than it would normally be drawn based on chart's settings.
         *
         * Does not work with all renderers, like [[AxisRendererRadial]] and
         * [[AxisRenderer Circular].
         *
         * @param {boolean}  value  Draw axis on opposite side?
         */
        set: function (value) {
            this.setPropertyValue("opposite", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "fullWidthTooltip", {
        /**
         * @return {boolean} Full width tooltip?
         */
        get: function () {
            return this.getPropertyValue("fullWidthTooltip");
        },
        /**
         * Indicates if Axis tooltip should take the whole width of the axis cell.
         * (between two grid lines)
         *
         * NOTE: this setting is ignored on circular axis types.
         *
         * @param {boolean} value Full width tooltip?
         */
        set: function (value) {
            this.setPropertyValue("fullWidthTooltip", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "tooltipLocation", {
        /**
         * @return {number} Tooltip location
         */
        get: function () {
            return this.getPropertyValue("tooltipLocation");
        },
        /**
         * Location within axis cell to show tooltip on. (0-1)
         *
         * 0 - show at the start
         * 0.5 - show right in the middle
         * 1 - show at the end
         *
         * @param {number} value Tooltip location
         */
        set: function (value) {
            this.setPropertyValue("tooltipLocation", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "cellStartLocation", {
        /**
         * @return {number} Cell start (0-1)
         */
        get: function () {
            return this.getPropertyValue("cellStartLocation");
        },
        /**
         * Location for the cell start.
         *
         * Normally a "cell" is the whole available width in a category.
         *
         * If there are several clustered column-like series available, the whole
         * space is divided between each clustered column, or column stacks.
         *
         * `cellStartLocation` identifies where, within available space, the actual
         * cell starts.
         *
         * This, together with column series' `width` will affect actual width of
         * columns, and thus gaps between them.
         *
         * This will affect category-like axes only, like [[DateAxis]], or
         * [[CategoryAxis]].
         *
         * This is used to limit a space occupied by series like column.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param {number} value Cell start (0-1)
         */
        set: function (value) {
            if (this.setPropertyValue("cellStartLocation", value)) {
                if (this.axis) {
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "cellEndLocation", {
        /**
         * @return {number} Cell end (0-1)
         */
        get: function () {
            return this.getPropertyValue("cellEndLocation");
        },
        /**
         * Location for the cell end.
         *
         * Normally a "cell" is the whole available width in a category.
         *
         * If there are several clustered column-like series available, the whole
         * space is divided between each clustered column, or column stacks.
         *
         * `cellEndLocation` identifies where, within available space, the actual
         * cell ends.
         *
         * This, together with column series' `width` will affect actual width of
         * columns, and thus gaps between them.
         *
         * This will affect category-like axes only, like [[DateAxis]], or
         * [[CategoryAxis]].
         *
         * This is used to limit a space occupied by series like column.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param {number} value Cell end (0-1)
         */
        set: function (value) {
            if (this.setPropertyValue("cellEndLocation", value)) {
                if (this.axis) {
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "inversed", {
        /**
         * @return {boolean} Flip axis?
         */
        get: function () {
            return this.getPropertyValue("inversed");
        },
        /**
         * Indicates if the scale of the axis should be flipped.
         *
         * @param {boolean} value Flip axis?
         */
        set: function (value) {
            this.setPropertyValue("inversed", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "minLabelPosition", {
        /**
         * @return {number} Min label position (0-1)
         */
        get: function () {
            return this.getPropertyValue("minLabelPosition");
        },
        /**
         * Minimum position along the Axis, for labels.
         *
         * Labels, which have their position closer to the start of the Axis, will be
         * automatically hidden.
         *
         * E.g., setting this to 0.05 (5% of total axis length) would hide labels,
         * that would otherwise be drawn very near start of the Axis.
         *
         * This is especially usefull with `inside = true`, or if the chart hasn't
         * got any extra margins.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param {number}  value  Min label position (0-1)
         */
        set: function (value) {
            this.setPropertyValue("minLabelPosition", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "maxLabelPosition", {
        /**
         * @return {number} Max label position (0-1)
         */
        get: function () {
            return this.getPropertyValue("maxLabelPosition");
        },
        /**
         * Maximum position along the Axis, for labels.
         *
         * Labels, which have their position closer to the and of the Axis, will be
         * automatically hidden.
         *
         * E.g., setting this to 0.95 (95% of total axis length) would hide labels,
         * that would otherwise be drawn very near end of the Axis.
         *
         * This is especially usefull with `inside = true`, or if the chart hasn't
         * got any extra margins.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param {number}  value  Max label position (0-1)
         */
        set: function (value) {
            this.setPropertyValue("maxLabelPosition", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all settings and related items from another object of the same
     * type.
     *
     * @param {this}  source  Source object
     */
    AxisRenderer.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.grid.template.copyFrom(source.grid.template);
        this.ticks.template.copyFrom(source.ticks.template);
        this.labels.template.copyFrom(source.labels.template);
        this.axisFills.template.copyFrom(source.axisFills.template);
        this.line.copyFrom(source.line);
        this.baseGrid.copyFrom(source.baseGrid);
    };
    return AxisRenderer;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].registeredClasses["AxisRenderer"] = AxisRenderer;
//# sourceMappingURL=AxisRenderer.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js ***!
  \*********************************************************************************/
/*! exports provided: AxisRendererX */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererX", function() { return AxisRendererX; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRenderer */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js");
/* harmony import */ var _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony import */ var _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Module, defining Axis Renderer for vertical axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A renderer for horizontal axis.
 *
 * @see {@link IAxisRendererEvents} for a list of available events
 * @see {@link IAxisRendererAdapters} for a list of available Adapters
 */
var AxisRendererX = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisRendererX, _super);
    /**
     * Constructor.
     *
     * @param {Axis} axis Related axis
     */
    function AxisRendererX() {
        var _this = _super.call(this) || this;
        _this.className = "AxisRendererX";
        _this.minGridDistance = 120;
        _this.opposite = false;
        _this.rotation = 0;
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.labels.template.horizontalCenter = "middle";
        _this.applyTheme();
        return _this;
    }
    /**
    * @ignore
    */
    AxisRendererX.prototype.setAxis = function (axis) {
        _super.prototype.setAxis.call(this, axis);
        axis.layout = "vertical";
    };
    /**
     * Called when rendered is attached to an Axis, as well as a property of
     * Axis that might affect the appearance is updated.
     *
     * E.g. `axis.opposite`, `axis.inside`, etc.
     *
     * This method is called **before** draw, so that any related setting
     * changed in this method can be changed.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.processRenderer = function () {
        _super.prototype.processRenderer.call(this);
        // can not do this in init, as axis is set later
        var axis = this.axis;
        if (axis) {
            axis.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
            // @todo Is thi sneeded?
            this.line;
            var title = axis.title;
            title.rotation = 0;
            title.align = "center";
            if (this.opposite) {
                this.line.toFront();
                title.toBack();
            }
            else {
                title.toFront();
                this.line.toBack();
            }
        }
    };
    /**
     * Updates some of the Axis tooltip's visual properties, related to
     * rendering of the Axis.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.updateTooltip = function () {
        var axis = this.axis;
        if (axis) {
            var bigNum = 1000;
            var bbx = this.line.pixelX;
            var bby = this.line.pixelY;
            var bbw = this.axisLength;
            var bbh = bigNum;
            // top
            if (this.opposite) {
                if (!this.inside) {
                    bby = -bigNum;
                    bbh = bigNum;
                }
            }
            // bottom
            else {
                if (this.inside) {
                    bby = -bigNum;
                    bbh = bigNum;
                }
            }
            this.axis.updateTooltip("vertical", { x: bbx, y: bby, width: bbw, height: bbh });
        }
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param {AxisLabel}  label        Label element
     * @param {number}     position     Starting position
     * @param {number}     endPosition  Ending position
     */
    AxisRendererX.prototype.updateLabelElement = function (label, position, endPosition, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](location)) {
            location = label.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        label.isMeasured = !label.inside;
        if (!this.opposite && label.inside) {
            if (label.rotation == 0) {
                label.verticalCenter = "bottom";
            }
        }
        else {
            if (label.rotation == 0) {
                label.verticalCenter = "top";
            }
        }
        this.positionItem(label, point);
        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);
    };
    Object.defineProperty(AxisRendererX.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return {number} Length (px)
         */
        get: function () {
            var axis = this.axis;
            return (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param  {number}  position  Position (0-1)
     * @return {IPoint}            Point
     */
    AxisRendererX.prototype.positionToPoint = function (position) {
        return { x: this.positionToCoordinate(position), y: 0 };
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @param  {IPoint}  point  Point
     * @return {number}         Position (0-1)
     */
    AxisRendererX.prototype.pointToPosition = function (point) {
        return this.coordinateToPosition(point.x);
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number}  startPosition  Starting position
     * @param  {number}  endPosition    End position
     * @return {string}                 SVG path
     */
    AxisRendererX.prototype.getPositionRangePath = function (startPosition, endPosition) {
        var x1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](this.positionToCoordinate(startPosition), 0, this.axisLength);
        var x2 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](this.positionToCoordinate(endPosition), 0, this.axisLength);
        var w = Math.abs(x2 - x1);
        var h = this.getHeight();
        var x = Math.min(x1, x2);
        var y = 0;
        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["rectToPath"]({
            x: x,
            y: y,
            width: w,
            height: h
        }, true);
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param {AxisBreak} axisBreak Break element
     */
    AxisRendererX.prototype.updateBreakElement = function (axisBreak) {
        _super.prototype.updateBreakElement.call(this, axisBreak);
        var startLine = axisBreak.startLine;
        var endLine = axisBreak.endLine;
        var fillShape = axisBreak.fillShape;
        var startPoint = axisBreak.startPoint;
        var endPoint = axisBreak.endPoint;
        var y1 = axisBreak.pixelMarginLeft;
        var y2 = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;
        startPoint.x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](startPoint.x, -1, this.pixelWidth + 1);
        endPoint.x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](endPoint.x, -1, this.pixelWidth + 1);
        if (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.pixelWidth)) {
            axisBreak.fillShape.__disabled = true;
        }
        else {
            axisBreak.fillShape.__disabled = false;
        }
        startLine.y = y1;
        startLine.width = 0;
        startLine.height = y2;
        endLine.y = y1;
        endLine.width = 0;
        endLine.height = y2;
        fillShape.height = y2;
        fillShape.width = Math.abs(endPoint.x - startPoint.x);
        fillShape.y = y1;
        fillShape.x = startPoint.x;
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param {Grid}    grid         Grid element
     * @param {number}  position     Starting position
     * @param {number}  endPosition  End position
     */
    AxisRendererX.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: 0, y: this.getHeight() });
        this.positionItem(grid, point);
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param {AxisTick}  tick         Tick element
     * @param {number}    position     Starting position
     * @param {number}    endPosition  End position
     */
    AxisRendererX.prototype.updateTickElement = function (tick, position, endPosition) {
        position = position + (endPosition - position) * tick.location;
        var point = this.positionToPoint(position);
        var tickLength = tick.length;
        if (this.opposite) {
            point.y = 0;
            tickLength *= (tick.inside ? 1 : -1);
        }
        else {
            point.y = this.gridContainer.pixelHeight;
            tickLength *= (tick.inside ? -1 : 1);
        }
        tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: 0, y: tickLength });
        this.positionItem(tick, point);
        this.toggleVisibility(tick, position, 0, 1);
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.updateAxisLine = function () {
        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: this.axisLength, y: 0 });
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.updateBaseGridElement = function () {
        _super.prototype.updateBaseGridElement.call(this);
        var axis = this.axis;
        var h = this.getHeight();
        var w = this.getWidth();
        var baseGrid = this.baseGrid;
        var x = axis.basePoint.x;
        if (x < 0 || x > w) {
            baseGrid.hide(0);
        }
        else {
            var y = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"]({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;
            baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: 0, y: h });
            baseGrid.moveTo({ x: x, y: y });
            baseGrid.show(0);
        }
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param {AxisBreak} axisBreak Axis break
     */
    AxisRendererX.prototype.createBreakSprites = function (axisBreak) {
        axisBreak.startLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__["WavedLine"]();
        axisBreak.endLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__["WavedLine"]();
        var wavedRectangle = new _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_3__["WavedRectangle"]();
        wavedRectangle.setWavedSides(false, true, false, true);
        axisBreak.fillShape = wavedRectangle;
    };
    return AxisRendererX;
}(_AxisRenderer__WEBPACK_IMPORTED_MODULE_1__["AxisRenderer"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["AxisRendererX"] = AxisRendererX;
//# sourceMappingURL=AxisRendererX.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js ***!
  \*********************************************************************************/
/*! exports provided: AxisRendererY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererY", function() { return AxisRendererY; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRenderer */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js");
/* harmony import */ var _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony import */ var _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Module, defining Axis Renderer for vertical axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A renderer for vertical axis.
 *
 * @see {@link IAxisRendererYEvents} for a list of available events
 * @see {@link IAxisRendererYAdapters} for a list of available Adapters
 */
var AxisRendererY = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisRendererY, _super);
    /**
     * Constructor.
     *
     * @param {Axis} axis Related axis
     */
    function AxisRendererY() {
        var _this = _super.call(this) || this;
        _this.className = "AxisRendererY";
        _this.minGridDistance = 40;
        _this.opposite = false;
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.labels.template.verticalCenter = "middle";
        _this.applyTheme();
        return _this;
    }
    /**
    * @ignore
    */
    AxisRendererY.prototype.setAxis = function (axis) {
        _super.prototype.setAxis.call(this, axis);
        axis.layout = "horizontal";
    };
    /**
     * Called when rendered is attached to an Axis, as well as a property of
     * Axis that might affect the appearance is updated.
     *
     * E.g. `axis.opposite`, `axis.inside`, etc.
     *
     * This method is called **before** draw, so that any related setting
     * changed in this method can be changed.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.processRenderer = function () {
        _super.prototype.processRenderer.call(this);
        var axis = this.axis;
        if (axis) {
            var title = axis.title;
            title.valign = "middle";
            axis.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
            if (this.opposite) {
                title.rotation = 90;
                this.line.toBack();
                title.toFront();
            }
            else {
                title.rotation = -90;
                title.toBack();
                this.line.toFront();
            }
        }
    };
    /**
     * Updates some of the Axis tooltip's visual properties, related to
     * rendering of the Axis.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.updateTooltip = function () {
        var axis = this.axis;
        if (axis) {
            var bigNum = 2000;
            var bbx = 0;
            var bby = 0;
            var bbw = bigNum;
            var bbh = this.axisLength;
            // right
            if (this.opposite) {
                if (this.inside) {
                    bbx = -bigNum;
                    bbw = bigNum;
                }
            }
            // left
            else {
                if (!this.inside) {
                    bbx = -bigNum;
                    bbw = bigNum;
                }
            }
            this.axis.updateTooltip("horizontal", { x: bbx, y: bby, width: bbw, height: bbh });
        }
    };
    Object.defineProperty(AxisRendererY.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return {number} Length (px)
         */
        get: function () {
            var axis = this.axis;
            return (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param  {number}  position  Position (0-1)
     * @return {IPoindt}            Point
     */
    AxisRendererY.prototype.positionToPoint = function (position) {
        return { x: 0, y: this.positionToCoordinate(position) };
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @param  {IPoint}  point  Point
     * @return {number}         Position (0-1)
     */
    AxisRendererY.prototype.pointToPosition = function (point) {
        return this.coordinateToPosition(point.y);
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number}  startPosition  Starting position
     * @param  {number}  endPosition    End position
     * @return {string}                 SVG path
     */
    AxisRendererY.prototype.getPositionRangePath = function (startPosition, endPosition) {
        var y1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](this.positionToCoordinate(startPosition), 0, this.axisLength);
        var y2 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](this.positionToCoordinate(endPosition), 0, this.axisLength);
        var h = Math.abs(y2 - y1);
        var w = this.getWidth();
        var y = Math.min(y1, y2);
        var x = 0;
        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["rectToPath"]({
            x: x,
            y: y,
            width: w,
            height: h
        }, true);
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param {Grid}    grid         Grid element
     * @param {number}  position     Starting position
     * @param {number}  endPosition  End position
     */
    AxisRendererY.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: this.getWidth(), y: 0 });
        this.positionItem(grid, point);
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param {AxisTick}  tick         Tick element
     * @param {number}    position     Starting position
     * @param {number}    endPosition  End position
     */
    AxisRendererY.prototype.updateTickElement = function (tick, position, endPosition) {
        var point = this.positionToPoint(position);
        var tickLength = tick.length;
        var titleWidth = 0;
        try {
            titleWidth = this.axis.title.measuredWidth;
        }
        catch (_a) {
            // void
        }
        if (!this.opposite) {
            tickLength *= (tick.inside ? 1 : -1);
            point.x = 0;
        }
        else {
            point.x = this.gridContainer.pixelWidth;
            tickLength *= (tick.inside ? -1 : 1);
        }
        tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: tickLength, y: 0 });
        this.positionItem(tick, point);
        this.toggleVisibility(tick, position, 0, 1);
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.updateAxisLine = function () {
        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: 0, y: this.axisLength });
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.updateBaseGridElement = function () {
        _super.prototype.updateBaseGridElement.call(this);
        var axis = this.axis;
        var w = this.getWidth();
        var h = this.getHeight();
        var y = axis.basePoint.y;
        var baseGrid = this.baseGrid;
        if (y < 0 || y > h) {
            baseGrid.hide(0);
        }
        else {
            var x = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"]({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;
            baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: w, y: 0 });
            baseGrid.moveTo({ x: x, y: y });
            baseGrid.show(0);
        }
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param {AxisLabel}  label        Label element
     * @param {number}     position     Starting position
     * @param {number}     endPosition  Ending position
     */
    AxisRendererY.prototype.updateLabelElement = function (label, position, endPosition, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](location)) {
            location = label.location;
        }
        position = position + (endPosition - position) * location;
        label.isMeasured = !label.inside;
        var point = this.positionToPoint(position);
        var horizontalCenter;
        var deltaX = 0;
        if (this.opposite) {
            if (label.inside) {
                horizontalCenter = "right";
            }
            else {
                horizontalCenter = "left";
            }
            if (label.inside) {
                if (label.align == "left") {
                    deltaX = -this.gridContainer.maxWidth;
                    horizontalCenter = "left";
                }
            }
            point.x = 0 + deltaX;
        }
        else {
            if (label.inside) {
                horizontalCenter = "left";
            }
            else {
                horizontalCenter = "right";
            }
            if (label.inside) {
                if (label.align == "right") {
                    deltaX = this.gridContainer.maxWidth;
                    horizontalCenter = "right";
                }
            }
            point.x = this.measuredWidth + deltaX;
        }
        label.horizontalCenter = horizontalCenter;
        this.positionItem(label, point);
        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param {AxisBreak} axisBreak Break element
     */
    AxisRendererY.prototype.updateBreakElement = function (axisBreak) {
        _super.prototype.updateBreakElement.call(this, axisBreak);
        var startLine = axisBreak.startLine;
        var endLine = axisBreak.endLine;
        var fillShape = axisBreak.fillShape;
        var startPoint = axisBreak.startPoint;
        var endPoint = axisBreak.endPoint;
        var x1 = axisBreak.pixelMarginLeft;
        var x2 = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;
        startPoint.y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](startPoint.y, -1, this.pixelHeight + 1);
        endPoint.y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](endPoint.y, -1, this.pixelHeight + 1);
        if (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.pixelHeight)) {
            axisBreak.fillShape.__disabled = true;
        }
        else {
            axisBreak.fillShape.__disabled = false;
        }
        var w = Math.abs(x2 - x1);
        startLine.x = x1;
        startLine.height = 0;
        startLine.width = w;
        endLine.x = x1;
        endLine.height = 0;
        endLine.width = w;
        fillShape.width = w;
        fillShape.height = Math.abs(endPoint.y - startPoint.y);
        fillShape.x = x1;
        fillShape.y = endPoint.y;
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param {AxisBreak} axisBreak Axis break
     */
    AxisRendererY.prototype.createBreakSprites = function (axisBreak) {
        axisBreak.startLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__["WavedLine"]();
        axisBreak.endLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__["WavedLine"]();
        var wavedRectangle = new _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_3__["WavedRectangle"]();
        wavedRectangle.setWavedSides(true, false, true, false);
        axisBreak.fillShape = wavedRectangle;
    };
    /**
     * Converts a position on the axis to a coordinate in pixels.
     *
     * @ignore Exclude from docs
     * @param  {number}  position  Position (0-1)
     * @return {number}            Coordinate (px)
     */
    AxisRendererY.prototype.positionToCoordinate = function (position) {
        var coordinate;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (!axis.renderer.inversed) {
            coordinate = (axis.end - position) * axisFullLength;
        }
        else {
            coordinate = (position - axis.start) * axisFullLength;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](coordinate, 1);
    };
    return AxisRendererY;
}(_AxisRenderer__WEBPACK_IMPORTED_MODULE_1__["AxisRenderer"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["AxisRendererY"] = AxisRendererY;
//# sourceMappingURL=AxisRendererY.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js ***!
  \****************************************************************************/
/*! exports provided: AxisTick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTick", function() { return AxisTick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Tick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Axis Tick module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws an axis tick
 * @see {@link IAxisTickEvents} for a list of available events
 * @see {@link IAxisTickAdapters} for a list of available Adapters
 */
var AxisTick = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisTick, _super);
    function AxisTick() {
        var _this = _super.call(this) || this;
        _this.className = "AxisTick";
        _this.element = _this.paper.add("path");
        _this.location = 0.5;
        _this.isMeasured = false;
        _this.pixelPerfect = true;
        _this.strokeOpacity = 0;
        _this.length = 5;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisTick.prototype, "location", {
        get: function () {
            return this.getPropertyValue("location");
        },
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisTick.prototype, "inside", {
        get: function () {
            return this.getPropertyValue("inside");
        },
        set: function (value) {
            this.setPropertyValue("inside", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    AxisTick.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return AxisTick;
}(_elements_Tick__WEBPACK_IMPORTED_MODULE_1__["Tick"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisTick"] = AxisTick;
//# sourceMappingURL=AxisTick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js ***!
  \************************************************************************/
/*! exports provided: Grid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * A module defining functionality for axis grid elements.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Displays an axis grid line.
 *
 * @see {@link IGridEvents} for a list of available events
 * @see {@link IGridAdapters} for a list of available Adapters
 * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements
 * @important
 */
var Grid = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Grid, _super);
    /**
     * Constructor
     */
    function Grid() {
        var _this = _super.call(this) || this;
        _this.className = "Grid";
        _this.element = _this.paper.add("path");
        _this.location = 0.5;
        _this.isMeasured = false;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("grid");
        _this.pixelPerfect = true;
        _this.strokeOpacity = 0.15;
        _this.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_3__["color"])(); // "none";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Grid.prototype, "location", {
        /**
         * @return {AxisItemLocation} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Location within axis cell to place grid line on.
         *
         * * 0 - start
         * * 0.5 - middle
         * * 1 - end
         *
         * @param {AxisItemLocation}  value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    Grid.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return Grid;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Grid"] = Grid;
//# sourceMappingURL=Grid.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js ***!
  \*****************************************************************************/
/*! exports provided: ValueAxisDataItem, ValueAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueAxisDataItem", function() { return ValueAxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueAxis", function() { return ValueAxis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Axis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js");
/* harmony import */ var _AxisRendererY__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _ValueAxisBreak__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ValueAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * Value Axis module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[ValueAxis]].
 *
 * @see {@link DataItem}
 */
var ValueAxisDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ValueAxisDataItem, _super);
    /**
     * Constructor
     */
    function ValueAxisDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ValueAxisDataItem";
        _this.values.value = {};
        _this.values.endValue = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ValueAxisDataItem.prototype, "value", {
        /**
         * @return {number} Value
         */
        get: function () {
            return this.values["value"].value;
        },
        /**
         * A data point's numeric value.
         *
         * @param {number}  value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxisDataItem.prototype, "endValue", {
        /**
         * @return {number} Value
         */
        get: function () {
            return this.values["endValue"].value;
        },
        /**
         * Data point's numeric end value.
         *
         * @param {number}  value  End value
         */
        set: function (value) {
            this.setValue("endValue", value);
        },
        enumerable: true,
        configurable: true
    });
    return ValueAxisDataItem;
}(_Axis__WEBPACK_IMPORTED_MODULE_1__["AxisDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to create a value axis for the chart.
 *
 * ```TypeScript
 * // Create the axis
 * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Monthly Sales";
 * ```
 * ```JavaScript
 * // Create the axis
 * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Monthly Sales";
 * ```
 * ```JSON
 * "yAxes": [{
 *   "type": "ValueAxis",
 *   "title": {
 *     "text": "Monthly Sales"
 *   }
 * }]
 * ```
 *
 * @see {@link IValueAxisEvents} for a list of available Events
 * @see {@link IValueAxisAdapters} for a list of available Adapters
 * @important
 */
var ValueAxis = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ValueAxis, _super);
    /**
     * Constructor
     */
    function ValueAxis() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * [_stepDecimalPlaces description]
         *
         * @todo Description
         * @type {number}
         */
        _this._stepDecimalPlaces = 0;
        /**
         * Base value for the axis.
         *
         * @type {number}
         */
        _this._baseValue = 0;
        /**
         * Adjusted start in case we have breaks.
         *
         * @todo Description
         * @type {number}
         */
        _this._adjustedStart = 0;
        /**
         * Adjusted end in case we have breaks.
         *
         * @todo Description
         * @type {number}
         */
        _this._adjustedEnd = 1;
        _this._extremesChanged = false;
        /**
         * As calculating totals is expensive operation and not often needed, we
         * don't do it by default.
         *
         * In case you use `totalPercent` or `total` in your charts, this must be set
         * to `true`.
         *
         * @default false
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.
         * @type {boolean}
         */
        _this.calculateTotals = false;
        _this.className = "ValueAxis";
        // Set field name
        _this.axisFieldName = "value";
        // Set defaults
        _this.setPropertyValue("maxZoomFactor", 1000);
        _this.setPropertyValue("extraMin", 0);
        _this.setPropertyValue("extraMax", 0);
        _this.setPropertyValue("strictMinMax", false);
        _this.setPropertyValue("maxPrecision", Number.MAX_VALUE);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Holds reference to a function that accepts a DataItem as parameter.
     *
     * It can either return a fill opacity for a fill, or manipulate data item
     * directly, to create various highlighting scenarios.
     *
     * @todo type
     */
    ValueAxis.prototype.fillRule = function (dataItem) {
        var value = dataItem.value;
        var axis = dataItem.component;
        if (!dataItem.axisFill.disabled) {
            // rounding in left to solve floating point number
            if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {
                dataItem.axisFill.__disabled = true;
            }
            else {
                dataItem.axisFill.__disabled = false;
            }
        }
    };
    /**
     * Returns a new/empty [[DataItem]] of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {ValueAxisDataItem} Data Item
     */
    ValueAxis.prototype.createDataItem = function () {
        return new ValueAxisDataItem();
    };
    /**
     * Returns a new/empty [[AxisBreak]] of the appropriate type.
     *
     * @return {ValueAxisBreak} Axis break
     */
    ValueAxis.prototype.createAxisBreak = function () {
        return new _ValueAxisBreak__WEBPACK_IMPORTED_MODULE_5__["ValueAxisBreak"]();
    };
    /**
     * [dataChangeUpdate description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    ValueAxis.prototype.dataChangeUpdate = function () {
        this._start = 0;
        this._end = 1;
        this._maxZoomed = this._maxDefined;
        this._minZoomed = this._minDefined;
        this._maxAdjusted = this._maxDefined;
        this._minAdjusted = this._minDefined;
    };
    /**
     * Processes data items of the related Series.
     *
     * @ignore Exclude from docs
     */
    ValueAxis.prototype.processSeriesDataItems = function () {
        // @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu
        if (this.calculateTotals) {
            var series = this.series.getIndex(0);
            var startIndex = series.startIndex;
            if (series.dataItems.length > 0) {
                if (startIndex > 0) {
                    startIndex--;
                }
                var endIndex = series.endIndex;
                if (endIndex < series.dataItems.length) {
                    endIndex++;
                }
                // This has to be `var` in order to avoid garbage collection
                for (var i = startIndex; i < endIndex; ++i) {
                    // This has to be `var` in order to avoid garbage collection
                    var total = {};
                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.series.iterator(), function (series) {
                        var dataItem = series.dataItems.getIndex(i);
                        if (dataItem) {
                            _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](dataItem.values, function (key) {
                                var value = dataItem.values[key].workingValue; // can not use getWorkingValue here!
                                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
                                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](total[key])) {
                                        total[key] = value;
                                    }
                                    else {
                                        total[key] += value;
                                    }
                                }
                            });
                        }
                    });
                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.series.iterator(), function (series) {
                        var dataItem = series.dataItems.getIndex(i);
                        if (dataItem) {
                            _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](dataItem.values, function (key) {
                                var value = dataItem.values[key].workingValue; // can not use getWorkingValue here!
                                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
                                    dataItem.setCalculatedValue(key, total[key], "total");
                                    dataItem.setCalculatedValue(key, 100 * value / total[key], "totalPercent");
                                }
                            });
                        }
                    });
                }
            }
        }
    };
    /**
     * Validates the whole axis. Causes it to redraw.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    ValueAxis.prototype.validate = function () {
        if (this.axisLength <= 0) {
            return;
        }
        _super.prototype.validate.call(this);
        this.getMinMax();
        this.fixAxisBreaks();
        this.calculateZoom();
        this.validateAxisElements();
        this.validateAxisRanges();
        this.validateBreaks();
        this.hideUnusedDataItems();
        this.renderer.invalidateLayout();
        // hide too close
        //this.hideTooCloseDataItems();
    };
    /**
     * Calculates all positions, related to axis as per current zoom.
     *
     * @ignore Exclude from docs
     */
    ValueAxis.prototype.calculateZoom = function () {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.max)) {
            var min = this.positionToValue(this.start);
            var max = this.positionToValue(this.end);
            var differece = this.adjustDifference(min, max);
            var minMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);
            min = minMaxStep.min;
            max = minMaxStep.max;
            this._adjustedStart = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"]((min - this.min) / (this.max - this.min), 5);
            this._adjustedEnd = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"]((max - this.min) / (this.max - this.min), 5);
            this._step = minMaxStep.step;
            this._stepDecimalPlaces = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__["decimalPlaces"](this._step);
            if (this._minZoomed != min || this._maxZoomed != max) {
                this._minZoomed = min;
                this._maxZoomed = max;
                this.dispatchImmediately("selectionextremeschanged");
            }
        }
        else {
            this._adjustedStart = this.start;
            this._adjustedEnd = this.end;
        }
    };
    /**
     * Validates Axis elements.
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    ValueAxis.prototype.validateAxisElements = function () {
        var _this = this;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.min)) {
            // first regular items
            var value_1 = this.minZoomed - this._step * 2;
            if (!this.logarithmic) {
                value_1 = Math.floor(value_1 / this._step) * this._step;
            }
            else {
                var differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;
                if (differencePower > 1) {
                    value_1 = Math.pow(10, Math.log(this.min) * Math.LOG10E);
                }
                else {
                    value_1 = Math.floor(this.minZoomed / this._step) * this._step;
                }
            }
            var maxZoomed = this._maxZoomed + this._step;
            this.resetIterators();
            var dataItemsIterator_1 = this._dataItemsIterator;
            var i = 0;
            while (value_1 <= maxZoomed) {
                var axisBreak = this.isInBreak(value_1);
                if (!axisBreak) {
                    var dataItem = dataItemsIterator_1.find(function (x) { return x.value === value_1; });
                    //this.processDataItem(dataItem);
                    this.appendDataItem(dataItem);
                    dataItem.axisBreak = undefined;
                    if (dataItem.value != value_1) {
                        dataItem.value = value_1;
                        dataItem.text = this.formatLabel(value_1);
                        if (dataItem.label && dataItem.label.invalid) {
                            dataItem.label.validate();
                        }
                        if (dataItem.value > this.min && dataItem.value < this.max) {
                            if (dataItem.label && (dataItem.label.measuredWidth > this.ghostLabel.measuredWidth || dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {
                                this.ghostLabel.text = dataItem.label.text;
                            }
                        }
                    }
                    this.validateDataElement(dataItem);
                }
                i++;
                if (!this.logarithmic) {
                    value_1 += this._step;
                }
                else {
                    var differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;
                    if (differencePower > 1) {
                        value_1 = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);
                    }
                    else {
                        value_1 += this._step;
                    }
                }
            }
            var axisBreaks = this.axisBreaks;
            // breaks later
            var renderer_1 = this.renderer;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](axisBreaks.iterator(), function (axisBreak) {
                if (axisBreak.breakSize > 0) {
                    // only add grid if gap is bigger then minGridDistance
                    if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["getDistance"](axisBreak.startPoint, axisBreak.endPoint) > renderer_1.minGridDistance) {
                        var breakValue_1 = axisBreak.adjustedMin;
                        while (breakValue_1 <= axisBreak.adjustedMax) {
                            if (breakValue_1 >= axisBreak.adjustedStartValue && breakValue_1 <= axisBreak.adjustedEndValue) {
                                var dataItem = dataItemsIterator_1.find(function (x) { return x.value === breakValue_1; });
                                //this.processDataItem(dataItem);
                                _this.appendDataItem(dataItem);
                                dataItem.axisBreak = axisBreak;
                                if (dataItem.value != breakValue_1) {
                                    dataItem.value = breakValue_1;
                                    dataItem.text = _this.formatLabel(breakValue_1);
                                    if (dataItem.label && dataItem.label.invalid) {
                                        dataItem.label.validate();
                                    }
                                }
                                _this.validateDataElement(dataItem);
                            }
                            breakValue_1 += axisBreak.adjustedStep;
                        }
                    }
                }
            });
        }
    };
    /**
     * Validates axis data item.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param {ValueAxisDataItem}  dataItem  Data item
     */
    ValueAxis.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        //dataItem.__disabled = false;
        var renderer = this.renderer;
        var value = dataItem.value;
        var endValue = dataItem.endValue;
        var position = this.valueToPosition(value);
        dataItem.position = position;
        var endPosition = position;
        var fillEndPosition = this.valueToPosition(value + this._step);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](endValue)) {
            endPosition = this.valueToPosition(endValue);
            fillEndPosition = endPosition;
        }
        // this point is needed to calculate distance to satisfy minGridDistance
        dataItem.point = renderer.positionToPoint(position);
        var tick = dataItem.tick;
        if (tick && !tick.disabled) {
            renderer.updateTickElement(tick, position, endPosition);
        }
        var grid = dataItem.grid;
        if (grid && !grid.disabled) {
            renderer.updateGridElement(grid, position, endPosition);
        }
        var label = dataItem.label;
        if (label && !label.disabled) {
            renderer.updateLabelElement(label, position, endPosition);
        }
        var fill = dataItem.axisFill;
        if (fill && !fill.disabled) {
            renderer.updateFillElement(fill, position, fillEndPosition);
            if (!dataItem.isRange) {
                this.fillRule(dataItem);
            }
        }
        var mask = dataItem.mask;
        if (mask) {
            renderer.updateFillElement(mask, position, fillEndPosition);
        }
    };
    /**
     * Formats the value according to axis' own [[NumberFormatter]].
     *
     * @param  {number}  value  Source value
     * @return {string}         Formatted value
     */
    ValueAxis.prototype.formatLabel = function (value) {
        return this.numberFormatter.format(value);
    };
    Object.defineProperty(ValueAxis.prototype, "basePoint", {
        /**
         * Coordinates of the actual axis start.
         *
         * @ignore Exclude from docs
         * @return {IPoint} Base point
         */
        get: function () {
            var baseValue = this._baseValue;
            var position = this.valueToPosition(baseValue);
            var basePoint = this.renderer.positionToPoint(position);
            return basePoint;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "baseValue", {
        /**
         * @return {number} base value
         */
        get: function () {
            if (this.logarithmic) {
                return this.min;
            }
            else {
                return this._baseValue;
            }
        },
        /**
         * A base value.
         *
         * This is a threshold value that will divide "positive" and "negative"
         * value ranges.
         *
         * Other scale-related functionality also depend on base value. E.g. stacks,
         * value-dependent coloring, etc.
         *
         * @param {number} value Base value
         */
        set: function (value) {
            this._baseValue = value;
            this.invalidateLayout();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a numeric value to relative position on axis
     *
     * An alias to `valueToPosition()`.
     *
     * @param  {number}  value  Value
     * @return {number}         Position
     */
    ValueAxis.prototype.anyToPosition = function (value) {
        return this.valueToPosition(value);
    };
    /**
     * Converts a numeric value to orientation point (x, y, angle) on axis
     *
     * @param  {number}  value  Value
     * @return {IOrientationPoint}  Orientation point
     */
    ValueAxis.prototype.valueToPoint = function (value) {
        var position = this.valueToPosition(value);
        var point = this.renderer.positionToPoint(position);
        var angle = this.renderer.positionToAngle(position);
        return { x: point.x, y: point.y, angle: angle };
    };
    /**
     * Converts a numeric value to orientation (x, y, angle) point on axis
     *
     * @param  {number}  value  Value
     * @return {IOrientationPoint}  Orientation point
     */
    ValueAxis.prototype.anyToPoint = function (value) {
        return this.valueToPoint(value);
    };
    /**
     * Converts a numeric value to relative position on axis.
     *
     * @param  {number}  value  Value
     * @return {number}  relative position
     */
    ValueAxis.prototype.valueToPosition = function (value) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            // todo: think if possible to take previous value and do not go through all previous breaks
            var min_1 = this.min;
            var max_1 = this.max;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min_1) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max_1)) {
                var difference = this._difference;
                var axisBreaks = this.axisBreaks;
                if (axisBreaks.length > 0) {
                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["eachContinue"](axisBreaks.iterator(), function (axisBreak) {
                        var startValue = axisBreak.adjustedStartValue;
                        var endValue = axisBreak.adjustedEndValue;
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](startValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](endValue)) {
                            if (value < startValue) {
                                return false;
                            }
                            if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["intersect"]({ start: startValue, end: endValue }, { start: min_1, end: max_1 })) { // todo: check this once and set some flag in axisBreak
                                startValue = Math.max(startValue, min_1);
                                endValue = Math.min(endValue, max_1);
                                var breakSize = axisBreak.breakSize;
                                // value to the right of break end
                                if (value > endValue) {
                                    min_1 += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?
                                }
                                // value to the left of break start
                                else if (value < startValue) {
                                }
                                // value within break
                                else {
                                    value = startValue + (value - startValue) * breakSize;
                                }
                            }
                        }
                        return true;
                    });
                }
                var position = void 0;
                if (!this.logarithmic) {
                    position = (value - min_1) / difference;
                }
                else {
                    position = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));
                }
                //position = $math.round(position, 10);
                return position;
            }
        }
        return 0;
    };
    /**
     * Converts an relative position to a corresponding value within
     * axis' scale.
     *
     * @param  {number}  position  Position (px)
     * @return {number}            Value
     */
    ValueAxis.prototype.positionToValue = function (position) {
        position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](position, 10);
        var strPosition = position.toString();
        var min = this.min;
        var max = this.max;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            var difference_1 = max - min; //no need to adjust!
            var axisBreaks = this.axisBreaks;
            var value_2 = null;
            // in case we have some axis breaks
            if (axisBreaks.length > 0) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["eachContinue"](axisBreaks.iterator(), function (axisBreak) {
                    var breakStartPosition = axisBreak.startPosition;
                    var breakEndPosition = axisBreak.endPosition;
                    var breakStartValue = axisBreak.adjustedStartValue;
                    var breakEndValue = axisBreak.adjustedEndValue;
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](breakStartValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](breakEndValue)) {
                        if (breakStartValue > max) {
                            return false;
                        }
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["intersect"]({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {
                            breakStartValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](breakStartValue, min);
                            breakEndValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](breakEndValue, max);
                            var breakSize = axisBreak.breakSize;
                            difference_1 -= (breakEndValue - breakStartValue) * (1 - breakSize);
                            // position to the right of break end
                            if (position > breakEndPosition) {
                                min += (breakEndValue - breakStartValue) * (1 - breakSize);
                            }
                            // position to the left of break start
                            else if (position < breakStartPosition) {
                            }
                            // value within break
                            else {
                                var breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);
                                value_2 = breakStartValue + breakPosition * (breakEndValue - breakStartValue);
                                return false;
                            }
                        }
                        return true;
                    }
                });
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value_2)) {
                value_2 = position * difference_1 + min;
            }
            return value_2;
        }
        //}
    };
    /**
     * Converts an X coordinate to a relative value in axis' scale.
     *
     * @param  {number}  x  X (px)
     * @return {number}     Value
     */
    ValueAxis.prototype.xToValue = function (x) {
        return this.positionToValue(this.pointToPosition({ x: x, y: 0 }));
    };
    /**
     * Converts an Y coordinate to a relative value in axis' scale.
     *
     * @param  {number}  y  Y (px)
     * @return {number}     Value
     */
    ValueAxis.prototype.yToValue = function (y) {
        return this.positionToValue(this.pointToPosition({ x: 0, y: y }));
    };
    /**
     * Converts pixel coordinates to a relative position. (0-1)
     *
     * @param {IPoint}   point  Coorinates (px)
     * @return {number}         Position (0-1)
     */
    ValueAxis.prototype.pointToPosition = function (point) {
        if (this.renderer instanceof _AxisRendererY__WEBPACK_IMPORTED_MODULE_2__["AxisRendererY"]) {
            return 1 - this.renderer.pointToPosition(point);
        }
        else {
            return this.renderer.pointToPosition(point);
        }
    };
    /**
     * Calculates smallest and biggest value for the axis scale.
     *
     * @todo Description (review)
     */
    ValueAxis.prototype.getMinMax = function () {
        var _this = this;
        this.updateGridCount();
        var min = Number.POSITIVE_INFINITY;
        var max = Number.NEGATIVE_INFINITY;
        // only if min and max are not set from outside, we go through min and max influencers
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.series.iterator(), function (series) {
                if (!series.ignoreMinMax) {
                    // check min
                    var seriesMin = series.min(_this);
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesMin) && (seriesMin < min)) {
                        min = seriesMin;
                    }
                    // check max
                    var seriesMax = series.max(_this);
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesMax) && (seriesMax > max)) {
                        max = seriesMax;
                    }
                }
            });
        }
        if (this.logarithmic) {
            if (min <= 0) {
                throw Error("Logarithmic value axis can not have vales <= 0.");
            }
        }
        if (min == 0 && max == 0) {
            max = 0.9;
            min = -0.9;
        }
        // if defined from outside
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined)) {
            min = this._minDefined;
        }
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            max = this._maxDefined;
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            return;
        }
        this._minReal = min;
        this._maxReal = max;
        if (min == Number.POSITIVE_INFINITY) {
            min = undefined;
        }
        if (max == Number.NEGATIVE_INFINITY) {
            max = undefined;
        }
        var dif = this.adjustDifference(min, max); // previously it was max-min, but not worked well
        min = this.fixMin(min);
        max = this.fixMax(max);
        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date
        if (min == max) {
            min -= 1;
            max += 1;
        }
        min -= (max - min) * this.extraMin;
        max += (max - min) * this.extraMax;
        var minMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, this.strictMinMax);
        min = minMaxStep.min;
        max = minMaxStep.max;
        dif = max - min; //new
        // do it for the second time (importat!)
        minMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);
        min = minMaxStep.min;
        max = minMaxStep.max;
        // return min max if strict
        if (this.strictMinMax) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined)) {
                min = this._minDefined;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
                max = this._maxDefined;
            }
        }
        // checking isNumber is good when all series are hidden
        if ((this._minAdjusted != min || this._maxAdjusted != max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            var animation = this._minMaxAnimation;
            if (this._extremesChanged && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minAdjusted) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxAdjusted) && this.inited) {
                if ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {
                    return;
                }
                else {
                    this._finalMin = min;
                    this._finalMax = max;
                    animation = this.animate([{ property: "_minAdjusted", from: this._minAdjusted, to: min }, { property: "_maxAdjusted", from: this._maxAdjusted, to: max }], this.rangeChangeDuration);
                    animation.events.on("animationprogress", this.validateDataItems, this);
                    animation.events.on("animationended", function () {
                        _this.validateDataItems();
                        _this.handleSelectionExtremesChange();
                    });
                    this._minMaxAnimation = animation;
                    this.validateDataItems();
                    this.handleSelectionExtremesChange();
                }
            }
            else {
                if ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {
                    return;
                }
                else {
                    this._minAdjusted = min;
                    this._maxAdjusted = max;
                    this._finalMin = min;
                    this._finalMax = max;
                    this.invalidateDataItems();
                    this.dispatchImmediately("extremeschanged");
                }
            }
        }
        this._extremesChanged = false;
        this._difference = this.adjustDifference(min, max);
    };
    /**
     * Adjusts the minimum value.
     *
     * This is a placeholder method for extending classes to override.
     *
     * For numeric values this does nothing, however for more complex types, like
     * dates, it may be necessary to adjust.
     *
     * @param  {number}  value  Value
     * @return {number}         Adjusted value
     */
    ValueAxis.prototype.fixMin = function (value) {
        return value;
    };
    /**
     * Adjusts the maximum value.
     *
     * This is a placeholder method for extending classes to override.
     *
     * For numeric values this does nothing, however for more complex types, like
     * dates, it may be necessary to adjust.
     *
     * @param  {number}  value  Value
     * @return {number}         Adjusted value
     */
    ValueAxis.prototype.fixMax = function (value) {
        return value;
    };
    /**
     * Adjusts actual min and max scale values so that the axis starts and ends
     * at "nice" values, unless `strictMinMax` is set.
     *
     * The `difference` can be something else than `max - min`, because of the
     * axis breaks.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number}      min        [description]
     * @param  {number}      max        [description]
     * @param  {number}      difference [description]
     * @param  {number}      gridCount  [description]
     * @param  {boolean}     strictMode [description]
     * @return {IMinMaxStep}            [description]
     */
    ValueAxis.prototype.adjustMinMax = function (min, max, difference, gridCount, strictMode) {
        // will fail if 0
        if (gridCount <= 1) {
            gridCount = 1;
        }
        gridCount = Math.round(gridCount);
        var initialMin = min;
        var initialMax = max;
        // in case min and max is the same, use max
        if (difference === 0) {
            difference = Math.abs(max);
        }
        // the number by which we need to raise 10 to get difference
        var exponent = Math.log(Math.abs(difference)) * Math.LOG10E;
        // here we find a number which is power of 10 and has the same count of numbers as difference has
        var power = Math.pow(10, Math.floor(exponent));
        // reduce this number by 10 times
        power = power / 10;
        var extra = power;
        if (strictMode) {
            extra = 0;
        }
        if (!this.logarithmic) {
            // round down min
            if (strictMode) {
                min = Math.floor(min / power) * power;
                // round up max
                max = Math.ceil(max / power) * power;
            }
            else {
                min = Math.ceil(min / power) * power - extra;
                // round up max
                max = Math.floor(max / power) * power + extra;
            }
            // don't let min go below 0 if real min is >= 0
            if (min < 0 && initialMin >= 0) {
                min = 0;
            }
            // don't let max go above 0 if real max is <= 0
            if (max > 0 && initialMax <= 0) {
                max = 0;
            }
        }
        else {
            if (min <= 0) {
                //throw Error("Logarithmic value axis can not have vales <= 0.");
                min = this.baseValue;
            }
            // @todo: think of a better way or to restrict zooming when no series are selected
            if (min == Infinity) {
                min = 1;
            }
            if (max == -Infinity) {
                max = 10;
            }
            min = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));
            max = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));
        }
        // repeat diff, exponent and power again with rounded values
        //difference = this.adjustDifference(min, max);
        /*

                if(min > initialMin){
                    min = initialMin;
                }

                if(max < initialMax){
                    max = initialMax;
                }
        */
        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;
        power = Math.pow(10, Math.floor(exponent));
        power = power / 10;
        // approximate difference between two grid lines
        var step = Math.ceil((difference / gridCount) / power) * power;
        var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));
        // TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution
        // the step should divide by  2, 5, and 10.
        var stepDivisor = Math.ceil(step / stepPower); // number 0 - 10
        if (stepDivisor > 5) {
            stepDivisor = 10;
        }
        else if (stepDivisor <= 5 && stepDivisor > 2) {
            stepDivisor = 5;
        }
        // now get real step
        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;
        if (this.maxPrecision < Number.MAX_VALUE && step != _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["ceil"](step, this.maxPrecision)) {
            step = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["ceil"](step, this.maxPrecision);
        }
        var decCount = 0;
        // in case numbers are smaller than 1
        if (stepPower < 1) {
            // exponent is less then 1 too. Count decimals of exponent
            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;
            // round step
            step = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](step, decCount);
        }
        if (!this.logarithmic) {
            // final min and max
            var minCount = Math.floor(min / step);
            min = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](step * minCount, decCount);
            var maxCount = void 0;
            if (!strictMode) {
                maxCount = Math.ceil(max / step);
            }
            else {
                maxCount = Math.floor(max / step);
            }
            if (maxCount == minCount) {
                maxCount++;
            }
            max = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](step * maxCount, decCount);
            if (max < initialMax) {
                max = max + step;
            }
            if (min > initialMin) {
                min = min - step;
            }
        }
        return { min: min, max: max, step: step };
    };
    Object.defineProperty(ValueAxis.prototype, "min", {
        /**
         * @return {number} Min value
         */
        get: function () {
            var min = this._minAdjusted;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min)) {
                min = this._minDefined;
            }
            return min;
        },
        /**
         * A minimum value for the axis scale.
         *
         * This value might be auto-adjusted by the Axis in order to accomodate the
         * grid nicely, i.e. plot area is divided by grid in nice equal cells.
         *
         * The above might be overridden by `strictMinMax` which will force exact
         * user-defined min and max values to be used for scale.
         *
         * @param {number}  value  Min value
         */
        set: function (value) {
            if (this._minDefined != value) {
                this._minDefined = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "extraMin", {
        /**
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("extraMin");
        },
        /**
         * Allows relatively adjusting minimum value of the axis' scale.
         *
         * The value is relative to the actual range of values currently displayed
         * on the axis.
         *
         * E.g.: 0.5 will mean half of the current range. If we have axis displaying
         * from 100 to 200, we will now have axis displaying from 50 to 200 because
         * we asked to expand minimum value by 50% (0.5).
         *
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("extraMin", value)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "extraMax", {
        /**
         * @return {number} Min multiplier
         */
        get: function () {
            return this.getPropertyValue("extraMax");
        },
        /**
         * Allows relatively adjusting maximum value of the axis' scale.
         *
         * The value is relative to the actual range of values currently displayed
         * on the axis.
         *
         * E.g.: 0.5 will mean half of the current range. If we have axis displaying
         * from 100 to 200, we will now have axis displaying from 100 to 250 because
         * we asked to expand maximum value by 50% (0.5).
         *
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("extraMax", value)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "step", {
        /**
         * Current calculated delta in values between two adjacent grid lines (step).
         *
         * This is a read-only value and cannot be used to set actual step.
         *
         * @readonly
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels
         * @return {number} [description]
         */
        get: function () {
            return this._step;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "max", {
        /**
         * @return {number} Max value
         */
        get: function () {
            var max = this._maxAdjusted;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
                max = this._maxDefined;
            }
            return max;
        },
        /**
         * A maximum value for the axis scale.
         *
         * This value might be auto-adjusted by the Axis in order to accomodate the
         * grid nicely, i.e. plot area is divided by grid in nice equal cells.
         *
         * The above might be overridden by `strictMinMax` which will force exact
         * user-defined min and max values to be used for scale.
         *
         * @param {number}  value  Max value
         */
        set: function (value) {
            if (this._maxDefined != value) {
                this._maxDefined = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Used for the Series to register itself as the user of this Axis.
     *
     * This will also decorate both the Series and Axis with event handlers, used
     * to redraw on Axis position/zoom change.
     *
     * A disposer for those events is returned, so that they can be disposed
     * together with Series.
     *
     * @ignore Exclude from docs
     * @param  {XYSeries}   series  Series
     * @return {IDisposer}          Disposer for events
     */
    ValueAxis.prototype.registerSeries = function (series) {
        return new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MultiDisposer"]([
            _super.prototype.registerSeries.call(this, series),
            series.events.on("extremeschanged", this.handleExtremesChange, this, false),
            series.events.on("selectionextremeschanged", this.handleSelectionExtremesChange, this, false),
            this.events.on("extremeschanged", series.invalidate, series, false)
        ]);
    };
    /**
     * Perform tasks after Axis zoom.
     */
    ValueAxis.prototype.handleSelectionExtremesChange = function () {
        var _this = this;
        var selectionMin;
        var selectionMax;
        var allHidden = true;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.series.iterator(), function (series) {
            if (!series.ignoreMinMax) {
                if (series.visible && !series.isHiding) {
                    allHidden = false;
                }
                var seriesSelectionMin = series.selectionMin(_this);
                var seriesSelectionMax = series.selectionMax(_this);
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesSelectionMin)) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](selectionMin) || (seriesSelectionMin < selectionMin)) {
                        selectionMin = seriesSelectionMin;
                    }
                }
                // check max
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesSelectionMax)) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](selectionMax) || (seriesSelectionMax > selectionMax)) {
                        selectionMax = seriesSelectionMax;
                    }
                }
            }
        });
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.series.iterator(), function (series) {
            if (!series.appeared) {
                allHidden = true;
            }
        });
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined)) {
            if (this.strictMinMax) {
                selectionMin = this._minDefined;
            }
            else {
                selectionMin = this.min;
            }
        }
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            if (this.strictMinMax) {
                selectionMax = this._maxDefined;
            }
            else {
                selectionMax = this.max;
            }
        }
        if (selectionMin == selectionMax) {
            selectionMin -= 1;
            selectionMax += 1;
        }
        var dif = this.adjustDifference(selectionMin, selectionMax);
        var minMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);
        selectionMin = minMaxStep.min;
        selectionMax = minMaxStep.max;
        selectionMin -= (selectionMax - selectionMin) * this.extraMin;
        selectionMax += (selectionMax - selectionMin) * this.extraMax;
        selectionMin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](selectionMin, this.min, this.max);
        selectionMax = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](selectionMax, this.min, this.max);
        // do it for the second time !important
        dif = this.adjustDifference(selectionMin, selectionMax);
        minMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);
        selectionMin = minMaxStep.min;
        selectionMax = minMaxStep.max;
        if (this.strictMinMax) {
            selectionMin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](selectionMin, this._minDefined);
            selectionMax = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](selectionMax, this._maxDefined);
        }
        var start = this.valueToPosition(selectionMin);
        var end = this.valueToPosition(selectionMax);
        // in case all series are hidden or hiding, full zoomout
        if (allHidden) {
            start = 0;
            end = 1;
        }
        this.zoom({ start: start, end: end }, false, false, 0);
    };
    Object.defineProperty(ValueAxis.prototype, "strictMinMax", {
        /**
         * @return {boolean} Use exact values?
         */
        get: function () {
            return this.getPropertyValue("strictMinMax");
        },
        /**
         * Indicates whether to blindly use exact `min` and `max` values set by user
         * when generating Axis scale.
         *
         * If not set, the Axis might slightly adjust those values to accomodate a
         * better looking grid.
         *
         * @default false
         * @param {boolean} value Use exact values?
         */
        set: function (value) {
            if (this.setPropertyValue("strictMinMax", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "logarithmic", {
        /**
         * @return {boolean} Logarithmic scale?
         */
        get: function () {
            return this.getPropertyValue("logarithmic");
        },
        /**
         * Indicates if this axis should use a logarithmic scale.
         *
         * Please note that logarithmic axis can **only** accommodate values bigger
         * than zero.
         *
         * Having zero or negative values will result in error and failure of the
         * whole chart.
         *
         * @param {boolean} value Logarithmic scale?
         */
        set: function (value) {
            if (this.setPropertyValue("logarithmic", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "maxPrecision", {
        /**
         * @return {boolean} max precision
         */
        get: function () {
            return this.getPropertyValue("maxPrecision");
        },
        /**
         * Maximum number of decimals to allow when placing grid lines and labels
         * on axis.
         *
         * Set it to `0` (zero) to force integer-only axis labels.
         *
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("maxPrecision", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Invalidates axis data items when series extremes change
     */
    ValueAxis.prototype.handleExtremesChange = function () {
        this._extremesChanged = true;
        this.getMinMax();
        if (this.ghostLabel) {
            var min = this.min;
            var max = this.max;
            var text = 0;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max) && min.toString().length > max.toString().length) {
                text = min;
            }
            else {
                text = max;
            }
            this.ghostLabel.text = this.formatLabel(text);
        }
    };
    /**
     * Returns the X coordinate for series' data item's value.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {XYSeriesDataItem}  dataItem  Data item
     * @param  {string}            key       Data field to get value from
     * @param  {number}            location  Location (0-1)
     * @param  {string}            stackKey  ?
     * @return {number}                      X coordinate (px)
     */
    ValueAxis.prototype.getX = function (dataItem, key, location, stackKey) {
        var value = dataItem.getWorkingValue(key);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](stackKey)) {
            stackKey = "valueX";
        }
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            value = this.baseValue;
            if (this.logarithmic) {
                if (stack > 0) {
                    value = 0;
                }
            }
        }
        return this.renderer.positionToPoint(this.valueToPosition(value + stack)).x;
    };
    /**
     * Returns the Y coordinate for series' data item's value.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {XYSeriesDataItem}  dataItem  Data item
     * @param  {string}            key       Data field to get value from
     * @param  {number}            location  Location (0-1)
     * @param  {string}            stackKey  Stack ID
     * @return {number}                      Y coordinate (px)
     */
    ValueAxis.prototype.getY = function (dataItem, key, location, stackKey) {
        var value = dataItem.getWorkingValue(key);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](stackKey)) {
            stackKey = "valueY";
        }
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            value = this.baseValue;
            if (this.logarithmic) {
                if (stack > 0) {
                    value = 0;
                }
            }
        }
        return this.renderer.positionToPoint(this.valueToPosition(value + stack)).y;
    };
    /**
     * Returns an angle for series data item.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param  {XYSeriesDataItem}  dataItem  Data item
     * @param  {string}            key       Data field to get value from
     * @param  {number}            location  Location (0-1)
     * @param  {string}            stackKey  Stack ID
     * @return {number}                      Angle
     */
    ValueAxis.prototype.getAngle = function (dataItem, key, location, stackKey) {
        var value = dataItem.getWorkingValue(key);
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            value = this.baseValue;
        }
        return this.positionToAngle(this.valueToPosition(value + stack));
    };
    /**
     * [getAnyRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {number}  start     [description]
     * @param  {number}  end       [description]
     * @param  {number}  location  [description]
     * @return {string}            [description]
     */
    ValueAxis.prototype.getAnyRangePath = function (start, end, location) {
        var startPosition = this.valueToPosition(start);
        var endPosition = this.valueToPosition(end);
        return this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer
    };
    /**
     * Returns text to show in a axis tooltip, based on specific position within
     * axis.
     *
     * The label will be formatted as per [[NumberFormatter]] set for the whole
     * chart, or explicitly for this Axis.
     *
     * @ignore Exclude from docs
     * @param  {number}  position  Position (px)
     * @return {string}            Label (numeric value)
     */
    ValueAxis.prototype.getTooltipText = function (position) {
        var value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](this.positionToValue(position), this._stepDecimalPlaces);
        return this.adapter.apply("getTooltipText", this.tooltip.numberFormatter.format(value));
    };
    /**
     * Zooms axis to specific values.
     *
     * @param {number}   startValue      Start value
     * @param {number}   endValue        End value
     * @param {boolean}  skipRangeEvent  Do not invoke events
     * @param {boolean}  instantly       Do not play zoom animations
     */
    ValueAxis.prototype.zoomToValues = function (startValue, endValue, skipRangeEvent, instantly) {
        var start = (startValue - this.min) / (this.max - this.min);
        var end = (endValue - this.min) / (this.max - this.min);
        this.zoom({ start: start, end: end }, skipRangeEvent, instantly);
    };
    Object.defineProperty(ValueAxis.prototype, "minZoomed", {
        /**
         * A smallest value in axis scale within current zoom.
         *
         * @return {number} Min zoom value
         */
        get: function () {
            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.min, this._minZoomed);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "maxZoomed", {
        /**
         * A biggest value in axis scale within current zoom.
         * @return {number} [description]
         */
        get: function () {
            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](this.max, this._maxZoomed);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates positioning of Axis breaks after something changes.
     *
     * @ignore Exclude from docs
     */
    ValueAxis.prototype.fixAxisBreaks = function () {
        var _this = this;
        _super.prototype.fixAxisBreaks.call(this);
        var axisBreaks = this.axisBreaks;
        if (axisBreaks.length > 0) {
            // process breaks
            axisBreaks.each(function (axisBreak) {
                var startValue = axisBreak.adjustedStartValue;
                var endValue = axisBreak.adjustedEndValue;
                // break difference
                var axisBreakDif = endValue - startValue;
                var axisBreakGridCount = Math.ceil(axisBreakDif * axisBreak.breakSize) * _this._gridCount / (_this.max - _this.min);
                // calculate min, max and step for axis break
                var breakMinMaxStep = _this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);
                axisBreak.adjustedStep = breakMinMaxStep.step;
                axisBreak.adjustedMin = breakMinMaxStep.min;
                axisBreak.adjustedMax = breakMinMaxStep.max;
            });
        }
        this._difference = this.adjustDifference(this.min, this.max);
    };
    /**
     * Returns value based on position.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param  {number}  position  Relative position on axis (0-1)
     * @return {string}            Position label
     */
    ValueAxis.prototype.getPositionLabel = function (position) {
        var value = this.positionToValue(position);
        return this.numberFormatter.format(value);
    };
    /**
     * Shows Axis tooltip at specific value
     *
     * @param {number} value Value
     */
    ValueAxis.prototype.showTooltipAt = function (value) {
        this.showTooltipAtPosition(this.valueToPosition(value));
    };
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param {this} source Source Axis
     */
    ValueAxis.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.min = source.min;
        this.max = source.max;
        this.calculateTotals = source.calculateTotals;
        this._baseValue = source.baseValue;
    };
    return ValueAxis;
}(_Axis__WEBPACK_IMPORTED_MODULE_1__["Axis"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["ValueAxis"] = ValueAxis;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["ValueAxisDataItem"] = ValueAxisDataItem;
//# sourceMappingURL=ValueAxis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js ***!
  \**********************************************************************************/
/*! exports provided: ValueAxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueAxisBreak", function() { return ValueAxisBreak; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisBreak__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * A module which defines functionality related to Value Axis Break.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class to define "breaks" on value axis.
 *
 * A "break" can be used to "cut out" specific ranges of the axis scale, e.g.
 * when comparing columns with relatively similar values, it would make sense
 * to cut out their mid section, so that their tip differences are more
 * prominent.
 *
 * @see {@link IValueAxisBreakEvents} for a list of available events
 * @see {@link IValueAxisBreakAdapters} for a list of available Adapters
 * @important
 */
var ValueAxisBreak = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ValueAxisBreak, _super);
    /**
     * Constructor
     */
    function ValueAxisBreak() {
        var _this = _super.call(this) || this;
        _this.className = "ValueAxisBreak";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ValueAxisBreak.prototype, "startPosition", {
        /**
         * Pixel position of the break's start.
         *
         * @return {number} Position (px)
         * @readonly
         */
        get: function () {
            if (this.axis) {
                return this.axis.valueToPosition(this.adjustedStartValue);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxisBreak.prototype, "endPosition", {
        /**
         * Pixel position of the break's end.
         *
         * @return {number} Position (px)
         * @readonly
         */
        get: function () {
            if (this.axis) {
                return this.axis.valueToPosition(this.adjustedEndValue);
            }
        },
        enumerable: true,
        configurable: true
    });
    return ValueAxisBreak;
}(_AxisBreak__WEBPACK_IMPORTED_MODULE_1__["AxisBreak"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["ValueAxisBreak"] = ValueAxisBreak;
//# sourceMappingURL=ValueAxisBreak.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js ***!
  \******************************************************************************/
/*! exports provided: Bullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bullet", function() { return Bullet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module that defines everything related to building bullets.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates bullets.
 *
 * @see {@link IBulletEvents} for a list of available events
 * @see {@link IBulletAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var Bullet = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Bullet, _super);
    /**
     * Constructor
     */
    function Bullet() {
        var _this = _super.call(this) || this;
        _this.className = "Bullet";
        _this.isMeasured = false;
        _this.tooltipX = 0;
        _this.tooltipY = 0;
        _this.layout = "none";
        _this.applyOnClones = true;
        _this.copyToLegendMarker = true;
        return _this;
    }
    Object.defineProperty(Bullet.prototype, "locationX", {
        /**
         * @return {number} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("locationX");
        },
        /**
         * Relative horizontal location within cell. (0-1)
         *
         * @param {number}  value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("locationX", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "locationY", {
        /**
         * @return {number} Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("locationY");
        },
        /**
         * Relative vertical location within cell. (0-1)
         *
         * @param {number}  value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("locationY", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "xField", {
        /**
         * @return {string} [description]
         */
        get: function () {
            return this.getPropertyValue("xField");
        },
        /**
         * [xField description]
         *
         * @todo Description
         * @param {string}  value  [description]
         */
        set: function (value) {
            this.setPropertyValue("xField", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "yField", {
        /**
         * @return {string} [description]
         */
        get: function () {
            return this.getPropertyValue("yField");
        },
        /**
         * [yField description]
         *
         * Description
         * @param {string}  value  [description]
         */
        set: function (value) {
            this.setPropertyValue("yField", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "isDynamic", {
        /**
         * @return {boolean} Redraw on data change?
         */
        get: function () {
            return this.getPropertyValue("isDynamic");
        },
        /**
         * Indicates if the bullet is "dynamic".
         *
         * In most cases the bullets remain the same, even if the underlying data
         * changes.
         *
         * However, in cases where bullet also displays a label, or its size depends
         * on data, it also needs to be redrawn when the underlying data changes.
         *
         * Only those bullets that have set `isDynamic = true` will be redrawn each
         * time data changes. Regular bullets will be reused as they are.
         *
         * @default false
         * @param {boolean}  value  Redraw on data change?
         */
        set: function (value) {
            this.setPropertyValue("isDynamic", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "copyToLegendMarker", {
        /**
         * @return {boolean} Redraw on data change?
         */
        get: function () {
            return this.getPropertyValue("copyToLegendMarker");
        },
        /**
         * Indicates if the bullet should be copied to legend marker
         *
         * @default false
         * @param {boolean}  value  Redraw on data change?
         */
        set: function (value) {
            this.setPropertyValue("copyToLegendMarker", value);
        },
        enumerable: true,
        configurable: true
    });
    return Bullet;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Bullet"] = Bullet;
//# sourceMappingURL=Bullet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js ***!
  \**********************************************************************************/
/*! exports provided: HeatLegend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeatLegend", function() { return HeatLegend; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../charts/axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../charts/axes/AxisRendererX */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js");
/* harmony import */ var _charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../charts/axes/AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Colors__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/**
 * HeatLegend module
 */














/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class creates a link (waved color-filled line) between two nodes in a
 * Sankey Diagram.
 *
 * @see {@link IHeatLegendEvents} for a list of available events
 * @see {@link IHeatLegendAdapters} for a list of available Adapters
 * @important
 */
var HeatLegend = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](HeatLegend, _super);
    /**
     * Constructor
     */
    function HeatLegend() {
        var _this = _super.call(this) || this;
        _this.className = "HeatLegend";
        _this.markerContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        _this.markerContainer.shouldClone = false;
        _this.markerCount = 1;
        // Create a template container and list for the a marker
        var marker = new _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_13__["RoundedRectangle"]();
        marker.minHeight = 20;
        marker.minWidth = 20;
        marker.interactionsEnabled = false;
        marker.fillOpacity = 1;
        marker.cornerRadius(0, 0, 0, 0);
        _this.markerContainer.minHeight = 20;
        _this.markerContainer.minWidth = 20;
        _this.orientation = "horizontal";
        _this.markers = new _core_utils_List__WEBPACK_IMPORTED_MODULE_5__["ListTemplate"](marker);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_5__["ListDisposer"](_this.markers));
        _this._disposers.push(_this.markers.template);
        _this.applyTheme();
        return _this;
    }
    HeatLegend.prototype.getMinFromRules = function (property) {
        var series = this.series;
        if (series) {
            var minValue_1;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["eachContinue"](series.heatRules.iterator(), function (heatRule) {
                if (heatRule.property == property) {
                    minValue_1 = heatRule.min;
                    return false;
                }
                return true;
            });
            return minValue_1;
        }
    };
    HeatLegend.prototype.getMaxFromRules = function (property) {
        var series = this.series;
        if (series) {
            var maxValue_1;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](series.heatRules.iterator(), function (heatRule) {
                if (heatRule.property == property) {
                    maxValue_1 = heatRule.max;
                    return false;
                }
                return true;
            });
            return maxValue_1;
        }
    };
    /**
     *
     * @ignore Exclude from docs
     */
    HeatLegend.prototype.validate = function () {
        _super.prototype.validate.call(this);
        var series = this.series;
        var minColor = this.minColor;
        var maxColor = this.maxColor;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minColor)) {
            minColor = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMinFromRules("fill"));
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxColor)) {
            maxColor = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMaxFromRules("fill"));
        }
        if (series) {
            var seriesFill = series.fill;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minColor) && seriesFill instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                minColor = seriesFill;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxColor) && seriesFill instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                maxColor = seriesFill;
            }
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxColor)) {
            maxColor = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMaxFromRules("fill"));
        }
        var minOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMinFromRules("fillOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](minOpacity)) {
            minOpacity = 1;
        }
        var maxOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMaxFromRules("fillOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](maxOpacity)) {
            maxOpacity = 1;
        }
        var minStrokeOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMinFromRules("strokeOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](minStrokeOpacity)) {
            minStrokeOpacity = 1;
        }
        var maxStrokeOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMaxFromRules("strokeOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](maxStrokeOpacity)) {
            maxStrokeOpacity = 1;
        }
        var minStroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMinFromRules("stroke"));
        var maxStroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMaxFromRules("stroke"));
        //if (series) {
        for (var i = 0; i < this.markerCount; i++) {
            var marker = this.markers.getIndex(i);
            if (!marker) {
                marker = this.markers.create();
                marker.parent = this.markerContainer;
                marker.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                marker.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
            }
            if (this.markerCount == 1) {
                var gradient = new _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_2__["LinearGradient"]();
                gradient.addColor(minColor, minOpacity);
                gradient.addColor(maxColor, maxOpacity);
                if (this.orientation == "vertical") {
                    gradient.rotation = -90;
                }
                marker.fill = gradient;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minStroke) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxStroke)) {
                    var strokeGradient = new _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_2__["LinearGradient"]();
                    strokeGradient.addColor(minStroke, minStrokeOpacity);
                    strokeGradient.addColor(maxStroke, maxStrokeOpacity);
                    if (this.orientation == "vertical") {
                        strokeGradient.rotation = -90;
                    }
                    marker.stroke = strokeGradient;
                }
            }
            else {
                var color = new _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"](_core_utils_Colors__WEBPACK_IMPORTED_MODULE_12__["interpolate"](minColor.rgb, maxColor.rgb, i / this.markerCount));
                marker.fill = color;
                var opacity = minOpacity + (maxOpacity - minOpacity) * i / this.markerCount;
                marker.fillOpacity = opacity;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minStroke) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxStroke)) {
                    var color_1 = new _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"](_core_utils_Colors__WEBPACK_IMPORTED_MODULE_12__["interpolate"](minStroke.rgb, maxStroke.rgb, i / this.markerCount));
                    marker.stroke = color_1;
                    var opacity_1 = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * i / this.markerCount;
                    marker.strokeOpacity = opacity_1;
                }
            }
        }
        var renderer = this.valueAxis.renderer;
        if (this.markerCount > 1) {
            if (this.orientation == "horizontal") {
                renderer.minGridDistance = this.measuredWidth / this.markerCount;
            }
            else {
                renderer.minGridDistance = this.measuredHeight / this.markerCount;
            }
        }
        this.valueAxis.invalidate();
        for (var i = this.markerCount, len = this.markers.length; i < len; i++) {
            this.markers.getIndex(i).parent = undefined;
        }
    };
    Object.defineProperty(HeatLegend.prototype, "minColor", {
        /**
         * Returns minColor value
         * @return {Color}
         */
        get: function () {
            return this.getPropertyValue("minColor");
        },
        /**
         * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.
         *
         * @param {Color}
         */
        set: function (value) {
            if (!(value instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"])) {
                value = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(value);
            }
            this.setColorProperty("minColor", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "maxColor", {
        /**
         * Returns maxColor value
         * @return {Color}
         */
        get: function () {
            return this.getPropertyValue("maxColor");
        },
        /**
         * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.
         *
         * @param {Color}
         */
        set: function (value) {
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isObject"](value)) {
                value = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(value);
            }
            this.setColorProperty("maxColor", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "markerCount", {
        /**
         * Returns number of color squares (markers).
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("markerCount");
        },
        /**
         * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.
         *
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("markerCount", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "minValue", {
        /**
         * Returns minimum value of heat legend.
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("minValue");
        },
        /**
         * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.
         *
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("minValue", value);
            this.valueAxis.min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "maxValue", {
        /**
         * Returns maximum value of heat legend.
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("maxValue");
        },
        /**
         * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.
         *
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("maxValue", value);
            this.valueAxis.max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "orientation", {
        /**
         * Returns orientation value.
         *
         * @return {"horizontal" | "vertical"}
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
        * Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.
        *
        * @param {"horizontal" | "vertical"}
        */
        set: function (value) {
            this.setPropertyValue("orientation", value, true);
            var markerContainer = this.markerContainer;
            var valueAxis = this.valueAxis;
            // HORIZONTAL
            if (value == "horizontal") {
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](this.width)) {
                    this.width = 200;
                }
                this.height = undefined;
                valueAxis.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                valueAxis.height = undefined;
                valueAxis.tooltip.pointerOrientation = "vertical";
                this.layout = "vertical";
                markerContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                markerContainer.height = undefined;
                if (!(valueAxis.renderer instanceof _charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_8__["AxisRendererX"])) {
                    valueAxis.renderer = new _charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_8__["AxisRendererX"]();
                }
            }
            // VERTICAL
            else {
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](this.height)) {
                    this.height = 200;
                }
                this.width = undefined;
                this.layout = "horizontal";
                markerContainer.width = undefined;
                markerContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                valueAxis.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                valueAxis.width = undefined;
                valueAxis.tooltip.pointerOrientation = "horizontal";
                if (!(valueAxis.renderer instanceof _charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_9__["AxisRendererY"])) {
                    valueAxis.renderer = new _charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_9__["AxisRendererY"]();
                }
                valueAxis.renderer.inside = true;
                valueAxis.renderer.labels.template.inside = true;
                this.markerContainer.reverseOrder = true;
            }
            var renderer = valueAxis.renderer;
            renderer.grid.template.disabled = true;
            renderer.axisFills.template.disabled = true;
            renderer.baseGrid.disabled = true;
            renderer.labels.template.padding(2, 3, 2, 3);
            renderer.minHeight = undefined;
            renderer.minWidth = undefined;
            this.markerContainer.layout = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "valueAxis", {
        /**
         * Returns valueAxis value.
         * @return {ValueAxis}
         */
        get: function () {
            if (!this._valueAxis) {
                this.valueAxis = this.createChild(_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_7__["ValueAxis"]);
                this.valueAxis.shouldClone = false;
            }
            return this._valueAxis;
        },
        /**
         * Sets a value axis of heat legend. Value axis for heat legend is created automatically.
         * @param {ValueAxis}
         */
        set: function (valueAxis) {
            this._valueAxis = valueAxis;
            valueAxis.parent = this;
            valueAxis.strictMinMax = true;
            this.orientation = this.orientation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "series", {
        /**
         * Returns series value.
         * @return {Series}
         */
        get: function () {
            return this._series;
        },
        /**
         * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.
         * @param {Series} series
         */
        set: function (series) {
            var _this = this;
            this._series = series;
            var dataField = "value";
            try {
                var dataFieldDefined = series.heatRules.getIndex(0).dataField;
                if (dataFieldDefined) {
                    dataField = dataFieldDefined;
                }
            }
            catch (err) {
            }
            this.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);
            series.dataItem.events.on("calculatedvaluechanged", function (event) {
                _this.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);
            }, undefined, false);
            series.heatRules.events.on("inserted", this.invalidate, this, false);
            series.heatRules.events.on("removed", this.invalidate, this, false);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates min/max of value axis.
     * @ignore
     */
    HeatLegend.prototype.updateMinMax = function (min, max) {
        var valueAxis = this.valueAxis;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](this.minValue)) {
            valueAxis.min = min;
            valueAxis.invalidate();
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](this.maxValue)) {
            valueAxis.max = max;
            valueAxis.invalidate();
        }
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    HeatLegend.prototype.processConfig = function (config) {
        if (config) {
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isString"](config.series)) {
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isString"](config.series)) {
                    if (this.map.hasKey(config.series)) {
                        config.series = this.map.getKey(config.series);
                    }
                    else {
                        var seriesId_1 = config.series;
                        var disposer_1 = this.map.events.on("insertKey", function (ev) {
                            if (ev.key == seriesId_1) {
                                this.series = ev.newValue;
                                disposer_1.dispose();
                            }
                        }, this);
                        this._disposers.push(disposer_1);
                        delete config.series;
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return HeatLegend;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["HeatLegend"] = HeatLegend;
//# sourceMappingURL=HeatLegend.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js ***!
  \****************************************************************************/
/*! exports provided: Tick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return Tick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Tick module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A basic Tick class.
 *
 * A tick is a short dash, mainly connecting an object like axis or slice to
 * it's textual label.
 *
 * @see {@link ITickEvents} for a list of available events
 * @see {@link ITickAdapters} for a list of available Adapters
 * @important
 */
var Tick = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Tick, _super);
    /**
     * Constructor
     */
    function Tick() {
        var _this = _super.call(this) || this;
        _this.className = "Tick";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
        _this.fillOpacity = 0;
        _this.length = 6;
        _this.strokeOpacity = 0.2;
        _this.stroke = interfaceColors.getFor("grid");
        _this.isMeasured = false;
        _this.nonScalingStroke = true;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Tick.prototype, "length", {
        /**
         * @return {number} Length (px)
         */
        get: function () {
            if (this.disabled) {
                return 0;
            }
            return this.getPropertyValue("length");
        },
        /**
         * Length of the tick in pixels.
         *
         * @param {number}  value  Length (px)
         */
        set: function (value) {
            this.setPropertyValue("length", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Tick;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Tick"] = Tick;
//# sourceMappingURL=Tick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js ***!
  \**********************************************************************/
/*! exports provided: normalizePoint, normalizeMultiline, wrapAngleTo180, geoToPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizePoint", function() { return normalizePoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeMultiline", function() { return normalizeMultiline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAngleTo180", function() { return wrapAngleTo180; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoToPoint", function() { return geoToPoint; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * A collection of GeoJSON format-related utility functions.
 */


/**
 * Normalizes a geo-point.
 *
 * @ignore Exclude from docs
 * @param  {IGeoPoint}  geoPoint  Source geo-point
 * @return {IGeoPoint}            Normalized geo-point
 */
function normalizePoint(geoPoint) {
    var longitude = wrapAngleTo180(geoPoint.longitude);
    var latitude = Math.asin(Math.sin((geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"]))) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"];
    var latitude180 = wrapAngleTo180(geoPoint.latitude);
    if (Math.abs(latitude180) > 90) {
        longitude = wrapAngleTo180(longitude + 180);
    }
    geoPoint.longitude = longitude;
    geoPoint.latitude = latitude;
    return geoPoint;
}
/**
 * Normalizes all points of a geo-line.
 *
 * @ignore Exclude from docs
 * @param  {IGeoPoint[][]}  multiline  Source geo-line
 * @return {IGeoPoint[]}               Normalized geo-line
 */
function normalizeMultiline(multiline) {
    try {
        for (var multiline_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](multiline), multiline_1_1 = multiline_1.next(); !multiline_1_1.done; multiline_1_1 = multiline_1.next()) {
            var segment = multiline_1_1.value;
            try {
                for (var segment_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](segment), segment_1_1 = segment_1.next(); !segment_1_1.done; segment_1_1 = segment_1.next()) {
                    var point = segment_1_1.value;
                    point = normalizePoint(point);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (segment_1_1 && !segment_1_1.done && (_a = segment_1.return)) _a.call(segment_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (multiline_1_1 && !multiline_1_1.done && (_b = multiline_1.return)) _b.call(multiline_1);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return multiline;
    var e_2, _b, e_1, _a;
}
/**
 * [wrapAngleTo180 description]
 *
 * @todo Description
 * @ignore Exclude from docs
 * @param  {number}  angle  Angle
 * @return {number}         Angle
 */
function wrapAngleTo180(angle) {
    angle = angle % 360;
    if (angle > 180) {
        angle -= 360;
    }
    if (angle < -180) {
        angle += 360;
    }
    return angle;
}
/**
 * Converts a geo point to a regular point object.
 *
 * @ignore Exclude from docs
 * @param  {IGeoPoint}  geoPoint  Source geo point
 * @return {IPoint}               Point
 */
function geoToPoint(geoPoint) {
    return { x: geoPoint.longitude, y: geoPoint.latitude };
}
//# sourceMappingURL=Geo.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js ***!
  \*************************************************************************/
/*! exports provided: MapArc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapArc", function() { return MapArc; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_elements_Polyarc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Polyarc */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map arched line module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw an arched line on the map.
 *
 * @see {@link IMapArcEvents} for a list of available events
 * @see {@link IMapArcAdapters} for a list of available Adapters
 */
var MapArc = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapArc, _super);
    /**
     * Constructor
     */
    function MapArc() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapArc";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapArc.prototype.createLine = function () {
        this.line = new _core_elements_Polyarc__WEBPACK_IMPORTED_MODULE_2__["Polyarc"]();
    };
    Object.defineProperty(MapArc.prototype, "shortestDistance", {
        /**
         * ShortestDistance = true is not supported by MapArc, only MapLine does support it
         * @default false
         * @param {boolean}  value
         * @todo: review description
         */
        get: function () {
            return false;
        },
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    return MapArc;
}(_MapLine__WEBPACK_IMPORTED_MODULE_1__["MapLine"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapArc"] = MapArc;
//# sourceMappingURL=MapArc.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArcSeries.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArcSeries.js ***!
  \*******************************************************************************/
/*! exports provided: MapArcSeriesDataItem, MapArcSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapArcSeriesDataItem", function() { return MapArcSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapArcSeries", function() { return MapArcSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony import */ var _MapArc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapArc */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map arc series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapArcSeries]].
 *
 * @see {@link DataItem}
 */
var MapArcSeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapArcSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapArcSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapArcSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return MapArcSeriesDataItem;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of arc elements. (curved lines)
 *
 * @see {@link IMapArcSeriesEvents} for a list of available Events
 * @see {@link IMapArcSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapArcSeries = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapArcSeries, _super);
    /**
     * Constructor
     */
    function MapArcSeries() {
        var _this = _super.call(this) || this;
        _this.className = "MapArcSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {MapArcSeriesDataItem} Data Item
     */
    MapArcSeries.prototype.createDataItem = function () {
        return new MapArcSeriesDataItem();
    };
    /**
     * Returns a new line instance of suitable type.
     *
     * @return {MapArc} New line
     */
    MapArcSeries.prototype.createLine = function () {
        return new _MapArc__WEBPACK_IMPORTED_MODULE_2__["MapArc"]();
    };
    return MapArcSeries;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapArcSeries"] = MapArcSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapArcSeriesDataItem"] = MapArcSeriesDataItem;
//# sourceMappingURL=MapArcSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js ***!
  \***************************************************************************/
/*! exports provided: MapImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapImage", function() { return MapImage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 *
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to place an image on the map.
 *
 * @see {@link IMapImageEvents} for a list of available events
 * @see {@link IMapImageAdapters} for a list of available Adapters
 */
var MapImage = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapImage, _super);
    /**
     * Constructor
     */
    function MapImage() {
        var _this = _super.call(this) || this;
        _this.className = "MapImage";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapImage.prototype, "latitude", {
        /**
         * @return {number} Latitude
         */
        get: function () {
            return this.getPropertyValue("latitude");
        },
        /**
         * Latitude image is placed at.
         *
         * @param {number}  value  Latitude
         */
        set: function (value) {
            this.setPropertyValue("latitude", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImage.prototype, "longitude", {
        /**
         * @return {number} Longitude
         */
        get: function () {
            return this.getPropertyValue("longitude");
        },
        /**
         * Longitude image is placed on.
         *
         * @param {number}  value  Longitude
         */
        set: function (value) {
            this.setPropertyValue("longitude", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Repositions the image to it's current position.
     *
     * @ignore Exclude from docs
     */
    MapImage.prototype.validatePosition = function () {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this.latitude) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this.longitude)) {
            this.moveTo(this.series.chart.projection.convert({ latitude: this.latitude, longitude: this.longitude }));
        }
        _super.prototype.validatePosition.call(this);
    };
    return MapImage;
}(_MapObject__WEBPACK_IMPORTED_MODULE_1__["MapObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapImage"] = MapImage;
//# sourceMappingURL=MapImage.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js ***!
  \*********************************************************************************/
/*! exports provided: MapImageSeriesDataItem, MapImageSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapImageSeriesDataItem", function() { return MapImageSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapImageSeries", function() { return MapImageSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _MapImage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Map image series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapImageSeries]]
 * @see {@link DataItem}
 */
var MapImageSeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapImageSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapImageSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapImageSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapImageSeriesDataItem.prototype, "mapImage", {
        /**
         * A [[MapImage]] element related to this data item.
         *
         * @return {MapImage} Element
         */
        get: function () {
            var _this = this;
            if (!this._mapImage) {
                var mapImage_1 = this.component.mapImages.create();
                this.addSprite(mapImage_1);
                this._mapImage = mapImage_1;
                this._disposers.push(mapImage_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_10__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.mapImages.removeValue(mapImage_1);
                    }
                }));
            }
            return this._mapImage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImageSeriesDataItem.prototype, "point", {
        /**
         * @return {number[]} [description]
         */
        get: function () {
            return this._point;
        },
        /**
         * [point description]
         *
         * @todo Description
         * @param {number[]} point [description]
         */
        set: function (point) {
            this._point = point;
            this.geoPoint = _MapUtils__WEBPACK_IMPORTED_MODULE_6__["pointToGeo"](point);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImageSeriesDataItem.prototype, "geoPoint", {
        /**
         * @return {IGeoPoint} Image coordinates
         */
        get: function () {
            return this._geoPoint;
        },
        /**
         * Geographical coordinates (lat/long) image is placed at.
         *
         * @param {IGeoPoint} geoPoint Image coordinates
         */
        set: function (geoPoint) {
            this._geoPoint = geoPoint;
            this.updateExtremes([this._geoPoint]);
            this.mapImage.latitude = this._geoPoint.latitude;
            this.mapImage.longitude = this._geoPoint.longitude;
        },
        enumerable: true,
        configurable: true
    });
    return MapImageSeriesDataItem;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map image (marker) elements.
 *
 * @see {@link IMapImageSeriesEvents} for a list of available Events
 * @see {@link IMapImageSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapImageSeries = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapImageSeries, _super);
    /**
     * Constructor
     */
    function MapImageSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapImageSeries";
        // Set data fields
        _this.dataFields.multiPoint = "multiPoint";
        _this.dataFields.point = "point";
        _this.dataFields.geoPoint = "geoPoint";
        _this.dataFields.multiGeoPoint = "multiGeoPoint";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {MapImageSeriesDataItem} Data Item
     */
    MapImageSeries.prototype.createDataItem = function () {
        return new MapImageSeriesDataItem();
    };
    /**
     * (Re)validates the data of the sries, effectively forcing it to redraw
     * all of its elements.
     *
     * @ignore Exclude from docs
     */
    MapImageSeries.prototype.validateData = function () {
        var _this = this;
        if (this.data.length > 0 && this._parseDataFrom == 0) {
            this.mapImages.clear();
        }
        // process geoJSON and created map objects
        if (this.useGeodata) {
            if (this.useGeodata || this.geodata) {
                var geoJSON = this.chart.geodata;
                var features = void 0;
                if (geoJSON.type == "FeatureCollection") {
                    features = geoJSON.features;
                }
                else if (geoJSON.type == "Feature") {
                    features = [geoJSON];
                }
                else if (["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(geoJSON.type) != -1) {
                    features = [{ geometry: geoJSON }];
                }
                else {
                    console.log("nothing found in geoJSON");
                }
                if (features) {
                    var _loop_1 = function (i, len) {
                        var feature = features[i];
                        var geometry = feature.geometry;
                        if (geometry) {
                            var type = geometry.type;
                            var id_1 = feature.id;
                            if (type == "Point" || type == "MultiPoint") { // todo: we don't support multipoints at the moment actually
                                if (!this_1.checkInclude(this_1.include, this_1.exclude, id_1)) {
                                    return "continue";
                                }
                                var coordinates = geometry.coordinates;
                                // make the same as MultiPoint
                                if (type == "Point") {
                                    coordinates = [coordinates];
                                }
                                var dataObject = _core_utils_Array__WEBPACK_IMPORTED_MODULE_5__["find"](this_1.data, function (value, i) {
                                    return value.id == id_1;
                                });
                                if (!dataObject) {
                                    dataObject = { multiPoint: coordinates, id: id_1 };
                                    this_1.data.push(dataObject);
                                }
                                else {
                                    if (!dataObject.multiPoint) {
                                        dataObject.multiPoint = coordinates;
                                    }
                                }
                                // copy properties data to datacontext
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["softCopyProperties"](feature.properties, dataObject);
                            }
                        }
                    };
                    var this_1 = this;
                    for (var i = 0, len = features.length; i < len; i++) {
                        _loop_1(i, len);
                    }
                }
            }
        }
        _super.prototype.validateData.call(this);
        // important! this should go after super.validateData
        // if data is parsed in chunks, images list is corrupted, fix it here
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.dataItems.iterator(), function (dataItem) {
            var mapImage = dataItem.mapImage;
            _this.mapImages.moveValue(mapImage);
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](mapImage.latitude) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](mapImage.latitude)) {
                dataItem.geoPoint = { latitude: mapImage.latitude, longitude: mapImage.longitude };
            }
        });
    };
    Object.defineProperty(MapImageSeries.prototype, "mapImages", {
        /**
         * A list of map images in the series.
         *
         * @return {ListTemplate<MapImage>} Map images
         */
        get: function () {
            if (!this._mapImages) {
                var template = new _MapImage__WEBPACK_IMPORTED_MODULE_2__["MapImage"]();
                var mapImages = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](template);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](mapImages));
                this._disposers.push(mapImages.template);
                mapImages.template.focusable = true;
                mapImages.events.on("inserted", this.handleObjectAdded, this, false);
                this._mapImages = mapImages;
            }
            return this._mapImages;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates data element, effectively triggering its redrawal.
     *
     * @ignore Exclude from docs
     * @param {this["_dataItem"]}  dataItem  Data item
     */
    MapImageSeries.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        dataItem.mapImage.invalidate();
    };
    /**
     * (Re)validates the series
     *
     * @ignore Exclude from docs
     */
    MapImageSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.mapImages.iterator(), function (mapImage) {
            mapImage.validatePosition();
        });
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param {Series}  source  Source series
     */
    MapImageSeries.prototype.copyFrom = function (source) {
        this.mapImages.template.copyFrom(source.mapImages.template);
        _super.prototype.copyFrom.call(this, source);
    };
    return MapImageSeries;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapImageSeries"] = MapImageSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapImageSeriesDataItem"] = MapImageSeriesDataItem;
//# sourceMappingURL=MapImageSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js ***!
  \**************************************************************************/
/*! exports provided: MapLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLine", function() { return MapLine; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony import */ var _MapLineObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapLineObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js");
/* harmony import */ var _core_elements_Triangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Triangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Polyline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _Geo__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/**
 * Map line module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a line on the map.
 *
 * @see {@link IMapLineEvents} for a list of available events
 * @see {@link IMapLineAdapters} for a list of available Adapters
 */
var MapLine = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapLine, _super);
    /**
     * Constructor
     */
    function MapLine() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapLine";
        _this.createLine();
        _this.line.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_7__["color"])();
        _this.line.parent = _this;
        _this.strokeOpacity = 1;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_8__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("grid");
        _this.shortestDistance = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapLine.prototype.createLine = function () {
        this.line = new _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_5__["Polyline"]();
    };
    /**
     * Converts a position within the line (0-1) to a physical point
     * coordinates.
     *
     * 0 indicates start of the line, 0.5 - middle, while 1 indicates the end.
     *
     * @param  {number}             position  Position (0-1)
     * @return {IOrientationPoint}            Coordinates
     */
    MapLine.prototype.positionToPoint = function (position) {
        if (this.line) {
            return this.line.positionToPoint(position);
        }
        return { x: 0, y: 0, angle: 0 };
    };
    Object.defineProperty(MapLine.prototype, "multiGeoLine", {
        /**
         * @return {IGeoPoint[]} [description]
         */
        get: function () {
            return this.getPropertyValue("multiGeoLine");
        },
        /**
         * [multiGeoLine description]
         *
         * @todo Description
         * @param {IGeoPoint[][]} multiGeoLine [description]
         */
        set: function (multiGeoLine) {
            this.setPropertyValue("multiGeoLine", _Geo__WEBPACK_IMPORTED_MODULE_12__["normalizeMultiline"](multiGeoLine), true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "imagesToConnect", {
        /**
         * @return {MapImages[]}
         */
        get: function () {
            return this.getPropertyValue("imagesToConnect");
        },
        /**
         * Instead of setting longitudes/latitudes you can set an array of images
         * which will be connected by the line.
         *
         * Parameter is an array that can hold string `id`'s to of the images, or
         * references to actual [[MapImage]] objects.
         *
         * @param {MapImages[]}  images  Images
         */
        set: function (images) {
            var _this = this;
            //@todo dispose listeners if previous imagesToConnect exists
            for (var i = 0, len = images.length; i < len; i++) {
                var image = images[i];
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isString"](image)) {
                    if (this.map.hasKey(image)) {
                        image = this.map.getKey(image);
                        images[i] = image;
                    }
                    else {
                        continue;
                    }
                }
                image.events.on("propertychanged", function (event) {
                    if (event.property == "longitude" || event.property == "latitude") {
                        _this.invalidate();
                    }
                }, this, false);
            }
            this.setPropertyValue("imagesToConnect", images);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates the line, effectively forcing it to redraw.
     *
     * @ignore Exclude from docs
     */
    MapLine.prototype.validate = function () {
        var chart = this.series.chart;
        //let multiPoints: IPoint[][] = [];
        var multiGeoLine = this.multiGeoLine || [];
        if (this.imagesToConnect) {
            var segment = [];
            multiGeoLine = [segment];
            try {
                for (var _a = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.imagesToConnect), _b = _a.next(); !_b.done; _b = _a.next()) {
                    var image = _b.value;
                    segment.push({ longitude: image.longitude, latitude: image.latitude });
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (this.shortestDistance) {
            var newMultiGeoLine = [];
            for (var i = 0, len = multiGeoLine.length; i < len; i++) {
                var geoLine = multiGeoLine[i];
                var newGeoLine = [];
                for (var p = 1, plen = geoLine.length; p < plen; p++) {
                    var geoPointA = geoLine[p - 1];
                    var geoPointB = geoLine[p];
                    var stepCount = Math.max(Math.abs(geoPointA.latitude - geoPointB.latitude), Math.abs(geoPointA.longitude - geoPointB.longitude)) * 4;
                    //let latitudeStep: number = (geoPointB.latitude - geoPointA.latitude) / stepCount;
                    //let longitudeStep: number = (geoPointB.longitude - geoPointA.longitude) / stepCount;
                    for (var d = 0; d < stepCount; d++) {
                        var intermediatePoint = chart.projection.intermediatePoint(geoPointA, geoPointB, d / stepCount);
                        if (newGeoLine.length > 0) {
                            var previousPoint = newGeoLine[newGeoLine.length - 1];
                            if (Math.abs(previousPoint.longitude - intermediatePoint.longitude) > 359) {
                                newMultiGeoLine.push(newGeoLine);
                                newGeoLine = [];
                            }
                        }
                        newGeoLine.push(intermediatePoint);
                    }
                    // add last point to avoid gap
                    newGeoLine.push(geoPointB);
                }
                newMultiGeoLine.push(newGeoLine);
            }
            multiGeoLine = newMultiGeoLine;
        }
        this.line.segments = chart.projection.projectGeoLine(multiGeoLine);
        if (this._arrow) {
            this._arrow.validatePosition();
        }
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this.lineObjects.iterator(), function (x) {
            x.validatePosition();
        });
        _super.prototype.validate.call(this);
        var e_1, _c;
    };
    /**
     * @ignore Exclude from docs
     */
    MapLine.prototype.measureElement = function () {
        // Overriding, just to avoid extra measure
    };
    Object.defineProperty(MapLine.prototype, "shortestDistance", {
        /**
         * @return {boolean} Real path?
         */
        get: function () {
            return this.getPropertyValue("shortestDistance");
        },
        /**
         * The line should take the shortest path over the globe.
         *
         * Enabling this will make the line look differently in different
         * projections. Only `MapLine` supports this setting, `MapArc` and
         * `MapSplice` don't.
         *
         * @default false
         * @param {boolean}  value  Real path?
         */
        set: function (value) {
            this.setPropertyValue("shortestDistance", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "lineObjects", {
        /**
         * List of separate line objects, the line consists of.
         *
         * @todo Description (review)
         * @readonly
         * @return {ListTemplate<MapLineObject>} List of line objects
         */
        get: function () {
            if (!this._lineObjects) {
                this._lineObjects = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListTemplate"](new _MapLineObject__WEBPACK_IMPORTED_MODULE_2__["MapLineObject"]());
                this._lineObjects.events.on("inserted", this.handleLineObjectAdded, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListDisposer"](this._lineObjects));
                this._disposers.push(this._lineObjects.template);
            }
            return this._lineObjects;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorate a [[LineObject]] when it is added to the line.
     *
     * @param {IListEvents<MapLineObject>["inserted"]}  event  Event
     */
    MapLine.prototype.handleLineObjectAdded = function (event) {
        var mapLineObject = event.newValue;
        mapLineObject.mapLine = this;
        mapLineObject.parent = this;
    };
    Object.defineProperty(MapLine.prototype, "arrow", {
        /**
         * @return {MapLineObject} Arrow element
         */
        get: function () {
            if (!this._arrow) {
                var arrow = this.createChild(_MapLineObject__WEBPACK_IMPORTED_MODULE_2__["MapLineObject"]);
                arrow.shouldClone = false;
                arrow.width = 8;
                arrow.height = 10;
                arrow.mapLine = this;
                arrow.position = 0.5;
                var triangle = arrow.createChild(_core_elements_Triangle__WEBPACK_IMPORTED_MODULE_3__["Triangle"]);
                //triangle.shouldClone = false;
                triangle.fillOpacity = 1;
                triangle.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
                triangle.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
                triangle.rotation = 90;
                triangle.horizontalCenter = "middle";
                triangle.verticalCenter = "middle";
                this._arrow = arrow;
            }
            return this._arrow;
        },
        /**
         * A [[MapLineObject]] to use as an option arrowhead on the line.
         *
         * Just accessing this property will create a default arrowhead on the line
         * automatically.
         *
         * @param {MapLineObject}  arrow  Arrow element
         */
        set: function (arrow) {
            this._arrow = arrow;
            arrow.mapLine = this;
            arrow.parent = this;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies line properties and other attributes, like arrow, from another
     * instance of [[MapLine]].
     *
     * @param {MapLineObject}  source  Source map line
     */
    MapLine.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.line.copyFrom(source.line);
        this.lineObjects.copyFrom(source.lineObjects);
        if (source._arrow) {
            this.arrow = source.arrow.clone();
        }
    };
    Object.defineProperty(MapLine.prototype, "latitude", {
        /**
         * Latitude of the line center.
         *
         * @readonly
         * @return {number} Latitude
         */
        get: function () {
            var dataItem = this.dataItem;
            return dataItem.north + (dataItem.south - dataItem.north) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "longitude", {
        /**
         * Longitude of the line center.
         *
         * @readonly
         * @return {number} Latitude
         */
        get: function () {
            var dataItem = this.dataItem;
            return dataItem.east + (dataItem.west - dataItem.east) / 2;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * X coordinate for the slice tooltip.
     *
     * @return {number} X
     */
    MapLine.prototype.getTooltipX = function () {
        return this.line.positionToPoint(0.5).x;
    };
    /**
     * Y coordinate for the slice tooltip.
     *
     * @return {number} Y
     */
    MapLine.prototype.getTooltipY = function () {
        return this.line.positionToPoint(0.5).y;
    };
    return MapLine;
}(_MapObject__WEBPACK_IMPORTED_MODULE_1__["MapObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_6__["registry"].registeredClasses["MapLine"] = MapLine;
//# sourceMappingURL=MapLine.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js ***!
  \********************************************************************************/
/*! exports provided: MapLineObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLineObject", function() { return MapLineObject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map line module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a line on the map.
 *
 * @see {@link IMapLineObjectEvents} for a list of available events
 * @see {@link IMapLineObjectAdapters} for a list of available Adapters
 */
var MapLineObject = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapLineObject, _super);
    /**
     * Constructor
     */
    function MapLineObject() {
        var _this = _super.call(this) || this;
        _this.adjustRotation = true;
        _this.className = "MapLineObject";
        _this.isMeasured = false;
        _this.layout = "none";
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates element's position.
     *
     * @ignore Exclude from docs
     */
    MapLineObject.prototype.validatePosition = function () {
        if (this.mapLine) {
            var point = this.mapLine.positionToPoint(this.position);
            this.x = point.x;
            this.y = point.y;
            if (this.adjustRotation) {
                this.rotation = point.angle;
            }
            var dataItem = this.mapLine.dataItem;
            if (dataItem) {
                var series = this.mapLine.dataItem.component;
                this.scale = 1 / series.scale;
            }
        }
        _super.prototype.validatePosition.call(this);
    };
    Object.defineProperty(MapLineObject.prototype, "position", {
        /**
         * @return {number} Position within the line
         */
        get: function () {
            return this.getPropertyValue("position");
        },
        /**
         * Sets object's relative position (0-1) within the line.
         *
         * `0` will place the object at the beginning of the line. `1` - at the end.
         *
         * Any intermediate number will place the object at some point within the
         * line.
         *
         * @param {number}  value  Position within the line (0-1)
         */
        set: function (value) {
            this.setPropertyValue("position", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineObject.prototype, "adjustRotation", {
        /**
         * @return {boolean} Auto-rotate
         */
        get: function () {
            return this.getPropertyValue("adjustRotation");
        },
        /**
         * If set to `true`, the object will be automatically rotated to face the
         * direction of the line at the specific position.
         *
         * This allows creating images that has its "front" always facing the logical
         * direction of the line.
         *
         * @default false
         * @param {boolean}  value  Auto-rotate
         */
        set: function (value) {
            this.setPropertyValue("adjustRotation", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    return MapLineObject;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapLineObject"] = MapLineObject;
//# sourceMappingURL=MapLineObject.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js ***!
  \********************************************************************************/
/*! exports provided: MapLineSeriesDataItem, MapLineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLineSeriesDataItem", function() { return MapLineSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLineSeries", function() { return MapLineSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Map line series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapLineSeries]]
 * @see {@link DataItem}
 */
var MapLineSeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapLineSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapLineSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapLineSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapLineSeriesDataItem.prototype, "mapLine", {
        /**
         * A [[MapLine]] element related to this data item.
         *
         * @readonly
         * @return {MapLine} Element
         */
        get: function () {
            var _this = this;
            if (!this._mapLine) {
                var mapLine_1 = this.component.mapLines.create();
                this._mapLine = mapLine_1;
                this.addSprite(mapLine_1);
                this._disposers.push(mapLine_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.mapLines.removeValue(mapLine_1);
                    }
                }));
            }
            return this._mapLine;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "line", {
        /**
         * @return {number[]} Coordinates
         */
        get: function () {
            return this._line;
        },
        /**
         * A collection of X/Y coordinates for a single-segment line. E.g.:
         *
         * ```JSON
         * [
         *   [ 100, 150 ],
         *   [ 120, 200 ]
         * ]
         * ```
         *
         * @param {number[][]}  line  Coordinates
         */
        set: function (line) {
            this._line = line;
            this.multiGeoLine = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiLineToGeo"]([line]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "multiLine", {
        /**
         * @return {number[]} Coordinates
         */
        get: function () {
            return this._multiLine;
        },
        /**
         * A collection of X/Y coordinates for a multi-segment line. E.g.:
         *
         * ```JSON
         * [
         *   // Segment 1
         *   [
         *     [ 100, 150 ],
         *     [ 120, 200 ]
         *   ],
         *
         *   // Segment 2
         *   [
         *     [ 120, 200 ],
         *     [ 150, 100 ]
         *   ]
         * ]
         * ```
         *
         * @param {number[][]}  multiLine  Coordinates
         */
        set: function (multiLine) {
            this._multiLine = multiLine;
            this.multiGeoLine = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiLineToGeo"](multiLine);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "geoLine", {
        /**
         * @return {IGeoPoint[]} Coordinates
         */
        get: function () {
            return this._geoLine;
        },
        /**
         * A collection of lat/long coordinates for a single-segment line. E.g.:
         *
         * ```JSON
         * [
         *   { longitude: 3.121, latitude: 0.58 },
         *   { longitude: -5.199, latitude: 21.223 }
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.4} GeoJSON LineString reference
         * @param {IGeoPoint[][]}  geoLine  Coordinates
         */
        set: function (geoLine) {
            this._geoLine = geoLine;
            this.multiGeoLine = [geoLine];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "multiGeoLine", {
        /**
         * @return {IGeoPoint[]} Coordinates
         */
        get: function () {
            return this._multiGeoLine;
        },
        /**
         * A collection of X/Y coordinates for a multi-segment line. E.g.:
         *
         * ```JSON
         * [
         *   // Segment 1
         *   [
         *     { longitude: 3.121, latitude: 0.58 },
         *     { longitude: -5.199, latitude: 21.223 }
         *   ],
         *
         *   // Segment 2
         *   [
         *     { longitude: -5.199, latitude: 21.223 },
         *     { longitude: -12.9, latitude: 25.85 }
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference
         * @param {IGeoPoint[][]}  multiGeoLine  Coordinates
         */
        set: function (multiGeoLine) {
            this._multiGeoLine = multiGeoLine;
            this.updateLineExtremes(multiGeoLine);
            this.mapLine.multiGeoLine = this._multiGeoLine;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the item's bounding coordinates: coordinates of the East, West,
     * North, and South-most points.
     *
     * @ignore Exclude from docs
     * @param {IGeoPoint[]}  geoPoints  Points of the element
     */
    MapLineSeriesDataItem.prototype.updateLineExtremes = function (multiGeoLine) {
        for (var i = 0, len = multiGeoLine.length; i < len; i++) {
            var geoLine = multiGeoLine[i];
            this.updateExtremes(geoLine);
        }
    };
    return MapLineSeriesDataItem;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map line series.
 *
 * @see {@link IMapLineSeriesEvents} for a list of available Events
 * @see {@link IMapLineSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapLineSeries = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapLineSeries, _super);
    /**
     * Constructor
     */
    function MapLineSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapLineSeries";
        // Set data fields
        _this.dataFields.multiLine = "multiLine";
        _this.dataFields.line = "line";
        _this.dataFields.geoLine = "geoLine";
        _this.dataFields.multiGeoLine = "multiGeoLine";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {MapLineSeriesDataItem} Data Item
     */
    MapLineSeries.prototype.createDataItem = function () {
        return new MapLineSeriesDataItem();
    };
    /**
     * (Re)validates series data, effectively causing the whole series to be
     * redrawn.
     *
     * @ignore Exclude from docs
     */
    MapLineSeries.prototype.validateData = function () {
        var _this = this;
        if (this.data.length > 0 && this._parseDataFrom == 0) {
            this.mapLines.clear();
        }
        // process geoJSON and created map objects
        if (this.useGeodata || this.geodata) {
            var geoJSON = this.chart.geodata;
            if (geoJSON) {
                var features = void 0;
                if (geoJSON.type == "FeatureCollection") {
                    features = geoJSON.features;
                }
                else if (geoJSON.type == "Feature") {
                    features = [geoJSON];
                }
                else if (["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(geoJSON.type) != -1) {
                    features = [{ geometry: geoJSON }];
                }
                else {
                    console.log("nothing found in geoJSON");
                }
                if (features) {
                    var _loop_1 = function (i, len) {
                        var feature = features[i];
                        var geometry = feature.geometry;
                        if (geometry) {
                            var type = geometry.type;
                            var id_1 = feature.id;
                            if (type == "LineString" || type == "MultiLineString") {
                                if (!this_1.checkInclude(this_1.include, this_1.exclude, id_1)) {
                                    return "continue";
                                }
                                var coordinates = geometry.coordinates;
                                var dataObject = _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__["find"](this_1.data, function (value, i) {
                                    return value.id == id_1;
                                });
                                if (type == "LineString") {
                                    coordinates = [coordinates];
                                }
                                if (!dataObject) {
                                    dataObject = { multiLine: coordinates, id: id_1 };
                                    this_1.data.push(dataObject);
                                }
                                else {
                                    if (!dataObject.multiLine) {
                                        dataObject.multiLine = coordinates;
                                    }
                                }
                                // copy properties data to datacontext
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["softCopyProperties"](feature.properties, dataObject);
                            }
                        }
                    };
                    var this_1 = this;
                    for (var i = 0, len = features.length; i < len; i++) {
                        _loop_1(i, len);
                    }
                }
            }
        }
        _super.prototype.validateData.call(this);
        // important! this should go after super
        // if data is parsed in chunks, lines list is corrupted, fix it here
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.dataItems.iterator(), function (dataItem) {
            _this.mapLines.moveValue(dataItem.mapLine);
        });
    };
    Object.defineProperty(MapLineSeries.prototype, "mapLines", {
        /**
         * A list of lines in the series.
         *
         * @return {ListTemplate} Lines
         */
        get: function () {
            if (!this._mapLines) {
                var lineTemplate = this.createLine();
                var mapLines = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](lineTemplate);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](mapLines));
                this._disposers.push(mapLines.template);
                mapLines.events.on("inserted", this.handleObjectAdded, this, false);
                this._mapLines = mapLines;
            }
            return this._mapLines;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new line instance of suitable type.
     *
     * @return {MapLine} New line
     */
    MapLineSeries.prototype.createLine = function () {
        return new _MapLine__WEBPACK_IMPORTED_MODULE_2__["MapLine"]();
    };
    /**
     * (Re)validates the series
     *
     * @ignore Exclude from docs
     */
    MapLineSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.mapLines.iterator(), function (mapLine) {
            mapLine.validate();
        });
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param {Series}  source  Source series
     */
    MapLineSeries.prototype.copyFrom = function (source) {
        this.mapLines.template.copyFrom(source.mapLines.template);
        _super.prototype.copyFrom.call(this, source);
    };
    return MapLineSeries;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapLineSeries"] = MapLineSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapLineSeriesDataItem"] = MapLineSeriesDataItem;
//# sourceMappingURL=MapLineSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js ***!
  \****************************************************************************/
/*! exports provided: MapObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapObject", function() { return MapObject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map object module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all map objects: lines, images, etc.
 *
 * @see {@link IMapObjectEvents} for a list of available events
 * @see {@link IMapObjectAdapters} for a list of available Adapters
 */
var MapObject = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapObject, _super);
    /**
     * Constructor
     */
    function MapObject() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapObject";
        // Set defaults
        _this.isMeasured = false;
        _this.layout = "none";
        _this.clickable = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates this object, forcing it to redraw.
     *
     * @ignore Exclude from docs
     */
    MapObject.prototype.validate = function () {
        if (this.series) {
            this.readerTitle = this.series.itemReaderText;
        }
        _super.prototype.validate.call(this);
    };
    return MapObject;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapObject"] = MapObject;
//# sourceMappingURL=MapObject.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js ***!
  \*****************************************************************************/
/*! exports provided: MapPolygon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapPolygon", function() { return MapPolygon; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony import */ var _core_elements_Polygon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Polygon */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Map polygon module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a polygon on the map.
 *
 * @see {@link IMapPolygonEvents} for a list of available events
 * @see {@link IMapPolygonAdapters} for a list of available Adapters
 */
var MapPolygon = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapPolygon, _super);
    /**
     * Constructor
     */
    function MapPolygon() {
        var _this = _super.call(this) || this;
        _this.className = "MapPolygon";
        _this.polygon = _this.createChild(_core_elements_Polygon__WEBPACK_IMPORTED_MODULE_2__["Polygon"]);
        _this.polygon.shouldClone = false;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.fill = interfaceColors.getFor("secondaryButton");
        _this.stroke = interfaceColors.getFor("secondaryButtonStroke");
        _this.strokeOpacity = 1;
        _this.tooltipPosition = "pointer";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapPolygon.prototype, "multiGeoPolygon", {
        /**
         * @return {IGeoPoint[]} Polygon coordinates
         */
        get: function () {
            return this.getPropertyValue("multiGeoPolygon");
        },
        /**
         * Set of coordinates for the polygon.
         *
         * @param {IGeoPoint[][][]}  multiGeoPolygon  Polygon coordinates
         */
        set: function (multiGeoPolygon) {
            this.setPropertyValue("multiGeoPolygon", multiGeoPolygon, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates the polygon, effectively redrawing it.
     *
     * @ignore Exclude from docs
     */
    MapPolygon.prototype.validate = function () {
        if (this.series) {
            this.polygon.points = this.series.chart.projection.projectGeoArea(this.multiGeoPolygon);
        }
        _super.prototype.validate.call(this);
    };
    /**
     * @ignore Exclude from docs
     */
    MapPolygon.prototype.measureElement = function () {
        // Overriding, just to avoid extra measure
    };
    Object.defineProperty(MapPolygon.prototype, "latitude", {
        /**
         * Calculated polygon center latitude.
         *
         * @readonly
         * @return {number} Center latitude
         */
        get: function () {
            var dataItem = this.dataItem;
            return dataItem.north + (dataItem.south - dataItem.north) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "longitude", {
        /**
         * Calculated polygon center longitude.
         *
         * @readonly
         * @return {number} Center longitude
         */
        get: function () {
            var dataItem = this.dataItem;
            return dataItem.east + (dataItem.west - dataItem.east) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "pixelWidth", {
        /**
         * Not 100% sure about this, as if we add something to MapPolygon this
         * won't be true, but otherwise we will get all 0 and the tooltip won't
         * be positioned properly
         * @hidden
         */
        /**
         * Element's width in pixels.
         *
         * @readonly
         * @return {number} Width (px)
         */
        get: function () {
            return this.polygon.pixelWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "pixelHeight", {
        /**
         * Element's height in pixels.
         *
         * @readonly
         * @return {number} Width (px)
         */
        get: function () {
            return this.polygon.pixelHeight;
        },
        enumerable: true,
        configurable: true
    });
    return MapPolygon;
}(_MapObject__WEBPACK_IMPORTED_MODULE_1__["MapObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapPolygon"] = MapPolygon;
//# sourceMappingURL=MapPolygon.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js ***!
  \***********************************************************************************/
/*! exports provided: MapPolygonSeriesDataItem, MapPolygonSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeriesDataItem", function() { return MapPolygonSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeries", function() { return MapPolygonSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _MapPolygon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapPolygon */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Map polygon series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapPolygonSeries]]
 * @see {@link DataItem}
 */
var MapPolygonSeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapPolygonSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapPolygonSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapPolygonSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "mapPolygon", {
        /**
         * A [[MapPolygon]] element related to this data item.
         *
         * @readonly
         * @return {MapPolygon} Element
         */
        get: function () {
            var _this = this;
            if (!this._mapPolygon) {
                var mapPolygon_1 = this.component.mapPolygons.create();
                this._mapPolygon = mapPolygon_1;
                this.addSprite(mapPolygon_1);
                this._disposers.push(mapPolygon_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.mapPolygons.removeValue(mapPolygon_1);
                    }
                }));
            }
            return this._mapPolygon;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "polygon", {
        /**
         * @return {number[]} Coordinates
         */
        get: function () {
            return this._polygon;
        },
        /**
         * A collection of X/Y coordinates for a single polygon. E.g.:
         *
         * ```JSON
         * [
         *   [
         *     [ 100, 150 ],
         *     [ 120, 200 ],
         *     [ 150, 200 ],
         *     [ 170, 240 ],
         *     [ 100, 150 ]
         *   ]
         * ]
         * ```
         *
         * @param {number[][][]}  polygon  Coordinates
         */
        set: function (polygon) {
            this._polygon = polygon;
            this.multiGeoPolygon = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiPolygonToGeo"]([polygon]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "multiPolygon", {
        /**
         * @return {number[]} Coordinates
         */
        get: function () {
            return this._multiPolygon;
        },
        /**
         * A collection of X/Y coordinates for a multi-part polygon. E.g.:
         *
         * ```JSON
         * [
         *   // Part 1
         *   [
         *     [
         *       [ 100, 150 ],
         *       [ 120, 200 ],
         *       [ 150, 220 ],
         *       [ 170, 240 ],
         *       [ 100, 150 ]
         *     ]
         *   ],
         *
         *   // Part 2
         *   [
         *     [
         *       [ 300, 350 ],
         *       [ 320, 400 ],
         *       [ 350, 420 ],
         *       [ 370, 440 ],
         *       [ 300, 350 ]
         *     ]
         *   ]
         * ]
         * ```
         *
         * @param {number[][][]}  multiPolygon  Coordinates
         */
        set: function (multiPolygon) {
            this._multiPolygon = multiPolygon;
            this.multiGeoPolygon = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiPolygonToGeo"](multiPolygon);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "geoPolygon", {
        /**
         * @return {IGeoPoint[]} Coordinates
         */
        get: function () {
            return this._geoPolygon;
        },
        /**
         * A collection of lat/long coordinates for a single polygon. E.g.:
         *
         * ```JSON
         * [
         *   [
         *     { latitude: -10.0, longitude: -10.0 },
         *     { latitude: 10.0, longitude: -10.0 },
         *     { latitude: 10.0, longitude: 10.0 },
         *     { latitude: -10.0, longitude: -10.0 }
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.6} GeoJSON Polygon reference
         * @param {IGeoPoint[][]}  geoPolygon  Coordinates
         */
        set: function (geoPolygon) {
            this._geoPolygon = geoPolygon;
            this.multiGeoPolygon = [geoPolygon];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "multiGeoPolygon", {
        /**
         * @return {IGeoPoint[]} Coordinates
         */
        get: function () {
            return this._multiGeoPolygon;
        },
        /**
         * A collection of lat/long coordinates for a multi-part polygon. E.g.:
         *
         * ```JSON
         * [
         *   [
         *     [
         *       { longitude: 180.0, latitude: 40.0 },
         *       { longitude: 180.0, latitude: 50.0 },
         *       { longitude: 170.0, latitude: 50.0 },
         *       { longitude: 170.0, latitude: 40.0 },
         *       { longitude: 180.0, latitude: 40.0 }
         *     ]
         *   ],
         *   [
         *     [
         *       { longitude: -170.0, latitude: 40.0 },
         *       { longitude: -170.0, latitude: 50.0 },
         *       { longitude: -180.0, latitude: 50.0 },
         *       { longitude: -180.0, latitude: 40.0 },
         *       { longitude: -170.0, latitude: 40.0 }
         *     ]
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.7} GeoJSON MultiPolygon reference
         * @param {IGeoPoint[][][]}  multiGeoPolygon  Coordinates
         */
        set: function (multiGeoPolygon) {
            this._multiGeoPolygon = multiGeoPolygon;
            this.updateAreaExtremes(multiGeoPolygon);
            this.mapPolygon.multiGeoPolygon = this._multiGeoPolygon;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the item's bounding coordinates: coordinates of the East, West,
     * North, and South-most points.
     *
     * @ignore Exclude from docs
     * @param {IGeoPoint[]}  geoPoints  Points of the element
     */
    MapPolygonSeriesDataItem.prototype.updateAreaExtremes = function (multiGeoPolygon) {
        for (var i = 0, len = multiGeoPolygon.length; i < len; i++) {
            var geoPolygon = multiGeoPolygon[i];
            var surface = geoPolygon[0];
            this.updateExtremes(surface);
        }
    };
    return MapPolygonSeriesDataItem;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map polygon elements.
 *
 * @see {@link IMapPolygonSeriesEvents} for a list of available Events
 * @see {@link IMapPolygonSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapPolygonSeries = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapPolygonSeries, _super);
    /**
     * Constructor
     */
    function MapPolygonSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.parsingStepDuration = 250; // to avoid some extra redrawing
        _this.className = "MapPolygonSeries";
        // Set data fields
        _this.dataFields.multiPolygon = "multiPolygon";
        _this.dataFields.polygon = "polygon";
        _this.dataFields.geoPolygon = "geoPolygon";
        _this.dataFields.multiGeoPolygon = "multiGeoPolygon";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {MapPolygonSeriesDataItem} Data Item
     */
    MapPolygonSeries.prototype.createDataItem = function () {
        return new MapPolygonSeriesDataItem();
    };
    /**
     * @ignore
     */
    MapPolygonSeries.prototype.processIncExc = function () {
        this.mapPolygons.clear();
        _super.prototype.processIncExc.call(this);
    };
    /**
     * (Re)validates series data, effectively causing the whole series to be
     * redrawn.
     *
     * @ignore Exclude from docs
     */
    MapPolygonSeries.prototype.validateData = function () {
        var _this = this;
        if (this.data.length > 0 && this._parseDataFrom == 0) {
            this.mapPolygons.clear();
        }
        this.west = null;
        this.east = null;
        this.north = null;
        this.south = null;
        // process geoJSON and created map objects
        if (this.useGeodata || this.geodata) {
            var geoJSON = !this._dataSources["geodata"] ? this.chart.geodata : undefined;
            if (this.geodata) {
                geoJSON = this.geodata;
            }
            if (geoJSON) {
                var features = void 0;
                if (geoJSON.type == "FeatureCollection") {
                    features = geoJSON.features;
                }
                else if (geoJSON.type == "Feature") {
                    features = [geoJSON];
                }
                else if (["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(geoJSON.type) != -1) {
                    features = [{ geometry: geoJSON }];
                }
                else {
                    console.log("nothing found in geoJSON");
                }
                if (features) {
                    var _loop_1 = function (i, len) {
                        var feature = features[i];
                        var geometry = feature.geometry;
                        if (geometry) {
                            var type = geometry.type;
                            var id_1 = feature.id;
                            if (type == "Polygon" || type == "MultiPolygon") {
                                if (!this_1.checkInclude(this_1.include, this_1.exclude, id_1)) {
                                    return "continue";
                                }
                                var coordinates = geometry.coordinates;
                                if (coordinates) {
                                    // make the same as MultiPolygon
                                    if (type == "Polygon") {
                                        coordinates = [coordinates];
                                    }
                                }
                                // find data object in user-provided data
                                var dataObject = _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__["find"](this_1.data, function (value, i) {
                                    return value.id == id_1;
                                });
                                // create one if not found
                                if (!dataObject) {
                                    dataObject = { multiPolygon: coordinates, id: id_1 };
                                    this_1.data.push(dataObject);
                                }
                                // in case found
                                else {
                                    // if user-provided object doesn't have points data provided in any way:
                                    if (!dataObject.multiPolygon) {
                                        dataObject.multiPolygon = coordinates;
                                    }
                                }
                                // copy properties data to datacontext
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["softCopyProperties"](feature.properties, dataObject);
                            }
                        }
                    };
                    var this_1 = this;
                    for (var i = 0, len = features.length; i < len; i++) {
                        _loop_1(i, len);
                    }
                }
            }
        }
        _super.prototype.validateData.call(this);
        // if data is parsed in chunks, polygon list is corrupted, fix it here
        // !important this should go after super!
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.dataItems.iterator(), function (dataItem) {
            _this.mapPolygons.moveValue(dataItem.mapPolygon);
        });
    };
    /**
     * (Re)validates the series
     *
     * @ignore Exclude from docs
     */
    MapPolygonSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.mapPolygons.iterator(), function (mapPolygon) {
            mapPolygon.validate();
        });
    };
    Object.defineProperty(MapPolygonSeries.prototype, "mapPolygons", {
        /**
         * List of polygon elements in the series.
         *
         * @return {ListTemplate<MapPolygon>} Polygon list
         */
        get: function () {
            if (!this._mapPolygons) {
                var polygonTemplate = new _MapPolygon__WEBPACK_IMPORTED_MODULE_2__["MapPolygon"]();
                var mapPolygons = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](polygonTemplate);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](mapPolygons));
                this._disposers.push(mapPolygons.template);
                mapPolygons.template.focusable = true;
                mapPolygons.events.on("inserted", this.handleObjectAdded, this, false);
                this._mapPolygons = mapPolygons;
            }
            return this._mapPolygons;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * returns MapPolygon by id in geoJSON file
     * @param {string} polygon id
     * @return {MapPolygon}
     */
    MapPolygonSeries.prototype.getPolygonById = function (id) {
        return _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["find"](this.mapPolygons.iterator(), function (mapPolygon) {
            var dataContext = mapPolygon.dataItem.dataContext;
            return dataContext.id == id;
        });
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param {Series}  source  Source series
     */
    MapPolygonSeries.prototype.copyFrom = function (source) {
        this.mapPolygons.template.copyFrom(source.mapPolygons.template);
        _super.prototype.copyFrom.call(this, source);
    };
    return MapPolygonSeries;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapPolygonSeries"] = MapPolygonSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapPolygonSeriesDataItem"] = MapPolygonSeriesDataItem;
//# sourceMappingURL=MapPolygonSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js ***!
  \****************************************************************************/
/*! exports provided: MapSeriesDataItem, MapSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSeriesDataItem", function() { return MapSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSeries", function() { return MapSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _series_Series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Map series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapSeries]].
 *
 * @see {@link DataItem}
 */
var MapSeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapSeriesDataItem";
        _this.values.value = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapSeriesDataItem.prototype, "value", {
        /**
         * @return {number} Value
         */
        get: function () {
            return this.values.value.value;
        },
        /**
         * Numeric value of the data item.
         *
         * Value may be used in heat-map calculations.
         *
         * @param {number}  value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the item's bounding coordinates: coordinates of the East, West,
     * North, and South-most points.
     *
     * @ignore Exclude from docs
     * @param {IGeoPoint[]}  geoPoints  Points of the element
     */
    MapSeriesDataItem.prototype.updateExtremes = function (geoPoints) {
        for (var s = 0; s < geoPoints.length; s++) {
            var longitude = geoPoints[s].longitude;
            var latitude = geoPoints[s].latitude;
            if ((this.west > longitude) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.west)) {
                this.west = longitude;
            }
            if ((this.east < longitude) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.east)) {
                this.east = longitude;
            }
            if ((this.north < latitude) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.north)) {
                this.north = latitude;
            }
            if ((this.south > latitude) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.south)) {
                this.south = latitude;
            }
        }
    };
    Object.defineProperty(MapSeriesDataItem.prototype, "zoomLevel", {
        /**
         * @return {number} Zoom level
         */
        get: function () {
            return this.properties["zoomLevel"];
        },
        /**
         * When `zoomToMapObject()` is called the map will either calculate suitable
         * zoom level itself or use object's `zoomLevel` if set.
         *
         * @param {number}  value  Zoom level
         */
        set: function (value) {
            this.setProperty("zoomLevel", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "zoomGeoPoint", {
        /**
         * @return {IGeoPoint} Zoom geo point
         */
        get: function () {
            return this.properties["zoomGeoPoint"];
        },
        /**
         * When `zoomToMapObject()` is called the map will either calculate suitable
         * center position itself or use object's `zoomGeoPoint` if set.
         *
         * @param {IGeoPoint}  value  Zoom geo point
         */
        set: function (value) {
            this.setProperty("zoomGeoPoint", value);
        },
        enumerable: true,
        configurable: true
    });
    return MapSeriesDataItem;
}(_series_Series__WEBPACK_IMPORTED_MODULE_1__["SeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for series of map objects.
 *
 * @see {@link IMapSeriesEvents} for a list of available Events
 * @see {@link IMapSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapSeries = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSeries, _super);
    /**
     * Constructor
     */
    function MapSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapSeries";
        // Set defaults
        _this.isMeasured = false;
        _this.nonScalingStroke = true;
        // Set data fields
        _this.dataFields.value = "value";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {MapSeriesDataItem} Data Item
     */
    MapSeries.prototype.createDataItem = function () {
        return new MapSeriesDataItem();
    };
    /**
     * (Re)validates series data, effectively causing the whole series to be
     * redrawn.
     *
     * @ignore Exclude from docs
     */
    MapSeries.prototype.validateData = function () {
        var _this = this;
        _super.prototype.validateData.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_3__["each"](this.dataItems.iterator(), function (dataItem) {
            if ((_this.west > dataItem.west) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](_this.west)) {
                _this.west = dataItem.west;
            }
            if ((_this.east < dataItem.east) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](_this.east)) {
                _this.east = dataItem.east;
            }
            if ((_this.north < dataItem.north) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](_this.north)) {
                _this.north = dataItem.north;
            }
            if ((_this.south > dataItem.south) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](_this.south)) {
                _this.south = dataItem.south;
            }
        });
        if (this.chart) {
            this.chart.updateExtremes();
        }
    };
    /**
     * Checks whether object should be included in series.
     *
     * @param  {string[]}  includes  A list of explicitly included ids
     * @param  {string[]}  excludes  A list of explicitly excluded ids
     * @param  {string}    id        Id of the object
     * @return {boolean}             Include?
     */
    MapSeries.prototype.checkInclude = function (includes, excludes, id) {
        if (includes) {
            if (includes.length == 0) {
                return false;
            }
            else {
                if (includes.indexOf(id) == -1) {
                    return false;
                }
            }
        }
        if (excludes && excludes.length > 0) {
            if (excludes.indexOf(id) != -1) {
                return false;
            }
        }
        return true;
    };
    Object.defineProperty(MapSeries.prototype, "useGeodata", {
        /**
         * @return {boolean} Use GeoJSON data?
         */
        get: function () {
            return this.getPropertyValue("useGeodata");
        },
        /**
         * Should the map extract all the data about element from the GeoJSON?
         *
         * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`
         * polygon series will need to contain geographical data in itself in order
         * to be drawn.
         *
         * If this is set to `true`, series will try to extract data for its objects
         * from either chart-level `geodata` or from series' `geodata` which holds
         * map infor in GeoJSON format.
         *
         * @default false
         * @param {boolean}  value  Use GeoJSON data?
         */
        set: function (value) {
            if (this.setPropertyValue("useGeodata", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "include", {
        /**
         * @return {string[]} Included objects
         */
        get: function () {
            return this.getPropertyValue("include");
        },
        /**
         * A list of object ids that should be explictly included in the series.
         *
         * If this is not set, the series will automatically include all of the
         * objects, available in the GeoJSON map. (minus the ones listed in
         * `exclude`)
         *
         * If you need to display only specific objects, use `include`. E.g.:
         *
         * `include = ["FR", "ES", "DE"];`
         *
         * The above will show only France, Spain, and Germany out of the whole map.
         *
         * @param {string[]}  value  Included objects
         */
        set: function (value) {
            if (this.setPropertyValue("include", value)) {
                this.processIncExc();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    MapSeries.prototype.processIncExc = function () {
        //this.data = [];
        this.invalidateData();
    };
    Object.defineProperty(MapSeries.prototype, "exclude", {
        /**
         * @return {string[]} Excluded ids
         */
        get: function () {
            return this.getPropertyValue("exclude");
        },
        /**
         * A list of object ids that should be excluded from the series.
         *
         * E.g. you want to include all of the areas from a GeoJSON map, except
         * Antarctica.
         *
         * You'd leave `include` empty, and set `exclude = ["AQ"]`.
         *
         * @param {string[]}  value  Excluded ids
         */
        set: function (value) {
            if (this.setPropertyValue("exclude", value)) {
                this.processIncExc();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a newly added object.
     *
     * @param {IListEvents<MapObject>["inserted"]} event [description]
     */
    MapSeries.prototype.handleObjectAdded = function (event) {
        var mapObject = event.newValue;
        mapObject.parent = this;
        mapObject.series = this;
        mapObject.strokeWidth = mapObject.strokeWidth;
    };
    Object.defineProperty(MapSeries.prototype, "geodata", {
        /**
         * @return {Object} GeoJSON data
         */
        get: function () {
            return this._geodata;
        },
        /**
         * Map data in GeoJSON format.
         *
         * The series supports the following GeoJSON objects: `Point`, `LineString`,
         * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.
         *
         * @see {@link http://geojson.org/} Official GeoJSON format specification
         * @param {Object} geoJSON GeoJSON data
         */
        set: function (geodata) {
            if (geodata != this._geodata) {
                this._geodata = geodata;
                this.invalidateData();
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_3__["each"](this._dataUsers.iterator(), function (x) {
                    x.invalidateData();
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "geodataSource", {
        /**
         * Returns a [[DataSource]] specifically for loading Component's data.
         *
         * @return {DataSource} Data source
         */
        get: function () {
            if (!this._dataSources["geodata"]) {
                this.getDataSource("geodata");
            }
            return this._dataSources["geodata"];
        },
        /**
         * Sets a [[DataSource]] to be used for loading Component's data.
         *
         * @param {DataSource} value Data source
         */
        set: function (value) {
            var _this = this;
            if (this._dataSources["geodata"]) {
                this.removeDispose(this._dataSources["geodata"]);
            }
            this._dataSources["geodata"] = value;
            this._dataSources["geodata"].component = this;
            this.events.on("inited", function () {
                _this.loadData("geodata");
            }, undefined, false);
            this.setDataSourceEvents(value, "geodata");
        },
        enumerable: true,
        configurable: true
    });
    return MapSeries;
}(_series_Series__WEBPACK_IMPORTED_MODULE_1__["Series"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapSeries"] = MapSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapSeriesDataItem"] = MapSeriesDataItem;
//# sourceMappingURL=MapSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js ***!
  \****************************************************************************/
/*! exports provided: MapSpline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSpline", function() { return MapSpline; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Polyspline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map spline module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a spline on the map.
 *
 * @see {@link IMapSplineEvents} for a list of available events
 * @see {@link IMapSplineAdapters} for a list of available Adapters
 */
var MapSpline = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSpline, _super);
    /**
     * Constructor
     */
    function MapSpline() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapSpline";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapSpline.prototype.createLine = function () {
        this.line = new _core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_2__["Polyspline"]();
        this.line.tensionX = 0.8;
        this.line.tensionY = 0.8;
    };
    Object.defineProperty(MapSpline.prototype, "shortestDistance", {
        /**
         * ShortestDistance = true is not supported by MapSpline, only MapLine does support it
         * @default false
         * @param {boolean}  value
         * @todo: review description
         */
        get: function () {
            return false;
        },
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    return MapSpline;
}(_MapLine__WEBPACK_IMPORTED_MODULE_1__["MapLine"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapSpline"] = MapSpline;
//# sourceMappingURL=MapSpline.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSplineSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSplineSeries.js ***!
  \**********************************************************************************/
/*! exports provided: MapSplineSeriesDataItem, MapSplineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeriesDataItem", function() { return MapSplineSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeries", function() { return MapSplineSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony import */ var _MapSpline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapSpline */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map spline series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapSplineSeries]]
 * @see {@link DataItem}
 */
var MapSplineSeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSplineSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapSplineSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapSplineSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return MapSplineSeriesDataItem;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map spline elements.
 *
 * @see {@link IMapSplineSeriesEvents} for a list of available Events
 * @see {@link IMapSplineSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapSplineSeries = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSplineSeries, _super);
    /**
     * Constructor
     */
    function MapSplineSeries() {
        var _this = _super.call(this) || this;
        _this.className = "MapSplineSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {MapSplineSeriesDataItem} Data Item
     */
    MapSplineSeries.prototype.createDataItem = function () {
        return new MapSplineSeriesDataItem();
    };
    /**
     * Returns a new line instance of suitable type.
     *
     * @return {MapSpline} New line
     */
    MapSplineSeries.prototype.createLine = function () {
        return new _MapSpline__WEBPACK_IMPORTED_MODULE_2__["MapSpline"]();
    };
    return MapSplineSeries;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapSplineSeries"] = MapSplineSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapSplineSeriesDataItem"] = MapSplineSeriesDataItem;
//# sourceMappingURL=MapSplineSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js ***!
  \***************************************************************************/
/*! exports provided: multiPolygonToGeo, multiLineToGeo, multiPointToGeo, pointToGeo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiPolygonToGeo", function() { return multiPolygonToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiLineToGeo", function() { return multiLineToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiPointToGeo", function() { return multiPointToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointToGeo", function() { return pointToGeo; });
/**
 * A collection of Map-related utility functions.
 */
/**
 * Converts a multi-part polygon in X/Y coordinates to a geo-multipolygon in
 * geo-points (lat/long).
 *
 * @param  {number[][][][]}  multiPolygon  Source multi-polygon
 * @return {IGeoPoint[]}                   Geo-multipolygon
 */
function multiPolygonToGeo(multiPolygon) {
    var multiGeoArea = [];
    for (var i = 0, len = multiPolygon.length; i < len; i++) {
        var surface = multiPolygon[i][0];
        var hole = multiPolygon[i][1];
        //let holePoints: IGeoPoint[] = [];
        multiGeoArea[i] = [];
        if (surface) {
            multiGeoArea[i].push(multiPointToGeo(surface));
        }
        if (hole) {
            multiGeoArea[i].push(multiPointToGeo(hole));
        }
    }
    return multiGeoArea;
}
/**
 * Converts a multiline in X/Y coordinates to a geo-multiline in geo-points
 * (lat/long).
 *
 * @param  {number[][][]}  multiLine  Source multiline
 * @return {IGeoPoint[]}              Geo-multiline
 */
function multiLineToGeo(multiLine) {
    var multiGeoLine = [];
    for (var i = 0, len = multiLine.length; i < len; i++) {
        multiGeoLine.push(multiPointToGeo(multiLine[i]));
    }
    return multiGeoLine;
}
/**
 * Converts multiple X/Y points into a lat/long geo-points.
 *
 * @param  {number[][]}   points  Source points
 * @return {IGeoPoint[]}          Geo-points
 */
function multiPointToGeo(points) {
    var geoPoints = [];
    for (var i = 0, len = points.length; i < len; i++) {
        geoPoints.push(pointToGeo(points[i]));
    }
    return geoPoints;
}
/**
 * Converts X/Y point into a lat/long geo-point.
 *
 * @param  {number[]}   point  Source point
 * @return {IGeoPoint}         Geo-point
 */
function pointToGeo(point) {
    return { longitude: point[0], latitude: point[1] };
}
//# sourceMappingURL=MapUtils.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js ***!
  \***************************************************************************/
/*! exports provided: SmallMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmallMap", function() { return SmallMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Rectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A module for the mini-map control.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a "bird's eye" view of the whole map.
 *
 * This control creates a mini-map with the whole of the map, highlighting
 * the area which is in the current viewport of the map map.
 *
 * @see {@link ISmallMapEvents} for a list of available events
 * @see {@link ISmallMapAdapters} for a list of available Adapters
 * @important
 */
var SmallMap = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SmallMap, _super);
    /**
     * Constructor
     */
    function SmallMap() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A target map.
         *
         * @type {MutableValueDisposer<MapChart>}
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        _this.className = "SmallMap";
        // Set defaults
        _this.align = "left";
        _this.valign = "bottom";
        _this.percentHeight = 20;
        _this.percentWidth = 20;
        _this.margin(5, 5, 5, 5);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__["InterfaceColorSet"]();
        // Set background defailts
        _this.background.fillOpacity = 0.9;
        _this.background.fill = interfaceColors.getFor("background");
        // Set up events
        _this.events.on("hit", _this.moveToPosition, _this, false);
        _this.events.on("maxsizechanged", _this.updateMapSize, _this, false);
        // Create a container
        _this.seriesContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        _this.seriesContainer.shouldClone = false;
        // Create an outline rectangle
        var rectangle = _this.createChild(_core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_2__["Rectangle"]);
        rectangle.shouldClone = false;
        rectangle.stroke = interfaceColors.getFor("alternativeBackground");
        rectangle.strokeWidth = 1;
        rectangle.strokeOpacity = 0.5;
        rectangle.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])(); //"none";
        rectangle.verticalCenter = "middle";
        rectangle.horizontalCenter = "middle";
        rectangle.isMeasured = false;
        _this.rectangle = rectangle;
        _this._disposers.push(_this._chart);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(SmallMap.prototype, "series", {
        /**
         * A list of map series used to draw the mini-map.
         *
         * @readonly
         * @return {List<MapSeries>} Series
         */
        get: function () {
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._series.events.on("inserted", this.handleSeriesAdded, this, false);
                this._series.events.on("removed", this.handleSeriesRemoved, this, false);
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a new series when they are pushed into a `series` list.
     *
     * @param {IListEvents<MapSeries>["inserted"]} event Event
     */
    SmallMap.prototype.handleSeriesAdded = function (event) {
        var series = event.newValue;
        if (this.chart.series.contains(series)) {
            var newSeries = series.clone();
            this._series.removeValue(series);
            this._series.push(newSeries);
            series = newSeries;
            this.chart.dataUsers.push(newSeries);
        }
        series.chart = this.chart;
        series.parent = this.seriesContainer;
        series.interactionsEnabled = false;
    };
    /**
     * Cleans up after series are removed from Scrollbar.
     *
     * @param {IListEvents<XYSeries>["removed"]}  event  Event
     */
    SmallMap.prototype.handleSeriesRemoved = function (event) {
        //let sourceSeries: MapSeries = event.oldValue;
        this.invalidate();
    };
    /**
     * Moves main map pan position after click on the small map.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["hit"]}  event  Event
     */
    SmallMap.prototype.moveToPosition = function (event) {
        var rectPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"](event.spritePoint, this, this.seriesContainer);
        var geoPoint = this.chart.seriesPointToGeo(rectPoint);
        this.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);
    };
    Object.defineProperty(SmallMap.prototype, "chart", {
        /**
         * @return {MapChart} Chart/map
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A chart/map that this control is meant for.
         *
         * @param {MapChart}  chart  Chart/map
         */
        set: function (chart) {
            if (this.chart != chart) {
                this._chart.set(chart, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                    //chart.events.on("zoomlevelchanged", this.updateRectangle, this, false),
                    chart.events.on("mappositionchanged", this.updateRectangle, this, false),
                    chart.events.on("scaleratiochanged", this.updateMapSize, this, false)
                ]));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the viewport recangle as per current map zoom/pan position.
     *
     * @ignore Exclude from docs
     */
    SmallMap.prototype.updateRectangle = function () {
        var chart = this.chart;
        var zoomLevel = chart.zoomLevel;
        var rectangle = this.rectangle;
        rectangle.width = this.pixelWidth / zoomLevel;
        rectangle.height = this.pixelHeight / zoomLevel;
        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;
        var seriesContainer = chart.seriesContainer;
        rectangle.x = Math.ceil((zoomLevel * seriesContainer.pixelWidth / 2 - seriesContainer.pixelX) * scale / zoomLevel); // + rectangle.pixelWidth / 2);
        rectangle.y = Math.ceil((zoomLevel * seriesContainer.pixelHeight / 2 - seriesContainer.pixelY) * scale / zoomLevel); // + rectangle.pixelHeight / 2);
        rectangle.validate();
    };
    /**
     * Update map size so that internal elements can redraw themselves after
     * the size of the small map changes.
     *
     * @ignore Exclude from docs
     */
    SmallMap.prototype.updateMapSize = function () {
        if (this.chart) {
            this.seriesContainer.scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;
            this.updateRectangle();
            this.afterDraw();
        }
    };
    /**
     * Update elements after drawing the small map.
     */
    SmallMap.prototype.afterDraw = function () {
        _super.prototype.afterDraw.call(this);
        this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });
        this.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    SmallMap.prototype.processConfig = function (config) {
        if (config) {
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isArray"](config.series)) {
                for (var i = 0, len = config.series.length; i < len; i++) {
                    var series = config.series[i];
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isString"](series) && this.map.hasKey(series)) {
                        config.series[i] = this.map.getKey(series);
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return SmallMap;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["SmallMap"] = SmallMap;
//# sourceMappingURL=SmallMap.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js ***!
  \******************************************************************************/
/*! exports provided: ZoomControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomControl", function() { return ZoomControl; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Zoom control module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a control for zooming the map.
 *
 * @see {@link IZoomControlEvents} for a list of available events
 * @see {@link IZoomControlAdapters} for a list of available Adapters
 * @important
 */
var ZoomControl = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZoomControl, _super);
    /**
     * Constructor
     */
    function ZoomControl() {
        var _this = _super.call(this) || this;
        /**
         * A target map.
         *
         * @type {MutableValueDisposer<MapChart>}
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        _this.className = "ZoomControl";
        _this.align = "right";
        _this.valign = "bottom";
        _this.layout = "vertical";
        _this.padding(5, 5, 5, 5);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]();
        var plusButton = _this.createChild(_core_elements_Button__WEBPACK_IMPORTED_MODULE_2__["Button"]);
        plusButton.shouldClone = false;
        plusButton.label.text = "+";
        plusButton.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        plusButton.padding(5, 5, 5, 5);
        //plusButton.fontFamily = "Verdana";
        _this.plusButton = plusButton;
        var slider = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        slider.shouldClone = false;
        slider.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
        slider.background.fill = interfaceColors.getFor("alternativeBackground");
        slider.background.fillOpacity = 0.05;
        slider.background.events.on("hit", _this.handleBackgroundClick, _this, false);
        slider.events.on("sizechanged", _this.updateThumbSize, _this, false);
        _this.slider = slider;
        var thumb = slider.createChild(_core_elements_Button__WEBPACK_IMPORTED_MODULE_2__["Button"]);
        thumb.shouldClone = false;
        thumb.padding(0, 0, 0, 0);
        thumb.draggable = true;
        thumb.events.on("drag", _this.handleThumbDrag, _this, false);
        _this.thumb = thumb;
        var minusButton = _this.createChild(_core_elements_Button__WEBPACK_IMPORTED_MODULE_2__["Button"]);
        minusButton.shouldClone = false;
        minusButton.label.text = "-";
        minusButton.padding(5, 5, 5, 5);
        //minusButton.fontFamily = "Verdana";
        _this.minusButton = minusButton;
        // Set roles
        _this.thumb.role = "slider";
        _this.thumb.readerLive = "polite";
        // Set reader text
        _this.thumb.readerTitle = _this.language.translate("Use arrow keys to zoom in and out");
        _this.minusButton.readerTitle = _this.language.translate("Press ENTER to zoom in");
        _this.plusButton.readerTitle = _this.language.translate("Press ENTER to zoom out");
        _this.applyTheme();
        _this.events.on("propertychanged", function (event) {
            if (event.property == "layout") {
                _this.fixLayout();
            }
        }, undefined, false);
        _this._disposers.push(_this._chart);
        _this.fixLayout();
        return _this;
    }
    ZoomControl.prototype.fixLayout = function () {
        if (this.layout == "vertical") {
            this.width = 40;
            this.height = undefined;
            this.minusButton.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.thumb.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.plusButton.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.slider.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.minusButton.marginTop = 1;
            this.plusButton.marginBottom = 2;
            this.slider.height = 0;
            this.minusButton.toFront();
            this.plusButton.toBack();
            this.thumb.minX = 0;
            this.thumb.maxX = 0;
            this.thumb.minY = 0;
        }
        else if (this.layout == "horizontal") {
            this.thumb.minX = 0;
            this.thumb.minY = 0;
            this.thumb.maxY = 0;
            this.height = 40;
            this.width = undefined;
            this.minusButton.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.minusButton.width = 30;
            this.thumb.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.thumb.width = undefined;
            this.plusButton.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.plusButton.width = 30;
            this.slider.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            this.slider.width = 0;
            this.minusButton.marginLeft = 2;
            this.plusButton.marginRight = 2;
            this.minusButton.toBack();
            this.plusButton.toFront();
        }
    };
    /**
     * Handles zoom operation after clicking on the slider background.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["hit"]}  event  Event
     */
    ZoomControl.prototype.handleBackgroundClick = function (event) {
        var sprite = event.target;
        var y = event.spritePoint.y;
        var chart = this.chart;
        var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;
        var minPower = Math.log(chart.minZoomLevel) / Math.LN2;
        var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));
        var zoomLevel = Math.pow(2, power);
        chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);
    };
    Object.defineProperty(ZoomControl.prototype, "chart", {
        /**
         * @return {MapChart} Map/chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A main chart/map that this zoom control is for.
         *
         * @param {MapChart}  chart  Map/chart
         */
        set: function (chart) {
            var _this = this;
            this._chart.set(chart, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                chart.events.on("maxsizechanged", this.updateThumbSize, this, false),
                chart.events.on("zoomlevelchanged", this.updateThumb, this, false),
                this.minusButton.events.on("hit", function () { chart.zoomOut(chart.zoomGeoPoint); }, chart, false),
                Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_6__["getInteraction"])().body.events.on("keyup", function (ev) {
                    if (_this.topParent.hasFocused) {
                        if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__["keyboard"].isKey(ev.event, "enter")) {
                            if (_this.minusButton.isFocused) {
                                chart.zoomOut();
                            }
                            else if (_this.plusButton.isFocused) {
                                chart.zoomIn();
                            }
                        }
                        else if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__["keyboard"].isKey(ev.event, "plus")) {
                            chart.zoomIn();
                        }
                        else if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__["keyboard"].isKey(ev.event, "minus")) {
                            chart.zoomOut();
                        }
                    }
                }, chart),
                this.plusButton.events.on("hit", function () { chart.zoomIn(chart.zoomGeoPoint); }, chart, false)
            ]));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the slider's thumb size based on the available zoom space.
     *
     * @ignore Exclude from docs
     */
    ZoomControl.prototype.updateThumbSize = function () {
        var chart = this.chart;
        if (chart) {
            var slider = this.slider;
            var thumb = this.thumb;
            if (this.layout == "vertical") {
                thumb.minHeight = Math.min(this.slider.pixelHeight, 20);
                thumb.height = slider.pixelHeight / this.stepCount;
                thumb.maxY = slider.pixelHeight - thumb.pixelHeight;
                if (thumb.pixelHeight <= 1) {
                    thumb.visible = false;
                }
                else {
                    thumb.visible = true;
                }
            }
            else {
                thumb.minWidth = Math.min(this.slider.pixelWidth, 20);
                thumb.width = slider.pixelWidth / this.stepCount;
                thumb.maxX = slider.pixelWidth - thumb.pixelWidth;
                if (thumb.pixelWidth <= 1) {
                    thumb.visible = false;
                }
                else {
                    thumb.visible = true;
                }
            }
        }
    };
    /**
     * Updates thumb according to current zoom position from map.
     *
     * @ignore Exclude from docs
     */
    ZoomControl.prototype.updateThumb = function () {
        var slider = this.slider;
        var chart = this.chart;
        var thumb = this.thumb;
        if (!thumb.isDown) {
            var step = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;
            if (this.layout == "vertical") {
                thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;
            }
            else {
                thumb.x = slider.pixelWidth * step / this.stepCount;
            }
        }
    };
    /**
     * Zooms the actual map when slider position changes.
     *
     * @ignore Exclude from docs
     */
    ZoomControl.prototype.handleThumbDrag = function () {
        var slider = this.slider;
        var chart = this.chart;
        var thumb = this.thumb;
        var step;
        var minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;
        if (this.layout == "vertical") {
            step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);
        }
        else {
            step = this.stepCount * thumb.pixelX / slider.pixelWidth;
        }
        step = minStep + step;
        var zoomLevel = Math.pow(2, step);
        chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);
    };
    Object.defineProperty(ZoomControl.prototype, "stepCount", {
        /**
         * Returns the step countfor the slider grid according to map's min and max
         * zoom level settings.
         *
         * @ignore Exclude from docs
         * @return {number} Step count
         */
        get: function () {
            return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a background element for slider control.
     *
     * @ignore Exclude from docs
     * @return {this} Background
     */
    ZoomControl.prototype.createBackground = function () {
        return new _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_3__["RoundedRectangle"]();
    };
    return ZoomControl;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["ZoomControl"] = ZoomControl;
//# sourceMappingURL=ZoomControl.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections.js ***!
  \******************************************************************************/
/*! exports provided: Mercator, Miller, Eckert6, Orthographic, Projection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _projections_Mercator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projections/Mercator */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Mercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mercator", function() { return _projections_Mercator__WEBPACK_IMPORTED_MODULE_0__["Mercator"]; });

/* harmony import */ var _projections_Miller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projections/Miller */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Miller.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Miller", function() { return _projections_Miller__WEBPACK_IMPORTED_MODULE_1__["Miller"]; });

/* harmony import */ var _projections_Eckert6__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projections/Eckert6 */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Eckert6.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Eckert6", function() { return _projections_Eckert6__WEBPACK_IMPORTED_MODULE_2__["Eckert6"]; });

/* harmony import */ var _projections_Orthographic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projections/Orthographic */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Orthographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Orthographic", function() { return _projections_Orthographic__WEBPACK_IMPORTED_MODULE_3__["Orthographic"]; });

/* harmony import */ var _projections_Projection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projections/Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return _projections_Projection__WEBPACK_IMPORTED_MODULE_4__["Projection"]; });






//# sourceMappingURL=projections.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Eckert6.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Eckert6.js ***!
  \**************************************************************************************/
/*! exports provided: Eckert6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Eckert6", function() { return Eckert6; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Functionality for Eckert6 projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * Eckert6 projection.
 */
var Eckert6 = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Eckert6, _super);
    function Eckert6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Converts screen coordinates to latitude/longitude.
     *
     * @param  {number}     x  X
     * @param  {number}     y  Y
     * @return {IGeoPoint}     Geographical coordinates in radians
     */
    Eckert6.prototype.unproject = function (x, y) {
        var j = 1 + Math.PI / 2, k = Math.sqrt(j / 2);
        return {
            longitude: x * 2 * k / (1 + Math.cos(y *= k)),
            latitude: Math.asin((y + Math.sin(y)) / j)
        };
    };
    /**
     * Converts geographical coordinates to screen coordinates.
     *
     * @param  {number}  lambda  Lambda parameter
     * @param  {number}  phi     Phi parameter
     * @return {IPoint}          Screen coordinates
     */
    Eckert6.prototype.project = function (lambda, phi) {
        var k = (1 + Math.PI / 2) * Math.sin(phi);
        for (var i = 0, delta = Infinity; i < 10 && Math.abs(delta) > 0.00001; i++) {
            phi -= delta = (phi + Math.sin(phi) - k) / (1 + Math.cos(phi));
        }
        k = Math.sqrt(2 + Math.PI);
        return {
            x: lambda * (1 + Math.cos(phi)) / k,
            y: 2 * phi / k
        };
    };
    return Eckert6;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Eckert6"] = Eckert6;
//# sourceMappingURL=Eckert6.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Mercator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Mercator.js ***!
  \***************************************************************************************/
/*! exports provided: Mercator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mercator", function() { return Mercator; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * Mercator projection.
 */
var Mercator = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Mercator, _super);
    function Mercator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Converts screen coordinates to latitude/longitude in radians
     * @param  {number}     x  X
     * @param  {number}     y  Y
     * @return {IGeoPoint}     Geographical coordinates
     */
    Mercator.prototype.unproject = function (x, y) {
        return {
            longitude: x,
            latitude: 2 * Math.atan(Math.exp(y)) - Math.PI / 2
        };
    };
    /**
     * Converts geographical coordinates to screen coordinates.
     *
     * @param  {number}  lambda  Lambda parameter
     * @param  {number}  phi     Phi parameter
     * @return {IPoint}          Screen coordinates
     */
    Mercator.prototype.project = function (lambda, phi) {
        return {
            x: lambda,
            y: Math.log(Math.tan((Math.PI / 2 + phi) / 2))
        };
    };
    return Mercator;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Mercator"] = Mercator;
//# sourceMappingURL=Mercator.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Miller.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Miller.js ***!
  \*************************************************************************************/
/*! exports provided: Miller */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Miller", function() { return Miller; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Functionality for Miller projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * Miller projection.
 */
var Miller = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Miller, _super);
    function Miller() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Converts screen coordinates to latitude/longitude.
     *
     * @param  {number}     x  X
     * @param  {number}     y  Y
     * @return {IGeoPoint}     Geographical coordinates in radians
     */
    Miller.prototype.unproject = function (x, y) {
        return {
            longitude: x,
            latitude: 2.5 * Math.atan(Math.exp(0.8 * y)) - 0.625 * Math.PI
        };
    };
    /**
     * Converts geographical coordinates to screen coordinates.
     *
     * @param  {number}  lambda  Lambda parameter
     * @param  {number}  phi     Phi parameter
     * @return {IPoint}          Screen coordinates
     */
    Miller.prototype.project = function (lambda, phi) {
        return {
            x: lambda,
            y: 1.25 * Math.log(Math.tan(Math.PI / 4 + 0.4 * phi))
        };
    };
    return Miller;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Miller"] = Miller;
//# sourceMappingURL=Miller.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Orthographic.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Orthographic.js ***!
  \*******************************************************************************************/
/*! exports provided: Orthographic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Orthographic", function() { return Orthographic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var Orthographic = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Orthographic, _super);
    function Orthographic() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Converts geographical coordinates to screen coordinates.
     *
     * @param  {number}  lambda  Lambda parameter
     * @param  {number}  phi     Phi parameter
     * @return {IPoint}          Screen coordinates
     */
    Orthographic.prototype.project = function (lambda, phi) {
        return { x: Math.cos(phi) * Math.sin(lambda), y: Math.sin(phi) };
    };
    Orthographic.prototype.getClipRectangle1 = function () {
        var longitude = 90 - this.deltaLongitude;
        var latitude = -this.deltaLatitude;
        var smallNum = 0.00001;
        return [{ longitude: longitude - 180, latitude: latitude - 90 }, { longitude: longitude - smallNum, latitude: latitude - 90 }, { longitude: longitude - smallNum, latitude: latitude + 90 }, { longitude: longitude - 180, latitude: latitude + 90 }];
    };
    Orthographic.prototype.getRect1 = function () {
        var longitude = 90 - this.deltaLongitude;
        var latitude = -this.deltaLatitude;
        return { north: latitude + 90, south: latitude - 90, west: longitude - 180, east: longitude };
    };
    Orthographic.prototype.getClipRectangle2 = function () {
        var longitude = 90 - this.deltaLongitude;
        var latitude = -this.deltaLatitude;
        var smallNum = 0.00001;
        var delta;
        if (longitude > 0) {
            delta = -360;
        }
        else {
            delta = 360;
        }
        return [{ longitude: smallNum + longitude - 180 + delta, latitude: latitude - 90 }, { longitude: longitude - smallNum + delta, latitude: latitude - 90 }, { longitude: longitude - smallNum + delta, latitude: latitude + 90 }, { longitude: smallNum + longitude - 180 + delta, latitude: latitude + 90 }];
    };
    Orthographic.prototype.getRect2 = function () {
        var longitude = 90 - this.deltaLongitude;
        var latitude = -this.deltaLatitude;
        var delta;
        if (longitude > 0) {
            delta = -360;
        }
        else {
            delta = 360;
        }
        return { north: latitude + 90, south: latitude - 90, west: longitude - 180 + delta, east: longitude + delta };
    };
    Orthographic.prototype.clipGeoArea = function (geoArea) {
        if (!geoArea) {
            return;
        }
        var clippedArea = [];
        var clipRectangle1 = this.getClipRectangle1();
        var clipRectangle2 = this.getClipRectangle2();
        var rect1 = this.getRect1();
        var rect2 = this.getRect2();
        for (var i = 0, len = geoArea.length; i < len; i++) {
            var surface = geoArea[i][0];
            var hole = geoArea[i][1];
            var clippedAreas = [];
            if (surface) {
                var surfaceRect = this.getExtremes(surface);
                if (!this.isInside(surfaceRect, rect1) && !this.isOutside(surfaceRect, rect1)) {
                    var clippedSurface1 = this.clip(surface, clipRectangle1);
                    var clippedHole1 = this.clip(hole, clipRectangle1);
                    clippedAreas.push([clippedSurface1, clippedHole1]);
                }
                else if (this.isInside(surfaceRect, rect1)) {
                    clippedAreas.push([surface, hole]);
                }
                if (!this.isInside(surfaceRect, rect2) && !this.isOutside(surfaceRect, rect2)) {
                    var clippedSurface2 = this.clip(surface, clipRectangle2);
                    var clippedHole2 = this.clip(hole, clipRectangle2);
                    clippedAreas.push([clippedSurface2, clippedHole2]);
                }
                else if (this.isInside(surfaceRect, rect2)) {
                    clippedAreas.push([surface, hole]);
                }
            }
            try {
                for (var clippedAreas_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](clippedAreas), clippedAreas_1_1 = clippedAreas_1.next(); !clippedAreas_1_1.done; clippedAreas_1_1 = clippedAreas_1.next()) {
                    var area = clippedAreas_1_1.value;
                    clippedArea.push(area);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (clippedAreas_1_1 && !clippedAreas_1_1.done && (_a = clippedAreas_1.return)) _a.call(clippedAreas_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        for (var i = 0, len = clippedArea.length; i < len; i++) {
            var surface = clippedArea[i][0];
            //let hole: IGeoPoint[] = clippedArea[i][1];
            if (surface) {
                var len_1 = surface.length;
                var prevPoint = surface[len_1 - 1];
                for (var i_1 = 0; i_1 < len_1; i_1++) {
                    var point = surface[i_1];
                    if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](point.longitude, 4) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](prevPoint.longitude, 4)) {
                        var stepCount = Math.abs((prevPoint.latitude - point.latitude) * 2);
                        var extraPoints = [];
                        if (stepCount > 1) {
                            for (var s = 1; s < stepCount; s++) {
                                extraPoints.push({ longitude: prevPoint.longitude, latitude: prevPoint.latitude + (point.latitude - prevPoint.latitude) / stepCount * s });
                            }
                            surface.splice.apply(surface, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"]([i_1, 0], extraPoints));
                            i_1 = i_1 + extraPoints.length;
                        }
                    }
                    prevPoint = point;
                }
            }
        }
        return clippedArea;
        var e_1, _a;
    };
    return Orthographic;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Orthographic"] = Orthographic;
//# sourceMappingURL=Orthographic.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js ***!
  \*****************************************************************************************/
/*! exports provided: Projection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return Projection; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _Geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/**
 * This module contains funcitonality related to geographical projections
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This is a base class for a geographical projection.
 */
var Projection = /** @class */ (function () {
    function Projection() {
        this.deltaLongitude = 0;
        this.deltaLatitude = 0;
        this.deltaGama = 0;
        this.centerPoint = { x: 0, y: 0 };
        this.scale = 1;
    }
    Projection.prototype.projectGeoArea = function (geoArea) {
        var clippedGeoArea = this.clipGeoArea(geoArea);
        var convertedPoints = this.convertGeoArea(clippedGeoArea);
        return convertedPoints;
    };
    Projection.prototype.projectGeoLine = function (geoLine) {
        return this.convertGeoLine(this.clipGeoLine(geoLine));
    };
    Projection.prototype.getClipRectangle1 = function () {
        var longitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](180 - this.deltaLongitude);
        var latitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](this.deltaLatitude);
        var smallNum = 0.00001;
        return [{ longitude: -180, latitude: latitude - 90 }, { longitude: longitude - smallNum, latitude: latitude - 90 }, { longitude: longitude - smallNum, latitude: latitude + 90 }, { longitude: -180, latitude: latitude + 90 }];
    };
    Projection.prototype.getClipRectangle2 = function () {
        var longitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](180 - this.deltaLongitude);
        //let latitude = $geo.wrapAngleTo180(this.deltaLatitude);
        var smallNum = 0.00001;
        return [{ longitude: longitude + smallNum, latitude: -90 }, { longitude: 180, latitude: -90 }, { longitude: 180, latitude: 90 }, { longitude: longitude + smallNum, latitude: 90 }];
    };
    Projection.prototype.getRect1 = function () {
        var longitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](180 - this.deltaLongitude);
        var latitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](this.deltaLatitude);
        return { north: latitude + 90, south: latitude - 90, west: longitude - 180, east: longitude };
    };
    Projection.prototype.getRect2 = function () {
        var longitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](180 - this.deltaLongitude);
        var latitude = _Geo__WEBPACK_IMPORTED_MODULE_3__["wrapAngleTo180"](this.deltaLatitude);
        return { north: latitude + 90, south: latitude - 90, west: longitude, east: (longitude + 180) };
    };
    Projection.prototype.clipGeoLine = function (geoLine) {
        if (!geoLine) {
            return;
        }
        var clippedLine = [];
        var clipRectangle1 = this.getClipRectangle1();
        var clipRectangle2 = this.getClipRectangle2();
        for (var i = 0, len = geoLine.length; i < len; i++) {
            var segment = geoLine[i];
            if (segment) {
                var clippedSegments = this.clipLine(segment, clipRectangle1);
                clippedLine = clippedLine.concat(clippedSegments);
                if (this.deltaLongitude != 0) {
                    var clippedSegments2 = this.clipLine(segment, clipRectangle2);
                    clippedLine = clippedLine.concat(clippedSegments2);
                }
            }
        }
        return clippedLine;
    };
    Projection.prototype.clipGeoArea = function (geoArea) {
        if (!geoArea) {
            return;
        }
        var clippedArea = [];
        var clipRectangle1 = this.getClipRectangle1();
        var clipRectangle2 = this.getClipRectangle2();
        var rect1 = this.getRect1();
        var rect2 = this.getRect2();
        for (var i = 0, len = geoArea.length; i < len; i++) {
            var surface = geoArea[i][0];
            var hole = geoArea[i][1];
            var clippedAreas = [];
            if (surface) {
                var surfaceRect = this.getExtremes(surface);
                if (!this.isInside(surfaceRect, rect1) && !this.isOutside(surfaceRect, rect1)) {
                    var clippedSurface1 = this.clip(surface, clipRectangle1);
                    var clippedHole1 = this.clip(hole, clipRectangle1);
                    clippedAreas.push([clippedSurface1, clippedHole1]);
                }
                else {
                    clippedAreas.push([surface, hole]);
                }
                if (!this.isInside(surfaceRect, rect2) && !this.isOutside(surfaceRect, rect2)) {
                    var clippedSurface2 = this.clip(surface, clipRectangle2);
                    var clippedHole2 = this.clip(hole, clipRectangle2);
                    clippedAreas.push([clippedSurface2, clippedHole2]);
                }
            }
            try {
                for (var clippedAreas_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](clippedAreas), clippedAreas_1_1 = clippedAreas_1.next(); !clippedAreas_1_1.done; clippedAreas_1_1 = clippedAreas_1.next()) {
                    var area = clippedAreas_1_1.value;
                    clippedArea.push(area);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (clippedAreas_1_1 && !clippedAreas_1_1.done && (_a = clippedAreas_1.return)) _a.call(clippedAreas_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return clippedArea;
        var e_1, _a;
    };
    Projection.prototype.convertGeoArea = function (geoArea) {
        if (!geoArea) {
            return;
        }
        var convertedPoints = [];
        for (var i = 0, len = geoArea.length; i < len; i++) {
            var surface = geoArea[i][0];
            var hole = geoArea[i][1];
            var convertedAreaPoints = [];
            if (surface) {
                var convertedSurface = [];
                for (var s = 0, slen = surface.length; s < slen; s++) {
                    var point = this.convert(surface[s]);
                    convertedSurface.push(point);
                }
                convertedAreaPoints.push(convertedSurface);
            }
            if (hole) {
                var convertedHole = [];
                for (var s = 0, hlen = hole.length; s < hlen; s++) {
                    var point = this.convert(hole[s]);
                    convertedHole.push(point);
                }
                convertedAreaPoints.push(convertedHole);
            }
            convertedPoints.push(convertedAreaPoints);
        }
        return convertedPoints;
    };
    Projection.prototype.convertGeoLine = function (geoLine) {
        if (!geoLine) {
            return;
        }
        var convertedPoints = [];
        for (var i = 0, len = geoLine.length; i < len; i++) {
            var segment = geoLine[i];
            var convertedSegmentPoints = [];
            for (var s = 0, slen = segment.length; s < slen; s++) {
                var geoPoint = segment[s];
                var point = this.convert(geoPoint);
                convertedSegmentPoints.push(point);
            }
            convertedPoints.push(convertedSegmentPoints);
        }
        return convertedPoints;
    };
    /**
     * Converts a geographical point (lat/long) to a screen point (x/y)
     * @param  {IGeoPoint} geoPoint Geo point (lat/long)
     * @return {IPoint}             Screen point (x/y)
     */
    Projection.prototype.convert = function (geoPoint) {
        geoPoint = _Geo__WEBPACK_IMPORTED_MODULE_3__["normalizePoint"](geoPoint);
        geoPoint = this.rotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);
        var pointInRadians = this.project(geoPoint.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"], geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"]);
        return {
            x: _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["round"](pointInRadians.x * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] - this.centerPoint.x, 4) * this.scale,
            y: _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["round"](-pointInRadians.y * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] - this.centerPoint.y, 4) * this.scale
        };
    };
    /**
     * Converts a screen point (x/y) to a geographical point (lat/long)
     * @param  {IPoint}    point Screen point (x/y)
     * @return {IGeoPoint}       Geo point (lat/long)
     */
    Projection.prototype.invert = function (point) {
        var pointInRadians = this.unproject((point.x / this.scale + this.centerPoint.x) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"], (-point.y / this.scale - this.centerPoint.y) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"]);
        var geoPoint = { longitude: pointInRadians.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"], latitude: pointInRadians.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] };
        geoPoint = this.unrotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);
        return geoPoint;
    };
    /**
     * Returns X/Y coordinates.
     * Individual projections will override this method to apply their own
     * projection logic.
     * @param  {number} lambda [description]
     * @param  {number} phi    [description]
     * @return {IPoint}        X/Y coordinates
     * @todo Needs description
     */
    Projection.prototype.project = function (lambda, phi) {
        return { x: lambda, y: phi };
    };
    /**
     * Returns geographical coordinates (lat/long).
     * Individual projections will override this method to apply their own
     * projection logic.
     * @param  {number}    x X coordinate
     * @param  {number}    y Y coordinate
     * @return {IGeoPoint}   Geographical point
     * @todo Needs description
     */
    Projection.prototype.unproject = function (x, y) {
        return { longitude: x, latitude: y };
    };
    Projection.prototype.rotate = function (geoPoint, deltaLongitude, deltaLatitude, deltaGamma) {
        var deltaLambda = deltaLongitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var deltaPhi = deltaLatitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        deltaGamma = deltaGamma * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var lambda = geoPoint.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"] + deltaLambda;
        var phi = geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var cosDeltaPhi = Math.cos(deltaPhi);
        var sinDeltaPhi = Math.sin(deltaPhi);
        var cosDeltaGamma = Math.cos(deltaGamma);
        var sinDeltaGamma = Math.sin(deltaGamma);
        var cosPhi = Math.cos(phi);
        var x = Math.cos(lambda) * cosPhi;
        var y = Math.sin(lambda) * cosPhi;
        var z = Math.sin(phi);
        var k = z * cosDeltaPhi + x * sinDeltaPhi;
        return { longitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] * Math.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), latitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] * Math.asin(k * cosDeltaGamma + y * sinDeltaGamma) };
    };
    Projection.prototype.unrotate = function (geoPoint, deltaLongitude, deltaLatitude, deltaGamma) {
        var deltaLambda = deltaLongitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var deltaPhi = deltaLatitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        deltaGamma = deltaGamma * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var lambda = geoPoint.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"] - deltaLambda;
        var phi = geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var cosDeltaPhi = Math.cos(deltaPhi);
        var sinDeltaPhi = Math.sin(deltaPhi);
        var cosDeltaGamma = Math.cos(deltaGamma);
        var sinDeltaGamma = Math.sin(deltaGamma);
        var cosPhi = Math.cos(phi);
        var x = Math.cos(lambda) * cosPhi;
        var y = Math.sin(lambda) * cosPhi;
        var z = Math.sin(phi);
        var k = z * cosDeltaGamma - y * sinDeltaGamma;
        return { longitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] * Math.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), latitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] * Math.asin(k * cosDeltaPhi - x * sinDeltaPhi) };
    };
    Projection.prototype.clipLine = function (subjectPolyline, clipPolygon) {
        if (!subjectPolyline || subjectPolyline.length == 0) {
            return;
        }
        var cp1;
        var cp2;
        var inside = function (p) {
            return (cp2.longitude - cp1.longitude) * (p.latitude - cp1.latitude) > (cp2.latitude - cp1.latitude) * (p.longitude - cp1.longitude);
        };
        var s;
        var e;
        //@todo: make a separate function
        var intersection = function () {
            var dc = { longitude: cp1.longitude - cp2.longitude, latitude: cp1.latitude - cp2.latitude };
            var dp = { longitude: s.longitude - e.longitude, latitude: s.latitude - e.latitude };
            var n1 = cp1.longitude * cp2.latitude - cp1.latitude * cp2.longitude;
            var n2 = s.longitude * e.latitude - s.latitude * e.longitude;
            var n3 = 1.0 / (dc.longitude * dp.latitude - dc.latitude * dp.longitude);
            return { longitude: (n1 * dp.longitude - n2 * dc.longitude) * n3, latitude: (n1 * dp.latitude - n2 * dc.latitude) * n3 };
        };
        var segment = subjectPolyline;
        cp1 = clipPolygon[clipPolygon.length - 1];
        for (var j = 0; j < clipPolygon.length; ++j) {
            cp2 = clipPolygon[j];
            var inputList = segment;
            segment = [];
            s = inputList[0];
            for (var i = 0, len = inputList.length; i < len; i++) {
                e = inputList[i];
                if (inside(e)) {
                    if (!inside(s)) {
                        segment.push(intersection());
                    }
                    segment.push(e);
                }
                else if (inside(s)) {
                    segment.push(intersection());
                }
                s = e;
            }
            cp1 = cp2;
        }
        return [segment];
    };
    //@todo add credits to roseta code
    //@todo: someday make it better
    Projection.prototype.clip = function (subjectPolygon, clipPolygon) {
        if (!subjectPolygon || subjectPolygon.length == 0) {
            return;
        }
        var cp1;
        var cp2;
        var inside = function (p) {
            return (cp2.longitude - cp1.longitude) * (p.latitude - cp1.latitude) > (cp2.latitude - cp1.latitude) * (p.longitude - cp1.longitude);
        };
        var s;
        var e;
        //@todo: make a separate function
        var intersection = function () {
            var dc = { longitude: cp1.longitude - cp2.longitude, latitude: cp1.latitude - cp2.latitude };
            var dp = { longitude: s.longitude - e.longitude, latitude: s.latitude - e.latitude };
            var n1 = cp1.longitude * cp2.latitude - cp1.latitude * cp2.longitude;
            var n2 = s.longitude * e.latitude - s.latitude * e.longitude;
            var n3 = 1.0 / (dc.longitude * dp.latitude - dc.latitude * dp.longitude);
            return { longitude: (n1 * dp.longitude - n2 * dc.longitude) * n3, latitude: (n1 * dp.latitude - n2 * dc.latitude) * n3 };
        };
        var outputList = subjectPolygon;
        cp1 = clipPolygon[clipPolygon.length - 1];
        for (var j = 0; j < clipPolygon.length; ++j) {
            cp2 = clipPolygon[j];
            var inputList = outputList;
            outputList = [];
            s = inputList[inputList.length - 1]; //last on the input list
            for (var i = 0, len = inputList.length; i < len; ++i) {
                e = inputList[i];
                if (inside(e)) {
                    if (!inside(s)) {
                        outputList.push(intersection());
                    }
                    outputList.push(e);
                }
                else if (inside(s)) {
                    outputList.push(intersection());
                }
                s = e;
            }
            cp1 = cp2;
        }
        return outputList;
    };
    //@todo: move to some utils?
    Projection.prototype.getExtremes = function (geoPoints) {
        var west = geoPoints[0].longitude;
        var east = geoPoints[0].longitude;
        var north = geoPoints[0].latitude;
        var south = geoPoints[0].latitude;
        for (var s = 0; s < geoPoints.length; s++) {
            var longitude = geoPoints[s].longitude;
            var latitude = geoPoints[s].latitude;
            if ((west > longitude)) {
                west = longitude;
            }
            if ((east < longitude)) {
                east = longitude;
            }
            if ((north < latitude)) {
                north = latitude;
            }
            if ((south > latitude)) {
                south = latitude;
            }
        }
        return { north: north, east: east, south: south, west: west };
    };
    //@todo: move to some utils?
    Projection.prototype.isInside = function (r1, r2) {
        if (r1.north < r2.north && r1.south > r2.south && r1.west > r2.west && r1.east < r2.east) {
            return true;
        }
        return false;
    };
    //@todo: move to some utils?
    Projection.prototype.isOutside = function (r1, r2) {
        if (r1.south > r2.north || r1.north < r2.south || r1.west > r2.east || r1.east < r2.west) {
            return true;
        }
        return false;
    };
    //@todo: move to some utils?
    //@todo: add credits to: https://www.movable-type.co.uk/scripts/latlong.html
    Projection.prototype.intermediatePoint = function (pointA, pointB, position) {
        var phi1 = pointA.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var lambda1 = pointA.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var phi2 = pointB.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var lambda2 = pointB.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["RADIANS"];
        var sinPhi1 = Math.sin(phi1);
        var cosPhi1 = Math.cos(phi1);
        var sinLambda1 = Math.sin(lambda1);
        var cosLambda1 = Math.cos(lambda1);
        var sinPhi2 = Math.sin(phi2);
        var cosPhi2 = Math.cos(phi2);
        var sinLambda2 = Math.sin(lambda2);
        var cosLambda2 = Math.cos(lambda2);
        // distance between points
        var deltaPhi = phi2 - phi1;
        var deltaLambda = lambda2 - lambda1;
        var a = Math.sin(deltaPhi / 2) * Math.sin(deltaPhi / 2) + Math.cos(phi1) * Math.cos(phi2) * Math.sin(deltaLambda / 2) * Math.sin(deltaLambda / 2);
        var delta = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        var A = Math.sin((1 - position) * delta) / Math.sin(delta);
        var B = Math.sin(position * delta) / Math.sin(delta);
        var x = A * cosPhi1 * cosLambda1 + B * cosPhi2 * cosLambda2;
        var y = A * cosPhi1 * sinLambda1 + B * cosPhi2 * sinLambda2;
        var z = A * sinPhi1 + B * sinPhi2;
        var phi3 = Math.atan2(z, Math.sqrt(x * x + y * y));
        var lambda3 = Math.atan2(y, x);
        return { latitude: phi3 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"], longitude: lambda3 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_2__["DEGREES"] };
    };
    ;
    return Projection;
}());

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses["Projection"] = Projection;
//# sourceMappingURL=Projection.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js ***!
  \****************************************************************************/
/*! exports provided: SeriesDataItem, Series */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeriesDataItem", function() { return SeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Series", function() { return Series; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/elements/Tooltip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js");
/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../elements/Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony import */ var _Legend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Legend */ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js");
/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Ease__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Colors__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../core/utils/Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/**
 * Functionality for any series-based elements, like Line Series (graphs),
 * Pie slice lists, etc.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Series]].
 *
 * @see {@link DataItem}
 */
var SeriesDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SeriesDataItem, _super);
    /**
     * Constructor
     */
    function SeriesDataItem() {
        var _this = _super.call(this) || this;
        /**
         * A dictionary of data items bullets, where key is uid of a bullet template.
         *
         * @ignore Exclude from docs
         * @todo review description
         * @type {Dictionary}
         */
        _this.bullets = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        _this.className = "SeriesDataItem";
        //@todo Should we make `bullets` list disposable?
        _this._disposers.push(new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["DictionaryDisposer"](_this.bullets));
        _this.values.value = {};
        _this.values.value = {};
        _this.applyTheme();
        return _this;
    }
    /**
     * Destroys this object and all related data.
     */
    SeriesDataItem.prototype.dispose = function () {
        this.bullets.clear();
        _super.prototype.dispose.call(this);
    };
    Object.defineProperty(SeriesDataItem.prototype, "value", {
        /**
         * @return {number} Value
         */
        get: function () {
            return this.values.value.value;
        },
        /**
         * data items's numeric value.
         *
         * @param {number}  value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    return SeriesDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_5__["DataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines base class for any kind of serial data.
 *
 * @see {@link ISeriesEvents} for a list of available Events
 * @see {@link ISeriesAdapters} for a list of available Adapters
 * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff
 */
var Series = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Series, _super);
    /**
     * Constructor
     */
    function Series() {
        var _this = _super.call(this) || this;
        /**
         * Should this series excluded from the axis scale calculations?
         *
         * @default false
         * @type {boolean}
         */
        _this._ignoreMinMax = false;
        /**
         * Should series' bullets?
         *
         * @default true
         * @type {boolean}
         */
        _this._showBullets = true;
        /**
         * Settings for the appearance of the related legend items.
         */
        _this.legendSettings = new _Legend__WEBPACK_IMPORTED_MODULE_9__["LegendSettings"]();
        /**
         * Lowest overal values by type.
         *
         * @type {Dictionary}
         */
        _this._tmin = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Highest overal values by type.
         *
         * @type {Dictionary}
         */
        _this._tmax = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Lowest values in current selection by type.
         *
         * @type {Dictionary}
         */
        _this._smin = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Highest values in current selection by type.
         *
         * @type {Dictionary}
         */
        _this._smax = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * [dataItemsByAxis description]
         *
         * Both by category and date.
         *
         * @ignore Exclude from docs
         * @todo Description
         * @type {Dictionary}
         */
        _this.dataItemsByAxis = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Normally series items are focusable using keyboard, so that people can
         * select them with a TAB key. However, if there are a lot of data points on
         * screen it might be long and useless to tab through all o fthem.
         *
         * This is where `skipFocusThreshold` comes in. If there are more items than
         * the value set here, we will not make those focusable and rather let screen
         * reader software rely on the series summary, or authors provide alternative
         * detailed information display, such as HTML table.
         *
         * Different series might have different threshold defaults.
         *
         * @type {Number}
         */
        _this.skipFocusThreshold = 20;
        /**
         * As calculating totals is expensive operation and not often needed, by default we do not do it. In case you use percent for your charts, you must set this to true.
         * Pie chart, which uses percent sets this to true by default.
         * @todo review description
         * @type {boolean}
         */
        _this.calculatePercent = false;
        /**
         * Specifies if series should be automatically disposed when removing from chart's series list.
         * @default true
         */
        _this.autoDispose = true;
        /**
         * When working value of dataItem changes, we must process all the values to calculate sum, min, max etc. Also update stack values. This is quite expensive operation.
         * Unfortunately we do not know if user needs this processed values or not. By setting simplifiedProcessing = true you disable this processing and in case working
         * value changes, we only redraw the particular column. Do not do this if you have staked chart or use calculated values in bullets or in tooltips.
         *
         * @type {boolean}
         */
        _this.simplifiedProcessing = false;
        _this.className = "Series";
        _this.isMeasured = false;
        _this.layout = "none";
        _this.shouldClone = false;
        _this.setPropertyValue("hidden", false);
        _this.axisRanges = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
        _this.axisRanges.events.on("inserted", _this.processAxisRange, _this, false);
        _this.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug
        _this.mainContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]);
        _this.mainContainer.shouldClone = false;
        _this.mainContainer.mask = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this._disposers.push(_this.mainContainer);
        // all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer
        var bulletsContainer = _this.mainContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]);
        _this._shouldBeReady.push(bulletsContainer);
        bulletsContainer.shouldClone = false;
        bulletsContainer.layout = "none";
        bulletsContainer.virtualParent = _this;
        _this._disposers.push(bulletsContainer);
        _this.bulletsContainer = bulletsContainer;
        _this.tooltip = new _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_7__["Tooltip"]();
        _this.tooltip.virtualParent = _this;
        _this._disposers.push(_this.tooltip);
        _this.hiddenState.transitionEasing = _core_utils_Ease__WEBPACK_IMPORTED_MODULE_15__["cubicIn"];
        // this data item holds sums, averages, etc
        _this.dataItem = _this.createDataItem();
        _this._disposers.push(_this.dataItem);
        _this.dataItem.component = _this;
        // Apply accessibility
        _this.role = "group";
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Series.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {SeriesDataItem} Data Item
     */
    Series.prototype.createDataItem = function () {
        return new SeriesDataItem();
    };
    Object.defineProperty(Series.prototype, "chart", {
        /**
         * @return {this} Chart
         */
        get: function () {
            return this._chart;
        },
        /**
         * Chart series is used on.
         *
         * @param {this["_chart"]}  value  Chart
         */
        set: function (value) {
            this._chart = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Positions bullet.
     *
     * @param {Bullet}  bullet  Bullet
     */
    Series.prototype.positionBullet = function (bullet) {
        // Placeholder method for extending classes to override.
    };
    /**
     * Decorates newly created bullet after it has been instert into the list.
     *
     * @param {IListEvents<Bullet>["inserted"]}  event  List event
     * @todo investigate why itemReaderText is undefined
     */
    Series.prototype.processBullet = function (event) {
        var bullet = event.newValue;
        bullet.isTemplate = true;
        // Add accessibility options to bullet
        // If there are relatively few bullets, make them focusable
        if (this.itemsFocusable()) {
            bullet.focusable = true;
        }
    };
    /**
     * removes bullets
     *
     * @param {IListEvents<Bullet>["inserted"]}  event  List event
     */
    Series.prototype.removeBullet = function (event) {
        var bullet = event.oldValue;
        this.dataItems.each(function (dataItem) {
            var eachBullet = dataItem.bullets.getKey(bullet.uid);
            if (eachBullet) {
                eachBullet.dispose();
            }
        });
        this.invalidate();
    };
    /**
     * Validates data items.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.validateDataItems = function () {
        _super.prototype.validateDataItems.call(this);
        this.processValues(false);
    };
    /**
     * Returns first value for the specific key in the series.
     *
     * @param  {string}  key  Key
     * @return {number}       Value
     * @todo Description
     * @todo Convert to propert object property iterator
     */
    Series.prototype.getFirstValue = function (key, startIndex) {
        // find first
        /*
        return $iter.findMap(this.dataItems.iterator(), (dataItem) => {
            for (let key in dataItem.values) {
                if ($object.hasKey(dataItem.values, key)) {
                    let value: number = dataItem.values[key].workingValue;
                    if ($type.isNumber(value)) {
                        return value;
                    }
                }
            }

            return null;
        });*/
        if (startIndex > 0 && startIndex < this.dataItems.length - 1) {
            startIndex++;
        }
        for (var i = startIndex; i >= 0; i--) {
            var dataItem = this.dataItems.getIndex(i);
            var value = dataItem.values[key].workingValue;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                return value;
            }
        }
        return null;
    };
    /**
     * [rangeChangeUpdate description]
     *
     * @todo Description
     */
    Series.prototype.rangeChangeUpdate = function () {
        _super.prototype.rangeChangeUpdate.call(this);
        this.processValues(true);
    };
    /**
     * [processValues description]
     *
     * @todo Description
     * @todo Convert to propert object property iterator
     * @param {OrderedList<this["_dataItem"]>} dataItems [description]
     */
    Series.prototype.processValues = function (working) {
        var _this = this;
        if (!this.simplifiedProcessing) {
            var dataItems = this.dataItems;
            var count_1 = {};
            var sum_1 = {};
            var low_1 = {};
            var high_1 = {};
            var open_1 = {};
            var close_1 = {};
            var previous_1 = {};
            var first_1 = {};
            //let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration
            var startIndex_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["max"](0, this._workingStartIndex);
            startIndex_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["min"](startIndex_1, this.dataItems.length);
            var endIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["min"](this._workingEndIndex, this.dataItems.length);
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](startIndex_1)) {
                startIndex_1 = 0;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](endIndex)) {
                endIndex = this.dataItems.length;
            }
            if (startIndex_1 > 0) {
                var dataItem_1 = dataItems.getIndex(startIndex_1 - 1);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_1.values, function (key, values) {
                    var value = values.workingValue;
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                        // save previous
                        previous_1[key] = value;
                    }
                });
            }
            var _loop_1 = function (i) {
                var dataItem_2 = dataItems.getIndex(i);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_2.values, function (key, values) {
                    var value = values.workingValue;
                    //if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                        // count values
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](count_1[key])) {
                            count_1[key] = 0;
                        }
                        count_1[key]++;
                        // sum values
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](sum_1[key])) {
                            sum_1[key] = 0;
                        }
                        sum_1[key] += value;
                        // open
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](open_1[key])) {
                            open_1[key] = value;
                        }
                        // close
                        close_1[key] = value;
                        // low
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](low_1[key])) {
                            low_1[key] = value;
                        }
                        else {
                            if (low_1[key] > value) {
                                low_1[key] = value;
                            }
                        }
                        // high
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](high_1[key])) {
                            high_1[key] = value;
                        }
                        else {
                            if (high_1[key] < value) {
                                high_1[key] = value;
                            }
                        }
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](first_1[key])) {
                            first_1[key] = _this.getFirstValue(key, startIndex_1);
                        }
                        // change
                        dataItem_2.setCalculatedValue(key, value - first_1[key], "change");
                        // change from start percent
                        // will fail if first value is 0
                        dataItem_2.setCalculatedValue(key, (value - first_1[key]) / first_1[key] * 100, "changePercent");
                        // previous change
                        var prevValue = previous_1[key];
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](prevValue)) {
                            prevValue = value;
                        }
                        dataItem_2.setCalculatedValue(key, value - prevValue, "previousChange");
                        // previous change percent
                        dataItem_2.setCalculatedValue(key, (value - prevValue) / prevValue * 100, "previousChangePercent");
                        // save previous
                        previous_1[key] = value;
                    }
                });
            };
            for (var i = startIndex_1; i < endIndex; i++) {
                _loop_1(i);
            }
            if (this.calculatePercent) {
                var _loop_2 = function (i) {
                    var dataItem_3 = dataItems.getIndex(i);
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_3.values, function (key) {
                        var ksum = sum_1[key];
                        var value = dataItem_3.values[key].workingValue;
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value) && ksum > 0) {
                            // this hack is made in order to make it possible to animate single slice to 0
                            // if there is only one slice left, percent value is always 100%, so it won't animate
                            // so we use real value of a slice instead of current value
                            if (value == ksum) {
                                ksum = dataItem_3.values[key].value;
                            }
                            var percent = value / ksum * 100;
                            dataItem_3.setCalculatedValue(key, percent, "percent");
                        }
                    });
                };
                for (var i = startIndex_1; i < endIndex; i++) {
                    _loop_2(i);
                }
            }
            // calculate one before first (cant do that in cycle, as we don't know open yet
            // when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point
            // so we do startIndex - 1
            if (startIndex_1 > 0) {
                var zeroItem_1 = dataItems.getIndex(startIndex_1 - 1);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](zeroItem_1.values, function (key) {
                    var value = zeroItem_1.values[key].value;
                    // change
                    zeroItem_1.setCalculatedValue(key, value - open_1[key], "change");
                    // change percent
                    zeroItem_1.setCalculatedValue(key, (value - open_1[key]) / open_1[key] * 100, "changePercent");
                });
            }
            // we save various data like sum, average to dataPoint of the series
            var dataItem_4 = this.dataItem;
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_4.values, function (key) {
                dataItem_4.setCalculatedValue(key, sum_1[key], "sum");
                dataItem_4.setCalculatedValue(key, sum_1[key] / count_1[key], "average");
                dataItem_4.setCalculatedValue(key, open_1[key], "open");
                dataItem_4.setCalculatedValue(key, close_1[key], "close");
                dataItem_4.setCalculatedValue(key, low_1[key], "low");
                dataItem_4.setCalculatedValue(key, high_1[key], "high");
                dataItem_4.setCalculatedValue(key, count_1[key], "count");
            });
        }
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.validate = function () {
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.axisRanges.iterator(), function (axisRange) {
            //axisRange.contents.disposeChildren(); // not good for columns, as they are reused
            //			axisRange.appendChildren();
            axisRange.validate();
        });
        _super.prototype.validate.call(this);
        this.bulletsContainer.fill = this.fill;
        this.bulletsContainer.stroke = this.stroke;
        if (this.bulletsContainer.children.length > 0) {
            for (var i = 0; i < this.startIndex; i++) {
                var dataItem = this.dataItems.getIndex(i);
                if (dataItem) {
                    dataItem.bullets.each(function (key, bullet) {
                        bullet.__disabled = true;
                    });
                }
            }
            for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {
                var dataItem = this.dataItems.getIndex(i);
                if (dataItem) {
                    dataItem.bullets.each(function (key, bullet) {
                        bullet.__disabled = true;
                    });
                }
            }
        }
        this.updateTooltipBounds();
    };
    /**
     * @ignore
     */
    Series.prototype.updateTooltipBounds = function () {
        if (this.topParent) {
            this.tooltip.setBounds({ x: 0, y: 0, width: this.topParent.maxWidth, height: this.topParent.maxHeight });
        }
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param {SeriesDataItem}  dataItem  Data item
     */
    Series.prototype.validateDataElement = function (dataItem) {
        var _this = this;
        _super.prototype.validateDataElement.call(this, dataItem);
        if (this._showBullets) {
            this.bulletsContainer.visible = true;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.bullets.iterator(), function (bulletTemplate) {
                // always better to use the same, this helps to avoid redrawing
                var bullet = dataItem.bullets.getKey(bulletTemplate.uid);
                if (!bullet) {
                    bullet = bulletTemplate.clone();
                    dataItem.addSprite(bullet);
                    if (!_this.visible || _this.isHiding) {
                        bullet.hide(0);
                    }
                }
                var currentDataItem = bullet.dataItem;
                if (currentDataItem != dataItem) {
                    // set to undefined in order not to reuse
                    if (currentDataItem) {
                        currentDataItem.bullets.setKey(bulletTemplate.uid, undefined);
                    }
                    // Add accessibility to bullet
                    var readerText_1 = _this.itemReaderText || ("{" + bullet.xField + "}: {" + bullet.yField + "}");
                    if (bullet.focusable) {
                        bullet.events.once("focus", function (ev) {
                            bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);
                        }, undefined, false);
                        bullet.events.once("blur", function (ev) {
                            bullet.readerTitle = "";
                        }, undefined, false);
                    }
                    if (bullet.hoverable) {
                        bullet.events.once("over", function (ev) {
                            bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);
                        }, undefined, false);
                        bullet.events.once("out", function (ev) {
                            bullet.readerTitle = "";
                        }, undefined, false);
                    }
                    if (bullet.isDynamic) {
                        dataItem.events.on("workingvaluechanged", bullet.deepInvalidate, bullet, false);
                        //dataItem.events.on("calculatedvaluechanged", bullet.deepInvalidate, bullet, false);
                        _this.dataItem.events.on("workingvaluechanged", bullet.deepInvalidate, bullet, false);
                    }
                    bullet.deepInvalidate();
                }
                bullet.parent = _this.bulletsContainer;
                dataItem.bullets.setKey(bulletTemplate.uid, bullet);
                // pass max w/h so we'd know if we should show/hide somethings
                bullet.maxWidth = dataItem.itemWidth;
                bullet.maxHeight = dataItem.itemHeight;
                bullet.__disabled = false;
                _this.positionBullet(bullet);
            });
        }
        else {
            this.bulletsContainer.visible = false;
        }
    };
    /**
     * [handleDataItemWorkingValueChange description]
     *
     * @ignore Exclude from docs
     */
    Series.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {
        if (!this.dataRangeInvalid) {
            this.invalidateProcessedData();
        }
    };
    Object.defineProperty(Series.prototype, "ignoreMinMax", {
        /**
         * @return {boolean} Exclude from calculations?
         */
        get: function () {
            return this._ignoreMinMax;
        },
        /**
         * Should this series excluded from the axis scale calculations?
         *
         * @default false
         * @param {boolean}  value  Exclude from calculations?
         */
        set: function (value) {
            this._ignoreMinMax = value;
            this.invalidateDataItems();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Create a mask for the series.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.createMask = function () {
        // A placeholder method for extending classes to override.
    };
    /**
     * Process axis range after it has been added to the list.
     *
     * @param {IListEvents<AxisDataItem>["inserted"]}  event  Event
     */
    Series.prototype.processAxisRange = function (event) {
        // create container if not existing
        if (!this.rangesContainer) {
            this.rangesContainer = this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]);
            this.rangesContainer.shouldClone = false;
            this.rangesContainer.isMeasured = false;
        }
        var axisRange = event.newValue;
        if (axisRange) {
            axisRange.contents.parent = this.rangesContainer;
            axisRange.isRange = true;
        }
    };
    /**
     * [getAxisField description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {Axis}    axis  [description]
     * @return {string}        [description]
     */
    Series.prototype.getAxisField = function (axis) {
        return;
    };
    /**
     * Shows the tooltip at specific position.
     *
     * @ignore Exclude from docs
     * @param {number}  xPosition  X
     * @param {number}  yPosition  Y
     */
    Series.prototype.showTooltipAtPosition = function (xPosition, yPosition) {
        // Placeholder method for extending classes to override.
    };
    Object.defineProperty(Series.prototype, "minBulletDistance", {
        /**
         * @return {number} Distance (px)
         */
        get: function () {
            return this.getPropertyValue("minBulletDistance");
        },
        /**
         * Minimal distance between two adjacent bullets in pixels.
         *
         * If bullet is closer, it will be skipped and not shown.
         *
         * This allows to avoid crammed up graphs wil a lot of bullets.
         *
         * @default 0
         * @param {number}  value  Distance (px)
         */
        set: function (value) {
            this.setPropertyValue("minBulletDistance", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Series.prototype, "bullets", {
        /**
         * A list of bullets that will be added to each and every items in the
         * series.
         *
         * You can push any object that is a descendant of a [[Bullet]] here. All
         * items added to this list will be copied and used as a bullet on all data
         * items, including their properties, events, etc.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets
         * @return {ListTemplate<Bullet>} List of bullets.
         */
        get: function () {
            if (!this._bullets) {
                this._bullets = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](new _elements_Bullet__WEBPACK_IMPORTED_MODULE_8__["Bullet"]());
                this._bullets.template.virtualParent = this;
                this._bullets.events.on("inserted", this.processBullet, this, false);
                this._bullets.events.on("removed", this.removeBullet, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](this._bullets));
                this._disposers.push(this._bullets.template);
            }
            return this._bullets;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Binds related legend data item's visual settings to this series' visual
     * settings.
     *
     * @ignore Exclude from docs
     * @param {Container}  marker  Legend item container
     */
    Series.prototype.createLegendMarker = function (marker) {
        // This is a placeholder method for extending classes to override.
    };
    Object.defineProperty(Series.prototype, "hiddenInLegend", {
        /**
         * @return {boolean} Hidden in legend?
         */
        get: function () {
            return this.getPropertyValue("hiddenInLegend");
        },
        /**
         * Should the series be hidden in legend?
         *
         * @param {boolean} value Hidden in legend?
         */
        set: function (value) {
            if (this.setPropertyValue("hiddenInLegend", value)) {
                if (this.chart) {
                    this.chart.feedLegend();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Series.prototype, "name", {
        /**
         * @return {string} Name
         */
        get: function () {
            return this.adapter.apply("name", this._title);
        },
        /**
         * Series' name.
         *
         * @param {string}  value  Name
         */
        set: function (value) {
            this._title = value;
            this.readerTitle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Series.prototype, "itemReaderText", {
        /**
         * @return {string} Screen reader text template
         */
        get: function () {
            // Get explicitly set reader text
            var readerText = this._itemReaderText;
            // Not set? Let's try something else
            if (!readerText) {
                // Tooltip text?
                if (this.tooltipText) {
                    readerText = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["plainText"](this.tooltipText);
                }
                else if (this.tooltipHTML) {
                    readerText = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["plainText"](this.tooltipHTML);
                }
            }
            return this.adapter.apply("itemReaderText", readerText);
        },
        /**
         * Screen reader text to be applied to each individual data item, such
         * as bullets, columns or slices.
         *
         * The template can contain field reference meta codes, i.e. `{dateX}`,
         * `{valueY}`, etc.
         *
         * Any text formatting options, e.g. `[bold]` will be ignored.
         *
         * @param {string} value Screen reader text template
         */
        set: function (value) {
            this._itemReaderText = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns if number of data items in the series are beyond non-focusable
     * count and should not be available for TAB-through.
     *
     * @ignore Exclude from docs
     * @return {boolean} Items focusable?
     */
    Series.prototype.itemsFocusable = function () {
        return this.dataItems.length >= this.skipFocusThreshold ? false : true;
    };
    Object.defineProperty(Series.prototype, "legendDataItem", {
        /**
         * @return {LegendDataItem<Series, ISeriesEvents>} Data item
         */
        get: function () {
            return this._legendDataItem;
        },
        /**
         * Legend data item that corresponds to this series.
         *
         * @param {LegendDataItem<Series, ISeriesEvents>}  value  Data item
         */
        set: function (value) {
            this._legendDataItem = value;
            this._legendDataItem.itemContainer.deepInvalidate();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates corresponding legend data item with current values.
     *
     * @ignore Exclude from docs
     * @param {this["_dataItem"]}  dataItem  Data item
     */
    Series.prototype.updateLegendValue = function (dataItem) {
        // if this series has legend item
        if (this.legendDataItem) {
            var legendSettings = this.legendSettings;
            var legendDataItem = this.legendDataItem;
            var label = legendDataItem.label;
            var valueLabel = legendDataItem.valueLabel;
            // update legend
            if (dataItem) {
                if (valueLabel) {
                    if (legendSettings.itemValueText) {
                        valueLabel.text = legendSettings.itemValueText;
                    }
                    valueLabel.dataItem = dataItem;
                }
                if (label) {
                    if (legendSettings.itemLabelText) {
                        label.text = legendSettings.itemLabelText;
                    }
                    label.dataItem = this.dataItem;
                }
            }
            else {
                if (label) {
                    // if itemLabelText is set, means we have to reset label even if labelText is not set
                    if (legendSettings.labelText || legendSettings.itemLabelText != undefined) {
                        label.text = legendSettings.labelText;
                    }
                    label.dataItem = this.dataItem;
                }
                if (valueLabel) {
                    if (legendSettings.valueText || legendSettings.itemValueText != undefined) {
                        valueLabel.text = legendSettings.valueText;
                    }
                    valueLabel.dataItem = this.dataItem;
                }
            }
        }
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param {Series}  source  Source series
     */
    Series.prototype.copyFrom = function (source) {
        this.bullets.copyFrom(source.bullets);
        this.bulletsContainer.copyFrom(source.bulletsContainer);
        this.calculatePercent = source.calculatePercent;
        _super.prototype.copyFrom.call(this, source);
    };
    /**
     * Displays a modal or console message with error, and halts any further
     * processing of this element.
     *
     * @param {Error} e Error
     */
    Series.prototype.raiseCriticalError = function (e) {
        this._chart.modal.content = e.message;
        this._chart.modal.closable = false;
        this._chart.modal.open();
        this._chart.disabled = true;
        if (_core_Options__WEBPACK_IMPORTED_MODULE_10__["options"].verbose) {
            console.log(e);
        }
    };
    /**
     * Applies filters to the element.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.applyFilters = function () {
        var _this = this;
        _super.prototype.applyFilters.call(this);
        this.bulletsContainer.filters.clear();
        // copyFrom of a list copies, does not clone
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.filters.iterator(), function (filter) {
            _this.bulletsContainer.filters.push(filter.clone());
        });
    };
    Object.defineProperty(Series.prototype, "heatRules", {
        /**
         * @todo Description
         */
        get: function () {
            var _this = this;
            if (!this._heatRules) {
                this._heatRules = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._heatRules.events.on("inserted", function (event) {
                    var heatRule = event.newValue;
                    var target = heatRule.target;
                    if (target) {
                        var dataField_1 = heatRule.dataField;
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](dataField_1)) {
                            dataField_1 = "value";
                        }
                        var min_1 = heatRule.min;
                        var max_1 = heatRule.max;
                        var seriesDataItem_1 = _this.dataItem;
                        var property_1 = heatRule.property;
                        var minValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.minValue);
                        var maxValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.maxValue);
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](minValue) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](maxValue)) {
                            _this.dataItem.events.on("calculatedvaluechanged", function (event) {
                                if (event.property == dataField_1) {
                                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](_this.dataItems.iterator(), function (dataItem) {
                                        var foundSprite = false;
                                        _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                            if (sprite.clonedFrom == target) {
                                                var anySprite = sprite;
                                                anySprite[property_1] = anySprite[property_1];
                                                foundSprite = true;
                                            }
                                        });
                                        if (!foundSprite) {
                                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                                if (sprite instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](sprite.children.iterator(), function (child) {
                                                        if (child.className == target.className) {
                                                            var anyChild = child;
                                                            anyChild[property_1] = anyChild[property_1];
                                                        }
                                                        // giveup here
                                                        else if (child instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                                            child.deepInvalidate();
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        }
                        _this.dataItems.template.events.on("workingvaluechanged", function (event) {
                            if (event.property == dataField_1) {
                                var dataItem = event.target;
                                var foundSprite_1 = false;
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                    if (sprite.clonedFrom == target) {
                                        var anySprite = sprite;
                                        anySprite[property_1] = anySprite[property_1];
                                        foundSprite_1 = true;
                                    }
                                });
                                if (!foundSprite_1) {
                                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                        if (sprite instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](sprite.children.iterator(), function (child) {
                                                if (child.className == target.className) {
                                                    var anyChild = child;
                                                    anyChild[property_1] = anyChild[property_1];
                                                }
                                                // givup here
                                                else if (child instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                                    child.deepInvalidate();
                                                }
                                            });
                                        }
                                    });
                                }
                            }
                        });
                        target.adapter.add(property_1, function (value, ruleTarget, property) {
                            var minValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.minValue);
                            var maxValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.maxValue);
                            if (ruleTarget instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]) {
                                var anySprite = ruleTarget;
                                var propertyField = anySprite.propertyFields[property];
                                if (propertyField && ruleTarget.dataItem) {
                                    var dataContext = ruleTarget.dataItem.dataContext;
                                    if (dataContext && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](dataContext[propertyField])) {
                                        return value;
                                    }
                                }
                            }
                            var dataItem = ruleTarget.dataItem;
                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](minValue)) {
                                minValue = seriesDataItem_1.values[dataField_1].low;
                            }
                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](maxValue)) {
                                maxValue = seriesDataItem_1.values[dataField_1].high;
                            }
                            if (dataItem) {
                                var fieldValues = dataItem.values[dataField_1];
                                if (fieldValues) {
                                    var workingValue = fieldValues.workingValue;
                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](min_1) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](max_1) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](minValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](maxValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](workingValue)) {
                                        var percent = (workingValue - minValue) / (maxValue - minValue);
                                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](workingValue) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](percent)) {
                                            percent = 0.5;
                                        }
                                        // fixes problems if all values are the same
                                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](min_1)) {
                                            return min_1 + (max_1 - min_1) * percent;
                                        }
                                        else if (min_1 instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_12__["Color"]) {
                                            return new _core_utils_Color__WEBPACK_IMPORTED_MODULE_12__["Color"](_core_utils_Colors__WEBPACK_IMPORTED_MODULE_20__["interpolate"](min_1.rgb, max_1.rgb, percent));
                                        }
                                    }
                                }
                            }
                            return value;
                        });
                    }
                });
            }
            return this._heatRules;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    Series.prototype.processConfig = function (config) {
        var heatRules;
        if (config) {
            // Set up bullets
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.bullets) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.bullets)) {
                for (var i = 0, len = config.bullets.length; i < len; i++) {
                    var bullets = config.bullets[i];
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](bullets.type)) {
                        bullets.type = "Bullet";
                    }
                }
            }
            // Let's take heatRules out of the config, so that we can process
            // them later, when bullets are already there
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.heatRules) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.heatRules)) {
                heatRules = config.heatRules;
                delete config.heatRules;
            }
        }
        _super.prototype.processConfig.call(this, config);
        // Process heat rules again, when all other elements are ready
        if (heatRules) {
            for (var i = 0, len = heatRules.length; i < len; i++) {
                var rule = heatRules[i];
                // Resolve target
                var target = this;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](rule.target) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isString"](rule.target)) {
                    // Check if we can find this element by id
                    if (this.map.hasKey(rule.target)) {
                        target = this.map.getKey(rule.target);
                    }
                    else {
                        var parts = rule.target.split(".");
                        for (var x = 0; x < parts.length; x++) {
                            if (target instanceof _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]) {
                                var listitem = target.getIndex(_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](parts[x]));
                                if (!listitem) {
                                    target = target[parts[x]];
                                }
                                else {
                                    target = listitem;
                                }
                            }
                            else {
                                target = target[parts[x]];
                            }
                        }
                    }
                }
                rule.target = target;
                // Resolve colors and percents
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](rule.min)) {
                    rule.min = this.maybeColorOrPercent(rule.min);
                }
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](rule.max)) {
                    rule.max = this.maybeColorOrPercent(rule.max);
                }
            }
            _super.prototype.processConfig.call(this, {
                heatRules: heatRules
            });
        }
    };
    /**
     * Returns visibility value
     * @ignore
     */
    /*
        protected getVisibility(): boolean {
            let hidden = this.getPropertyValue("hidden");
            if (hidden) {
                return false;
            }
            else {
                return super.getVisibility();
            }
        }*/
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param  {string}  a  Element 1
     * @param  {string}  b  Element 2
     * @return {Ordering}   Sorting number
     */
    Series.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "heatRules") {
            return 1;
        }
        else if (b == "heatRules") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    return Series;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].registeredClasses["Series"] = Series;
_core_Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].registeredClasses["SeriesDataItem"] = SeriesDataItem;
//# sourceMappingURL=Series.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/MapChart.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/MapChart.js ***!
  \*****************************************************************************/
/*! exports provided: MapChartDataItem, MapChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapChartDataItem", function() { return MapChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapChart", function() { return MapChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _SerialChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SerialChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js");
/* harmony import */ var _map_MapSeries__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../map/MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _map_MapImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../map/MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony import */ var _map_MapPolygon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../map/MapPolygon */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js");
/* harmony import */ var _map_projections_Projection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../map/projections/Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _map_SmallMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../map/SmallMap */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js");
/* harmony import */ var _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Ease__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _map_Geo__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../map/Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/**
 * Map module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapChart]].
 *
 * @see {@link DataItem}
 */
var MapChartDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapChartDataItem, _super);
    /**
     * Constructor
     */
    function MapChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return MapChartDataItem;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a map.
 *
 * @see {@link IMapChartEvents} for a list of available Events
 * @see {@link IMapChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/} for documentation
 */
var MapChart = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapChart, _super);
    /**
     * Constructor
     */
    function MapChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A ratio to be used when scaling the map shapes.
         *
         * @readonly
         * @type {number}
         */
        _this.scaleRatio = 1;
        /**
         * Default duration of zoom animations (ms).
         *
         * @type {number}
         */
        _this.zoomDuration = 1000;
        /**
         * Default zooming animation easing function.
         *
         * @type {function}
         */
        _this.zoomEasing = _core_utils_Ease__WEBPACK_IMPORTED_MODULE_12__["cubicOut"];
        /**
         * Smallest available zoom level. The map will not allow to zoom out past
         * this setting.
         *
         * NOTE: Should be power of 2.
         *
         * @default 1
         * @type {number}
         */
        _this.minZoomLevel = 1;
        /**
         * Biggest available zoom level. The map will not allow to zoom in past
         * this setting.
         *
         * NOTE: Should be power of 2.
         *
         * @default 32
         * @type {number}
         */
        _this.maxZoomLevel = 32;
        /**
         * [_prevZoomGeoPoint description]
         *
         * @todo Description
         * @type {IGeoPoint}
         */
        _this._prevZoomGeoPoint = { latitude: 0, longitude: 0 };
        _this.className = "MapChart";
        // Set default projection
        _this.projection = new _map_projections_Projection__WEBPACK_IMPORTED_MODULE_5__["Projection"]();
        _this.deltaLongitude = 0;
        _this.maxPanOut = 0.7;
        _this.homeZoomLevel = 1;
        _this.zoomStep = 2;
        // Set padding
        _this.padding(0, 0, 0, 0);
        // so that the map would render in a hidden div too
        _this.minWidth = 10;
        _this.minHeight = 10;
        _this.events.once("inited", _this.handleAllInited, _this, false);
        // Create a container for map series
        var seriesContainer = _this.seriesContainer;
        seriesContainer.draggable = true;
        seriesContainer.visible = false;
        seriesContainer.inert = true;
        seriesContainer.resizable = true;
        seriesContainer.events.on("transformed", _this.handleMapTransform, _this, false);
        seriesContainer.events.on("doublehit", _this.handleDoubleHit, _this, false);
        seriesContainer.events.on("drag", _this.handleDrag, _this, false);
        seriesContainer.zIndex = 0;
        seriesContainer.background.fillOpacity = 0;
        // Set up events
        //this.events.on("validated", this.updateExtremes, this);
        _this.events.on("datavalidated", _this.updateExtremes, _this, false);
        // Set up main chart container, e.g. set backgrounds and events to monitor
        // size changes, etc.
        var chartContainer = _this.chartContainer;
        chartContainer.parent = _this;
        chartContainer.isMeasured = false;
        chartContainer.zIndex = -1;
        _this._disposers.push(seriesContainer.events.on("maxsizechanged", function () {
            if (_this.inited) {
                if (_this._mapAnimation) {
                    _this._mapAnimation.stop();
                }
                _this.updateScaleRatio();
                _this.zoomToGeoPoint(_this._zoomGeoPointReal, _this.zoomLevel, true, 0);
                _this.series.each(function (series) {
                    series.updateTooltipBounds();
                });
            }
        }, undefined, false));
        var chartContainerBg = chartContainer.background;
        chartContainerBg.fillOpacity = 0;
        chartContainerBg.events.on("down", function (e) { _this.seriesContainer.dragStart(e.target.interactions.downPointers.getIndex(0)); }, _this);
        chartContainerBg.events.on("up", function (e) { _this.seriesContainer.dragStop(); }, _this);
        chartContainerBg.events.on("doublehit", _this.handleDoubleHit, _this);
        chartContainerBg.focusable = true;
        chartContainer.events.on("down", _this.handleMapDown, _this, false);
        // Add description to background
        _this.background.fillOpacity = 0;
        _this.background.readerTitle = _this.language.translate("Use plus and minus keys on your keyboard to zoom in and out");
        // Add keyboard events for panning
        _this._disposers.push(Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_8__["getInteraction"])().body.events.on("keyup", function (ev) {
            if (_this.topParent.hasFocused && (!_this._zoomControl || !_this._zoomControl.thumb.isFocused)) {
                switch (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_7__["keyboard"].getEventKey(ev.event)) {
                    case "up":
                        _this.pan({ x: 0, y: 0.1 });
                        break;
                    case "down":
                        _this.pan({ x: 0, y: -0.1 });
                        break;
                    case "left":
                        _this.pan({ x: 0.1, y: 0 });
                        break;
                    case "right":
                        _this.pan({ x: -0.1, y: 0 });
                        break;
                }
            }
        }, _this));
        _this.mouseWheelBehavior = "zoom";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    MapChart.prototype.handleAllInited = function () {
        var inited = true;
        this.seriesContainer.visible = true;
        this.series.each(function (series) {
            if (!series.inited) {
                inited = false;
            }
        });
        if (inited) {
            this.updateExtremes();
            this.goHome(0);
        }
        else {
            _core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].events.once("exitframe", this.handleAllInited, this, false);
        }
    };
    /**
     * Prevents map to be dragged out of the container area
     * @ignore
     */
    MapChart.prototype.handleDrag = function () {
        // not good doing it with adapters.
        var ww = this.seriesWidth * this.zoomLevel * this.scaleRatio;
        var hh = this.seriesHeight * this.zoomLevel * this.scaleRatio;
        var x = this.seriesContainer.pixelX;
        var y = this.seriesContainer.pixelY;
        var maxPanOut = this.maxPanOut;
        var minX = Math.min(this.maxWidth * (1 - maxPanOut) - ww / 2, -ww * (maxPanOut - 0.5));
        if (x < minX) {
            x = minX;
        }
        var maxX = Math.max(this.maxWidth * maxPanOut + ww / 2, this.maxWidth + ww * (maxPanOut - 0.5));
        if (x > maxX) {
            x = maxX;
        }
        var minY = Math.min(this.maxHeight * (1 - maxPanOut) - hh / 2, -hh * (maxPanOut - 0.5));
        if (y < minY) {
            y = minY;
        }
        var maxY = Math.max(this.maxHeight * maxPanOut + hh / 2, this.maxHeight + hh * (maxPanOut - 0.5));
        if (y > maxY) {
            y = maxY;
        }
        this.seriesContainer.moveTo({ x: x, y: y }, undefined, undefined, true);
        this._zoomGeoPointReal = this.zoomGeoPoint;
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    MapChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Map");
        }
    };
    /**
     * Handles event when a pointer presses down on the map, e.g. user presses
     * down mouse or touches the map on a screen.
     *
     * Stops all animations currently going on.
     */
    MapChart.prototype.handleMapDown = function () {
        if (this._mapAnimation) {
            this._mapAnimation.stop();
        }
    };
    /**
     * Handles the event when user doubleclicks or dooubletaps the map: zooms
     * in on the reference point.
     *
     * @param {AMEvent<Sprite, ISpriteEvents>["doublehit"]}  event  Original event
     */
    MapChart.prototype.handleDoubleHit = function (event) {
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["documentPointToSvg"](event.point, this.htmlContainer, this.svgContainer.cssScale);
        var geoPoint = this.svgPointToGeo(svgPoint);
        this.zoomIn(geoPoint);
    };
    /**
     * Handles mouse wheel event, e.g. user rotates mouse wheel while over the
     * map: zooms in or out depending on the direction of the wheel turn.
     *
     * @param {AMEvent<Sprite, ISpriteEvents>["wheel"]}  event  Original event
     */
    MapChart.prototype.handleWheel = function (event) {
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["documentPointToSvg"](event.point, this.htmlContainer, this.svgContainer.cssScale);
        var geoPoint = this.svgPointToGeo(svgPoint);
        if (event.shift.y < 0) {
            this.zoomIn(geoPoint);
        }
        else {
            this.zoomOut(geoPoint);
        }
    };
    Object.defineProperty(MapChart.prototype, "mouseWheelBehavior", {
        /**
         * @return { "zoom" | "none"}  mouse wheel behavior
         */
        get: function () {
            return this.getPropertyValue("mouseWheelBehavior");
        },
        /**
         * Specifies what should chart do if when mouse wheel is rotated.
         *
         * @param {"zoom" | "none"} mouse wheel behavior
         * @default zoomX
         */
        set: function (value) {
            if (this.setPropertyValue("mouseWheelBehavior", value)) {
                if (value != "none") {
                    this._mouseWheelDisposer = this.chartContainer.events.on("wheel", this.handleWheel, this, false);
                    this._disposers.push(this._mouseWheelDisposer);
                }
                else {
                    if (this._mouseWheelDisposer) {
                        this._mouseWheelDisposer.dispose();
                    }
                    this.chartContainer.wheelable = false;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "projection", {
        /**
         * @return {Projection} Projection
         */
        get: function () {
            return this.getPropertyValue("projection");
        },
        /**
         * Projection to use for the map.
         *
         * Available projections:
         * * Eckert6
         * * Mercator
         * * Miller
         * * Orthographic
         *
         * ```TypeScript
         * map.projection = new am4maps.projections.Mercator();
         * ```
         * ```JavaScript
         * map.projection = new am4maps.projections.Mercator();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "projection": "Mercator"
         *   // ...
         * }
         * ```
         *
         * @param {Projection}  projection  Projection
         */
        set: function (projection) {
            projection.deltaLongitude = this.deltaLongitude;
            if (this.setPropertyValue("projection", projection)) {
                this.invalidateProjection();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Calculates the longitudes and latitudes of the most distant points from
     * the center in all four directions: West, East, North, and South.
     *
     * @ignore Exclude from docs
     */
    MapChart.prototype.updateExtremes = function () {
        var _this = this;
        var pWest = this.west;
        var pEast = this.east;
        var pNorth = this.north;
        var pSouth = this.south;
        this.west = null;
        this.east = null;
        this.north = null;
        this.south = null;
        var chartContainer = this.chartContainer;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.series.iterator(), function (series) {
            if ((_this.west > series.west) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](_this.west)) {
                _this.west = series.west;
            }
            if ((_this.east < series.east) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](_this.east)) {
                _this.east = series.east;
            }
            if ((_this.north < series.north) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](_this.north)) {
                _this.north = series.north;
            }
            if ((_this.south > series.south) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](_this.south)) {
                _this.south = series.south;
            }
        });
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](this.east) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](this.north)) {
            // must reset
            this.projection.centerPoint = { x: 0, y: 0 };
            this.projection.scale = 1;
            // temporary setting deltaLongitude to 0 in order to measure w/h correctly
            var deltaLongitude = this.projection.deltaLongitude;
            this.projection.deltaLongitude = 0;
            var northPoint = this.projection.convert({ longitude: (this.east - this.west) / 2, latitude: this.north });
            var southPoint = this.projection.convert({ longitude: (this.east - this.west) / 2, latitude: this.south });
            var westPoint = this.projection.convert({ longitude: this.west, latitude: 0 });
            var eastPoint = this.projection.convert({ longitude: this.east, latitude: 0 });
            this.projection.deltaLongitude = deltaLongitude;
            this.projection.centerPoint = { x: westPoint.x + (eastPoint.x - westPoint.x) / 2, y: northPoint.y + (southPoint.y - northPoint.y) / 2 };
            var scaleRatio = void 0;
            var seriesWidth = eastPoint.x - westPoint.x;
            var seriesHeight = southPoint.y - northPoint.y;
            var vScale = chartContainer.innerWidth / seriesWidth;
            var hScale = chartContainer.innerHeight / seriesHeight;
            if (vScale > hScale) {
                scaleRatio = hScale;
            }
            else {
                scaleRatio = vScale;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNaN"](scaleRatio) || scaleRatio == Infinity) {
                scaleRatio = 1;
            }
            var projectionScaleChanged = false;
            if (this.projection.scale != scaleRatio) {
                this.projection.scale = scaleRatio;
                projectionScaleChanged = true;
            }
            this.seriesWidth = seriesWidth * scaleRatio;
            this.seriesHeight = seriesHeight * scaleRatio;
            var northPoint2 = this.projection.convert({ longitude: (this.east - this.west) / 2, latitude: this.north });
            var westPoint2 = this.projection.convert({ longitude: this.west - this.deltaLongitude, latitude: 0 });
            this._centerGeoPoint = this.projection.invert({ x: westPoint2.x + this.seriesWidth / 2, y: northPoint2.y + this.seriesHeight / 2 });
            //this.seriesContainer.width = this.seriesWidth; // not good, doesn't resize
            //this.seriesContainer.height = this.seriesHeight; // not good, doesn't resize
            this.seriesContainer.definedBBox = { x: westPoint2.x, y: northPoint2.y, width: this.seriesWidth, height: this.seriesHeight };
            this.updateScaleRatio();
            var seriesContainer = this.seriesContainer;
            seriesContainer.x = chartContainer.pixelWidth / 2;
            seriesContainer.y = chartContainer.pixelHeight / 2;
            if (projectionScaleChanged || pWest != this.west || pEast != this.east || pNorth != this.north || pSouth != this.south) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.series.iterator(), function (series) {
                    series.invalidate();
                });
            }
        }
    };
    /**
     * (Re)calculates a ratio which should be used to scale the actual map so
     * that it fits perfectly into available space. Helps to avoid redrawing of all the map if container size changes
     * @ignore
     */
    MapChart.prototype.updateScaleRatio = function () {
        var scaleRatio;
        var vScale = this.chartContainer.innerWidth / this.seriesWidth;
        var hScale = this.chartContainer.innerHeight / this.seriesHeight;
        if (vScale > hScale) {
            scaleRatio = hScale;
        }
        else {
            scaleRatio = vScale;
        }
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNaN"](scaleRatio) || scaleRatio == Infinity) {
            scaleRatio = 1;
        }
        if (scaleRatio != this.scaleRatio) {
            this.scaleRatio = scaleRatio;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.series.iterator(), function (series) {
                series.scale = scaleRatio;
                series.updateTooltipBounds();
            });
            this.dispatch("scaleratiochanged");
        }
    };
    /**
     * Converts a point within map container to geographical (lat/long)
     * coordinates.
     *
     * @param  {IPoint}     point  Source point
     * @return {IGeoPoint}         Geo-point
     */
    MapChart.prototype.svgPointToGeo = function (point) {
        var series = this.series.getIndex(0);
        if (series) {
            var seriesPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["svgPointToSprite"](point, series);
            return this.seriesPointToGeo(seriesPoint);
        }
    };
    /**
     * Converts geographical (lat/long) coordinates to an X/Y point within map's
     * container.
     *
     * @param  {IGeoPoint}  point  Source geo-point
     * @return {IPoint}            Point
     */
    MapChart.prototype.geoPointToSVG = function (point) {
        var series = this.series.getIndex(0);
        if (series) {
            var seriesPoint = this.geoPointToSeries(point);
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["spritePointToSvg"](seriesPoint, series);
        }
    };
    /**
     * Converts a point (X/Y) within actual objects of the map to geographical
     * (lat/long) coordinates.
     *
     * @param  {IPoint}     point  Source point
     * @return {IGeoPoint}         Geo-point
     */
    MapChart.prototype.seriesPointToGeo = function (point) {
        return this.projection.invert(point);
    };
    /**
     * Converts geographical (lat/long) coordinates to an X/Y point within
     * actual elements/objects of the maps.
     *
     * @param  {IGeoPoint}  point  Source geo-point
     * @return {IPoint}            Point
     */
    MapChart.prototype.geoPointToSeries = function (point) {
        return this.projection.convert(point);
    };
    Object.defineProperty(MapChart.prototype, "geodata", {
        /**
         * @return {Object} GeoJSON data
         */
        get: function () {
            return this._geodata;
        },
        /**
         * Map data in GeoJSON format.
         *
         * The Map supports the following GeoJSON objects: `Point`, `LineString`,
         * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.
         *
         * @see {@link http://geojson.org/} Official GeoJSON format specification
         * @param {Object} geoJSON GeoJSON data
         */
        set: function (geodata) {
            if (geodata != this._geodata) {
                this._geodata = geodata;
                this.invalidateData();
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this._dataUsers.iterator(), function (x) {
                    x.invalidateData();
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Zooms the map to particular zoom level and centers on a latitude/longitude
     * coordinate.
     *
     * @param  {IGeoPoint}  point      Center coordinate
     * @param  {number}     zoomLevel  Zoom level
     * @param  {boolean}    center     Center on the given coordinate?
     * @param  {number}     duration   Duration for zoom animation (ms)
     * @return {Animation}             Zoom animation
     */
    MapChart.prototype.zoomToGeoPoint = function (point, zoomLevel, center, duration) {
        var _this = this;
        if (!point) {
            point = this.zoomGeoPoint;
        }
        if (!point) {
            return;
        }
        this._zoomGeoPointReal = point;
        zoomLevel = _core_utils_Math__WEBPACK_IMPORTED_MODULE_10__["fitToRange"](zoomLevel, this.minZoomLevel, this.maxZoomLevel);
        var seriesPoint = this.projection.convert(point);
        var svgPoint = this.geoPointToSVG(point);
        var mapPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["svgPointToSprite"](svgPoint, this);
        if (center) {
            mapPoint = {
                x: this.maxWidth / 2,
                y: this.maxHeight / 2
            };
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](duration)) {
            duration = this.zoomDuration;
        }
        this._mapAnimation = this.seriesContainer.animate([{
                property: "scale",
                to: zoomLevel
            }, {
                property: "x",
                to: mapPoint.x - seriesPoint.x * zoomLevel * this.scaleRatio - this.pixelPaddingLeft
            }, {
                property: "y",
                to: mapPoint.y - seriesPoint.y * zoomLevel * this.scaleRatio - this.pixelPaddingTop
            }], duration, this.zoomEasing);
        this._disposers.push(this._mapAnimation.events.on("animationended", function () {
            _this._zoomGeoPointReal = _this.zoomGeoPoint;
        }));
        this.seriesContainer.validatePosition();
        return this._mapAnimation;
    };
    /**
     * Zooms the map to a particular map object.
     *
     * @param  {MapObject}  mapObject  Target map object
     * @param  {number}     zoomLevel  Zoom level
     * @param  {boolean}    center     Center on the given coordinate?
     * @param  {number}     duration   Duration for zoom animation (ms)
     * @return {Animation}             Zoom animation
     */
    MapChart.prototype.zoomToMapObject = function (mapObject, zoomLevel, center, duration) {
        if (center == undefined) {
            center = true;
        }
        if (mapObject instanceof _map_MapImage__WEBPACK_IMPORTED_MODULE_3__["MapImage"]) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNaN"](zoomLevel)) {
                zoomLevel = 5;
            }
            return this.zoomToGeoPoint({ latitude: mapObject.latitude, longitude: mapObject.longitude }, zoomLevel, center, duration);
        }
        var dataItem = mapObject.dataItem;
        if (dataItem && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](dataItem.zoomLevel)) {
            zoomLevel = dataItem.zoomLevel;
        }
        if (mapObject instanceof _map_MapPolygon__WEBPACK_IMPORTED_MODULE_4__["MapPolygon"]) {
            var dataItem_1 = mapObject.dataItem;
            var bbox = mapObject.polygon.bbox;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNumber"](zoomLevel)) {
                zoomLevel = Math.min(this.seriesWidth / bbox.width, this.seriesHeight / bbox.height);
            }
            var geoPoint = void 0;
            if (dataItem_1 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](dataItem_1.zoomGeoPoint)) {
                geoPoint = dataItem_1.zoomGeoPoint;
            }
            else {
                // this is more accurate
                var polygonPoint = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };
                var seriesPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["spritePointToSprite"](polygonPoint, mapObject.polygon, mapObject.series);
                geoPoint = this.seriesPointToGeo(seriesPoint);
            }
            return this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);
        }
    };
    /**
     * Zooms the map to a particular viewport.
     *
     * The `north`, `east`, `south`, and `west` define boundaries of the
     * imaginary viewort we want to zoom the map to.
     *
     * `level` is not actual zoom level. The map will determine the zoom level
     * required to accommodated such zoom, and will adjust it by `level` if set.
     *
     * @param  {number}     north     Latitude of the North-most boundary
     * @param  {number}     east      Longitude of the East-most boundary
     * @param  {number}     south     Latitude of the South-most boundary
     * @param  {number}     west      Longitude of the West-most boundary
     * @param  {number}     level     Adjust zoom level
     * @param  {boolean}    center    Center on the given coordinate?
     * @param  {number}     duration  Duration for zoom animation (ms)
     * @return {Animation}            Zoom animation
     */
    MapChart.prototype.zoomToRectangle = function (north, east, south, west, level, center, duration) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isNaN"](level)) {
            level = 1;
        }
        var zoomLevel = level * Math.min((this.south - this.north) / (south - north), (this.west - this.east) / (west - east));
        return this.zoomToGeoPoint({ latitude: north + (south - north) / 2, longitude: west + (east - west) / 2 }, zoomLevel, center, duration);
    };
    /**
     * Zooms in the map, optionally centering on particular latitude/longitude
     * point.
     *
     * @param  {IGeoPoint}  geoPoint  Optional center point
     * @param  {number}     duration  Duration for zoom animation (ms)
     * @return {Animation}            Zoom animation
     */
    MapChart.prototype.zoomIn = function (geoPoint, duration) {
        return this.zoomToGeoPoint(geoPoint, this.zoomLevel * this.zoomStep, false, duration);
    };
    /**
     * Zooms out the map, optionally centering on particular latitude/longitude
     * point.
     *
     * @param  {IGeoPoint}  geoPoint  Optional center point
     * @param  {number}     duration  Duration for zoom animation (ms)
     * @return {Animation}            Zoom animation
     */
    MapChart.prototype.zoomOut = function (geoPoint, duration) {
        return this.zoomToGeoPoint(geoPoint, this.zoomLevel / this.zoomStep, false, duration);
    };
    /**
     * Pans the maps using relative coordinates. E.g.:
     *
     * ```JSON
     * {
     *   x: 0.1,
     *   y: -0.1
     * }
     * ```
     *
     * The above will move the map by 10% to the right, and by 10% upwards.
     *
     * @param {IPoint}  shift     Vertical and horizontal shift
     * @param {number}  duration  Pan animation duration (ms)
     */
    MapChart.prototype.pan = function (shift, duration) {
        var point = this.geoPointToSVG(this.zoomGeoPoint);
        point.x += this.pixelWidth * shift.x;
        point.y += this.pixelHeight * shift.y;
        this.zoomToGeoPoint(this.svgPointToGeo(point), this.zoomLevel, true, duration);
    };
    Object.defineProperty(MapChart.prototype, "zoomGeoPoint", {
        /**
         * Current lat/long coordinates for the center of the viewport. (default
         * zoom reference point)
         *
         * @readonly
         * @return {IGeoPoint} Coordinates
         */
        get: function () {
            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_11__["spritePointToSvg"]({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 }, this);
            return this.svgPointToGeo(point);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "zoomLevel", {
        /**
         * Current zoom level.
         *
         * @readonly
         * @return {number} Zoom level
         */
        get: function () {
            return this.seriesContainer.scale;
        },
        set: function (value) {
            this.seriesContainer.scale = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Dispatches events after some map transformation, like pan or zoom.
     */
    MapChart.prototype.handleMapTransform = function () {
        if (this.zoomLevel != this._prevZoomLevel) {
            this.dispatch("zoomlevelchanged");
            this._prevZoomLevel = this.zoomLevel;
        }
        if (this.zoomGeoPoint && (this._prevZoomGeoPoint.latitude != this.zoomGeoPoint.latitude || this._prevZoomGeoPoint.longitude != this.zoomGeoPoint.longitude)) {
            this.dispatch("mappositionchanged");
        }
    };
    Object.defineProperty(MapChart.prototype, "smallMap", {
        /**
         * @return {SmallMap} Small map
         */
        get: function () {
            if (!this._smallMap) {
                var smallMap = new _map_SmallMap__WEBPACK_IMPORTED_MODULE_6__["SmallMap"]();
                this.smallMap = smallMap;
            }
            return this._smallMap;
        },
        /**
         * A [[SmallMap]] to be used on the map.
         *
         * Please note, that accessing this property will NOT create a small map
         * if it has not yet been created. (except in JSON)
         *
         * ```TypeScript
         * // Create a small map
         * map.smallMap = new am4maps.SmallMap();
         * ```
         * ```JavaScript
         * // Create a small map
         * map.smallMap = new am4maps.SmallMap();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "smallMap": {}
         *   // ...
         * }
         * ```
         *
         * @param {SmallMap}  smallMap  Small map
         */
        set: function (smallMap) {
            if (this._smallMap) {
                this.removeDispose(this._smallMap);
            }
            this._smallMap = smallMap;
            this._smallMap.chart = this;
            smallMap.parent = this.chartContainer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "zoomControl", {
        /**
         * @return {ZoomControl} Zoom control
         */
        get: function () {
            return this._zoomControl;
        },
        /**
         * A [[ZoomControl]] to be used on the map.
         *
         * Please note, that accessing this property will NOT create a zoom control
         * if it has not yet been created. (except in JSON)
         *
         * ```TypeScript
         * // Create a zoom control
         * map.zoomControl = new am4maps.ZoomControl();
         * ```
         * ```JavaScript
         * // Create a zoom control
         * map.zoomControl = new am4maps.ZoomControl();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "zoomControl": {}
         *   // ...
         * }
         * ```
         *
         * @param {ZoomControl}  zoomControl  Zoom control
         */
        set: function (zoomControl) {
            if (this._zoomControl) {
                this.removeDispose(this._zoomControl);
            }
            this._zoomControl = zoomControl;
            zoomControl.chart = this;
            zoomControl.parent = this.chartContainer;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and returns a map series of appropriate type.
     *
     * @return {MapSeries} Map series
     */
    MapChart.prototype.createSeries = function () {
        return new _map_MapSeries__WEBPACK_IMPORTED_MODULE_2__["MapSeries"]();
    };
    Object.defineProperty(MapChart.prototype, "deltaLongitude", {
        /**
         * @return {number} Map center shift
         */
        get: function () {
            return this.getPropertyValue("deltaLongitude");
        },
        /**
         * Degrees to shift map center by.
         *
         * E.g. if set to -160, the longitude 20 will become a new center, creating
         * a Pacific-centered map.
         *
         * @param {number}  value  Map center shift
         */
        set: function (value) {
            if (this.setPropertyValue("deltaLongitude", _map_Geo__WEBPACK_IMPORTED_MODULE_15__["wrapAngleTo180"](value))) {
                this.invalidateProjection();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "maxPanOut", {
        /**
         * @return {number} Max pan out
         */
        get: function () {
            return this.getPropertyValue("maxPanOut");
        },
        /**
         * Maximum portion of the map's width/height to allow panning "off screen".
         *
         * A value of 0 (zero) will prevent any portion of the the map to be panned
         * outside the viewport.
         *
         * 0.5 will allow half of the map to be outside viewable area.
         *
         * @default 0.7
         * @param {number}  value  Max pan out
         */
        set: function (value) {
            this.setPropertyValue("maxPanOut", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "homeGeoPoint", {
        /**
         * @return {IGeoPoint} Home geo point
         */
        get: function () {
            return this.getPropertyValue("homeGeoPoint");
        },
        /**
         * The geographical point to center map on when it is first loaded.
         *
         * The map will also be centered to this point when you call `goHome()`
         * method.
         *
         * @param {IGeoPoint}  value  Home geo point
         */
        set: function (value) {
            this.setPropertyValue("homeGeoPoint", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "homeZoomLevel", {
        /**
         * @return {number} Home zoom level
         */
        get: function () {
            return this.getPropertyValue("homeZoomLevel");
        },
        /**
         * The zoom level to put the map in when it is first loaded.
         *
         * The map will also be set to this zoom level when you call `goHome()`
         * method.
         *
         * @param {number}  value  Home zoom level
         */
        set: function (value) {
            this.setPropertyValue("homeZoomLevel", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "zoomStep", {
        /**
         * @return {number} Zoom factor
         */
        get: function () {
            return this.getPropertyValue("zoomStep");
        },
        /**
         * When user zooms in or out current zoom level is multiplied or divided
         * by value of this setting.
         *
         * @default 2
         * @param {number}  value  Zoom factor
         */
        set: function (value) {
            this.setPropertyValue("zoomStep", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Invalidates projection, causing all series to be redrawn.
     */
    MapChart.prototype.invalidateProjection = function () {
        this.updateExtremes();
        //		this.projection.deltaLatitude = this.deltaLatitude;
        this.projection.deltaLongitude = this.deltaLongitude;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.series.iterator(), function (series) {
            series.invalidate();
        });
    };
    Object.defineProperty(MapChart.prototype, "geodataSource", {
        /**
         * Returns a [[DataSource]] specifically for loading Component's data.
         *
         * @return {DataSource} Data source
         */
        get: function () {
            if (!this._dataSources["geodata"]) {
                this.getDataSource("geodata");
            }
            return this._dataSources["geodata"];
        },
        /**
         * Sets a [[DataSource]] to be used for loading Component's data.
         *
         * @param {DataSource} value Data source
         */
        set: function (value) {
            var _this = this;
            if (this._dataSources["geodata"]) {
                this.removeDispose(this._dataSources["geodata"]);
            }
            this._dataSources["geodata"] = value;
            this._dataSources["geodata"].component = this;
            this.events.on("inited", function () {
                _this.loadData("geodata");
            }, this, false);
            this.setDataSourceEvents(value, "geodata");
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    MapChart.prototype.processConfig = function (config) {
        // Instantiate projection
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config["projection"]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isString"](config["projection"])) {
            config["projection"] = this.createClassInstance(config["projection"]);
        }
        // Set up small map
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.smallMap) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.smallMap.type)) {
            config.smallMap.type = "SmallMap";
        }
        // Set up zoom control
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.zoomControl) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.zoomControl.type)) {
            config.zoomControl.type = "ZoomControl";
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
 * This function is used to sort element's JSON config properties, so that
 * some properties that absolutely need to be processed last, can be put at
 * the end.
 *
 * @ignore Exclude from docs
 * @param  {string}  a  Element 1
 * @param  {string}  b  Element 2
 * @return {number}     Sorting number
 */
    MapChart.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "smallMap") {
            return 1;
        }
        else if (b == "smallMap") {
            return -1;
        }
        else if (a == "series") {
            return 1;
        }
        else if (b == "series") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    /**
     * Adds `projection` to "as is" fields.
     *
     * @param  {string}   field  Field name
     * @return {boolean}         Assign as is?
     */
    MapChart.prototype.asIs = function (field) {
        return field == "projection" || _super.prototype.asIs.call(this, field);
    };
    Object.defineProperty(MapChart.prototype, "centerGeoPoint", {
        /**
         * Geo point of map center
         *
         * @readonly
         * @type {IPoint}
         */
        get: function () {
            return this._centerGeoPoint;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Resets the map to its original position and zoom level.
     */
    MapChart.prototype.goHome = function (duration) {
        var homeGeoPoint = this.homeGeoPoint;
        if (!homeGeoPoint) {
            homeGeoPoint = this.centerGeoPoint;
        }
        if (homeGeoPoint) {
            this.zoomToGeoPoint(homeGeoPoint, this.homeZoomLevel, true, duration);
        }
    };
    /**
     * Sets [[Paper]] instance to use to draw elements.
     * @ignore
     * @param {Paper} paper Paper
     * @return {boolean} true if paper was changed, false, if it's the same
     */
    MapChart.prototype.setPaper = function (paper) {
        if (this.svgContainer) {
            this.svgContainer.hideOverflow = true;
        }
        return _super.prototype.setPaper.call(this, paper);
    };
    /**
     * Prepares the legend instance for use in this chart.
     *
     * @param {Legend}  legend  Legend
     */
    MapChart.prototype.setLegend = function (legend) {
        _super.prototype.setLegend.call(this, legend);
        if (legend) {
            legend.parent = this.chartContainer;
        }
    };
    return MapChart;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].registeredClasses["MapChart"] = MapChart;
//# sourceMappingURL=MapChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js ***!
  \********************************************************************************/
/*! exports provided: SerialChartDataItem, SerialChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialChartDataItem", function() { return SerialChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialChart", function() { return SerialChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Chart */ "./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _series_Series__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../series/Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/ColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Serial chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[SerialChart]].
 *
 * @see {@link DataItem}
 */
var SerialChartDataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SerialChartDataItem, _super);
    /**
     * Constructor
     */
    function SerialChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "SerialChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return SerialChartDataItem;
}(_Chart__WEBPACK_IMPORTED_MODULE_1__["ChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all series-based charts, like XY, Pie, etc.
 *
 * Is not useful on its own.
 *
 * @see {@link ISerialChartEvents} for a list of available Events
 * @see {@link ISerialChartAdapters} for a list of available Adapters
 */
var SerialChart = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SerialChart, _super);
    /**
     * Constructor
     */
    function SerialChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "SerialChart";
        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__["ColorSet"]();
        // Create a container for series
        var seriesContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        seriesContainer.shouldClone = false;
        seriesContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        seriesContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        seriesContainer.isMeasured = false;
        seriesContainer.layout = "none";
        seriesContainer.zIndex = 2;
        _this.seriesContainer = seriesContainer;
        // Create a container for bullets
        var bulletsContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        bulletsContainer.shouldClone = false;
        bulletsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        bulletsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        bulletsContainer.isMeasured = false;
        bulletsContainer.zIndex = 3;
        bulletsContainer.layout = "none";
        _this.bulletsContainer = bulletsContainer;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    SerialChart.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this.colors) {
            this.colors.dispose();
        }
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor
     */
    SerialChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Serial chart");
        }
    };
    Object.defineProperty(SerialChart.prototype, "series", {
        /**
         * A list of chart's series.
         *
         * @return {List} Chart's series
         */
        get: function () {
            var _this = this;
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListTemplate"](this.createSeries());
                this._series.events.on("inserted", function (event) {
                    _this.handleSeriesAdded(event);
                }, undefined, false);
                this._series.events.on("removed", function (event) {
                    var series = event.oldValue;
                    _this.dataUsers.removeValue(series);
                    _this.dataUsers.each(function (dataUser) {
                        dataUser.invalidateDataItems();
                    });
                    if (series.autoDispose) {
                        series.dispose();
                    }
                    _this.feedLegend();
                }, undefined, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListDisposer"](this._series));
                this._disposers.push(this._series.template);
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a new [[Series]] object with required parameters when it is
     * added to the chart.
     *
     * @ignore Exclude from docs
     * @param {IListEvents<Series>["inserted"]}  event  Event
     */
    SerialChart.prototype.handleSeriesAdded = function (event) {
        var _this = this;
        var series = event.newValue;
        series.chart = this;
        series.parent = this.seriesContainer;
        series.bulletsContainer.parent = this.bulletsContainer;
        this._dataUsers.moveValue(series);
        series.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_10__["Disposer"](function () {
            _this.dataUsers.removeValue(series);
        }));
        this.feedLegend();
    };
    /**
     * Setups the legend to use the chart's data.
     * @ignore
     */
    SerialChart.prototype.feedLegend = function () {
        var legend = this.legend;
        if (legend) {
            var legendData_1 = [];
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
                if (!series.hiddenInLegend) {
                    legendData_1.push(series);
                }
            });
            legend.dataFields.name = "name";
            legend.data = legendData_1;
        }
    };
    /**
     * Creates and returns a new Series, suitable for this chart type.
     *
     * @return {this} New series
     */
    SerialChart.prototype.createSeries = function () {
        return new _series_Series__WEBPACK_IMPORTED_MODULE_4__["Series"]();
    };
    Object.defineProperty(SerialChart.prototype, "colors", {
        /**
         * @return {ColorSet} Color list
         */
        get: function () {
            return this.getPropertyValue("colors");
        },
        /**
         * Chart's color list.
         *
         * This list can be used by a number of serial items, like applying a new
         * color for each Series added. Or, applying a new color for each slice
         * of a Pie chart.
         *
         * Please see [[ColorSet]] for information on how you can set up to generate
         * unique colors.
         *
         * A theme you are using may override default pre-defined colors.
         *
         * @param {ColorSet} value Color list
         */
        set: function (value) {
            this.setPropertyValue("colors", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all parameters from another [[SerialChart]].
     *
     * @param {SerialChart} source Source SerialChart
     */
    SerialChart.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.series.copyFrom(source.series);
    };
    return SerialChart;
}(_Chart__WEBPACK_IMPORTED_MODULE_1__["Chart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_7__["registry"].registeredClasses["SerialChart"] = SerialChart;
//# sourceMappingURL=SerialChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/Base.js ***!
  \*****************************************************************/
/*! exports provided: BaseObject, BaseObjectEvents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseObject", function() { return BaseObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseObjectEvents", function() { return BaseObjectEvents; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Cache__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/Cache */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Base functionality
 */













//import * as $debug from "./utils/Debug";
/**
 * Provides base functionality for all derivative objects, like generating ids,
 * handling cache, etc.
 */
var BaseObject = /** @class */ (function () {
    //protected _classes: { [index: string]: any } = {};
    /**
     * Constructor
     * * Sets class name
     */
    function BaseObject() {
        /**
         * Indicates if this object has already been deleted. Any
         * destruction/disposal code should take this into account when deciding
         * wheter to run potentially costly disposal operations if they already have
         * been run.
         *
         * @type {boolean}
         * @ignore Exclude from docs
         */
        this._disposed = false;
        /**
         * List of IDisposer which will be disposed when the BaseObject is disposed.
         *
         * @ignore Exclude from docs
         */
        this._disposers = [];
        this.className = "BaseObject";
        //this.debug();
    }
    BaseObject.prototype.debug = function () {
        //$debug.debug(this);
    };
    Object.defineProperty(BaseObject.prototype, "uid", {
        /**
         * Returns object's internal unique ID.
         *
         * @return {string} Unique ID
         */
        get: function () {
            if (!this._uid) {
                this._uid = _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].getUniqueId();
                _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].map.setKey(this._uid, this);
            }
            return this._uid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseObject.prototype, "id", {
        /**
         * @return {Optional<string>} Id
         */
        get: function () {
            return this._id;
        },
        /**
         * Sets the user-defined id of the element.
         *
         * @param {Optional<string>} value Id
         */
        set: function (value) {
            //registry.map.setKey(value, this); // registry.map only stores by uid
            this._id = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseObject.prototype, "map", {
        /**
         * Returns a universal collection for mapping ids with objects.
         *
         * @ignore Exclude from docs
         * @return {Dictionary<string, any>} Map collection
         */
        get: function () {
            if (!this._map) {
                this._map = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__["Dictionary"]();
            }
            return this._map;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Applies properties from all assigned themes.
     *
     * @ignore Exclude from docs
     */
    BaseObject.prototype.applyTheme = function () {
        var _this = this;
        // TODO is this needed ?
        if (_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"]) {
            var themes = this.getCurrentThemes();
            // TODO is this needed ?
            if (themes) {
                _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](themes, function (theme, index) {
                    theme(_this);
                });
            }
        }
    };
    Object.defineProperty(BaseObject.prototype, "themes", {
        /**
         * @ignore Exclude from docs
         * @return {Optional<ITheme[]>} An array of themes
         */
        get: function () {
            return this._themes;
        },
        /**
         * A list of themes to be used for this element.
         *
         * @ignore Exclude from docs
         * @param {Optional<ITheme[]>} value An array of themes
         */
        set: function (value) {
            this._themes = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a list of themes that should be applied to this element. It could
     * either be a list of themes set explicitly on this element, or system-wide.
     *
     * @return {ITheme[]} List of themes
     */
    BaseObject.prototype.getCurrentThemes = function () {
        return this.themes || _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].themes;
    };
    /**
     * Returns if this object has been already been disposed.
     *
     * @return {boolean} Is disposed?
     */
    BaseObject.prototype.isDisposed = function () {
        return this._disposed;
    };
    /**
     * Destroys this object and all related data.
     */
    BaseObject.prototype.dispose = function () {
        if (!this._disposed) {
            this._disposed = true;
            var a = this._disposers;
            this._disposers = null;
            while (a.length !== 0) {
                var disposer = a.shift();
                disposer.dispose();
            }
            // Clear cache
            this.clearCache();
            // remove from clones list
            if (this.clonedFrom) {
                this.clonedFrom.clones.removeValue(this);
            }
            var uid = this._uid;
            if (uid != null) {
                _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].map.removeKey(uid);
            }
        }
    };
    /**
     * Adds an IDisposer, which will be disposed when this object is disposed.
     *
     * @param {IDisposer} target Object to dispose
     * @ignore Exclude from docs
     */
    BaseObject.prototype.addDisposer = function (target) {
        this._disposers.push(target);
    };
    /**
     * Disposes disposable object and removes it from `_disposers`.
     *
     * @param {IDisposer} target Object to dispose
     * @ignore Exclude from docs
     */
    BaseObject.prototype.removeDispose = function (target) {
        //if(target){
        if (!this._disposed) {
            var index = _utils_Array__WEBPACK_IMPORTED_MODULE_10__["indexOf"](this._disposers, target);
            if (index > -1) {
                this._disposers.splice(index, 1);
            }
        }
        target.dispose();
        //}
    };
    /**
     * Makes a copy of this object and returns the clone. Try to avoid cloning complex objects like chart, create new instances if you need them.
     *
     * @param   {string}  cloneId  An id to use for clone (if not set a unique id will be generated)
     * @returns {Object}           Clone
     */
    BaseObject.prototype.clone = function (cloneId) {
        if (!cloneId) {
            cloneId = "clone-" + _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].getUniqueId();
        }
        var newObject = new this.constructor();
        newObject.cloneId = cloneId;
        newObject.copyFrom(this);
        // add to clones list
        // this.clones.push(newObject); // moved this to copyFrom
        return newObject;
    };
    Object.defineProperty(BaseObject.prototype, "clones", {
        /**
         * Returns a collection of object's clones.
         *
         * @ignore Exclude from docs
         * @return {Dictionary<string, this>} Clones
         */
        get: function () {
            if (!this._clones) {
                this._clones = new _utils_List__WEBPACK_IMPORTED_MODULE_1__["List"]();
            }
            return this._clones;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all properties and related data from different element.
     *
     * @param {this} object Source element
     */
    BaseObject.prototype.copyFrom = function (object) {
        object.clones.push(this); // do not moveValue, as it is expensive! even if there will be several items in clones list, it's not that bad.
        this.clonedFrom = object;
    };
    Object.defineProperty(BaseObject.prototype, "className", {
        /**
         * @ignore Exclude from docs
         * @return {string} Class name
         */
        get: function () {
            return this._className;
        },
        /**
         * Element's class name. (a class that was used to instantiate the element)
         *
         * @ignore Exclude from docs
         * @param {string}  value  Class name
         */
        set: function (value) {
            this._className = value;
            /*if (registry) {
                registry.registeredClasses[value] = typeof this;
            }*/
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Caches value in object's cache.
     *
     * @ignore Exclude from docs
     * @param {string}  key    Key
     * @param {any}     value  Value
     * @param {number}  ttl    TTL in seconds
     */
    BaseObject.prototype.setCache = function (key, value, ttl) {
        _utils_Cache__WEBPACK_IMPORTED_MODULE_9__["cache"].set(this.uid, key, value, ttl);
    };
    /**
     * Retrieves cached value.
     *
     * If optional second padarameter is specified, it will return that value
     * if cache is not available or is expired.
     *
     * @ignore Exclude from docs
     * @param  {string}  key    Key
     * @param  {any}     value  Value to return if cache is not available
     * @return {any}            Value
     */
    BaseObject.prototype.getCache = function (key, value) {
        if (value === void 0) { value = undefined; }
        return _utils_Cache__WEBPACK_IMPORTED_MODULE_9__["cache"].get(this.uid, key, value);
    };
    /**
     * Clears object's local cache.
     *
     * @ignore Exclude from docs
     */
    BaseObject.prototype.clearCache = function () {
        _utils_Cache__WEBPACK_IMPORTED_MODULE_9__["cache"].clear(this.uid);
    };
    /**
     * Creates [[Disposer]] for `setTimeout` function call. This ensures that all
     * timeouts created by the object will be cleared when object itself is
     * disposed.
     *
     * @ignore Exclude from docs
     * @param  {() => void}  fn     Callback function
     * @param  {number}      delay  Timeout (ms)
     * @return {IDisposer}          Disposer for timeout
     */
    BaseObject.prototype.setTimeout = function (fn, delay) {
        var _this = this;
        var id = setTimeout(function () {
            _this.removeDispose(disposer);
            fn();
        }, delay);
        var disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["Disposer"](function () {
            clearTimeout(id);
        });
        this._disposers.push(disposer);
        return disposer;
    };
    /**
     * Creates [[Disposer]] for `setInterval` function call. This ensures that all
     * timeouts created by the object will be cleared when object itself is
     * disposed.
     *
     * @ignore Exclude from docs
     * @param  {() => void}  fn     Callback function
     * @param  {number}      delay  Timeout (ms)
     * @return {IDisposer}          Disposer for timeout
     */
    BaseObject.prototype.setInterval = function (fn, delay) {
        var _this = this;
        var id = setInterval(function () {
            _this.removeDispose(disposer);
            fn();
        }, delay);
        var disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["Disposer"](function () {
            clearTimeout(id);
        });
        this._disposers.push(disposer);
        return disposer;
    };
    Object.defineProperty(BaseObject.prototype, "config", {
        /**
         * ==========================================================================
         * JSON-BASED CONFIG PROCESSING
         * ==========================================================================
         * @hidden
         */
        /**
         * Use this property to set JSON-based config. When set, triggers processing
         * routine, which will go through all properties, and try to apply values,
         * create instances, etc.
         *
         * Use this with caution, as it is a time-consuming process. It's used for
         * initialchart setup only, not routine operations.
         *
         * @param {object} json JSON config
         */
        set: function (config) {
            try {
                this.processConfig(config);
            }
            catch (e) {
                /*if (this instanceof Sprite) {
                    this.raiseCriticalError(e);
                }*/
                this.raiseCriticalError(e);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes the JSON config.
     *
     * @param {object}  json  JSON config
     * @ignore Exclude from docs
     */
    BaseObject.prototype.processConfig = function (config) {
        var _this = this;
        if (!config) {
            return;
        }
        // Get target
        var target = this;
        // Iterate through all of the items
        _utils_Object__WEBPACK_IMPORTED_MODULE_11__["eachOrdered"](config, function (configKey, value) {
            var configValue = value;
            // Is this a callback?
            if (configKey == "callback" && typeof value == "function") {
                value.call(target);
            }
            // Check if there's a property in target
            if (_this.hasProperty(configKey)) {
                var item_1;
                // Do we have instructions to create an object?
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](configValue) && _utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](configValue["type"])) {
                    // Create new instance
                    if (item_1 = _this.createClassInstance(configValue["type"])) {
                        target[configKey] = item_1;
                    }
                    else {
                        item_1 = target[configKey];
                    }
                }
                else {
                    // Get item from the object
                    item_1 = target[configKey];
                }
                /**
                 * It is...
                 * --------------------------------------------------------------------
                 */
                if (item_1 instanceof _utils_Adapter__WEBPACK_IMPORTED_MODULE_5__["Adapter"]) {
                    // ... an Adapter, try to add handlers to it
                    // ------------------------------------------------------------------
                    _this.processAdapters(item_1, configValue);
                }
                else if (item_1 instanceof _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_4__["EventDispatcher"]) {
                    // ... an EventDispatcher, try to add handlers to it
                    // ------------------------------------------------------------------
                    _this.processEvents(item_1, configValue);
                }
                else if (_this.asIs(configKey)) {
                    // ... a special field, just set it to new value
                    // ------------------------------------------------------------------
                    // (no need to add each indvidual item)
                    target[configKey] = configValue;
                }
                else if (configValue instanceof BaseObject) {
                    // ... a BaseObject object, we just going to use it as it is
                    // ------------------------------------------------------------------
                    target[configKey] = configValue;
                }
                else if (item_1 instanceof BaseObject) {
                    // ... another child BaseObject
                    // ------------------------------------------------------------------
                    // Let's just pass in config part in and let itself deal with it
                    item_1.config = configValue;
                }
                else if (item_1 instanceof _utils_List__WEBPACK_IMPORTED_MODULE_1__["ListTemplate"]) {
                    // ... a list with template
                    // ------------------------------------------------------------------
                    // Let's see what we can do with it
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isArray"](configValue)) {
                        // It's an array.
                        // Create a list item for entry, or try to apply properties to an
                        // existing entry if possible and it is present.
                        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](configValue, function (entry, index) {
                            var type = _this.getConfigEntryType(entry);
                            var listItem;
                            if (item_1.hasIndex(index) && !entry["forceCreate"]) {
                                listItem = item_1.getIndex(index);
                            }
                            else if (entry instanceof BaseObject) {
                                // Item is already a BaseObject, no need to process it further
                                item_1.push(entry);
                                return;
                            }
                            else if (type) {
                                listItem = item_1.create(type);
                            }
                            else {
                                listItem = item_1.create();
                            }
                            if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](entry)) {
                                // If the list item is BaseObject, we just need to let it
                                // deal if its own config
                                if (listItem instanceof BaseObject) {
                                    listItem.config = entry;
                                }
                                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](listItem) && _utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](entry)) {
                                    _utils_Object__WEBPACK_IMPORTED_MODULE_11__["copyAllProperties"](entry, listItem);
                                }
                                else {
                                    item_1.setIndex(item_1.indexOf(listItem), entry);
                                }
                            }
                        });
                        // Truncate the list if it contains less items than the config
                        // array
                        while (configValue.length > item_1.length) {
                            item_1.pop();
                        }
                    }
                    else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](configValue)) {
                        // It's a single oject.
                        // Treat it as a template.
                        if (configValue instanceof BaseObject) {
                            // Item is already a BaseObject, no need to process it further
                            item_1.template = configValue;
                        }
                        else if (item_1.template instanceof BaseObject) {
                            // Template is a BaseObject so we will just let its config
                            // deal with the configuration
                            item_1.template.config = configValue;
                        }
                        else {
                            _utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](configValue, function (entryKey, entryValue) {
                                var listItem = item_1.template[entryKey];
                                if (listItem instanceof _utils_Adapter__WEBPACK_IMPORTED_MODULE_5__["Adapter"]) {
                                    _this.processAdapters(listItem, entryValue);
                                }
                                else if (listItem instanceof _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_4__["EventDispatcher"]) {
                                    _this.processEvents(listItem, entryValue);
                                }
                                else if (listItem instanceof _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__["DictionaryTemplate"]) {
                                    _this.processDictionaryTemplate(listItem, entryValue);
                                }
                                else if (item_1.template[entryKey] instanceof BaseObject) {
                                    // Template is a BaseObject. Let it deal with its own config.
                                    item_1.template[entryKey].config = entryValue;
                                }
                                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](entryValue) && _utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](entryValue["type"])) {
                                    if (listItem = _this.createClassInstance(entryValue["type"])) {
                                        if (listItem instanceof BaseObject) {
                                            listItem.config = entryValue;
                                        }
                                        item_1.template[entryKey] = listItem;
                                    }
                                    else {
                                        item_1.template[entryKey] = entryValue;
                                    }
                                }
                                else if (listItem instanceof _utils_List__WEBPACK_IMPORTED_MODULE_1__["List"]) {
                                    // It's List, process it
                                    _this.processList(entryValue, listItem);
                                }
                                else {
                                    // Aything else. Just assing and be done with it.
                                    item_1.template[entryKey] = _this.maybeColorOrPercent(entryValue);
                                }
                            });
                        }
                    }
                    else {
                        // Something else?
                        // Not sure what to do with it on a list - ignore
                    }
                }
                else if (item_1 instanceof _utils_List__WEBPACK_IMPORTED_MODULE_1__["List"]) {
                    // ... a list
                    // ------------------------------------------------------------------
                    _this.processList(configValue, item_1);
                }
                else if (item_1 instanceof _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__["DictionaryTemplate"]) {
                    // ... a dictionary with template
                    // ------------------------------------------------------------------
                    _this.processDictionaryTemplate(item_1, configValue);
                }
                else if (item_1 instanceof _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__["Dictionary"]) {
                    // ... a dictionary
                    // ------------------------------------------------------------------
                    _this.processDictionary(item_1, configValue);
                }
                else if (item_1 instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_6__["Color"] || item_1 instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"]) {
                    // ... it's a Color or Percent
                    // ------------------------------------------------------------------
                    target[configKey] = _this.maybeColorOrPercent(configValue);
                }
                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](item_1) && _utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](configValue)) {
                    // ... a regular object
                    // ------------------------------------------------------------------
                    _utils_Object__WEBPACK_IMPORTED_MODULE_11__["copyAllProperties"](configValue, item_1);
                }
                else {
                    // ... something else - probably a simple property or object
                    // ------------------------------------------------------------------
                    // Maybe convert to `Percent` or `Color`?
                    configValue = _this.maybeColorOrPercent(configValue);
                    // Assign
                    target[configKey] = configValue;
                }
            }
            else if (!_this.isReserved(configKey)) {
                // Doesn't have property set. But we're going to assume JSON config
                // creator knows what he/she is doing and set it anyway.
                target[configKey] = configValue;
            }
        }, this.configOrder);
        // Any errors?
        if (this.processingErrors.length) {
            var errors = this.processingErrors.join("\n");
            this._processingErrors = [];
            throw Error(errors);
        }
    };
    /**
     * Tries to detect if value is color or percent and converts to proper object
     * if necessary.
     *
     * Returns the same source value if no color/percent detected
     *
     * @param  {any}  value  Source value
     * @return {any}         Converted value
     */
    BaseObject.prototype.maybeColorOrPercent = function (value) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isString"](value)) {
            if (value.match(/^[0-9.\-]+\%$/)) {
                return Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(_utils_Type__WEBPACK_IMPORTED_MODULE_12__["toNumber"](value));
            }
            else if (value.match(/^\#[0-9abcdef]{3,}$/i)) {
                return Object(_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])(value);
            }
        }
        return value;
    };
    BaseObject.prototype.processAdapters = function (item, config) {
        var _this = this;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isArray"](config)) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](config, function (entry, index) {
                item.add(entry.key, entry.callback, entry.priority || 0, _this);
            });
        }
        else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](config)) {
            _utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](config, function (key, entry) {
                if (!item.has(key, entry)) {
                    item.add(key, entry);
                }
            });
        }
    };
    BaseObject.prototype.processEvents = function (item, config) {
        var _this = this;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](config)) {
            _utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](config, function (key, entry) {
                if (!item.has(key, entry)) {
                    item.on(key, entry);
                }
            });
        }
        else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isArray"](config)) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](config, function (entry, index) {
                item.on(entry.type, entry.callback, _this);
            });
        }
    };
    /**
     * Processes JSON config for a [[DictionaryTemplate]] item.
     *
     * @todo Description
     * @param {DictionaryTemplate<any, any>}  item    Item
     * @param {any}                           config  Config
     */
    BaseObject.prototype.processDictionaryTemplate = function (item, config) {
        // We can only process object
        // Not sure what to do with other types - ignore
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](config)) {
            // Create an entry for each item, or override properties for
            // existing one.
            _utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](config, function (entryKey, entryValue) {
                var listItem;
                // Get existing one, or create a new one
                if (entryKey == "template") {
                    listItem = item.template;
                }
                else if (item.hasKey(entryKey)) {
                    listItem = item.getKey(entryKey);
                }
                else {
                    listItem = item.create(entryKey);
                }
                // Set data
                if (listItem instanceof BaseObject) {
                    listItem.config = entryValue;
                }
                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](listItem) && _utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](entryValue)) {
                    _utils_Object__WEBPACK_IMPORTED_MODULE_11__["copyAllProperties"](entryValue, listItem);
                }
                else {
                    listItem.setKey(entryKey, entryValue);
                }
            });
        }
    };
    /**
     * Processes JSON config for a [[Dictionary]] item.
     *
     * @todo Description
     * @param {Dictionary<any, any>}  item    Item
     * @param {any}                   config  Config
     */
    BaseObject.prototype.processDictionary = function (item, config) {
        // We can only process object
        // Not sure what to do with other types - ignore
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](config)) {
            // Create an entry for each item, or override properties for
            // existing one.
            // @todo support for non-basic types
            _utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](config, function (entryKey, entryValue) {
                item.setKey(entryKey, entryValue);
            });
        }
    };
    /**
     * Processes [[List]].
     *
     * @param {any}        configValue  Config value
     * @param {List<any>}  item         Item
     */
    BaseObject.prototype.processList = function (configValue, item) {
        var _this = this;
        // Convert to array if necessary
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isArray"](configValue)) {
            configValue = [configValue];
        }
        // It's an array
        // Create a list item for entry
        var itemCount = item.length;
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](configValue, function (entry, index) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isObject"](entry)) {
                // An object.
                //
                // Let's see if we can instantiate a class out of it, or we need
                // to push it into list as it is.
                //
                // If there are items already at the specified index in the list,
                // apply properties rather than create a new one.
                var listItem = void 0;
                if ((index < itemCount) && !entry["forceCreate"]) {
                    listItem = item.getIndex(index);
                }
                else if (entry instanceof BaseObject) {
                    // Item is already a BaseObject, no need to process it further
                    item.push(entry);
                    return;
                }
                else {
                    listItem = _this.createEntryInstance(entry);
                    item.push(listItem);
                }
                // If the list item is BaseObject, we just need to let it
                // deal if its own config
                if (listItem instanceof BaseObject) {
                    listItem.config = entry;
                }
            }
            else {
                // Basic value.
                // Just push it into list, or override existing value
                if (item.hasIndex(index)) {
                    item.setIndex(index, entry);
                }
                else {
                    item.push(entry);
                }
            }
        });
        // Truncate the list if it contains less items than the config
        // array
        while (configValue.length > item.length) {
            item.pop();
        }
    };
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param  {string}  a  Element 1
     * @param  {string}  b  Element 2
     * @return {Ordering}   Sorting number
     */
    BaseObject.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Language must come first, so it's all set up when the rest of the
        // elements are being instantiated
        else if (a == "language") {
            return -1;
        }
        else if (b == "language") {
            return 1;
        }
        else {
            return 0;
        }
    };
    /**
     * Checks if field should be just assigned as is, without any checking when
     * processing JSON config.
     *
     * Extending functions can override this function to do their own checks.
     *
     * @param  {string}   field  Field name
     * @return {boolean}         Assign as is?
     */
    BaseObject.prototype.asIs = function (field) {
        return _utils_Array__WEBPACK_IMPORTED_MODULE_10__["indexOf"](["locale"], field) != -1;
    };
    /**
     * Creates a relevant class instance if such class definition exists.
     *
     * @ignore Exclude from docs
     * @param  {string}  className  Class name
     * @return {Object}             Instance
     */
    BaseObject.prototype.createClassInstance = function (className) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses[className])) {
            return new _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses[className]();
        }
        return;
    };
    /**
     * Creates a class instance for a config entry using it's type. (as set in
     * `type` property)
     *
     * @ignore Exclude from docs
     * @param  {any}  config  Config part
     * @return {any}          Instance
     */
    BaseObject.prototype.createEntryInstance = function (config) {
        var res;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](config["type"])) {
            res = this.createClassInstance(config["type"]);
        }
        if (!res) {
            return config;
        }
        return res;
    };
    /**
     * Determines config object type.
     *
     * @ignore Exclude from docs
     * @param  {any}  config  Config part
     * @return {any}          Type
     */
    BaseObject.prototype.getConfigEntryType = function (config) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](config["type"])) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses[config["type"]])) {
                return _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses[config["type"]];
            }
            else {
                throw Error("Invalid type: \"" + config["type"] + "\".");
            }
        }
        return;
    };
    /**
     * Checks if this element has a property.
     *
     * @ignore Exclude from docs
     * @param  {string}   prop  Property name
     * @return {boolean}        Has property?
     */
    BaseObject.prototype.hasProperty = function (prop) {
        return prop in this ? true : false;
    };
    /**
     * Checkes whether JSON key is a reserved keyword.
     *
     * @param  {string}   key  Key
     * @return {boolean}       Reserved
     */
    BaseObject.prototype.isReserved = function (key) {
        return ["type", "forceCreate"].indexOf(key) !== -1;
    };
    Object.defineProperty(BaseObject.prototype, "processingErrors", {
        /**
         * A list of errors that happened during JSON processing.
         *
         * @return {string[]} Errors
         */
        get: function () {
            if (!this._processingErrors) {
                this._processingErrors = [];
            }
            return this._processingErrors;
        },
        enumerable: true,
        configurable: true
    });
    return BaseObject;
}());

;
/**
 * A version of [[BaseObject]] with events properties and methods.
 * Classes that use [[EventDispatcher]] should extend this instead of
 * [[BaseObject]] directly.
 */
var BaseObjectEvents = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BaseObjectEvents, _super);
    /**
     * Constructor
     */
    function BaseObjectEvents() {
        var _this = _super.call(this) || this;
        /**
         * An [[EventDispatcher]] instance
         */
        _this.events = new _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_4__["EventDispatcher"]();
        _this.className = "BaseObjectEvents";
        _this._disposers.push(_this.events);
        return _this;
    }
    /**
     * Dispatches an event using own event dispatcher. Will automatically
     * populate event data object with event type and target (this element).
     * It also checks if there are any handlers registered for this sepecific
     * event.
     *
     * @param {Key} eventType Event type (name)
     * @param {any}    data      Data to pass into event handler(s)
     */
    BaseObjectEvents.prototype.dispatch = function (eventType, data) {
        // @todo Implement proper type check
        if (this.events.isEnabled(eventType)) {
            if (data) {
                data.type = eventType;
                data.target = data.target || this;
                this.events.dispatch(eventType, {
                    type: eventType,
                    target: this
                });
            }
            else {
                this.events.dispatch(eventType, {
                    type: eventType,
                    target: this
                });
            }
        }
    };
    /**
     * Works like `dispatch`, except event is triggered immediately, without
     * waiting for the next frame cycle.
     *
     * @param {Key} eventType Event type (name)
     * @param {any}    data      Data to pass into event handler(s)
     */
    BaseObjectEvents.prototype.dispatchImmediately = function (eventType, data) {
        // @todo Implement proper type check
        if (this.events.isEnabled(eventType)) {
            if (data) {
                data.type = eventType;
                data.target = data.target || this;
                this.events.dispatchImmediately(eventType, data);
            }
            else {
                this.events.dispatchImmediately(eventType, {
                    type: eventType,
                    target: this
                });
            }
        }
    };
    /**
     * Copies all parameters from another [[Sprite]].
     *
     * @param {BaseObjectEvents} source Source object
     */
    BaseObjectEvents.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.events.copyFrom(source.events);
    };
    return BaseObjectEvents;
}(BaseObject));

//# sourceMappingURL=Base.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/Component.js ***!
  \**********************************************************************/
/*! exports provided: Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_SortedList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/SortedList */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _data_DataSource__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data/DataSource */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataSource.js");
/* harmony import */ var _responsive_Responsive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./responsive/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/responsive/Responsive.js");
/* harmony import */ var _System__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/* harmony import */ var _DataItem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

















/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A Component represents an independent functional element or control, that
 * can have it's own behavior, children, data, etc.
 *
 * A few examples of a Component: [[Legend]], [[Series]], [[Scrollbar]].
 *
 * @see {@link IComponentEvents} for a list of available events
 * @see {@link IComponentAdapters} for a list of available Adapters
 * @important
 */
var Component = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Component, _super);
    /**
     * Constructor
     */
    function Component() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Holds data field names.
         *
         * Data fields define connection beween [[DataItem]] and actual properties
         * in raw data.
         *
         * @type {IComponentDataFields}
         */
        _this.dataFields = {};
        /**
         * A list of [[DataSource]] definitions of external data source.
         *
         * @ignore Exclude from docs
         * @type {Object}
         */
        _this._dataSources = {};
        /**
         * This is used when only new data is invalidated (if added using `addData`
         * method).
         *
         * @ignore Exclude from docs
         * @type {number}
         */
        _this._parseDataFrom = 0;
        /**
         * Holds the disposers for the dataItems and dataUsers
         *
         * @ignore Exclude from docs
         * @type {Array<IDisposer>}
         */
        _this._dataDisposers = [];
        /**
         * [_start description]
         *
         * @ignore Exclude from docs
         * @type {number}
         */
        _this._start = 0;
        /**
         * [_end description]
         *
         * @ignore Exclude from docs
         * @type {number}
         */
        _this._end = 1;
        /**
         * If set to `true`, changing data range in element will not trigger
         * `daterangechanged` event.
         *
         * @type {boolean}
         */
        _this.skipRangeEvent = false;
        /**
         * Whenever selected scope changes (chart is zoomed or panned), for example
         * by interaction from a Scrollbar, or API, a chart needs to reposition
         * its contents.
         *
         * `rangeChangeDuration` influences how this is performed.
         *
         * If set to zero (0), the change will happen instantenously.
         *
         * If set to non-zero value, the chart will gradually animate into new
         * position for the set amount of milliseconds.
         *
         * @default 0
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {number}
         */
        _this.rangeChangeDuration = 0;
        /**
         * An easing function to use for range change animation.
         *
         * @see {@link Ease}
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {function}
         */
        _this.rangeChangeEasing = _utils_Ease__WEBPACK_IMPORTED_MODULE_13__["cubicOut"];
        /**
         * A duration (ms) of each data parsing step. A Component parses its data in
         * chunks in order to avoid completely freezing the machine when large data
         * sets are used. This setting will control how many milliseconds should pass
         * when parsing data until parser stops for a brief moment to let other
         * processes catch up.
         *
         * @type {number}
         */
        _this.parsingStepDuration = 50;
        /**
         * [dataInvalid description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @type {boolean}
         */
        _this.dataInvalid = false;
        /**
         *
         * @ignore Exclude from docs
         */
        _this.rawDataInvalid = false;
        /**
         * [dataRangeInvalid description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @type {boolean}
         */
        _this.dataRangeInvalid = false;
        /**
         * [dataItemsInvalid description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @type {boolean}
         */
        _this.dataItemsInvalid = false;
        /**
         * If set to a non-zero number the element will "animate" data values of its
         * children.
         *
         * This will happen on first load and whenever data values change.
         *
         * Enabling interpolation will mean that elements will transit smoothly into
         * new values rather than updating instantly.
         *
         * @default 0
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {number}
         */
        _this.interpolationDuration = 0;
        /**
         * An easing function to use for interpolating values when transiting from
         * one source value to another.
         *
         * @default cubicOut
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @see {@link Ease}
         * @type {function}
         */
        _this.interpolationEasing = _utils_Ease__WEBPACK_IMPORTED_MODULE_13__["cubicOut"];
        /**
         * Indicates whether transition between data item's values should start and
         * play out all at once, or with a small delay (as defined by
         * `sequencedInterpolationDelay`) for each subsequent data item.
         *
         * @default true
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {boolean}
         */
        _this.sequencedInterpolation = true;
        /**
         * A delay (ms) to wait between animating each subsequent data item's
         * interpolation animation.
         *
         * Relative only if `sequencedInterpolation = true`.
         *
         * @default 0
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {number}
         */
        _this.sequencedInterpolationDelay = 0;
        /**
         * A progress (0-1) for the data validation process.
         *
         * @ignore Exclude from docs
         * @type {number}
         */
        _this.dataValidationProgress = 0;
        _this._addAllDataItems = true;
        _this.className = "Component";
        _this.minZoomCount = 1;
        _this._dataItems = new _utils_SortedList__WEBPACK_IMPORTED_MODULE_3__["OrderedListTemplate"](_this.createDataItem());
        _this._dataItems.events.on("inserted", _this.handleDataItemAdded, _this, false);
        _this._dataItems.events.on("removed", _this.handleDataItemRemoved, _this, false);
        _this._disposers.push(new _utils_List__WEBPACK_IMPORTED_MODULE_2__["ListDisposer"](_this._dataItems));
        _this._disposers.push(_this._dataItems.template);
        _this.invalidateData();
        // TODO what about remove ?
        _this.dataUsers.events.on("inserted", _this.handleDataUserAdded, _this, false);
        // Set up disposers
        _this._disposers.push(new _utils_Disposer__WEBPACK_IMPORTED_MODULE_5__["MultiDisposer"](_this._dataDisposers));
        _this._start = 0;
        _this._end = 1;
        _this.maxZoomDeclination = 1;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return {DataItem} Data Item
     */
    Component.prototype.createDataItem = function () {
        return new _DataItem__WEBPACK_IMPORTED_MODULE_9__["DataItem"]();
    };
    /**
     * [handleDataUserAdded description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param {IListEvents<Component>["inserted"]} event Event object
     */
    Component.prototype.handleDataUserAdded = function (event) {
        var dataUser = event.newValue;
        dataUser.dataProvider = this;
    };
    /**
     * [handleDataItemValueChange description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Component.prototype.handleDataItemValueChange = function (dataItem, name) {
        if (!this.dataItemsInvalid) {
            this.invalidateDataItems();
        }
    };
    /**
     * [handleDataItemWorkingValueChange description]
     *
     * @ignore Exclude from docs
     */
    Component.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {
    };
    /**
     * [handleDataItemWorkingLocationChange description]
     *
     * @ignore Exclude from docs
     */
    Component.prototype.handleDataItemWorkingLocationChange = function (dataItem, name) {
    };
    /**
     * [handleDataItemCalculatedValueChange description]
     *
     * @ignore Exclude from docs
     */
    Component.prototype.handleDataItemCalculatedValueChange = function (dataItem, name) {
    };
    /**
     * [handleDataItemPropertyChange description]
     *
     * @ignore Exclude from docs
     */
    Component.prototype.handleDataItemPropertyChange = function (dataItem, name) {
    };
    /**
     * Populates a [[DataItem]] width data from data source.
     *
     * Loops through all the fields and if such a field is found in raw data
     * object, a corresponding value on passed in `dataItem` is set.
     *
     * @ignore Exclude from docs
     * @param {Object} item
     */
    Component.prototype.processDataItem = function (dataItem, dataContext) {
        var _this = this;
        if (dataItem) {
            if (!dataContext) {
                dataContext = {};
            }
            // store reference to original data item
            dataItem.dataContext = dataContext;
            var hasSomeValues_1 = false;
            _utils_Object__WEBPACK_IMPORTED_MODULE_16__["each"](this.dataFields, function (key, fieldValue) {
                var fieldName = key;
                var value = dataContext[fieldValue];
                // Apply adapters to a retrieved value
                if (_this.adapter.isEnabled("dataContextValue")) {
                    value = _this.adapter.apply("dataContextValue", {
                        field: fieldName,
                        value: value,
                        dataItem: dataItem
                    }).value;
                }
                if (dataItem.hasChildren[fieldName]) {
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](value)) {
                        hasSomeValues_1 = true;
                        var children = new _utils_SortedList__WEBPACK_IMPORTED_MODULE_3__["OrderedListTemplate"](_this.createDataItem());
                        children.events.on("inserted", _this.handleDataItemAdded, _this, false);
                        children.events.on("removed", _this.handleDataItemRemoved, _this, false);
                        _this._dataDisposers.push(new _utils_List__WEBPACK_IMPORTED_MODULE_2__["ListDisposer"](children));
                        var count = value.length;
                        for (var i = 0; i < count; i++) {
                            var rawDataItem = value[i];
                            var childDataItem = children.create();
                            childDataItem.parent = dataItem;
                            _this.processDataItem(childDataItem, rawDataItem);
                        }
                        var anyDataItem = dataItem;
                        anyDataItem[fieldName] = children;
                    }
                }
                else {
                    // data is converted to numbers/dates in each dataItem
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](value)) {
                        hasSomeValues_1 = true;
                        dataItem[fieldName] = value;
                    }
                }
            });
            _utils_Object__WEBPACK_IMPORTED_MODULE_16__["each"](this.propertyFields, function (key, fieldValue) {
                var f = key;
                var value = dataContext[fieldValue];
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](value)) {
                    hasSomeValues_1 = true;
                    dataItem.setProperty(f, value);
                }
            });
            // @todo we might need some flag which would tell whether we should create empty data items or not.
            if (!this._addAllDataItems && !hasSomeValues_1) {
                this.dataItems.remove(dataItem);
            }
        }
    };
    /**
     *
     * When validating raw data, instead of processing data item, we update it
     *
     * @ignore Exclude from docs
     * @param {Object} item
     */
    Component.prototype.updateDataItem = function (dataItem) {
        var _this = this;
        if (dataItem) {
            var dataContext_1 = dataItem.dataContext;
            _utils_Object__WEBPACK_IMPORTED_MODULE_16__["each"](this.dataFields, function (key, fieldValue) {
                var fieldName = key;
                var value = dataContext_1[fieldValue];
                // Apply adapters to a retrieved value
                value = _this.adapter.apply("dataContextValue", {
                    field: fieldName,
                    value: value,
                    dataItem: dataItem
                }).value;
                if (dataItem.hasChildren[fieldName]) {
                    if (value) {
                        var anyDataItem = dataItem;
                        var children = (anyDataItem[fieldName]);
                        _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](children.iterator(), function (child) {
                            _this.updateDataItem(child);
                        });
                    }
                }
                else {
                    // data is converted to numbers/dates in each dataItem
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](value)) {
                        dataItem[fieldName] = value;
                    }
                }
            });
            _utils_Object__WEBPACK_IMPORTED_MODULE_16__["each"](this.propertyFields, function (key, fieldValue) {
                var f = key;
                var value = dataContext_1[fieldValue];
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](value)) {
                    dataItem.setProperty(f, value);
                }
            });
        }
    };
    /**
     * [validateDataElements description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Component.prototype.validateDataElements = function () {
        var count = this.endIndex;
        for (var i = this.startIndex; i < count; i++) {
            var dataItem = this.dataItems.getIndex(i);
            // TODO is this correct
            if (dataItem) {
                this.validateDataElement(dataItem);
            }
        }
    };
    /**
     * Validates this element and its related elements.
     *
     * @ignore Exclude from docs
     */
    Component.prototype.validate = function () {
        this.validateDataElements();
        _super.prototype.validate.call(this);
    };
    /**
     * [validateDataElement description]
     *
     * @ignore Exclude from docs
     * @param {this["_dataItem"]} dataItem [description]
     */
    Component.prototype.validateDataElement = function (dataItem) {
    };
    /**
     * Adds one or several (array) of data items to the existing data.
     *
     * @param {Object | Object[]} rawDataItem One or many raw data item objects
     */
    Component.prototype.addData = function (rawDataItem, removeCount) {
        var _this = this;
        // need to check if data is invalid, as addData might be called multiple times
        if (!this.dataInvalid) {
            this._parseDataFrom = this.data.length; // save length of parsed data
        }
        if (rawDataItem instanceof Array) {
            // can't use concat because new array is returned
            _utils_Array__WEBPACK_IMPORTED_MODULE_12__["each"](rawDataItem, function (dataItem) {
                _this.data.push(dataItem);
            });
        }
        else {
            this.data.push(rawDataItem); // add to raw data array
        }
        this.removeData(removeCount);
        this.invalidateData();
    };
    /**
     * Removes elements from the beginning of data
     *
     * @param {Optional<number>} count number of elements to remove
     */
    Component.prototype.removeData = function (count) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](count)) {
            while (count > 0) {
                var dataItem = this.dataItems.getIndex(0);
                if (dataItem) {
                    this.dataItems.remove(dataItem);
                }
                this.dataUsers.each(function (dataUser) {
                    var dataItem = dataUser.dataItems.getIndex(0);
                    if (dataItem) {
                        dataUser.dataItems.remove(dataItem);
                    }
                });
                this.data.shift();
                this._parseDataFrom--;
                count--;
            }
        }
    };
    /**
     * Triggers a data (re)parsing.
     *
     * @ignore Exclude from docs
     */
    Component.prototype.invalidateData = function () {
        if (this.disabled || this.isTemplate) {
            return;
        }
        //if(!this.dataInvalid){
        _Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].addToInvalidComponents(this);
        _System__WEBPACK_IMPORTED_MODULE_8__["system"].requestFrame();
        this.dataInvalid = true;
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataUsers.iterator(), function (x) {
            x.invalidateDataItems();
        });
        //}
    };
    /**
     * [invalidateDataUsers description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Component.prototype.invalidateDataUsers = function () {
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataUsers.iterator(), function (x) {
            x.invalidate();
        });
    };
    /**
     * Invalidates data values. When data array is not changed, but values within
     * it changes, we invalidate data so that component would process changes.
     *
     * @ignore Exclude from docs
     */
    Component.prototype.invalidateDataItems = function () {
        if (this.disabled || this.isTemplate) {
            return;
        }
        //if(!this.dataItemsInvalid){
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["move"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidDataItems, this);
        _System__WEBPACK_IMPORTED_MODULE_8__["system"].requestFrame();
        this.dataItemsInvalid = true;
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataUsers.iterator(), function (x) {
            x.invalidateDataItems();
        });
        //}
    };
    /**
     * Invalidates data range. This is done when data which must be shown
     * changes (chart is zoomed for example).
     *
     * @ignore Exclude from docs
     */
    Component.prototype.invalidateDataRange = function () {
        if (this.disabled || this.isTemplate) {
            return;
        }
        //if(!this.dataRangeInvalid){
        this.dataRangeInvalid = true;
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["move"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidDataRange, this);
        _System__WEBPACK_IMPORTED_MODULE_8__["system"].requestFrame();
        //}
    };
    /**
     * Processes data range.
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    Component.prototype.validateDataRange = function () {
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidDataRange, this);
        this.dataRangeInvalid = false;
        if (this.startIndex != this._prevStartIndex || this.endIndex != this._prevEndIndex) {
            this.rangeChangeUpdate();
            this.appendDataItems();
            this.invalidate();
            this.dispatchImmediately("datarangechanged");
        }
    };
    /**
     * [sliceData description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    Component.prototype.sliceData = function () {
        this._workingStartIndex = this.startIndex;
        this._workingEndIndex = this.endIndex;
    };
    /**
     * [rangeChangeUpdate description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    Component.prototype.rangeChangeUpdate = function () {
        this.sliceData();
        this._prevStartIndex = this.startIndex;
        this._prevEndIndex = this.endIndex;
    };
    /**
     * [appendDataItems description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    Component.prototype.appendDataItems = function () {
        // TODO use an iterator instead
        var count = this.endIndex;
        for (var i = this.startIndex; i < count; i++) {
            // data item
            var dataItem = this.dataItems.getIndex(i);
            if (dataItem) {
                dataItem.__disabled = false;
            }
        }
        for (var i = 0; i < this.startIndex; i++) {
            var dataItem = this.dataItems.getIndex(i);
            dataItem.__disabled = true;
        }
        for (var i = this.endIndex; i < this.dataItems.length; i++) {
            var dataItem = this.dataItems.getIndex(i);
            dataItem.__disabled = true;
        }
    };
    /**
     * If you want to have a smooth transition from one data values to another, you change your raw data and then you must call this method.
     * then instead of redrawing everything, the chart will check raw data and smoothly transit from previous to new data
     */
    Component.prototype.invalidateRawData = function () {
        if (this.disabled || this.isTemplate) {
            return;
        }
        //if(!this.rawDataInvalid){
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["move"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidRawDatas, this);
        _System__WEBPACK_IMPORTED_MODULE_8__["system"].requestFrame();
        this.rawDataInvalid = true;
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataUsers.iterator(), function (x) {
            x.invalidateRawData();
        });
        //}
    };
    /**
     * @ignore
     */
    Component.prototype.validateRawData = function () {
        var _this = this;
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidRawDatas, this);
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataItems.iterator(), function (dataItem) {
            if (dataItem) {
                _this.updateDataItem(dataItem);
            }
        });
    };
    /**
     * @ignoref
     */
    Component.prototype.disposeData = function () {
        if (this.inited) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_12__["each"](this._dataDisposers, function (x) {
                x.dispose();
            });
            // and for all components
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataUsers.iterator(), function (dataUser) {
                dataUser.disposeData();
            });
            this._dataDisposers.length = 0;
            this._startIndex = undefined;
            this._endIndex = undefined;
            // dispose old
            this.dataItems.clear();
        }
    };
    /**
     * Validates (processes) data.
     *
     * @ignore Exclude from docs
     */
    Component.prototype.validateData = function () {
        this.dispatchImmediately("beforedatavalidated");
        this.dataInvalid = false;
        _Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].removeFromInvalidComponents(this);
        this.dataValidationProgress = 0;
        // need this to slice new data
        this._prevStartIndex = undefined;
        this._prevEndIndex = undefined;
        // todo: this needs some overthinking, maybe some extra settings like zoomOotonDataupdate like in v3 or so. some charts like pie chart probably should act like this always
        this._startIndex = undefined;
        this._endIndex = undefined;
        if (this.dataFields.data && this.dataItem) {
            var dataContext = this.dataItem.dataContext;
            this._data = dataContext[this.dataFields.data];
        }
        // data items array is reset only if all data is validated, if _parseDataFrom is not 0, we append new data only
        // check heatmap demo if uncommented
        // fixed both issues by adding && this.data.length > 0
        // check adding series example if changed
        if (this._parseDataFrom === 0 && this.data.length > 0) {
            this.disposeData();
        }
        if (this.data.length > 0) {
            var preloader = this.preloader;
            // and for all components
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](this.dataUsers.iterator(), function (dataUser) {
                // todo: this needs some overthinking, maybe some extra settings like zoomOUtonDataupdate like in v3 or so. some charts like pie chart probably should act like this always
                dataUser._startIndex = undefined;
                dataUser._endIndex = undefined;
            });
            var counter = 0;
            var startTime = Date.now();
            // parse data
            var i = this._parseDataFrom;
            var n = this.data.length;
            var _loop_1 = function () {
                var rawDataItem = this_1.data[i];
                var dataItem = this_1.dataItems.create();
                this_1.processDataItem(dataItem, rawDataItem);
                this_1.dataUsers.each(function (dataUser) {
                    if (dataUser.data.length == 0) { // checking if data is not set directly
                        var dataUserDataItem = dataUser.dataItems.create();
                        dataUser.processDataItem(dataUserDataItem, rawDataItem);
                    }
                });
                counter++;
                // show preloader if this takes too many time
                if (counter == 100) { // no need to check it on each data item
                    counter = 0;
                    var elapsed = Date.now() - startTime;
                    if (elapsed > this_1.parsingStepDuration) {
                        if (i < this_1.data.length - 10) {
                            this_1._parseDataFrom = i + 1;
                            // update preloader
                            if (preloader) {
                                if (i / this_1.data.length > 0.5 && !preloader.visible) {
                                    // do not start showing
                                }
                                else {
                                    preloader.progress = i / this_1.data.length;
                                }
                            }
                            this_1.dataValidationProgress = i / this_1.data.length;
                            i = this_1.data.length; // stops cycle
                            this_1.invalidateData();
                            return { value: void 0 };
                        }
                    }
                }
            };
            var this_1 = this;
            for (i; i < n; i++) {
                var state_1 = _loop_1();
                if (typeof state_1 === "object")
                    return state_1.value;
            }
            if (preloader) {
                preloader.progress = 1;
            }
        }
        this.dataValidationProgress = 1;
        this._parseDataFrom = 0; // reset this index, it is set to dataItems.length if addData() method was used.
        this.invalidateDataItems();
        if (!this._internalDefaultsApplied) {
            this.applyInternalDefaults();
        }
        this.dispatch("datavalidated"); // can't zoom chart if dispatched immediately
    };
    /**
     * Validates (processes) data items.
     *
     * @ignore Exclude from docs
     */
    Component.prototype.validateDataItems = function () {
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidDataItems, this);
        this.dataItemsInvalid = false;
        this.invalidateDataRange();
        this.invalidate();
        this.dispatch("dataitemsvalidated");
    };
    Object.defineProperty(Component.prototype, "data", {
        /**
         * Returns element's source (raw) data.
         *
         * @return {any[]} Data
         */
        get: function () {
            if (!this._data) {
                this._data = [];
            }
            return this.adapter.apply("data", this._data);
        },
        /**
         * Sets source (raw) data for the element. The "data" is always an `Array`
         * of objects.
         *
         * @param {any[]} value Data
         */
        set: function (value) {
            // array might be the same, but there might be items added
            // todo: check if array changed, toString maybe?
            //if (this._data != value) {
            this.disposeData();
            this._data = value;
            if (value && value.length > 0) {
                this.invalidateData();
            }
            //}
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns (creates if necessary) a [[DataSource]] bound to any specific
     * property.
     *
     * For example if I want to bind `data` to an external JSON file, I'd create
     * a DataSource for it.
     *
     * @param  {string}      property  Property to bind external data to
     * @return {DataSource}            A DataSource for property
     */
    Component.prototype.getDataSource = function (property) {
        var _this = this;
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](this._dataSources[property])) {
            this._dataSources[property] = new _data_DataSource__WEBPACK_IMPORTED_MODULE_6__["DataSource"]();
            this._dataSources[property].component = this;
            this.setDataSourceEvents(this._dataSources[property], property);
            this._dataSources[property].adapter.add("dateFields", function (val) {
                return _this.dataSourceDateFields(val);
            });
            this._dataSources[property].adapter.add("numberFields", function (val) {
                return _this.dataSourceNumberFields(val);
            });
            this.events.on("inited", function () {
                _this.loadData(property);
            }, this, false);
        }
        return this._dataSources[property];
    };
    Object.defineProperty(Component.prototype, "dataSource", {
        /**
         * @return {DataSource} Data source
         */
        get: function () {
            if (!this._dataSources["data"]) {
                this.getDataSource("data");
            }
            return this._dataSources["data"];
        },
        /**
         *A [[DataSource]] to be used for loading Component's data.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/loading-external-data/} for more on loading external data
         * @param {DataSource}  value  Data source
         */
        set: function (value) {
            var _this = this;
            if (this._dataSources["data"]) {
                this.removeDispose(this._dataSources["data"]);
            }
            this._dataSources["data"] = value;
            this._dataSources["data"].component = this;
            this.events.on("inited", function () {
                _this.loadData("data");
            }, this, false);
            this.setDataSourceEvents(value, "data");
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Initiates loading of the external data via [[DataSource]].
     *
     * @ignore Exclude from docs
     */
    Component.prototype.loadData = function (property) {
        this._dataSources[property].load();
    };
    /**
     * This function is called by the [[DataSource]]'s `dateFields` adapater
     * so that particular chart types can popuplate this setting with their
     * own type-speicifc data fields so they are parsed properly.
     *
     * @ignore Exclude from docs
     * @param  {string[]}  value  Array of date fields
     * @return {string[]}         Array of date fields populated with chart's date fields
     */
    Component.prototype.dataSourceDateFields = function (value) {
        return value;
    };
    /**
     * This function is called by the [[DataSource]]'s `numberFields` adapater
     * so that particular chart types can popuplate this setting with their
     * own type-speicifc data fields so they are parsed properly.
     *
     * @ignore Exclude from docs
     * @param  {string[]}  value  Array of number fields
     * @return {string[]}         Array of number fields populated with chart's number fields
     */
    Component.prototype.dataSourceNumberFields = function (value) {
        return value;
    };
    /**
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {string[]}  list        [description]
     * @param  {object}    dataFields  [description]
     * @param  {string[]}  targetList  [description]
     * @return {string[]}              [description]
     */
    Component.prototype.populateDataSourceFields = function (list, dataFields, targetList) {
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["each"](targetList, function (value) {
            if (dataFields[value] && _utils_Array__WEBPACK_IMPORTED_MODULE_12__["indexOf"](list, dataFields[value]) === -1) {
                list.push(dataFields[value]);
            }
        });
        return list;
    };
    /**
     * Sets events on a [[DataSource]].
     *
     * @ignore Exclude from docs
     */
    Component.prototype.setDataSourceEvents = function (ds, property) {
        var _this = this;
        ds.events.on("started", function (ev) {
            var preloader = _this.preloader;
            if (preloader) {
                preloader.progress = 0;
                //preloader.label.text = this.language.translate("Loading");
            }
        }, undefined, false);
        ds.events.on("loadstarted", function (ev) {
            var preloader = _this.preloader;
            if (preloader) {
                preloader.progress = 0.25;
            }
        }, undefined, false);
        ds.events.on("loadended", function (ev) {
            var preloader = _this.preloader;
            if (preloader) {
                preloader.progress = 0.5;
            }
        }, undefined, false);
        ds.events.on("parseended", function (ev) {
            var preloader = _this.preloader;
            if (preloader) {
                preloader.progress = 0.75;
            }
        }, undefined, false);
        ds.events.on("ended", function (ev) {
            var preloader = _this.preloader;
            if (preloader) {
                preloader.progress = 1;
            }
        }, undefined, false);
        ds.events.on("error", function (ev) {
            var preloader = _this.preloader;
            if (preloader) {
                preloader.progress = 1;
            }
            _this.openModal(ev.message);
        }, undefined, false);
        if (property) {
            ds.events.on("done", function (ev) {
                var preloader = _this.preloader;
                if (preloader) {
                    preloader.progress = 1;
                }
                if (property == "data" && !_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isArray"](ev.data)) {
                    ev.data = [ev.data];
                }
                if (ds.incremental && property == "data" && _this.data.length) {
                    _this.addData(ev.data, ds.keepCount ? ev.data.length : 0);
                }
                else {
                    _this[property] = ev.data;
                }
            });
        }
    };
    Object.defineProperty(Component.prototype, "responsive", {
        /**
         * @return {DataSource} Data source
         */
        get: function () {
            if (!this._responsive) {
                this._responsive = new _responsive_Responsive__WEBPACK_IMPORTED_MODULE_7__["Responsive"]();
                this._responsive.component = this;
            }
            return this._responsive;
        },
        /**
         * A [[Responsive]] instance to be used when applying conditional
         * property values.
         *
         * NOTE: Responsive features are currently in development and may not work
         * as expected, if at all.
         *
         * @param {Responsive}  value  Data source
         */
        set: function (value) {
            this._responsive = value;
            this._responsive.component = this;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets current zoom.
     *
     * The range uses relative values from 0 to 1, with 0 marking beginning and 1
     * marking end of the available data range.
     *
     * This method will not have any effect when called on a chart object.
     * Since the chart can have a number of axes and series, each with its own
     * data, the meaning of "range" is very ambiguous.
     *
     * To zoom the chart use `zoom*` methods on its respective axes.
     *
     * @param  {IRange}  range          Range
     * @param  {boolean} skipRangeEvent Should rangechanged event not be triggered?
     * @param  {boolean} instantly      Do not animate?
     * @return {IRange}                 Actual modidied range (taking `maxZoomFactor` into account)
     */
    Component.prototype.zoom = function (range, skipRangeEvent, instantly, declination) {
        var _this = this;
        if (skipRangeEvent === void 0) { skipRangeEvent = false; }
        if (instantly === void 0) { instantly = false; }
        var start = range.start;
        var end = range.end;
        var priority = range.priority;
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](declination)) {
            declination = this.maxZoomDeclination;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](start) || !_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](end)) {
            return { start: this.start, end: this.end };
        }
        if (this._finalStart != start || this._finalEnd != end) {
            var maxZoomFactor = this.maxZoomFactor / this.minZoomCount;
            // most likely we are dragging left scrollbar grip here, so we tend to modify end
            if (priority == "start") {
                // add to the end
                if (1 / (end - start) > maxZoomFactor) {
                    end = start + 1 / maxZoomFactor;
                }
                //unless end is > 0
                if (end > 1 && end - start < 1 / maxZoomFactor) {
                    //end = 1;
                    start = end - 1 / maxZoomFactor;
                }
            }
            // most likely we are dragging right, so we modify left
            else {
                // remove from start
                if (1 / (end - start) > maxZoomFactor) {
                    start = end - 1 / maxZoomFactor;
                }
                if (start < 0 && end - start < 1 / maxZoomFactor) {
                    //start = 0;
                    end = start + 1 / maxZoomFactor;
                }
            }
            if (start < -declination) {
                start = -declination;
            }
            if (1 / (end - start) > maxZoomFactor) {
                end = start + 1 / maxZoomFactor;
            }
            if (end > 1 + declination) {
                end = 1 + declination;
            }
            if (1 / (end - start) > maxZoomFactor) {
                start = end - 1 / maxZoomFactor;
            }
            this._finalEnd = end;
            this._finalStart = start;
            this.skipRangeEvent = skipRangeEvent;
            if (this.rangeChangeDuration > 0 && !instantly) {
                // todo: maybe move this to Animation
                var rangeChangeAnimation = this.rangeChangeAnimation;
                if (rangeChangeAnimation && rangeChangeAnimation.progress < 1) {
                    var options = rangeChangeAnimation.animationOptions;
                    if (options.length > 1) {
                        if (options[0].to == start && options[1].to == end) {
                            return { start: start, end: end };
                        }
                    }
                }
                this.dispatchImmediately("rangechangestarted");
                if (this.rangeChangeAnimation) {
                    this.rangeChangeAnimation.kill();
                }
                rangeChangeAnimation = this.animate([{ property: "start", to: start }, { property: "end", to: end }], this.rangeChangeDuration, this.rangeChangeEasing);
                this.rangeChangeAnimation = rangeChangeAnimation;
                if (rangeChangeAnimation && !rangeChangeAnimation.isFinished()) {
                    rangeChangeAnimation.events.on("animationended", function () {
                        _this.dispatchImmediately("rangechangeended");
                    });
                }
                else {
                    this.dispatchImmediately("rangechangeended");
                }
            }
            else {
                this.start = start;
                this.end = end;
            }
        }
        return { start: start, end: end };
    };
    /**
     * Zooms to specific data items using their index in data.
     *
     * This method will not have any effect when called on a chart object.
     * Since the chart can have a number of axes and series, each with its own
     * data, the meaning of "index" is very ambiguous.
     *
     * To zoom the chart use `zoom*` methods on its respective axes.
     *
     * @param {number}  startIndex     Index of the starting data item
     * @param {number}  endIndex       Index of the ending data item
     * @param {boolean} skipRangeEvent Should rangechanged event not be triggered?
     * @param {boolean} instantly      Do not animate?
     */
    Component.prototype.zoomToIndexes = function (startIndex, endIndex, skipRangeEvent, instantly) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](startIndex) || !_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](endIndex)) {
            return;
        }
        var start = startIndex / this.dataItems.length;
        var end = endIndex / this.dataItems.length;
        this.zoom({ start: start, end: end }, skipRangeEvent, instantly);
    };
    Object.defineProperty(Component.prototype, "zoomFactor", {
        /**
         * A current zoom factor (0-1). 1 meaning fully zoomed out. (showing all of
         * the available data)
         *
         * @return {number} Zoom factor
         */
        get: function () {
            return _utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](1 / (this.end - this.start), 1, this.maxZoomFactor);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "maxZoomFactor", {
        /**
         * @return {number} Maximum zoomFactor
         */
        get: function () {
            return this.getPropertyValue("maxZoomFactor");
        },
        /**
         * Max available `zoomFactor`.
         *
         * The element will not allow zoom to occur beyond this factor.
         *
         * [[DateAxis]] and [[CategoryAxis]] calculate this atutomatically so that
         * category axis could be zoomed to one category and date axis allows to be
         * zoomed up to one base interval.
         *
         * In case you want to restrict category or date axis to be zoomed to more
         * than one category or more than one base interval, use `minZoomCount`
         * property (set it to `> 1`).
         *
         * Default value of [[ValueAxis]]'s `maxZoomFactor` is `1000`.
         *
         * Feel free to modify it to allow bigger zoom or to restrict zooming.
         *
         * @param {number}  value  Maximum zoomFactor
         */
        set: function (value) {
            if (this.setPropertyValue("maxZoomFactor", value)) {
                if (value == 1) {
                    this.maxZoomDeclination = 0;
                }
                this.invalidateDataRange();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "maxZoomDeclination", {
        /**
         * @ignore
         * @return {number} Maximum zoom declination
         */
        get: function () {
            return this.getPropertyValue("maxZoomDeclination");
        },
        /**
         * Max zoom declination.
         *
         * @ignore
         * @default 1
         * @param {number}  value  Maximum zoom declination
         */
        set: function (value) {
            if (this.setPropertyValue("maxZoomDeclination", value)) {
                this.invalidateDataRange();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "startIndex", {
        /**
         * Current starting index.
         *
         * @return {number} Start index
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](this._startIndex)) {
                this._startIndex = 0;
            }
            return this._startIndex;
        },
        /**
         * Sets current starting index.
         *
         * @ignore Exclude from docs
         * @param {number} value Start index
         */
        set: function (value) {
            this._startIndex = _utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](Math.round(value), 0, this.dataItems.length);
            //this._workingStartIndex = this._startIndex; // not good, breaks adjusted working start index of line series
            this.start = this.indexToPosition(this._startIndex);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     * @todo:review description
     * returns item's relative position by the index of the item
     * @param {number} index
     */
    Component.prototype.indexToPosition = function (index) {
        return index / this.dataItems.length;
    };
    Object.defineProperty(Component.prototype, "endIndex", {
        /**
         * Current ending index.
         *
         * @return {number} End index
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](this._endIndex)) {
                this._endIndex = this.dataItems.length;
            }
            return this._endIndex;
        },
        /**
         * Sets current ending index.
         *
         * @ignore Exclude from docs
         * @param {number} value End index
         */
        set: function (value) {
            this._endIndex = _utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](Math.round(value), 0, this.dataItems.length);
            //this._workingEndIndex = this._endIndex; // not good, breaks adjusted workingend index of line series
            this.end = this.indexToPosition(this._endIndex);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "start", {
        /**
         * Current relative starting position of the data range (zoom).
         *
         * @return {number} Start (0-1)
         */
        get: function () {
            return this._start;
        },
        /**
         * Sets start of the current data range (zoom).
         *
         * @ignore Exclude from docs
         * @param {number} value Start (0-1)
         */
        set: function (value) {
            // value = $math.round(value, 10); not good
            //if (1 / (this.end - value) > this.maxZoomFactor) {
            //	value = this.end - 1 / this.maxZoomFactor;
            //}
            if (this._start != value) {
                this._start = value;
                var startIndex = Math.max(0, Math.floor(this.dataItems.length * value) || 0);
                this._startIndex = Math.min(startIndex, this.dataItems.length);
                this.invalidateDataRange();
                this.invalidate();
                this.dispatchImmediately("startchanged");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "end", {
        /**
         * Current relative ending position fo the data range (zoom).
         *
         * @return {number} End (0-1)
         */
        get: function () {
            return this._end;
        },
        /**
         * Sets end of the current data range (zoom).
         *
         * @ignore Exclude from docs
         * @param {number} value End (0-1)
         */
        set: function (value) {
            // value = $math.round(value, 10); // not good
            //if (1 / (value - this.start) > this.maxZoomFactor) {
            //	value = 1 / this.maxZoomFactor + this.start;
            //}
            if (this._end != value) {
                this._end = value;
                this._endIndex = Math.min(this.dataItems.length, Math.ceil(this.dataItems.length * value) || 0);
                this.invalidateDataRange();
                this.invalidate();
                this.dispatchImmediately("endchanged");
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [removeFromInvalids description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Component.prototype.removeFromInvalids = function () {
        _super.prototype.removeFromInvalids.call(this);
        _Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].removeFromInvalidComponents(this);
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidDataItems, this);
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidDataRange, this);
        _utils_Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].invalidRawDatas, this);
    };
    Object.defineProperty(Component.prototype, "dataItems", {
        /**
         * Returns a list of source [[DataItem]] objects.
         *
         * @return {OrderedListTemplate} List of data items
         */
        get: function () {
            return this._dataItems;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the indexes for the dataItems
     *
     * @ignore Exclude from docs
     */
    Component.prototype._updateDataItemIndexes = function (startIndex) {
        var dataItems = this.dataItems.values;
        var length = dataItems.length;
        for (var i = startIndex; i < length; ++i) {
            dataItems[i]._index = i;
        }
    };
    /**
     * Processes newly added [[DataItem]] as well as triggers data re-validation.
     *
     * @ignore Exclude from docs
     * @param {IListEvents<DataItem>["inserted"]} event [description]
     */
    Component.prototype.handleDataItemAdded = function (event) {
        event.newValue.component = this;
        this._updateDataItemIndexes(event.index);
        if (!this.dataItemsInvalid) {
            this.invalidateDataItems();
        }
    };
    /**
     * removes [[DataItem]] as well as triggers data re-validation.
     *
     * @ignore Exclude from docs
     * @param {IListEvents<DataItem>["inserted"]} event [description]
     */
    Component.prototype.handleDataItemRemoved = function (event) {
        event.oldValue.component = undefined;
        this._updateDataItemIndexes(event.index);
        if (!this.dataItemsInvalid) {
            this.invalidateDataItems();
        }
    };
    Object.defineProperty(Component.prototype, "dataMethods", {
        /**
         * [dataMethods description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @deprecated Not used?
         * @param {Dictionary} List of data methods
         */
        get: function () {
            if (!this._dataMethods) {
                this._dataMethods = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
            }
            return this._dataMethods;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Binds a data element's field to a specific field in raw data.
     * For example, for the very basic column chart you'd want to bind a `value`
     * field to a field in data, such as `price`.
     *
     * Some more advanced Components, like [[CandlestickSeries]] need several
     * data fields bound to data, such as ones for open, high, low and close
     * values.
     *
     * @todo Example
     * @param {Key}                       field  Field name
     * @param {this["_dataFields"][Key]}  value  Field name in data
     */
    Component.prototype.bindDataField = function (field, value) {
        this.dataFields[field] = value;
        this.invalidateDataRange();
    };
    /**
     * Invalidates processed data.
     *
     * @ignore Exclude from docs
     */
    Component.prototype.invalidateProcessedData = function () {
        this.resetProcessedRange();
        this.invalidateDataRange();
    };
    /**
     * [resetProcessedRange description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Component.prototype.resetProcessedRange = function () {
        this._prevEndIndex = null;
        this._prevStartIndex = null;
    };
    Object.defineProperty(Component.prototype, "dataUsers", {
        /**
         * Returns all other [[Component]] objects that are using this element's
         * data.
         *
         * @ignore Exclude from docs
         * @todo Description (review)
         * @return {List<Component>} [description]
         */
        get: function () {
            var _this = this;
            if (!this._dataUsers) {
                this._dataUsers = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
                //this._disposers.push(new ListDisposer(this._dataUsers));
                // TODO better way of handling this? e.g. move into another module ?
                this._disposers.push(new _utils_Disposer__WEBPACK_IMPORTED_MODULE_5__["Disposer"](function () {
                    // TODO clear the list ?
                    _utils_Iterator__WEBPACK_IMPORTED_MODULE_15__["each"](_this._dataUsers.iterator(), function (x) {
                        x.dispose();
                    });
                }));
            }
            return this._dataUsers;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a clone of this element.
     *
     * @return {this} Clone
     */
    Component.prototype.clone = function () {
        var component = _super.prototype.clone.call(this);
        component.dataFields = _utils_Utils__WEBPACK_IMPORTED_MODULE_14__["copyProperties"](this.dataFields, {});
        return component;
    };
    /**
     * Copies all parameters from another [[Component]].
     *
     * @param {Component} source Source Component
     */
    Component.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.data = source.data;
        this.sequencedInterpolation = source.sequencedInterpolation;
        this.sequencedInterpolationDelay = source.sequencedInterpolationDelay;
        this.interpolationDuration = source.interpolationDuration;
        this.interpolationEasing = source.interpolationEasing;
    };
    /**
     * Invalidates the whole element, including all its children, causing
     * complete re-parsing of data and redraw.
     *
     * Use sparingly!
     */
    Component.prototype.reinit = function () {
        this._inited = false;
        this.deepInvalidate();
    };
    /**
     * Add an adapter for data.
     *
     * @return {Export} Exporting
     */
    Component.prototype.getExporting = function () {
        var _export = _super.prototype.getExporting.call(this);
        if (!_export.adapter.has("data", this._exportData, null, this)) {
            _export.adapter.add("data", this._exportData, null, this);
        }
        return _export;
    };
    Component.prototype._exportData = function (arg) {
        arg.data = this.data;
        return arg;
    };
    Component.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (changed) {
            this.invalidateData();
        }
        return changed;
    };
    /**
     * @ignore
     */
    Component.prototype.setShowOnInit = function (value) {
        if (value != this.getPropertyValue("showOnInit")) {
            if (value && !this.inited && !this.hidden) {
                this._showOnInitDisposer2 = this.events.once("dataitemsvalidated", this.hideInitially, this, false);
                this._disposers.push(this._showOnInitDisposer2);
            }
            else {
                if (this._showOnInitDisposer2) {
                    this._showOnInitDisposer2.dispose();
                }
            }
        }
        // important order here
        _super.prototype.setShowOnInit.call(this, value);
    };
    Component.prototype.setBaseId = function (value) {
        if (value != this._baseId) {
            if (this.dataInvalid) {
                this.dataInvalid = false;
                _Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].removeFromInvalidComponents(this);
                this._baseId = value;
                this.invalidateData();
            }
        }
        _super.prototype.setBaseId.call(this, value);
    };
    Object.defineProperty(Component.prototype, "minZoomCount", {
        /**
         * @return {number} Min zoom count
         */
        get: function () {
            return this.getPropertyValue("minZoomCount");
        },
        /**
         * Use this for [[CategoryAxis]] or [[DateAxis]].
         *
         * Allows restricting zoom in beyond certain number of categories or base
         * intervals.
         *
         * @default 1
         * @param {number}  value  Min zoom count
         */
        set: function (value) {
            this.setPropertyValue("minZoomCount", value);
        },
        enumerable: true,
        configurable: true
    });
    return Component;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

//# sourceMappingURL=Component.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/Container.js ***!
  \**********************************************************************/
/*! exports provided: Container */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Container", function() { return Container; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _SpriteState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SpriteState */ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteState.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _elements_Rectangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./elements/Rectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _System__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/**
 * Container module
 * @todo Needs description
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */














;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Container can contain multiple sprites and arrange them in various layouts.
 *
 * @see {@link IContainerEvents} for a list of available events
 * @see {@link IContainerAdapters} for a list of available Adapters
 * @important
 */
var Container = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Container, _super);
    /**
     * Constructor
     */
    function Container() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Container children. (sorted by layout)
         *
         * @ignore Exclude from docs
         * @type {List<Sprite>}
         */
        _this._childrenByLayout = [];
        /**
         * Container's disposers for its child elements.
         *
         * @ignore Exclude from docs
         * @type {Dictionary<string, IDisposer>}
         */
        _this._childrenDisposers = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["Dictionary"]();
        /**
         * Indicates if this container contains any focused elements, including
         * itself.
         *
         * @type {boolean}
         */
        _this.hasFocused = false;
        /**
         * An array of references to elements the state should be set, when it is set
         * on this element.
         *
         * @type {Sprite[]}
         */
        _this.setStateOnSprites = [];
        /*
         * @ignore
         */
        _this.layoutInvalid = false;
        _this._absoluteWidth = 0;
        _this._absoluteHeight = 0;
        /**
         * An array of child Sprites that should be ready before this object can
         * fire a "ready" event.
         */
        _this._shouldBeReady = [];
        _this.className = "Container";
        _this._element = _this.paper.addGroup("g");
        _this.group.add(_this.element);
        _this.setPropertyValue("pixelPerfect", false);
        _this.setPropertyValue("layout", "absolute");
        _this.setPropertyValue("fixedWidthGrid", false);
        _this.setPropertyValue("verticalCenter", "none");
        _this.setPropertyValue("horizontalCenter", "none");
        _this._positionPrecision = 4;
        _this._disposers.push(new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["DictionaryDisposer"](_this._childrenDisposers));
        _this.children.events.on("inserted", _this.handleChildAdded, _this);
        _this.children.events.on("removed", _this.handleChildRemoved, _this);
        _this.applyTheme();
        return _this;
    }
    /**
     * Handles adding of a new child into `children`. Adding new children might
     * affect the whole layout so it needs to be revalidated.
     *
     * @ignore Exclude from docs
     * @param {IListEvents<Sprite>["inserted"]} event Event object
     * @todo Throw an exception on adding a disposed object. Of course it's better NOT TO add disposed objects, so that what we should focus on.
     */
    Container.prototype.handleChildAdded = function (event) {
        this.processChild(event.newValue);
    };
    /**
     * @ignore
     */
    Container.prototype.processChild = function (child) {
        // try solves the problem when somedy adds child directly to children
        try {
            this._childrenDisposers.insertKey(child.uid, new _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                // it's not enough to listen to POSITION_CHANGED only, as some extra redrawals will happen.
                child.events.on("transformed", this.handleChildTransform, this),
                child.events.on("zIndexChanged", this.sortAndAdd, this)
            ]));
        }
        catch (err) {
            // void
        }
        if (this.element && !child.disabled) {
            var group = this.element;
            group.add(child.group);
        }
        child.parent = this;
        child.paper = this.paper;
        this.dispatchImmediately("childadded", { type: "childadded", newValue: child });
        this.invalidate();
    };
    /**
     * @ignore
     */
    Container.prototype.sortAndAdd = function () {
        this.sortChildren();
        this.addChildren();
    };
    /**
     * Handles child removal. Changing size of the child may change the
     * whole layout of the Container, hence layout needs to be invalidated.
     *
     * @ignore Exclude from docs
     * @param {IListEvents<Sprite>["removed"]} event Event object
     */
    Container.prototype.handleChildRemoved = function (event) {
        var child = event.oldValue;
        // TODO figure out why the key sometimes doesn't exist
        this._childrenDisposers.removeKey(child.uid);
        if (this.element) {
            var group = this.element;
            group.removeElement(child.group);
        }
        if (child.isMeasured) {
            this.invalidateLayout();
        }
        this.dispatchImmediately("childremoved", { type: "childremoved", oldValue: child });
    };
    /**
     * Handles child transformation. Changing size of the child may change the
     * whole layout of the Container, hence layout needs to be invalidated.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["transformed"]} event Event object
     */
    Container.prototype.handleChildTransform = function (event) {
        var child = event.target;
        if (child.isMeasured) { // && this.layout != "none" && this.layout != "absolute") {
            this.invalidateLayout();
        }
    };
    /**
     * Invalidates Container's layout, causing it to be re-evaluated again.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.invalidateLayout = function () {
        if (this.layoutInvalid || this.disabled || this.isTemplate || this.layout == "none" || this.__disabled) {
            return;
        }
        this.layoutInvalid = true;
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].addToInvalidLayouts(this);
        _System__WEBPACK_IMPORTED_MODULE_14__["system"].requestFrame();
    };
    /**
     * Invalidates element.
     *
     * Object will be redrawn during the next update cycle.
     *
     * Please note that in most cases elements will auto-invalidate when needed. If
     * everything works, DO NOT use this method. Use it only if some changes do
     * not take otherwise.
     */
    Container.prototype.invalidate = function () {
        _super.prototype.invalidate.call(this);
        this.invalidateLayout();
    };
    /**
     * Invalidates the whole element, including layout AND all its child
     * elements.
     *
     * As this will essentially force all elements to redraw, use only if
     * absolutely necessary.
     */
    Container.prototype.deepInvalidate = function () {
        _super.prototype.invalidate.call(this);
        //this.sortChildren();
        _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](this._childrenByLayout, function (child) {
            if (child instanceof Container) {
                child.deepInvalidate();
            }
            else {
                child.invalidate();
            }
        });
        this.invalidateLayout();
    };
    Object.defineProperty(Container.prototype, "children", {
        /**
         * Returns a list of the child [[Sprite]] elements contained in this
         * Container.
         *
         * @return {List<Sprite>} List of child elements (Sprites)
         */
        get: function () {
            // @todo Review if we can add all children to disposers
            if (!this._children) {
                this._children = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                //this._disposers.push(new ListDisposer(this._children));
            }
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "minWidth", {
        /**
         * @return {Optional<number>} Width (px)
         */
        get: function () {
            return this.getPropertyValue("minWidth");
        },
        /**
         * Minimum width (px) for the Container. A container will not
         * auto-shrink beyond this value, even if child elements are smaller.
         *
         * @param {Optional<number>}  value  Width (px)
         */
        set: function (value) {
            if (this.setPropertyValue("minWidth", value)) {
                this.invalidateLayout();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "minHeight", {
        /**
         * @return {Optional<number>} Height (px)
         */
        get: function () {
            return this.getPropertyValue("minHeight");
        },
        /**
         * Minimum height (px) for the Container. A container will not
         * auto-shrink beyond this value, even if child elements are smaller.
         *
         * @param {Optional<number>}  value  Height (px)
         */
        set: function (value) {
            if (this.setPropertyValue("minHeight", value)) {
                this.invalidateLayout();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Overrides the original `removeElement` so that Container's actual element
     * is not removed. We do not need to remove element of a Container.
     *
     * We do this because remove element each time will fail the `getBBox`.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.removeElement = function () {
    };
    /**
     * Sorts Container's children: the ones with variable width and height are
     * put at the end of the list (depending on layout type), so that fixed-width
     * ones can be drawn first.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.sortChildren = function () {
        var _this = this;
        this._childrenByLayout = [];
        if (this.layout == "none" || this.layout == "absolute" || !this.layout) {
            //$iter.each(this.children.iterator(), (child) => {
            //	this._childrenByLayout.push(child);
            //});
            this._childrenByLayout = this.children.values;
        }
        else {
            // Assemble fixed-size and relative lists
            var fixed_1 = [];
            var relative_1 = [];
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.children.iterator(), function (child) {
                if (_this.layout == "horizontal" || _this.layout == "grid") {
                    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                        fixed_1.push(child);
                    }
                    else {
                        relative_1.push(child);
                    }
                }
                else if (_this.layout == "vertical") {
                    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                        fixed_1.push(child);
                    }
                    else {
                        relative_1.push(child);
                    }
                }
                else {
                    fixed_1.push(child);
                }
            });
            // Concat everything into list
            this._childrenByLayout = fixed_1.concat(relative_1);
        }
        this.calculateRelativeSize();
    };
    /**
     * Calculates relative sizes for all Container's children.
     *
     * @ignore Exclude from docs
     * @todo Make it protected?
     */
    Container.prototype.calculateRelativeSize = function () {
        var _this = this;
        var totalRelativeWidth = 0;
        var totalRelativeHeight = 0;
        _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](this._childrenByLayout, function (child) {
            // if child is not measured, we do not care about it at all.
            if (child.isMeasured) {
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                    totalRelativeWidth += child.percentWidth;
                }
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                    totalRelativeHeight += child.percentHeight;
                }
            }
        });
        _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](this._childrenByLayout, function (child) {
            if (child.isMeasured) {
                if (_this.layout == "horizontal") {
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                        child.relativeWidth = child.percentWidth / totalRelativeWidth;
                    }
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                        child.relativeHeight = child.percentHeight / 100;
                    }
                }
                if (_this.layout == "vertical") {
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                        child.relativeHeight = child.percentHeight / totalRelativeHeight;
                    }
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                        child.relativeWidth = child.percentWidth / 100;
                    }
                }
                if (_this.layout == "grid") {
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                        child.relativeHeight = child.percentHeight / 100;
                    }
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                        child.relativeWidth = child.percentWidth / 100;
                    }
                }
            }
            if (_this.layout == "absolute" || !child.isMeasured) {
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                    child.relativeWidth = child.percentWidth / 100;
                }
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                    child.relativeHeight = child.percentHeight / 100;
                }
            }
        });
    };
    /**
     * Adds all children to Container's SVG element.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.addChildren = function () {
        /*
          Need this check because a child might be assigned to parent even before element is created, for example a theme
          access scrollbar.thumb
        */
        if (this.element) {
            var zindexed = _utils_Array__WEBPACK_IMPORTED_MODULE_11__["copy"](this.children.values); // not children by layout!
            var sortArray = zindexed.map(function (data, idx) {
                return { idx: idx, data: data };
            });
            sortArray.sort(function (a, b) {
                var ai = (a.data.zIndex || 0);
                var bi = (b.data.zIndex || 0);
                if (ai < bi)
                    return -1;
                if (ai > bi)
                    return 1;
                return a.idx - b.idx;
            });
            zindexed = sortArray.map(function (val) {
                return val.data;
            });
            var group_1 = this.element;
            // check, maybe the order is good already
            var isCorrect = true;
            if (group_1.node && group_1.node.childNodes) {
                for (var i = 0, len = group_1.node.childNodes.length; i < len; i++) {
                    if (group_1.node.childNodes[i] != zindexed[i].group.node) {
                        isCorrect = false;
                        break;
                    }
                }
            }
            if (!isCorrect) {
                _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](zindexed, function (child) {
                    if (child.group) {
                        group_1.add(child.group);
                    }
                });
                if (this._background) {
                    this.group.addToBack(this._background.group);
                }
                this.invalidateLayout();
            }
        }
    };
    /**
     * Creates a new element of specific type and assigns as a child to the
     * Container.
     *
     * @param  {T extends Sprite}  Class type for the new element
     * @return {T}                 New element
     */
    Container.prototype.createChild = function (classType) {
        var sprite = new classType();
        sprite.parent = this;
        return sprite;
    };
    /**
     * Removes all Container's children without actually destroying them.
     *
     * To destroy children use `disposeChildren()` instead.
     */
    Container.prototype.removeChildren = function () {
        // remove all children
        // TODO use iteration instead
        while (this.children.length > 0) {
            var child = this.children.getIndex(0);
            child.parent = undefined;
            this.children.removeValue(child);
        }
    };
    /**
     * Removes and destroys all Container's children.
     *
     * To remove children from Container without destroying them, use
     * `removeChildren()`.
     */
    Container.prototype.disposeChildren = function () {
        // TODO use iteration instead
        while (this.children.length > 0) {
            var child = this.children.getIndex(0);
            child.dispose();
            this.children.removeValue(child);
        }
    };
    Object.defineProperty(Container.prototype, "background", {
        /**
         * @return {Rectangle} Background element
         */
        get: function () {
            if (!this._background) {
                this._background = this.createBackground();
                this.processBackground();
            }
            return this._background;
        },
        /**
         * An element to use as container background.
         *
         * @param {Sprite}  background  Background element
         */
        set: function (background) {
            if (this._background && this.background != background) {
                this.removeDispose(this._background);
            }
            if (background) {
                this._background = background;
                this._disposers.push(background);
                this.processBackground();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles the situation where parent element is resized.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.handleGlobalScale = function () {
        _super.prototype.handleGlobalScale.call(this);
        this.children.each(function (child) {
            child.handleGlobalScale();
        });
    };
    /**
     * Creates and returns a [[Rectangle]] to use as a background for Container.
     *
     * @ignore Exclude from docs
     * @return {this} Background Rectangle element
     */
    Container.prototype.createBackground = function () {
        return new _elements_Rectangle__WEBPACK_IMPORTED_MODULE_6__["Rectangle"]();
    };
    /**
     * Decorates background element with required properties.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.processBackground = function () {
        var background = this._background;
        if (background) {
            background.isMeasured = false;
            this._background.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]().getFor("background");
            background.parent = this;
            background.isMeasured = false;
            this.children.removeValue(background);
            this._disposers.push(background);
            this.group.addToBack(this._background.group);
        }
    };
    /**
     * Measures the size of container and informs its children of how much size
     * they can occupy, by setting their relative `maxWidth` and `maxHeight`
     * properties.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.validateLayout = function () {
        var _this = this;
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].removeFromInvalidLayouts(this);
        this.layoutInvalid = false;
        // prevents from drawing if topparent is 0x0
        /*
        let topParent = this.topParent;
        if (topParent) {
            if (!topParent.maxWidth || !topParent.maxHeight) {
                this._disposers.push(topParent.events.once("maxsizechanged", this.invalidateLayout, this));
            }
        }*/
        this._availableWidth = this.innerWidth;
        this._availableHeight = this.innerHeight;
        var measuredWidth = 0;
        var measuredHeight = 0;
        var allValid = true;
        if (this.children) {
            this.sortChildren();
            // we itterate through list of children, sorted by layout priority. sprites which width non-relative width/height will go first, so we will reduce available width before proceeding to sprites with relative width/height
            _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](this._childrenByLayout, function (child) {
                var maxWidth;
                var maxHeight;
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.relativeWidth)) {
                    maxWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](_this._availableWidth * child.relativeWidth, 2);
                    if (_this.layout == "horizontal") { // || this.layout == "absolute") {
                        maxWidth -= child.pixelMarginRight + child.pixelMarginLeft;
                    }
                }
                else {
                    if (_this.layout == "horizontal") {
                        if (child.invalid) {
                            child.validate();
                        }
                    }
                }
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.relativeHeight)) {
                    maxHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](_this._availableHeight * child.relativeHeight, 2);
                    if (_this.layout == "vertical") { //  || this.layout == "absolute") {
                        maxHeight -= child.pixelMarginTop + child.pixelMarginBottom;
                    }
                }
                else {
                    if (_this.layout == "vertical") {
                        if (child.invalid) {
                            child.validate();
                        }
                    }
                }
                // if child is valid
                if (child.invalid == false) {
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.relativeWidth)) {
                        child.maxWidth = maxWidth;
                    }
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.relativeHeight)) {
                        child.maxHeight = maxHeight;
                    }
                    if (child.isMeasured) {
                        // reduce available width if this is horizontal layout
                        if (_this.layout == "horizontal") {
                            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentWidth)) {
                                if (child.measuredWidth > 0) {
                                    _this._availableWidth -= child.measuredWidth + child.pixelMarginLeft + child.pixelMarginRight;
                                }
                            }
                        }
                        // reduce available height if this is vertical layout
                        if (_this.layout == "vertical") {
                            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.percentHeight)) {
                                if (child.measuredHeight > 0) {
                                    _this._availableHeight -= child.measuredHeight + child.pixelMarginTop + child.pixelMarginBottom;
                                }
                            }
                        }
                        var childMeasuredWidth = child.measuredWidth;
                        var childMeasuredHeight = child.measuredHeight;
                        if (child.align != "none") {
                            childMeasuredWidth += child.pixelMarginLeft + child.pixelMarginRight;
                        }
                        if (child.valign != "none") {
                            childMeasuredHeight += child.pixelMarginTop + child.pixelMarginBottom;
                        }
                        measuredWidth = Math.max(measuredWidth, childMeasuredWidth);
                        measuredHeight = Math.max(measuredHeight, childMeasuredHeight);
                    }
                }
                // if child is not valid
                else {
                    // tell child what maximum width/ height it can occupy
                    if (child.isMeasured) {
                        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.relativeWidth)) {
                            if (child.maxWidth != maxWidth) { // need to check this because of allValid
                                child.maxWidth = maxWidth;
                                allValid = false;
                            }
                        }
                        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](child.relativeHeight)) {
                            if (child.maxHeight != maxHeight) { // need to check this because of allValid
                                child.maxHeight = maxHeight;
                                allValid = false;
                            }
                        }
                    }
                }
            });
        }
        this._absoluteWidth = measuredWidth;
        this._absoluteHeight = measuredHeight;
        // arrange after measuring, only if all children are valid already
        if (allValid) {
            this.arrange();
        }
    };
    /**
     * Arranges children according to layout specs and available space / child
     * sizes.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.arrange = function () {
        var _this = this;
        var children = this.children;
        /*
           in this method we not only arrange children but also find out the size of the container
           it might seem it would be easier to get container size using sprite's measure method,
           however it would return only actual size of the bbox. However as each child meight have
           margins set, we need to check each child - we do it here.

           This method doesn't do anything with DOM, so it's not expensive
        */
        var measuredWidth = 0;
        var measuredHeight = 0;
        //let innerWidth: number = this.innerWidth; //$math.max(this.innerWidth, this._measuredWidth - paddingLeft - paddingRight);
        //let innerHeight: number = this.innerHeight; //$math.max(this.innerHeight, this._measuredHeight - paddingTop - paddingBottom);
        // above is wrong, as if a w/h is not specified, it is 0 and alignment doesn't work at all.
        var innerWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](this.innerWidth, this._absoluteWidth);
        var innerHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](this.innerHeight, this._absoluteHeight);
        var left; // = 0;
        var right; // = innerWidth;
        var top; // = 0;
        var bottom; // = innerHeight;
        var paddingLeft = this.pixelPaddingLeft;
        var paddingRight = this.pixelPaddingRight;
        var paddingTop = this.pixelPaddingTop;
        var paddingBottom = this.pixelPaddingBottom;
        var nextX = 0;
        var nextY = 0;
        var row = 0;
        var column = 0;
        var columnWidth = [];
        var rowHeight = [];
        var maxCellWidth;
        var minCellWidth;
        var columnCount;
        var maxWidth = this.maxWidth;
        var maxHeight = this.maxHeight;
        var minWidth = this.minWidth;
        var minHeight = this.minHeight;
        var childrenCopy = _utils_Array__WEBPACK_IMPORTED_MODULE_11__["copy"](children.values);
        if (this.reverseOrder) {
            childrenCopy.reverse();
        }
        // GRID PRECALCULATIONS
        if (this.layout == "grid") {
            minCellWidth = maxWidth;
            maxCellWidth = 1;
            for (var i = 0, len = childrenCopy.length; i < len; i++) {
                var child = childrenCopy[i];
                if (child.isMeasured && !child.disabled && !child.__disabled) {
                    var childMeasuredWidth = child.measuredWidth;
                    if (childMeasuredWidth < minCellWidth) {
                        minCellWidth = childMeasuredWidth;
                    }
                    if (childMeasuredWidth > maxCellWidth) {
                        maxCellWidth = childMeasuredWidth;
                    }
                }
            }
            minCellWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["fitToRange"](minCellWidth, 1, maxWidth);
            maxCellWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["fitToRange"](maxCellWidth, 1, maxWidth);
            if (this.fixedWidthGrid) {
                columnCount = maxWidth / maxCellWidth;
            }
            else {
                columnCount = maxWidth / minCellWidth; // predicted number of columns, yes it is usually much more than real number, but we fix that later
            }
            columnCount = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](1, Math.floor(columnCount));
            columnCount = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["min"](this.maxColumns, columnCount);
            columnWidth = this.getColumnWidth(childrenCopy, columnCount, maxCellWidth);
        }
        var contentLeft;
        var contentRight;
        var contentTop;
        var contentBottom;
        // we itterate through array of children
        // TODO use iterator instead
        for (var i = 0, len = childrenCopy.length; i < len; i++) {
            var child = childrenCopy[i];
            if (child.isMeasured && !child.disabled && !child.__disabled) {
                var x = undefined; //child.pixelX; // must reset
                var y = undefined; //child.pixelY; // must reset
                var childMarginLeft = child.pixelMarginLeft;
                var childMarginRight = child.pixelMarginRight;
                var childMarginTop = child.pixelMarginTop;
                var childMarginBottom = child.pixelMarginBottom;
                var childWidth = child.measuredWidth;
                var childHeight = child.measuredHeight;
                var childLeft = void 0;
                var childRight = void 0;
                var childTop = void 0;
                var childBottom = void 0;
                switch (this.layout) {
                    case "none":
                        break;
                    // absolute layout
                    case "absolute":
                        // horizontal alignment
                        switch (child.align) {
                            case "left":
                                x = childMarginLeft - child.maxLeft;
                                break;
                            case "center":
                                x = (innerWidth - childWidth) / 2 - child.maxLeft;
                                break;
                            case "right":
                                x = innerWidth - childMarginRight - child.maxRight;
                                break;
                            default:
                                if (!(child.x instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"])) {
                                    x = child.pixelX;
                                }
                                break;
                        }
                        // vertical alignment
                        switch (child.valign) {
                            case "top":
                                y = childMarginTop - child.maxTop;
                                break;
                            case "middle":
                                y = (innerHeight - childHeight) / 2 - child.maxTop;
                                break;
                            case "bottom":
                                y = innerHeight - childMarginBottom - child.maxBottom;
                                break;
                            default:
                                if (!(child.y instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"])) {
                                    y = child.pixelY;
                                }
                                break;
                        }
                        break;
                    // vertical layout
                    case "vertical":
                        //if ($type.isNumber(child.relativeHeight)) {
                        //	childHeight = child.maxHeight;
                        //}
                        switch (child.align) {
                            case "left":
                                x = childMarginLeft - child.maxLeft;
                                break;
                            case "center":
                                x = (innerWidth - childWidth) / 2 - child.maxLeft;
                                break;
                            case "right":
                                x = innerWidth - childMarginRight - child.maxRight;
                                break;
                            default:
                                x = child.pixelX;
                                break;
                        }
                        y = nextY + childMarginTop - child.maxTop;
                        nextY = y + child.maxBottom + childMarginBottom;
                        break;
                    // horizontal layout
                    case "horizontal":
                        //if ($type.isNumber(child.relativeHeight)) {
                        //	childHeight = child.maxHeight;
                        //}
                        switch (child.valign) {
                            case "top":
                                y = childMarginTop - child.maxTop;
                                break;
                            case "middle":
                                y = (innerHeight - childHeight) / 2 - child.maxTop;
                                break;
                            case "bottom":
                                y = innerHeight - childMarginBottom - child.maxBottom;
                                break;
                            default:
                                y = child.pixelY;
                                break;
                        }
                        x = nextX + childMarginLeft - child.maxLeft;
                        nextX = x + child.maxRight + childMarginRight;
                        break;
                    case "grid":
                        x = nextX + childMarginLeft - child.maxLeft;
                        switch (child.valign) {
                            case "top":
                                y = nextY + childMarginTop - child.maxTop;
                                break;
                            case "middle":
                                y = nextY + (innerHeight - childHeight) / 2 - child.maxTop;
                                break;
                            case "bottom":
                                y = nextY + innerHeight - childMarginBottom - child.maxBottom;
                                break;
                            default:
                                y = nextY - child.maxTop;
                                break;
                        }
                        nextX += columnWidth[column];
                        rowHeight[row] = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](rowHeight[row], childHeight);
                        column++;
                        var nextColumnWidth = columnWidth[column];
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](nextColumnWidth)) {
                            nextColumnWidth = maxCellWidth;
                        }
                        if (nextX > _utils_Math__WEBPACK_IMPORTED_MODULE_12__["min"](this.innerWidth, maxWidth) - nextColumnWidth + 1 && column < columnCount) {
                            columnCount = column;
                            nextX = 0;
                            nextY = 0;
                            row = 0;
                            column = 0;
                            columnWidth = this.getColumnWidth(childrenCopy, columnCount, maxCellWidth);
                            rowHeight = [];
                            i = -1;
                            continue;
                        }
                        if (column >= columnCount) {
                            column = 0;
                            nextY += rowHeight[row];
                            row++;
                            nextX = 0;
                        }
                        break;
                }
                if (this.layout !== "none") {
                    child.moveTo({ x: x, y: y }); // must use moveTo, otherwise x/y set in percent won't work
                    childLeft = x + child.maxLeft - childMarginLeft;
                    childRight = x + child.maxRight + childMarginRight;
                    childTop = y + child.maxTop - childMarginTop;
                    childBottom = y + child.maxBottom + childMarginBottom;
                    if (childRight > right || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](right)) {
                        right = childRight;
                    }
                    if (childLeft < left || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](left)) {
                        left = childLeft;
                    }
                    if (childTop < top || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](top)) {
                        top = childTop;
                    }
                    if (childBottom > bottom || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bottom)) {
                        bottom = childBottom;
                    }
                    if (childRight > contentRight || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentRight)) {
                        contentRight = childRight;
                    }
                    if (childLeft < contentLeft || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentLeft)) {
                        contentLeft = childLeft;
                    }
                    if (childTop < contentTop || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentTop)) {
                        contentTop = childTop;
                    }
                    if (childBottom > contentBottom || !_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentBottom)) {
                        contentBottom = contentBottom;
                    }
                }
            }
            else {
                child.validatePosition();
            }
        }
        if (this.layout == "none") {
            var noneBBox = this.bbox;
            left = noneBBox.x;
            right = noneBBox.x + noneBBox.width;
            top = noneBBox.y;
            bottom = noneBBox.y + noneBBox.height;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](left)) {
            left = 0;
            contentLeft = 0;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](right)) {
            right = this._availableWidth;
            contentRight = right;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](top)) {
            top = 0;
            contentTop = 0;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bottom)) {
            bottom = this._availableHeight;
            contentBottom = bottom;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentTop)) {
            contentTop = 0;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentBottom)) {
            contentBottom = contentTop;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentLeft)) {
            contentLeft = 0;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](contentRight)) {
            contentRight = contentLeft;
        }
        measuredWidth = right - left;
        measuredHeight = bottom - top;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this.relativeWidth)) {
            measuredWidth = maxWidth - this.pixelPaddingLeft - this.pixelPaddingRight;
            left = 0;
            right = measuredWidth;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this.relativeHeight)) {
            measuredHeight = maxHeight - this.pixelPaddingTop - this.pixelPaddingBottom;
            top = 0;
            bottom = measuredHeight;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this._pixelWidth)) {
            left = 0;
            measuredWidth = this._pixelWidth;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](minWidth) && measuredWidth < minWidth) {
            left = 0;
            measuredWidth = this.minWidth;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this._pixelHeight)) {
            top = 0;
            measuredHeight = this._pixelHeight;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](minHeight) && measuredHeight < minHeight) {
            top = 0;
            measuredHeight = minHeight;
        }
        var measuredContentWidth = contentRight - contentLeft;
        var measuredContentHeight = contentBottom - contentTop;
        /// handle content alignment
        if (this.layout != "none" && (this.contentAlign || this.contentValign) && children.length > 0) {
            var dx_1;
            var dy_1;
            var mwa = measuredWidth;
            var mha = measuredHeight;
            if (mwa < measuredContentWidth) {
                mwa = measuredContentWidth;
            }
            if (mha < measuredContentHeight) {
                mha = measuredContentHeight;
            }
            if (this.contentAlign == "center") {
                dx_1 = (mwa - measuredContentWidth) / 2;
            }
            if (this.contentAlign == "right") {
                dx_1 = mwa - measuredContentWidth;
            }
            if (this.contentValign == "middle") {
                dy_1 = (mha - measuredContentHeight) / 2;
            }
            if (this.contentValign == "bottom") {
                dy_1 = mha - measuredContentHeight;
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](dx_1)) {
                _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](children.iterator(), function (child) {
                    var childLeft = child.maxLeft;
                    var ddx = dx_1;
                    if (_this.layout == "horizontal") {
                        child.x = child.pixelX + ddx;
                    }
                    // individual grid elements can not be aligned vertically, that's why it's different from horizontal
                    if (_this.layout == "grid") {
                        child.x = child.pixelX + ddx;
                    }
                    if (_this.layout == "vertical") {
                        ddx += child.pixelMarginLeft;
                        if (child.align == "none") {
                            child.x = ddx - childLeft;
                        }
                    }
                    if (_this.layout == "absolute") {
                        ddx += child.pixelMarginLeft;
                        if (child.align == "none") {
                            child.x = ddx - childLeft;
                        }
                    }
                });
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](dy_1)) {
                _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](children.iterator(), function (child) {
                    var childTop = child.maxTop;
                    var ddy = dy_1;
                    if (_this.layout == "horizontal") {
                        ddy += child.pixelMarginTop;
                        if (child.valign == "none") {
                            child.y = ddy - childTop;
                        }
                    }
                    // individual grid elements can not be aligned vertically, that's why it's different from horizontal
                    if (_this.layout == "grid") {
                        ddy += child.pixelMarginTop;
                        child.y = ddy - childTop;
                    }
                    if (_this.layout == "vertical") {
                        child.y = child.pixelY + ddy;
                    }
                    if (_this.layout == "absolute") {
                        ddy += child.pixelMarginTop;
                        if (child.valign == "none") {
                            child.y = ddy - childTop;
                        }
                    }
                });
            }
        }
        var oldBBox = this.bbox;
        // this will mess up maxw/maxh set by container layout, we need a separate min/maxwidth for users
        // this prevents invalidating layout in such cases as scrolling category axis, when labels go outside bounds and results transformed event
        // todo: need to check if this doesn't cause other problems.
        //if (this.maxWidth > 0) {
        //measuredWidth = $math.min(measuredWidth, this.maxWidth);
        //measuredWidth = $math.max(measuredWidth, this.minWidth);
        //}
        //if (this.maxHeight > 0) {
        //measuredHeight = $math.min(measuredHeight, this.maxHeight);
        //measuredHeight = $math.max(measuredHeight, this.minHeight);
        //}
        measuredWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](measuredWidth, minWidth);
        measuredHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](measuredHeight, minHeight);
        this.contentWidth = measuredWidth;
        this.contentHeight = measuredHeight;
        // new
        measuredWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["min"](measuredWidth, maxWidth);
        measuredHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["min"](measuredHeight, maxHeight);
        this._bbox = { x: left, y: top, width: measuredWidth, height: measuredHeight };
        var prevLeft = this.maxLeft;
        var prevTop = this.maxTop;
        var prevBotttom = this.maxBottom;
        var prevRight = this.maxRight;
        this.measure();
        if (prevLeft != this.maxLeft || prevRight != this.maxRight || prevTop != this.maxTop || prevBotttom != this.maxBottom) {
            if (this.events.isEnabled("transformed")) {
                var event_1 = {
                    type: "transformed",
                    target: this
                };
                if (oldBBox) {
                    event_1.dummyData = oldBBox.width + " " + measuredWidth + "  " + oldBBox.height + " " + measuredHeight;
                }
                this.events.dispatchImmediately("transformed", event_1);
            }
        }
    };
    /**
     * Positions element according its center settings.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    Container.prototype.updateCenter = function () {
        _super.prototype.updateCenter.call(this);
        this.updateBackground();
    };
    /**
     * Update the background to fit into specific dimensions.
     *
     * @ignore Exclude from docs
     * @todo Make it protected?
     */
    Container.prototype.updateBackground = function () {
        var background = this._background; // accessing protected, as getter creates instance if it doesn't exist
        if (background) {
            background.x = this.maxLeft;
            background.y = this.maxTop;
            background.width = this.maxRight - this.maxLeft;
            background.height = this.maxBottom - this.maxTop;
        }
    };
    /**
     * Returns widths of all columns in a horizontal Container layout.
     *
     * @ignore Exclude from docs
     * @param  {number}    columnCount   Number of columns
     * @param  {number}    maxCellWidth  Maximum width of one grid cell
     * @return {number[]}                An array of column widths
     */
    Container.prototype.getColumnWidth = function (children, columnCount, maxCellWidth) {
        var _this = this;
        var columnWidth = [];
        var column = 0;
        _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](children, function (child) {
            if (child.isMeasured) {
                if (_this.fixedWidthGrid) {
                    columnWidth[column] = maxCellWidth;
                }
                else {
                    columnWidth[column] = _utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](columnWidth[column], child.measuredWidth + child.pixelMarginRight + child.pixelMarginLeft);
                }
                column++;
                if (column == columnCount) {
                    column = 0;
                }
            }
        });
        return columnWidth;
    };
    Object.defineProperty(Container.prototype, "layout", {
        /**
         * @return {ContainerLayout} Layout
         */
        get: function () {
            return this.getPropertyValue("layout");
        },
        /**
         * Container layout.
         *
         * Options: "absolute" (default), "vertical", "horizontal", "grid", "none". "none" is quite the same as "absolute" - the objects will
         * be positioned at their x, y coordinates, the difference is that with "absolute" you can still use align/valign for children and with "none" you can not.
         * Use "none" as much as you can as it's most cpu-saving layout.
         *
         * @default "absolute"
         * @param {ContainerLayout} value Layout
         */
        set: function (value) {
            if (this.setPropertyValue("layout", value)) {
                this.invalidateLayout();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "contentValign", {
        /**
         * @return {VerticalAlign} Vertical alignment
         */
        get: function () {
            return this.getPropertyValue("contentValign");
        },
        /**
         * Vertical alignment of the elements for the vertical Container.
         *
         * This is used when Container is larger than the height of all its children.
         *
         * @param {VerticalAlign} value vertical alignment
         */
        set: function (value) {
            this.setPropertyValue("contentValign", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "contentAlign", {
        /**
         * @return {Align} Horizontal alignment
         */
        get: function () {
            return this.getPropertyValue("contentAlign");
        },
        /**
         * Horizontal alignment of the elements for the horizontal Container.
         *
         * This is used when Container is larger than the height of all its children.
         *
         * @param {Align}  value  Horizontal alignment
         */
        set: function (value) {
            this.setPropertyValue("contentAlign", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "fixedWidthGrid", {
        /**
         * @return {boolean} Should use fixed width grid?
         */
        get: function () {
            return this.getPropertyValue("fixedWidthGrid");
        },
        /**
         * Controls if the grid of the Container should use fixed width. Fixed width
         * grid will divide available space to all its columns/rows equally, without
         * adapting to actual child sizes or size requirements.
         *
         * @default false
         * @param {boolean}  value  Should use fixed width grid?
         */
        set: function (value) {
            this.setPropertyValue("fixedWidthGrid", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "maxColumns", {
        /**
         * @return {Optional<number>} Should use fixed width grid?
         */
        get: function () {
            return this.getPropertyValue("maxColumns");
        },
        /**
         * Maximum number of columns (when using `"grid"` layout).
         *
         * @param {Optional<number>}  value  Should use fixed width grid?
         */
        set: function (value) {
            this.setPropertyValue("maxColumns", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "reverseOrder", {
        /**
         * @return {Optional<boolean>} Reverse children?
         */
        get: function () {
            return this.getPropertyValue("reverseOrder");
        },
        /**
         * If set to `true`, the children of the container will be drawn in reverse
         * order.
         *
         * @default false
         * @param {Optional<boolean>}  value  Reverse children?
         */
        set: function (value) {
            this.setPropertyValue("reverseOrder", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "setStateOnChildren", {
        /**
         * @return {boolean} Set state on children
         */
        get: function () {
            return this.getPropertyValue("setStateOnChildren");
        },
        /**
         * Specifies if, when state is applied on this container, the same state
         * should be applied to container's children as well as `background`.
         *
         * @default false
         * @param {boolean}  value  Set state on children
         */
        set: function (value) {
            this.setPropertyValue("setStateOnChildren", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if point is within bounds of a container.
     *
     * @param  {IPoint}   point  A coordinate to check
     * @return {boolean}         `true` if it fits within container
     */
    Container.prototype.fitsToBounds = function (point) {
        var x = point.x;
        var y = point.y;
        var deviation = 0.5; // sometimes coordinates are rounded to numbers like .999 so we add deviation here
        if (x >= -deviation && x <= this.pixelWidth + deviation && y >= -deviation && y <= this.pixelHeight + deviation) {
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Copies all properties from different Container, including background
     * clone.
     *
     * @param {this}  source  Source Container to copy from
     */
    Container.prototype.copyFrom = function (source) {
        var _this = this;
        _super.prototype.copyFrom.call(this, source);
        this.layout = source.layout;
        this.setStateOnChildren = source.setStateOnChildren;
        if (source._background) {
            this.background = source._background.clone();
            this.background.copyFrom(source._background); // won't work without this
        }
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](source.children.iterator(), function (child) {
            if (child.shouldClone) {
                var clonedChild = child.clone();
                clonedChild.parent = _this;
            }
        });
    };
    Object.defineProperty(Container.prototype, "preloader", {
        /**
         * @return {Optional<Preloader>} Preloader instance
         */
        get: function () {
            var preloader = this._preloader;
            if (preloader) {
                return preloader;
            }
            else if (this.parent) {
                return this.parent.preloader;
            }
        },
        /**
         * A [[Preloader]] instance to be used when Container is busy.
         *
         * @param {Optional<Preloader>}  preloader  Preloader instance
         */
        set: function (preloader) {
            if (this._preloader) {
                this.removeDispose(this._preloader);
            }
            this._preloader = preloader;
            if (preloader) {
                preloader.parent = this.tooltipContainer;
                this._disposers.push(preloader);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets [[Paper]] instance to use to draw elements.
     * @ignore
     * @param {Paper} paper Paper
     * @return {boolean} true if paper was changed, false, if it's the same
     */
    Container.prototype.setPaper = function (paper) {
        var _this = this;
        var changed = _super.prototype.setPaper.call(this, paper);
        if (changed) {
            if (this._background) {
                this._background.paper = paper;
                this._background.topParent = this.topParent;
            }
            this.children.each(function (child) {
                child.setPaper(paper);
                child.topParent = _this.topParent;
            });
        }
        return changed;
    };
    /**
     * Removes Container from the system-wide list of invalid Containers.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.removeFromInvalids = function () {
        _super.prototype.removeFromInvalids.call(this);
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].removeFromInvalidLayouts(this);
    };
    /**
     * Sets a [[DataItem]] to be used as data for the Container.
     *
     * @todo Description
     * @param {DataItem} dataItem DataItem
     */
    Container.prototype.setDataItem = function (dataItem) {
        // this place is potentially dangerous, as if we set datItem for some dummy container, all children dataItems will be overriden
        // the main reason for doing this is that we need a setDataItem code to be called for each sprite, otherwise property fields won't be
        // applied. Also, getting dataItem from parent all the time is more expensive than saving value.
        if (this._dataItem != dataItem) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.children.iterator(), function (child) {
                child.dataItem = dataItem;
            });
        }
        _super.prototype.setDataItem.call(this, dataItem);
    };
    /**
     * Measures the element.
     *
     * @ignore Exclude from docs
     */
    Container.prototype.measureElement = function () {
        if (this.disabled || this.isTemplate || this.layout == "none" || this.__disabled) {
            // void
        }
        else {
            this.validateLayout();
        }
    };
    /**
     * Returns Tooltip X coordinate if it's set, or middle of the element.
     *
     * @ignore Exclude from docs
     * @return {number} X (px)
     */
    Container.prototype.getTooltipX = function () {
        return _super.prototype.getTooltipX.call(this);
    };
    /**
     * Returns Tooltip Y coordinate if it's set, or middle of the element.
     *
     * @ignore Exclude from docs
     * @return {number} Y (px)
     */
    Container.prototype.getTooltipY = function () {
        return _super.prototype.getTooltipY.call(this);
    };
    Object.defineProperty(Container.prototype, "fontFamily", {
        /**
         * @return {any} Font family
         */
        get: function () {
            return this.getPropertyValue("fontFamily");
        },
        /**
         * Font family to be used for the text.
         *
         * Parts of the text may override this setting using in-line formatting.
         *
         * @param {string} value Font family value
         */
        set: function (value) {
            if (this.setPropertyValue("fontFamily", value, true)) {
                this.setSVGAttribute({ "font-family": value });
                this.invalidateLabels();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "fontSize", {
        /**
         * @return {any} Font size
         */
        get: function () {
            return this.getPropertyValue("fontSize");
        },
        /**
         * Font size to be used for the text. The size can either be numeric, in
         * pixels, or other measurements.
         *
         * Parts of the text may override this setting using in-line formatting.
         *
         * @param {any} value Font size value
         */
        set: function (value) {
            if (this.setPropertyValue("fontSize", value, true)) {
                this.setSVGAttribute({ "font-size": value });
                this.invalidateLabels();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.
     */
    Container.prototype.invalidateLabels = function () {
        this.children.each(function (child) {
            // can't import Label because of Circular dependencies
            if (child["hardInvalidate"]) {
                child["hardInvalidate"]();
            }
            else if (child instanceof Container) {
                child.invalidateLabels();
            }
        });
    };
    Object.defineProperty(Container.prototype, "fontWeight", {
        /**
         * @return {FontWeight} Font weight
         */
        get: function () {
            return this.getPropertyValue("fontWeight");
        },
        /**
         * Font weight to use for text.
         *
         * Parts of the text may override this setting using in-line formatting.
         *
         * @param {FontWeight} value Font weight
         */
        set: function (value) {
            this.setPropertyValue("fontWeight", value);
            this.setSVGAttribute({ "font-weight": value });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Container.prototype, "textDecoration", {
        /**
         * @return {TextDecoration} Decoration
         */
        get: function () {
            return this.getPropertyValue("textDecoration");
        },
        /**
         * A text decoration to use for text.
         *
         * Parts of the text may override this setting using in-line formatting.
         *
         * @param {TextDecoration}  value  Decoration
         */
        set: function (value) {
            this.setPropertyValue("textDecoration", value);
            this.setSVGAttribute({ "text-decoration": value });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Disposes (destroys) the element and all its children.
     */
    Container.prototype.dispose = function () {
        if (this._background) {
            this._background.dispose();
        }
        this._shouldBeReady = [];
        this.disposeChildren();
        _super.prototype.dispose.call(this);
    };
    /**
     * Applies a [[SpriteState]] on this element.
     *
     * The first parameter can either be a name of the state or a [[SpriteState]]
     * instance.
     *
     * When run, this method will apply SVG properties defined in a
     * [[SpriteState]], but only those that are relevant to this particular
     * element, that is are listed in its respective `properties` array.
     *
     * @see {@link SpriteState}
     * @param {string | SpriteState} value               A state - name key or instance
     * @param {number}               transitionDuration  Duration of the transition between current and new state
     * @param {number) => number}    easing              An easing function
     */
    Container.prototype.setState = function (value, transitionDuration, easing) {
        var stateName = value;
        if (value instanceof _SpriteState__WEBPACK_IMPORTED_MODULE_2__["SpriteState"]) {
            stateName = value.name;
        }
        if (this.setStateOnChildren) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.children.iterator(), function (child) {
                child.setState(stateName, transitionDuration, easing);
                // not good to set it in child setState
                if (stateName != "active") {
                    child.isActive = false;
                }
            });
        }
        if (this._background) {
            this._background.setState(stateName);
        }
        if (this.setStateOnSprites.length) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](this.setStateOnSprites, function (item) {
                item.setState(stateName, transitionDuration, easing);
            });
        }
        return _super.prototype.setState.call(this, value, transitionDuration, easing);
    };
    // otherwise isActive won't work properly with background
    Container.prototype.setActive = function (value) {
        _super.prototype.setActive.call(this, value);
        if (this._background) {
            this._background.isActive = value;
        }
    };
    /**
     * Dispatches ready event. Dispatches when all children are ready.
     */
    Container.prototype.dispatchReady = function () {
        var _this = this;
        if (!this.isReady() && !this.isDisposed()) {
            var allReady_1 = true;
            this.children.each(function (sprite) {
                if (!sprite.__disabled && !sprite.disabled && !sprite.isReady()) {
                    allReady_1 = false;
                }
            });
            _utils_Array__WEBPACK_IMPORTED_MODULE_11__["each"](this._shouldBeReady, function (sprite) {
                if (!sprite.__disabled && !sprite.disabled && !sprite.isReady()) {
                    allReady_1 = false;
                }
            });
            if (allReady_1) {
                _super.prototype.dispatchReady.call(this);
            }
            else {
                _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].events.once("exitframe", function () {
                    _this.dispatchReady();
                    _System__WEBPACK_IMPORTED_MODULE_14__["system"].requestFrame();
                }, undefined, false);
            }
        }
    };
    return Container;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["Container"] = Container;
//# sourceMappingURL=Container.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js ***!
  \*********************************************************************/
/*! exports provided: DataItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataItem", function() { return DataItem; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Defines functionality for "Data Item"
 *
 * A Data Item can be any object that can hold data. For example [[LineSeries]]
 * holds a number of values, that comprise a line graph. Each of those values
 * (data points) is a {DataItem}.
 *
 * Furthermore the [[LineSeries]] itself can be represented as a entry in the
 * legend. Since legend needs access to Line Series' value, a DataItem is
 * created for the series.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * DataItem represents single element in data, for example a data point in a
 * Serial Chart Series, e.g. a column.
 *
 * DataItem defines relationship between structured data, required for specific
 * chart type or task, and raw source data.
 *
 * It also implements required calculations, updates related visual elements,
 * etc.
 *
 * @todo Description
 * @important
 */
var DataItem = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DataItem, _super);
    /**
     * Constructor
     * @todo Adding events to disposers produces errors in some cases, which means that chart is using disposed Data Items which is not right
     */
    function DataItem() {
        var _this = _super.call(this) || this;
        /**
         * Holds Adapter.
         *
         * @type {Adapter<DataItem, IDataItemAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        /**
         * This Data Item is currently disabled.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._disabled = false;
        /**
         * Indicates whether Data Item has any properties set.
         *
         * If it does not have any, the code can use this property to check whether
         * they need to apply costly operation of re-applying properties, whenever
         * Data Item-related element is redrawn, e.g. series.
         *
         * @type {boolean}
         */
        _this.hasProperties = false;
        /**
         * An object containing calculated values.
         */
        _this.values = {};
        /**
         * An object container current working values.
         */
        //public readonly workingValues: { [index: string]: { [index: string]: number } } = {};
        /**
         * An object containing categories.
         */
        _this.categories = {};
        /**
         * An object containing dates.
         */
        _this.dates = {};
        /**
         * An object containing locations for the Data Item.
         *
         * A location is a position within date or category, or, in some other cases,
         * where there is no single point but rather some period.
         */
        _this.locations = {};
        /**
         * Current working locations.
         */
        _this.workingLocations = {};
        /**
         * An object containing Data Item specific appearance properties in key-value
         * pairs.
         *
         * Sometimes a single Data Item needs to apply different properties than the
         * rest of the data [[Series]] it is part of. E.g. a single column,
         * represented by a Data Item needs to be filled with a different color than
         * the reset of the [[ColumnSeries]] it belongs to.
         *
         * That's where Data Item's `properties` come into play.
         *
         * Please note that you should set Data Item-specific properties using
         * `setProperty()` method, rather than access `properties` object directly.
         */
        _this.properties = {};
        /**
         * A list of [[Sprite]] elements that are associated with this Data Item.
         *
         * E.g. an [[Axis]] Data Item has several separate elements associated with
         * it, like [[AxisTick]], [[AxisLabel]], and [[Grid]].
         *
         * Data Item keeps track of all of them, so it can toggle all related visual
         * elements when it itself is toggled.
         *
         * @type {Sprite[]}
         */
        _this.sprites = [];
        /**
         * Identifies if this object is a "template" and should not be treated as
         * real object that is drawn or actually used in the chart.
         *
         * @type {boolean}
         */
        _this.isTemplate = false;
        /**
         * The current index within the dataItems
         *
         * @ignore Exclude from docs
         * @type {number | null}
         */
        _this._index = null;
        /**
         * Is Data Item currently visible?
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._visible = true;
        /**
         * Is Data Item currently hidden?
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._hidden = false;
        /**
         * Should this Data Item be used when calculating data ranges and scales?
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._ignoreMinMax = false;
        /**
         * Some of the Data Item's data fields may contain an array of children. This
         * property contains an object indicating which fields hold an array, so that
         * they can be processed properly.
         *
         * @ignore Exclude from docs
         */
        _this.hasChildren = {};
        /**
         * Indicates whether Data Item is currently animiting from visible to hidden
         * state.
         *
         * @type {boolean}
         */
        _this.isHiding = false;
        /**
         *
         * @ignore Exclude from docs
         */
        _this._valueAnimations = {};
        /**
         *
         * @ignore Exclude from docs
         */
        _this._locationAnimations = {};
        _this.className = "DataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(DataItem.prototype, "index", {
        /**
         * Data Item's position index in Component's data.
         *
         * @return {number} Index
         */
        get: function () {
            if (this.component) {
                if (this._index != null) {
                    return this._index;
                }
                else {
                    return -1;
                }
            }
            else {
                return -1;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItem.prototype, "animations", {
        /**
         * A list of [[Animations]] objects currently mutating Data Item's values.
         *
         * @return {Array<Animation>} [description]
         */
        get: function () {
            if (!this._animations) {
                this._animations = [];
                this._disposers.push(new _utils_Animation__WEBPACK_IMPORTED_MODULE_3__["AnimationDisposer"](this._animations));
            }
            return this._animations;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItem.prototype, "visible", {
        /**
         * Returns `true` if this Data Item is currently visible.
         *
         * @return {boolean} Visible?
         */
        get: function () {
            if (this._hidden) {
                return false;
            }
            return this._visible;
        },
        /**
         * Sets visibility of the Data Item.
         *
         * @param {boolean} value Visible?
         */
        set: function (value) {
            if (value) {
                this.hidden = false;
            }
            if (this._visible != value) {
                this.setVisibility(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItem.prototype, "hidden", {
        /**
         * Returns `true` if this Data Item is currently hidden.
         *
         * @return {boolean} Hidden?
         */
        get: function () {
            return this._hidden;
        },
        /**
         * Sets hidden flag for data item. Mostly used to initially hide data item.
         *
         * @param {boolean} value Hidden?
         */
        set: function (value) {
            if (this._hidden != value) {
                this._hidden = value;
                if (value) {
                    this.setVisibility(false);
                }
                else {
                    this.setVisibility(true, true);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItem.prototype, "__disabled", {
        /**
         * Is this Data Item currently disabled?
         *
         * @ignore Exclude from docs
         * @param {boolean}
         */
        get: function () {
            return this._disabled;
        },
        /**
         * Disables all Sprites associated with this Data Item.
         *
         * @ignore Exclude from docs
         * @param {boolean}
         */
        set: function (value) {
            //	if (this._disabled != value) { // not good
            this._disabled = value;
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](this.sprites, function (sprite) {
                sprite.__disabled = value;
            });
            //	}
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets visibility of the Data Item.
     *
     * @param {boolean} value Data Item
     */
    DataItem.prototype.setVisibility = function (value, noChangeValues) {
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](this.sprites, function (sprite) {
            if (value) {
                sprite.visible = sprite.defaultState.properties.visible;
            }
            else {
                if (sprite.hiddenState) {
                    sprite.visible = sprite.hiddenState.properties.visible;
                }
                else {
                    sprite.visible = false;
                }
            }
        });
        this._visible = value;
        if (this.events.isEnabled("visibilitychanged")) {
            var event_1 = {
                type: "visibilitychanged",
                target: this,
                visible: value
            };
            this.events.dispatchImmediately("visibilitychanged", event_1);
        }
    };
    /**
     * Shows the Data Item and related visual elements.
     *
     * @param {number}    duration  Animation duration (ms)
     * @param {number}    delay     Delay animation (ms)
     * @param {string[]}  fields    A list of fields to set values of
     */
    DataItem.prototype.show = function (duration, delay, fields) {
        var _this = this;
        if (!this.hidden) {
            this.setVisibility(true, true);
            this.isHiding = false;
            if (this._hideDisposer) {
                this.removeDispose(this._hideDisposer);
            }
            var animation_1;
            if (fields) {
                _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](fields, function (field) {
                    animation_1 = _this.setWorkingValue(field, _this.values[field].value, duration, delay);
                });
            }
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](this.sprites, function (sprite) {
                var animation = sprite.show(duration);
                if (animation != null && !animation.isFinished()) {
                    _this._disposers.push(animation);
                    if (delay != null && delay > 0) {
                        animation.delay(delay);
                    }
                }
            });
            return animation_1;
        }
    };
    /**
     * Destroys this object and all related data.
     */
    DataItem.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](this.sprites, function (sprite) {
            sprite.dispose();
        });
        this.sprites = [];
    };
    /**
     * Hides the Data Item and related visual elements.
     *
     * @param {number}    duration  Animation duration (ms)
     * @param {number}    delay     Delay animation (ms)
     * @param {number}    toValue   A value to set to `fields` when hiding
     * @param {string[]}  fields    A list of data fields to set value to `toValue`
     */
    DataItem.prototype.hide = function (duration, delay, toValue, fields) {
        var _this = this;
        this.isHiding = true;
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](this.sprites, function (sprite) {
            var animation = sprite.hide(duration);
            if (animation != null && !animation.isFinished()) {
                _this._disposers.push(animation);
                if (delay != null && delay > 0) {
                    animation.delay(delay);
                }
            }
        });
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](toValue) && fields) {
            var animation_2;
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](fields, function (field) {
                var anim = _this.setWorkingValue(field, toValue, duration, delay);
                if (anim) {
                    animation_2 = anim;
                }
            });
            if (animation_2 && !animation_2.isFinished()) {
                this._hideDisposer = animation_2.events.on("animationended", function () {
                    _this.setVisibility(false, true);
                    _this.isHiding = false;
                });
                this._disposers.push(this._hideDisposer);
                return animation_2;
            }
            else {
                this.isHiding = false;
                this.setVisibility(false, true);
            }
        }
        else {
            this.isHiding = false;
            this.setVisibility(false);
        }
    };
    /**
     * Returns a duration (ms) the Data Item should take to animate from one
     * value to another.
     *
     * If the duration is not specified via parameter, this method will try to
     * request a default duration from the related `Component`.
     *
     * @param  {number}  duration  Default duration (ms)
     * @return {number}            Duration (ms)
     */
    DataItem.prototype.getDuration = function (duration) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](duration)) {
            var component = this.component;
            if (component) {
                duration = component.interpolationDuration;
            }
        }
        if (duration != null) {
            return this.adapter.apply("duration", duration);
        }
    };
    /**
     * Returns a numeric value for specific data field.
     *
     * If `calculated` is not set, it will return a raw value, as it is in
     * source data.
     *
     * If `calculated` is set, it will return a pre-calculated specific value.
     *
     * @param  {string}           name        Data field name
     * @param  {CalculatedValue}  calculated  A calculated value name
     * @return {Optional<number>}             Value
     */
    DataItem.prototype.getValue = function (name, calculated) {
        if (name && this.component) {
            if (!calculated) {
                calculated = this.component.dataFields[name + "Show"];
                if (!calculated) {
                    calculated = "value";
                }
            }
            var value = this.values[name][calculated];
            if (this.adapter.isEnabled("value")) {
                return this.adapter.apply("value", {
                    value: value,
                    field: name
                }).value;
            }
            else {
                return value;
            }
        }
    };
    /**
     * Returns a current working value for a specific data field.
     *
     * The actual value may differ from the one returned by `getValue()`. The
     * latter returns static values from the data source.
     *
     * `getWorkingValue()` returns current value, which is usually different if
     * Data Item is animating from one state to another.
     *
     * @param  {string}           name        Data field name
     * @param  {CalculatedValue}  calculated  A calculated value name
     * @return {Optional<number>}             Value
     */
    DataItem.prototype.getWorkingValue = function (name) {
        if (name && this.component) {
            var realName = this.component.dataFields[name + "Show"];
            if (!realName) {
                realName = "workingValue";
            }
            return this.adapter.apply("workingValue", {
                workingValue: this.values[name][realName],
                field: name
            }).workingValue;
        }
    };
    /**
     * Sets a numeric value for specific data field.
     *
     * @param {string}           name        Data field name
     * @param {number}           value       Value
     * @param {CalculatedValue}  calculated  Calculated data field name
     * @param {number}           duration    Duration (ms) to animate to new value to
     * @param {number}           delay       Delay animation (ms)
     */
    DataItem.prototype.setValue = function (name, value, duration, delay) {
        var currentValue = this.values[name].value;
        var newDuration = this.getDuration(duration);
        value = _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](value);
        if (currentValue !== value) {
            this.values[name].value = value;
            if (this.events.isEnabled("valuechanged")) {
                var event_2 = {
                    type: "valuechanged",
                    target: this,
                    property: name
                };
                this.events.dispatchImmediately("valuechanged", event_2);
            }
            if (this.component) {
                this.component.handleDataItemValueChange(this, name);
            }
        }
        this.setWorkingValue(name, value, newDuration, delay);
    };
    DataItem.prototype.setCalculatedValue = function (name, value, calculated) {
        var currentValue = this.values[name][calculated];
        if (currentValue !== value && _utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
            this.values[name][calculated] = value;
            if (this.events.isEnabled("calculatedvaluechanged")) {
                var event_3 = {
                    type: "calculatedvaluechanged",
                    target: this,
                    property: name
                };
                this.events.dispatchImmediately("calculatedvaluechanged", event_3);
            }
            if (this.component) {
                this.component.handleDataItemCalculatedValueChange(this, name);
            }
        }
    };
    /**
     * Set current working numeric value for a specific data field.
     *
     * @param  {string}           name        Data field name
     * @param  {number}           value       Value
     * @param  {CalculatedValue}  calculated  Calculated data field name
     * @param  {number}           duration    Duration (ms) to animate to new value to
     * @param  {number}           delay       Delay animation (ms)
     * @return {Optional<Animation>}          An [[Animation]] object used for transition to new values
     */
    DataItem.prototype.setWorkingValue = function (name, value, duration, delay) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.values[name].value)) {
            var newDuration = this.getDuration(duration);
            var workingValue = this.values[name].workingValue;
            if (newDuration != null && newDuration > 0 && _utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](workingValue) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop
                if (workingValue != value) {
                    var animation = this.animate({ childObject: this.values[name], property: "workingValue", from: workingValue, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);
                    if (delay != null) {
                        animation.delay(delay);
                    }
                    animation.events.on("animationstarted", this.handleInterpolationProgress, this);
                    animation.events.on("animationprogress", this.handleInterpolationProgress, this);
                    animation.events.on("animationended", this.handleInterpolationProgress, this);
                    this._valueAnimations[name] = animation;
                    return animation;
                }
                else {
                    var valueAnimation = this._valueAnimations[name];
                    if (valueAnimation) {
                        valueAnimation.stop();
                    }
                    this.values[name].workingValue = value;
                }
            }
            else {
                var valueAnimation = this._valueAnimations[name];
                if (valueAnimation) {
                    valueAnimation.stop();
                }
                this.values[name].workingValue = value;
                if (this.events.isEnabled("workingvaluechanged")) {
                    var event_4 = {
                        type: "workingvaluechanged",
                        target: this,
                        property: name
                    };
                    this.events.dispatchImmediately("workingvaluechanged", event_4);
                }
                if (this.component) {
                    this.component.handleDataItemWorkingValueChange(this, name);
                }
            }
        }
    };
    /**
     * Sets a relative location for a data field.
     *
     * A location is always relative on a 0 to 1 scale, with 0 being beginning,
     * 0.5 middle and 1 end.
     *
     * @todo Rewiew description
     * @param {string}  name      Data field name
     * @param {number}  value     Location (0-1)
     * @param {number}  duration  Duration (ms) to animate to new value to
     * @param {number}  delay     Delay animation (ms)
     */
    DataItem.prototype.setLocation = function (name, value, duration, delay) {
        var currentLocation = this.locations[name];
        if (currentLocation !== value) {
            this.locations[name] = value;
            if (this.events.isEnabled("locationchanged")) {
                var event_5 = {
                    type: "locationchanged",
                    target: this,
                    property: name
                };
                this.events.dispatchImmediately("locationchanged", event_5);
            }
            if (this.component) {
                this.component.handleDataItemValueChange(this, name); // correct
            }
            this.setWorkingLocation(name, value, duration, delay);
        }
    };
    /**
     * Sets a current working location for a data field.
     *
     * @todo Rewiew description
     * @param {string}  name      Data field name
     * @param {number}  value     Location (0-1)
     * @param {number}  duration  Duration (ms) to animate to new value to
     * @param {number}  delay     Delay animation (ms)
     */
    DataItem.prototype.setWorkingLocation = function (name, value, duration, delay) {
        var newDuration = this.getDuration(duration);
        var workingLocation = this.workingLocations[name];
        if (newDuration != null && newDuration > 0 && _utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](workingLocation) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop
            if (workingLocation != value) {
                var animation = this.animate({ childObject: this.workingLocations, property: name, from: workingLocation, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);
                if (delay != null) {
                    animation.delay(delay);
                }
                animation.events.on("animationstarted", this.handleInterpolationProgress, this);
                animation.events.on("animationprogress", this.handleInterpolationProgress, this);
                animation.events.on("animationended", this.handleInterpolationProgress, this);
                this._locationAnimations[name] = animation;
                return animation;
            }
            else {
                var locationAnimation = this._locationAnimations[name];
                if (locationAnimation) {
                    locationAnimation.stop();
                }
                this.workingLocations[name] = value;
            }
        }
        else {
            var locationAnimation = this._locationAnimations[name];
            if (locationAnimation) {
                locationAnimation.stop();
            }
            this.workingLocations[name] = value;
            if (this.events.isEnabled("workinglocationchanged")) {
                var event_6 = {
                    type: "workinglocationchanged",
                    target: this,
                    property: name
                };
                this.events.dispatchImmediately("workinglocationchanged", event_6);
            }
            if (this.component) {
                this.component.handleDataItemWorkingLocationChange(this, name);
            }
        }
    };
    /**
     * Sets Date value to a data field.
     *
     * @param {string}  name      Data field name
     * @param {Date}    date      Date object
     * @param {number}  duration  Duration (ms) to animate to new value to
     */
    DataItem.prototype.setDate = function (name, date, duration) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isDate"](date) && this.component) {
            date = this.component.dateFormatter.parse(date);
        }
        var currentDate = this.dates[name];
        if (currentDate !== date) {
            this.dates[name] = date;
            this.setValue(name, date.getTime(), duration);
        }
    };
    /**
     * Returns a Date value of the data field.
     *
     * @param  {string}  name  Data field name
     * @return {Date}          Date object
     */
    DataItem.prototype.getDate = function (name) {
        return this.adapter.apply("date", {
            date: this.dates[name],
            field: name
        }).date;
    };
    /**
     * Sets a Data Item-specific visual properties to apply to related elements.
     *
     * @param {string}  name   Property name
     * @param {any}     value  Property value
     */
    DataItem.prototype.setProperty = function (name, value) {
        if (this.properties[name] !== value) {
            this.hasProperties = true;
            this.properties[name] = value;
            if (this.events.isEnabled("propertychanged")) {
                var event_7 = {
                    type: "propertychanged",
                    target: this,
                    property: name,
                    value: value
                };
                this.events.dispatchImmediately("propertychanged", event_7);
            }
            if (this.component) {
                this.component.handleDataItemPropertyChange(this, name);
            }
        }
    };
    /**
     * Sets a related category for this Data Item.
     *
     * @todo Review description
     * @param {string}  name   Data field name
     * @param {string}  value  Category
     */
    DataItem.prototype.setCategory = function (name, value) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isString"](value)) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_7__["castString"](value);
        }
        if (this.categories[name] !== value) {
            this.categories[name] = value;
        }
    };
    /**
     * Clones the Data Item, including all related data.
     *
     * @return {this} New Data Item clone
     */
    DataItem.prototype.clone = function (cloneId) {
        var dataItem = _super.prototype.clone.call(this, cloneId);
        if (this.dataContext) {
            dataItem.dataContext = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["copy"](this.dataContext, {});
        }
        _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["copyProperties"](this.locations, dataItem.locations);
        _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["copyProperties"](this.properties, dataItem.properties);
        _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["copyProperties"](this.categories, dataItem.categories);
        _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["copyProperties"](this.values, dataItem.values);
        _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["copyProperties"](this.dates, dataItem.dates);
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["each"](this.values, function (name, value) {
            dataItem.values[name] = _utils_Object__WEBPACK_IMPORTED_MODULE_6__["copy"](value);
        });
        dataItem.adapter.copyFrom(this.adapter);
        dataItem.events.copyFrom(this.events);
        dataItem.component = this.component;
        return dataItem;
    };
    Object.defineProperty(DataItem.prototype, "opacity", {
        /**
         * Sets opacity for all Data Item's related elements (Sprites).
         *
         * @param {number} value Opacity (0-1)
         */
        set: function (value) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](this.sprites, function (sprite) {
                sprite.opacity = value;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItem.prototype, "ignoreMinMax", {
        /**
         * Exclude from min/max calculations?
         * @return {boolean} Exclude from min/max calculations?
         */
        get: function () {
            return this._ignoreMinMax;
        },
        /**
         * Sets whether this data point should not be included in the scale and
         * minimum/maximum calculations.
         *
         * E.g. some we may want to exclude a particular data point from influencing
         * [[ValueAxis]] scale.
         *
         * @param {boolean}  value  Exclude from min/max calculations?
         */
        set: function (value) {
            this._ignoreMinMax = value;
            if (this.events.isEnabled("propertychanged")) {
                var event_8 = {
                    type: "propertychanged",
                    target: this,
                    property: "ignoreMinMax",
                    value: value
                };
                this.events.dispatchImmediately("propertychanged", event_8);
            }
            if (this.component) {
                this.component.handleDataItemPropertyChange(this, "ignoreMinMax");
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and starts an [[Animation]] to interpolate (morph) Data Item's
     * properties and/or values.
     *
     * @see {@link Animation}
     * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options
     * @param  {number}                                   duration          Animation duration (ms)
     * @param  {function}                                 easing            Easing function
     * @return {Animation}                                                  Animation
     */
    DataItem.prototype.animate = function (animationOptions, duration, easing) {
        return new _utils_Animation__WEBPACK_IMPORTED_MODULE_3__["Animation"](this, animationOptions, duration, easing).start();
    };
    /**
     * Handles intermediate steps when Data Item is interpolating (morphing) from
     * one value to another.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Animation, IAnimationEvents>["animationstarted" | "animationended" | "animationprogress"]} event Event object
     */
    DataItem.prototype.handleInterpolationProgress = function (event) {
        var animation = event.target;
        // it's always only one options, no need cycle
        var animationOptions = animation.animationOptions[0];
        if (animationOptions) {
            if (this.events.isEnabled("workingvaluechanged")) {
                var event_9 = {
                    type: "workingvaluechanged",
                    target: this,
                    property: animationOptions.dummyData
                };
                this.events.dispatchImmediately("workingvaluechanged", event_9);
            }
            if (this.component) {
                this.component.handleDataItemWorkingValueChange(this, animationOptions.dummyData);
            }
        }
    };
    /**
     * Checks whether Data Item has values set for all of the data fields,
     * supplied via argument.
     *
     * @ignore Exclude from docs
     * @param  {string[]}  fields  Field list to check
     * @return {boolean}           Has values for all fields?
     */
    DataItem.prototype.hasValue = function (fields) {
        // todo: what about categories?
        for (var i = 0, len = fields.length; i < len; i++) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this.values[fields[i]].value)) {
                return false;
            }
        }
        return true;
    };
    Object.defineProperty(DataItem.prototype, "depth", {
        /**
         * Depth of the Data Item.
         *
         * In nested data structures, like TreeMap, this indicates the level this
         * data point is at, in relation to the parent Data Item.
         *
         * @return {number} Depth
         */
        get: function () {
            if (!this.parent) {
                return 0;
            }
            else {
                return this.parent.depth + 1;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItem.prototype, "dataContext", {
        /**
         * Sets to a reference to an original object from Component's data.
         *
         * @return {Object} [description]
         */
        get: function () {
            return this._dataContext;
        },
        /**
         * A reference to an original object in Component's data, that this Data Item
         * is derived from.
         *
         * @param {Object} value Original data object
         */
        set: function (value) {
            this._dataContext = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * adds a sprite to dataItem.sprites array
     * @ignore
     */
    DataItem.prototype.addSprite = function (sprite) {
        if (sprite.dataItem && sprite.dataItem != this) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](sprite.dataItem.sprites, sprite);
        }
        if (!this.visible) {
            sprite.hide(0);
        }
        if (this.isHiding) {
            sprite.hide();
        }
        this.sprites.push(sprite);
        sprite.dataItem = this;
    };
    return DataItem;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]));

//# sourceMappingURL=DataItem.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js":
/*!********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/Options.js ***!
  \********************************************************************/
/*! exports provided: options */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "options", function() { return options; });
var options = {
    verbose: true,
    commercialLicense: false,
    classNamePrefix: "amcharts-",
    autoSetClassName: false
};
//# sourceMappingURL=Options.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/Registry.js ***!
  \*********************************************************************/
/*! exports provided: Registry, registry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Registry", function() { return Registry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registry", function() { return registry; });
/* harmony import */ var _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_Cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Cache */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_String__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/String */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Registry is used to store miscellaneous system-wide information, like ids,
 * maps, themes, and registered classes.
 *
 * @ignore Exclude from docs
 */
var Registry = /** @class */ (function () {
    function Registry() {
        /**
         * Event dispacther.
         *
         * @type {EventDispatcher}
         */
        this.events = new _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__["EventDispatcher"]();
        /**
         * All currently applied themes. All new chart instances created will
         * automatically inherit and retain System's themes.
         *
         * @type {ITheme}
         */
        this.themes = [];
        /**
         * List of all loaded available themes.
         *
         * Whenever a theme loads, it registers itself in System's `loadedThemes`
         * collection.
         */
        this.loadedThemes = {};
        /**
         * An indeternal counter used to generate unique IDs.
         *
         * @ignore Exclude from docs
         * @type {number}
         */
        this._uidCount = 0;
        /**
         * Keeps register of class references so that they can be instnatiated using
         * string key.
         *
         * @ignore Exclude from docs
         */
        this.registeredClasses = {};
        /**
         * Holds all generated placeholders.
         */
        this._placeholders = {};
        /**
     * A list of invalid(ated) [[Sprite]] objects that need to be re-validated
     * during next cycle.
     *
     * @ignore Exclude from docs
     * @type { [index: string]: Array<Sprite> }
     */
        this.invalidSprites = {};
        /**
         * Components are added to this list when their data provider changes to
         * a new one or data is added/removed from their data provider.
         *
         * @ignore Exclude from docs
         * @type { [index: string]: Array<Component> }
         */
        this.invalidDatas = {};
        /**
         * Components are added to this list when values of their raw data change.
         * Used when we want a smooth animation from one set of values to another.
         *
         * @ignore Exclude from docs
         * @type {Array<Component>}
         */
        this.invalidRawDatas = [];
        /**
         * Components are added to this list when values of their data changes
         * (but not data provider itself).
         *
         * @ignore Exclude from docs
         * @type {Array<Component>}
         */
        this.invalidDataItems = [];
        /**
         * Components are added to this list when their data range (selection) is
         * changed, e.g. zoomed.
         *
         * @ignore Exclude from docs
         * @type {Array<Component>}
         */
        this.invalidDataRange = [];
        /**
         * A list of [[Sprite]] objects that have invalid(ated) positions, that need
         * to be recalculated.
         *
         * @ignore Exclude from docs
         * @type { [index: string]: Array<Sprite>}
         */
        this.invalidPositions = {};
        /**
         * A list of [[Container]] objects with invalid(ated) layouts.
         *
         * @ignore Exclude from docs
         * @type { [index: string]: Array<Container>}
         */
        this.invalidLayouts = {};
        /**
         * An array holding all active (non-disposed) top level elemens.
         *
         * When, for example, a new chart is created, its instance will be added to
         * this array, and will be removed when the chart is disposed.
         *
         * @type {Array<Sprite>}
         */
        this.baseSprites = [];
        this.baseSpritesByUid = {};
        this.uid = this.getUniqueId();
        this.invalidSprites.noBase = [];
        this.invalidDatas.noBase = [];
        this.invalidLayouts.noBase = [];
        this.invalidPositions.noBase = [];
    }
    /**
     * Generates a unique chart system-wide ID.
     *
     * @return {string} Generated ID
     */
    Registry.prototype.getUniqueId = function () {
        var uid = this._uidCount;
        this._uidCount += 1;
        return "id-" + uid;
    };
    Object.defineProperty(Registry.prototype, "map", {
        /**
         * Returns a universal collection for mapping ids with objects.
         *
         * @ignore Exclude from docs
         * @return {Dictionary<string, any>} Map collection
         */
        get: function () {
            if (!this._map) {
                this._map = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
            }
            return this._map;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Caches value in object's cache.
     *
     * @ignore Exclude from docs
     * @param {string}  key    Key
     * @param {any}     value  Value
     * @param {number}  ttl    TTL in seconds
     */
    Registry.prototype.setCache = function (key, value, ttl) {
        _utils_Cache__WEBPACK_IMPORTED_MODULE_2__["cache"].set(this.uid, key, value, ttl);
    };
    /**
     * Retrieves cached value.
     *
     * @ignore Exclude from docs
     * @param  {string}  key    Key
     * @param  {any}     value  Value to return if cache is not available
     * @return {any}            Value
     */
    Registry.prototype.getCache = function (key, value) {
        if (value === void 0) { value = undefined; }
        return _utils_Cache__WEBPACK_IMPORTED_MODULE_2__["cache"].get(this.uid, key, value);
    };
    /**
     * Dispatches an event using own event dispatcher. Will automatically
     * populate event data object with event type and target (this element).
     * It also checks if there are any handlers registered for this sepecific
     * event.
     *
     * @param {Key} eventType Event type (name)
     * @param {any}    data      Data to pass into event handler(s)
     */
    Registry.prototype.dispatch = function (eventType, data) {
        // @todo Implement proper type check
        if (this.events.isEnabled(eventType)) {
            if (data) {
                data.type = eventType;
                data.target = data.target || this;
                this.events.dispatch(eventType, {
                    type: eventType,
                    target: this
                });
            }
            else {
                this.events.dispatch(eventType, {
                    type: eventType,
                    target: this
                });
            }
        }
    };
    /**
     * Works like `dispatch`, except event is triggered immediately, without
     * waiting for the next frame cycle.
     *
     * @param {Key} eventType Event type (name)
     * @param {any}    data      Data to pass into event handler(s)
     */
    Registry.prototype.dispatchImmediately = function (eventType, data) {
        // @todo Implement proper type check
        if (this.events.isEnabled(eventType)) {
            if (data) {
                data.type = eventType;
                data.target = data.target || this;
                this.events.dispatchImmediately(eventType, data);
            }
            else {
                this.events.dispatchImmediately(eventType, {
                    type: eventType,
                    target: this
                });
            }
        }
    };
    /**
     * Returns a unique placeholder suitable for the key.
     *
     * @param  {string}  key  Key
     * @return {string}       Random string to be used as placeholder
     */
    Registry.prototype.getPlaceholder = function (key) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](this._placeholders[key])) {
            return this._placeholders[key];
        }
        this._placeholders[key] = "__amcharts_" + key + "_" + _utils_String__WEBPACK_IMPORTED_MODULE_4__["random"](8) + "__";
        return this._placeholders[key];
    };
    /**
     * @ignore
     */
    Registry.prototype.addToInvalidComponents = function (component) {
        if (component.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["move"](this.invalidDatas[component.baseId], component);
        }
        else {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["move"](this.invalidDatas["noBase"], component);
        }
    };
    /**
     * @ignore
     */
    Registry.prototype.removeFromInvalidComponents = function (component) {
        if (component.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidDatas[component.baseId], component);
        }
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidDatas["noBase"], component);
    };
    /**
     * @ignore
     */
    Registry.prototype.addToInvalidSprites = function (sprite) {
        if (sprite.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["add"](this.invalidSprites[sprite.baseId], sprite);
        }
        else {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["add"](this.invalidSprites["noBase"], sprite);
        }
    };
    /**
     * @ignore
     */
    Registry.prototype.removeFromInvalidSprites = function (sprite) {
        if (sprite.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidSprites[sprite.baseId], sprite);
        }
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidSprites["noBase"], sprite);
    };
    /**
     * @ignore
     */
    Registry.prototype.addToInvalidPositions = function (sprite) {
        if (sprite.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["add"](this.invalidPositions[sprite.baseId], sprite);
        }
        else {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["add"](this.invalidPositions["noBase"], sprite);
        }
    };
    /**
     * @ignore
     */
    Registry.prototype.removeFromInvalidPositions = function (sprite) {
        if (sprite.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidPositions[sprite.baseId], sprite);
        }
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidPositions["noBase"], sprite);
    };
    /**
     * @ignore
     */
    Registry.prototype.addToInvalidLayouts = function (sprite) {
        if (sprite.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["add"](this.invalidLayouts[sprite.baseId], sprite);
        }
        else {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["add"](this.invalidLayouts["noBase"], sprite);
        }
    };
    /**
     * @ignore
     */
    Registry.prototype.removeFromInvalidLayouts = function (sprite) {
        if (sprite.baseId) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidLayouts[sprite.baseId], sprite);
        }
        _utils_Array__WEBPACK_IMPORTED_MODULE_5__["remove"](this.invalidLayouts["noBase"], sprite);
    };
    return Registry;
}());

/**
 * A singleton global instance of [[Registry]].
 *
 * @ignore Exclude from docs
 */
var registry = new Registry();
//# sourceMappingURL=Registry.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js ***!
  \*******************************************************************/
/*! exports provided: SpriteEventDispatcher, visualProperties, Sprite */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visualProperties", function() { return visualProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sprite", function() { return Sprite; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _SpriteState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SpriteState */ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteState.js");
/* harmony import */ var _SpriteEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SpriteEvents */ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteEvents.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpriteEventDispatcher", function() { return _SpriteEvents__WEBPACK_IMPORTED_MODULE_2__["SpriteEventDispatcher"]; });

/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _rendering_Paper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rendering/Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _rendering_fills_Pattern__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./rendering/fills/Pattern */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js");
/* harmony import */ var _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rendering/fills/RadialGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _interaction_Interaction__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _Options__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _formatters_NumberFormatter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./formatters/NumberFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/NumberFormatter.js");
/* harmony import */ var _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./formatters/DateFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js");
/* harmony import */ var _formatters_DurationFormatter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./formatters/DurationFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DurationFormatter.js");
/* harmony import */ var _formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./formatters/TextFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _export_Export__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./export/Export */ "./node_modules/@amcharts/amcharts4/.internal/core/export/Export.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Strings__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _System__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * This is the main class that encapsulates every object on the chart.
 *
 * If it's an element that is to be displayed on the screen at some point, its
 * class must extend [[Sprite]] class.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


































/**
 * Defines list ofvisual properties
 */
var visualProperties = ["fill", "fillOpacity", "stroke", "strokeOpacity", "strokeWidth", "strokeDasharray"]; // do not add opacity here, as it is used for showing/hiding
;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Sprite represents any displayable element.
 *
 * This is the main class that encapsulates every object on the chart.
 *
 * If it's an element that is to be displayed on the screen at some point, its
 * class must extend [[Sprite]] class.
 *
 * [[Sprite]] class represents the a hierarchical structure. Every object that
 * extends [[Sprite]] can have children, that would inherit their properties,
 * such as language, formatters, etc.
 *
 * @see {@link SpriteState}
 * @see {@link ISpriteEvents} for a list of available events
 * @see {@link ISpriteAdapters} for a list of available Adapters
 *
 * @todo Review child elements that need to go into `_disposers`
 * @important
 */
var Sprite = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Sprite, _super);
    /**
     * Constructor:
     * * Creates initial node
     * * Sets default properties
     * * Creates required default states
     * * Inits accessibility
     */
    function Sprite() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Holds values for Sprite's properties.
         */
        _this.properties = {};
        /**
         * Event dispacther.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/event-listeners/} for more info about Events
         * @type {SpriteEventDispatcher<AMEvent<Sprite, ISpriteEvents>>} Event dispatcher instance
         */
        _this.events = new _SpriteEvents__WEBPACK_IMPORTED_MODULE_2__["SpriteEventDispatcher"](_this);
        /**
         * Holds Adapter.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/adapters/} for more info about Adapters
         * @type {Adapter<Sprite, ISpriteAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_4__["Adapter"](_this);
        /**
         * @ignore Exclude from docs
         * @todo Description
         */
        _this._bindings = {};
        /**
         * Holds indicator if this Sprite is a "template" to be used for creating
         * other Sprites from and should not be treated as full-fledged element.
         *
         * @ignore Exclude from docs
         * @type {Optional<boolean>}
         */
        _this._isTemplate = false;
        /**
         * Holds indicator whether this sprite was already initialized.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._inited = false;
        /**
         * Holds indicator whether this sprite was already initialized and ready.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._ready = false;
        /**
         * If `sprite.hide()` is called and we have "hidden" state and
         * `transitionDuration > 0`, we set `isHiding` flag to `true` in order to
         * avoid restarting animations in case `hide()` method is called multiple
         * times.
         *
         * @type {boolean}
         */
        _this.isHiding = false;
        /**
         * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.
         * This was added becaus hidden state might have visibility set to true and so
         * there would not be possible to find out if a sprite is technically hidden or not.
         *
         * @type {boolean}
         */
        _this._isHidden = false;
        /**
         * This property indicates if Sprite is currently being revealed from hidden
         * state. This is used to prevent multiple calls to `sprite.show()` to
         * restart reveal animation. (if enabled)
         *
         * @type {boolean}
         */
        _this.isShowing = false;
        /**
         * Indicates if this element is a standalone instance. A "standalone
         * instance" means this is a autonomous object which maintains its own
         * set of controls like Preloader, Export, etc.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this.isStandaloneInstance = false;
        /**
         * Indicates if togglable Sprite is currently active (toggled on).
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._isActive = false;
        /**
         * A Sprite element to use as a mask for this Sprite.
         *
         * @ignore Exclude from docs
         * @type {MutableValueDisposer}
         */
        _this._mask = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MutableValueDisposer"]();
        /**
         * @ignore Exclude from docs
         * @todo Description
         * @type {number}
         */
        _this._positionPrecision = 3;
        /**
         * An instance of [[Language]].
         *
         * @ignore Exclude from docs
         * @type {Language}
         */
        _this._language = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MutableValueDisposer"]();
        /**
         * Indicates if the chart should follow right-to-left rules.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._rtl = false;
        /**
         * Holds [[Export]] object.
         *
         * @ignore Exclude from docs
         * @type {Export}
         */
        _this._exporting = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MutableValueDisposer"]();
        /**
         * Defines bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         * @type {IRectangle}
         */
        _this._bbox = { x: 0, y: 0, width: 0, height: 0 };
        /**
         * Indicates if this element is invalid and should be re-validated (redrawn).
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this.invalid = false;
        /**
         * Indicates if this elements position is invalid and should be repositioned
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this.positionInvalid = false;
        /**
         * A collection of key/value pairs that can be used to bind specific Sprite
         * properties to [[DataItem]].
         *
         * For example: `fill` property can be bound to `myCustomColor` field in
         * DataItem. The Sprite will automatically get the value for `fill` from its
         * DataItem.
         *
         * Can be set for each [[SpriteState]] individually to override default
         * bindings.
         *
         * @see {@link SpriteState}
         * @type {Object}
         */
        _this.propertyFields = {};
        /**
         * Specifies if property changes on this object should be propagated to the
         * objects cloned from this object.
         *
         * This setting affects property changes *after* cloning, since at the moment
         * of cloning all of properties from source object are copied to the clone
         * anyway.
         *
         * @default false
         */
        _this.applyOnClones = false;
        // read only, sprite extreme coordinates
        /**
         * @ignore
         */
        _this.maxLeft = 0;
        /**
         * @ignore
         */
        _this.maxRight = 0;
        /**
         * @ignore
         */
        _this.maxTop = 0;
        /**
         * @ignore
         */
        _this.maxBottom = 0;
        _this._isDragged = false;
        /**
         * @deprecated Moved to [[SpriteProperties]]
         * @type {boolean}
         */
        _this._disabled = false;
        _this._internalDisabled = false;
        _this._updateDisabled = false;
        _this._internalDefaultsApplied = false;
        /**
         * Time in milliseconds after which rollout event happens when user rolls-out of the sprite. This helps to avoid flickering in some cases.
         * @type {number}
         */
        _this.rollOutDelay = 0;
        /**
         * This flag is set to `true` for the initial sprite you create and place
         * to the div so that we could clear all additional
         * sprites/containers when this sprite is disposed.
         *
         * @ignore
         */
        _this.isBaseSprite = false;
        /**
         * Indicates whether this sprite should be cloned when cloning its parent
         * container. We set this to `false` in those cases when a sprite is created
         * by the class, so that when cloning a duplicate sprite would not appear.
         *
         * @type {boolean}
         */
        _this.shouldClone = true;
        /**
         * A read-only flag which indicates if a sprite has completed its initial
         * animation (if `showOnInit = true`).
         *
         * In case `showOnInit = false`, `appeared` is set to `true` on init.
         *
         * @readonly
         * @type {boolean}
         */
        _this.appeared = false;
        /**
         * [ex description]
         *
         * @todo Description
         * @ignore
         * @type {number}
         */
        _this.ex = 0;
        /**
         * [ey description]
         *
         * @todo Description
         * @ignore
         * @type {number}
         */
        _this.ey = 0;
        _this.className = "Sprite";
        // Generate a unique ID
        _this.uid;
        // Create SVG group to hold everything in
        _this.group = _this.paper.addGroup("g");
        // Set defaults
        // it is better to set defauls like this in order to save invaliation calls and events
        _this.setPropertyValue("scale", 1);
        _this.setPropertyValue("rotation", 0);
        _this.setPropertyValue("align", "none");
        _this.setPropertyValue("valign", "none");
        _this.setPropertyValue("pixelPerfect", false);
        _this.setPropertyValue("visible", true);
        _this.setPropertyValue("tooltipPosition", "fixed");
        _this.setPropertyValue("verticalCenter", "none");
        _this.setPropertyValue("horizontalCenter", "none");
        _this.setPropertyValue("marginTop", 0);
        _this.setPropertyValue("marginBottom", 0);
        _this.setPropertyValue("marginLeft", 0);
        _this.setPropertyValue("marginRight", 0);
        _this.setPropertyValue("dx", 0);
        _this.setPropertyValue("dy", 0);
        _this.setPropertyValue("paddingTop", 0);
        _this.setPropertyValue("paddingBottom", 0);
        _this.setPropertyValue("paddingRight", 0);
        _this.setPropertyValue("paddingLeft", 0);
        _this.setPropertyValue("togglable", false);
        _this.setPropertyValue("hidden", false);
        _this.setPropertyValue("urlTarget", "_self");
        _this._prevMeasuredWidth = 0;
        _this._prevMeasuredHeight = 0;
        _this._measuredWidth = 0;
        _this._measuredHeight = 0;
        _this._isMeasured = true;
        // Invalidate the Sprite so that renderer knows it needs to be drawn
        _this.invalidate();
        //this.states.create("default").properties.opacity = 1;
        // Apply the theme
        _this.applyTheme();
        //this._disposers.push(this._clickable);
        // Decorate adapter with events so that we can apply its settings whenever
        // it is modified
        // @todo Think what to do here. We can't just apply the adapter value to
        // property since not all of those are for properties. Commented out for
        // now.
        /*this.adapter.events.on("inserted", (ev: any) => {
            (<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];
        });
        this.adapter.events.on("removed", (ev: any) => {
            (<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];
        });*/
        // Add disposable dependencies to `_disposers` so they are automatically
        // disposed of when this object is disposed
        _this._disposers.push(_this.events);
        _this._disposers.push(_this.group);
        _this._disposers.push(_this._mask);
        _this._disposers.push(_this._language);
        _this._disposers.push(_this._exporting);
        //this._disposers.push(this._parent);
        //this._disposers.push(this._modal);
        _this._disposers.push(new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["Disposer"](function () {
            _utils_Object__WEBPACK_IMPORTED_MODULE_29__["each"](_this._bindings, function (key, value) {
                value.dispose();
            });
        }));
        _this.setPropertyValue("interactionsEnabled", true);
        return _this;
    }
    /**
     * ==========================================================================
     * ELEMENT VALIDATION, INIT, AND DRAWING STUFF
     * ==========================================================================
     * @hidden
     */
    /**
     * Applies properties from all assigned themes.
     *
     * We do this here so that we can apply class names as well.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.applyTheme = function () {
        _super.prototype.applyTheme.call(this);
        if (_Options__WEBPACK_IMPORTED_MODULE_17__["options"].autoSetClassName) {
            this.setClassName();
        }
    };
    /**
     * Returns theme(s) used by this object either set explicitly on this
     * element, inherited from parent, or inherited from [[System]].
     *
     * @return {ITheme} An array of theme references
     */
    Sprite.prototype.getCurrentThemes = function () {
        var themes = this._themes;
        if (themes) {
            return themes;
        }
        else {
            var parent_1 = this.parent;
            if (parent_1) {
                return parent_1.getCurrentThemes();
            }
            else {
                return _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].themes;
            }
        }
    };
    /**
     * Called just before element's validation, this function allows setting
     * defaults.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.applyInternalDefaults = function () {
        // Nothing here, but extending classes might override this function
        // so that they can set their defaults
        this._internalDefaultsApplied = true;
    };
    /**
     * Invalidates element.
     *
     * Object will be redrawn during the next update cycle.
     *
     * Please note that in most cases elements will auto-invalidate when needed. If
     * everything works, DO NOT use this method. Use it only if some changes do
     * not take otherwise.
     */
    Sprite.prototype.invalidate = function () {
        if (this.disabled || this._isTemplate) {
            return;
        }
        // We no longer reset this on each invalidate, so that they are applied
        // only once, and do not overwrite user-defined settings
        //this._internalDefaultsApplied = false;
        if (!this.invalid) {
            this.invalid = true;
            _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].addToInvalidSprites(this);
            _System__WEBPACK_IMPORTED_MODULE_32__["system"].requestFrame();
        }
    };
    /**
     * Validates element:
     * * Triggers events
     * * Redraws the element
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.validate = function () {
        this.dispatchImmediately("beforevalidated");
        // prevents from drawing if topparent is 0x0
        /*
        let topParent = this.topParent;

        if (topParent) {
            if (!topParent.maxWidth || !topParent.maxHeight) {
                this._disposers.push(topParent.events.once("maxsizechanged", this.invalidate, this));
            }
        }*/
        // Set internal defaults
        if (!this._internalDefaultsApplied) {
            this.applyInternalDefaults();
        }
        this.beforeDraw();
        this.draw();
        this.invalid = false;
        _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].removeFromInvalidSprites(this);
        this.afterDraw();
    };
    /**
     * Invalidates element's position.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.invalidatePosition = function () {
        if (this.disabled || this._isTemplate) {
            return;
        }
        if (!this.positionInvalid) {
            this.positionInvalid = true;
            _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].addToInvalidPositions(this);
            _System__WEBPACK_IMPORTED_MODULE_32__["system"].requestFrame();
        }
    };
    /**
     * Transforms the element.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    Sprite.prototype.validatePosition = function () {
        var pixelX = this.pixelX;
        var pixelY = this.pixelY;
        var dx = this.dx;
        var dy = this.dy;
        var x = pixelX + dx;
        var y = pixelY + dy;
        if (this._updateDisabled) {
            if (this._internalDisabled) {
                this.group.attr({ "display": "none" });
            }
            else {
                if (!this.disabled) {
                    this.removeSVGAttribute("display");
                }
            }
            this._updateDisabled = false;
        }
        var sizeChanged = this.measure();
        //if (!this.invalid) {
        var prevGroupTransform = this.group.transformString;
        this.group.moveTo({ x: x, y: y });
        this.group.rotation = this.rotation;
        if (this.nonScaling) {
            this.group.scale = this.scale / this.globalScale;
        }
        else {
            this.group.scale = this.scale;
        }
        if (prevGroupTransform != this.group.transformString || sizeChanged) {
            // not yet sure, this is to avoid many transforms=>container layout invalidation on initial buid
            if (prevGroupTransform == null) {
                this.dispatch("transformed");
            }
            else {
                this.dispatchImmediately("transformed");
            }
            // TODO clear existing positionchanged dispatches ?
            this.dispatch("positionchanged");
        }
        //}
        // it might happen that x and y changed again, so we only remove if they didn't
        if (pixelX + dx == x && pixelY + dy == y) {
            _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].removeFromInvalidPositions(this);
            this.positionInvalid = false;
        }
        var maskRectangle = this._maskRectangle;
        // todo: verify this
        if (maskRectangle) {
            this._clipElement.moveTo({ x: maskRectangle.x - pixelX, y: maskRectangle.y - pixelY });
        }
    };
    /**
     * A placeholder method that is called **before** element begins to be drawn.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.beforeDraw = function () {
    };
    /**
     * A placeholder method that draws the element.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.draw = function () {
    };
    /**
     * A placeholder method that is called **after** element finishes drawing
     * itself.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.afterDraw = function () {
        if (this.isMeasured || this.horizontalCenter !== "none" || this.verticalCenter !== "none") {
            this.measureElement();
        }
        //this.applyMask();
        if (!this._inited) {
            try {
                // used to be applySVGAttrbutes here, this is more efficient
                for (var _a = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.adapter.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {
                    var key = _b.value;
                    switch (key) {
                        case "mask":
                        case "fill":
                        case "opacity":
                        case "fillOpacity":
                        case "stroke":
                        case "strokeOpacity":
                        case "strokeWidth":
                        case "shapeRendering":
                        case "strokeDasharray":
                        case "textDecoration":
                        case "fontSize":
                        case "fontFamily":
                        case "fontWeight":
                            //case "focusable":
                            //case "tabindex":
                            //case "role":
                            this[key] = this[key];
                            break;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.applyFilters();
            this.visible = this.visible;
            this.interactionsEnabled = this.getPropertyValue("interactionsEnabled"); // can't use .interactionsEnabled as it get's parent's
            this._inited = true;
            if (!this.showOnInit) {
                this.appeared = true;
            }
            if (this.hidden) {
                this.hide(0);
            }
            this.applyMask();
            this.dispatch("validated");
            this.dispatch("inited");
            this.dispatchReady();
        }
        else {
            this.dispatch("validated");
        }
        var e_1, _c;
    };
    /**
     * Dispatches `"ready"` event. Sprite dispatches it right after `"inited"` event.
     *
     * @ignore
     */
    Sprite.prototype.dispatchReady = function () {
        if (!this.isReady()) {
            this._ready = true;
            this.dispatch("ready");
        }
    };
    /**
     * Triggers a re-initialization of this element.
     *
     * Will result in complete redrawing of the element.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.reinit = function () {
        this._inited = false;
        this.setState(this.defaultState);
        this.invalidate();
    };
    /**
     * Handles the situation where parent element is resized.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.handleGlobalScale = function () {
        this.dispatch("globalscalechanged");
        if (this.nonScalingStroke) {
            this.strokeWidth = this.strokeWidth;
        }
        if (this.nonScaling) {
            this.validatePosition();
        }
        this.updateFilterScale();
    };
    /**
     * Updates filter properties which might depend on scale
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.updateFilterScale = function () {
        var _this = this;
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_31__["each"](this.filters.iterator(), function (filter) {
            filter.scale = _this.globalScale;
        });
    };
    /**
     * Removes itself from system's invalid lists.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.removeFromInvalids = function () {
        _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].removeFromInvalidSprites(this);
        _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].removeFromInvalidPositions(this);
    };
    /**
     * Copies all parameters from another [[Sprite]].
     *
     * @param {Sprite} source Source Sprite
     */
    Sprite.prototype.copyFrom = function (source) {
        var _this = this;
        _super.prototype.copyFrom.call(this, source);
        this.events.copyFrom(source.events);
        this.isMeasured = source.isMeasured;
        this.states.copyFrom(source.states);
        if (source.filters.length > 0) {
            source.filters.each(function (filter) {
                _this.filters.push(filter.clone());
            });
        }
        this.adapter.copyFrom(source.adapter);
        //helps to avoid calling getter which creates instance
        if (source["_interaction"]) {
            this.interactions.copyFrom(source.interactions);
        }
        this.configField = source.configField;
        this.applyOnClones = source.applyOnClones;
        // this.numberFormatter = source.numberFormatter; // todo: this creates loose number formatter and copies it to all clones. somehow we need to know if source had numberFormatter explicitly created and not just because a getter was called.
        //this.mask = source.mask; need to think about this, generally this causes a lot of problems
        this.disabled = source.disabled;
        this.virtualParent = source.virtualParent;
        this.exportable = source.exportable;
        //@todo: create tooltip if it's on source but not on this?
        //const tooltip = this._tooltip;
        //if (tooltip) {
        //	tooltip.copyFrom(source.tooltip);
        //}
        if (source._tooltip) {
            if (this._tooltip) {
                this._tooltip.copyFrom(source.tooltip);
            }
            else {
                this.tooltip = source.tooltip.clone();
            }
        }
        //if ((<any>source)["_tooltip"] && !this._tooltip) {
        //	this._tooltip = (<any>source)["_tooltip"];
        //}
        this._showSystemTooltip = source.showSystemTooltip;
        _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["copyProperties"](source.propertyFields, this.propertyFields);
        _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["copyProperties"](source.properties, this);
        if (source.fillModifier) {
            this.fillModifier = source.fillModifier.clone();
        }
        if (source.strokeModifier) {
            this.strokeModifier = source.strokeModifier.clone();
        }
    };
    Sprite.prototype.dispose = function () {
        if (!this.isDisposed()) {
            this.dispatchImmediately("beforedisposed");
            if (this.isBaseSprite) {
                if (this.htmlContainer) {
                    while (this.htmlContainer.childNodes.length > 0) {
                        this.htmlContainer.removeChild(this.htmlContainer.firstChild);
                    }
                }
                this.isBaseSprite = false;
            }
            _super.prototype.dispose.call(this);
            // Clear adapters
            this.adapter.clear();
            if (this.applyOnClones) {
                if (this._clones) {
                    for (var i = this._clones.length - 1; i >= 0; i--) {
                        var clone = this._clones.getIndex(i);
                        clone.dispose();
                    }
                }
            }
            if (this._svgContainer) {
                this._svgContainer.dispose();
            }
            if (this._interactionDisposer) {
                this._interactionDisposer.dispose();
            }
            if (this._urlDisposer) {
                this._urlDisposer.dispose();
            }
            this.removeFromInvalids();
            if (this.element) {
                this.element.dispose();
            }
            if (this.group) {
                this.group.dispose();
            }
            if (this._numberFormatter) {
                this._numberFormatter.dispose();
            }
            if (this._focusFilter) {
                this._focusFilter.dispose();
            }
            if (this.stroke && !(this.stroke instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"])) {
                this.stroke.dispose();
            }
            // TODO a bit hacky
            if (this.fill && !(this.fill instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"])) {
                this.fill.dispose();
            }
            // remove from map
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this.id)) {
                this.map.removeKey(this.id);
            }
            this.parent = undefined;
            if (this._filters) {
                while (this._filters.length > 0) {
                    var filter = this._filters.getIndex(0);
                    filter.dispose();
                    this._filters.removeValue(filter);
                }
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "isTemplate", {
        /**
         * @ignore Exclude from docs
         * @return {boolean} Is template?
         */
        get: function () {
            return this._isTemplate;
        },
        /**
         * Indicates if this element is a "template".
         *
         * Template Sprites act only as a holders for config for other "real"
         * elements to be cloned from.
         *
         * Templates are treated differently, as they are not validated, redrawn, or
         * otherwise are processed.
         *
         * @ignore Exclude from docs
         * @param {boolean} value Is template?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this._isTemplate != value) {
                this._isTemplate = value;
                if (this instanceof _Container__WEBPACK_IMPORTED_MODULE_10__["Container"]) {
                    _utils_Iterator__WEBPACK_IMPORTED_MODULE_31__["each"](this.children.iterator(), function (child) {
                        child.isTemplate = value;
                    });
                }
                if (value) {
                    this.parent = this.parent;
                    this.removeFromInvalids();
                }
                else {
                    this.invalidate();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "showSystemTooltip", {
        /**
         * @return {boolean} Show system tooltip?
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this._showSystemTooltip)) {
                if (this.parent) {
                    return this.parent.showSystemTooltip;
                }
                else {
                    return false;
                }
            }
            return this._showSystemTooltip;
        },
        /**
         * Indicates whether the element should attempt to construct itself in a way
         * so that system tooltip is shown if its `readerTitle` is set.
         *
         * @param {boolean} value Show system tooltip?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            this._showSystemTooltip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "topParent", {
        /**
         * ==========================================================================
         * HIERARCHY AND STRUCTURE RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Sprites's top-level [[Container]].
         *
         * In most cases that will be a Chart.
         *
         * @return {Optional<Container>} Top-level ascendant
         */
        get: function () {
            if (this._topParent) {
                return this._topParent;
            }
            else {
                if (this.parent) {
                    return this.parent.topParent;
                }
            }
        },
        /**
         * @ignore
         * @param value {Container} top parent of a sprite
         */
        set: function (value) {
            this._topParent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "parent", {
        /**
         * @return {Optional<Container>} Parent container
         */
        get: function () {
            return this._parent;
        },
        /**
         * Elements' parent [[Container]].
         *
         * @param {Optional<Container>}  parent  Parent container
         */
        set: function (parent) {
            if (this._isTemplate) {
                return;
            }
            var currentPaper = this.paper;
            var oldParent = this._parent;
            if (oldParent != parent) {
                if (oldParent) {
                    oldParent.children.removeValue(this);
                }
                this._parent = parent;
                if (parent) {
                    this.topParent = parent.topParent;
                    if (parent.isTemplate) {
                        this.isTemplate = true;
                    }
                    this.baseId = parent.baseId;
                    parent.children.push(this);
                    // insert handler at Container invalidates +  invalidatesLayout + adds to group
                    if (this._tooltip && !this._tooltipContainer) {
                        this._tooltip.parent = parent.tooltipContainer;
                    }
                    if (!this._dataItem) {
                        this.dataItem = parent.dataItem;
                    }
                }
                else {
                    this.topParent = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "virtualParent", {
        /**
         * @return {Optional<Container>} Virtual parent
         */
        get: function () {
            return this._virtualParent;
        },
        /**
         * Element's "virtual" parent.
         *
         * This is required in ordere to maintain proper inheritance (like
         * formatters).
         *
         * Sometimes an element is a "logical" parent, even though it's not a direct
         * ascendant.
         *
         * Example: a bullet is not a child of the axis, but it would make sense
         * for it to inherit series' formatters.
         *
         * @ignore Exclude from docs
         * @param {Sprite}  value  Virtual parent
         */
        set: function (value) {
            this._virtualParent = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Moves `<defs>` to correct place in DOM.
     *
     * Some elements are initially created in "ghost" container. When moving
     * those into proper place in DOM, their respective `<defs>` need to be moved
     * as well.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.appendDefs = function () {
        if (this.filterElement) {
            this.paper.appendDef(this.filterElement);
        }
        var fill = this.fill;
        if (fill && fill.element) {
            this.paper.appendDef(fill.element);
        }
        var stroke = this.stroke;
        if (stroke && stroke.element) {
            this.paper.appendDef(stroke.element);
        }
        if (this.fillModifier && this.fill instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
            var fill_1 = this.fillModifier.modify(this.fill);
            if (fill_1 && fill_1.element) {
                this.paper.appendDef(fill_1.element);
            }
        }
        if (this.strokeModifier && this.stroke instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
            var stroke_1 = this.strokeModifier.modify(this.stroke);
            if (stroke_1 && stroke_1.element) {
                this.paper.appendDef(stroke_1.element);
            }
        }
        if (this._clipPath) {
            this.paper.appendDef(this._clipPath);
        }
    };
    Object.defineProperty(Sprite.prototype, "map", {
        /**
         * Returns a [[Dictionary]] which maps object ids with their respective
         * objects.
         *
         * Can be used to retrieve any object by id, e.g.:
         *
         * ```TypeScript
         * console.log(mySprite.map.getKey("myid"));
         * ```
         * ```JavaScript
         * console.log(mySprite.map.getKey("myid"));
         * ```
         *
         * @return {Dictionary<string, any>} Map collection
         */
        get: function () {
            var top = this.topParent;
            if (top) {
                return top.map;
            }
            else if (!this._map) {
                this._map = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["Dictionary"]();
            }
            return this._map;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "id", {
        /**
         * @return {string} ID
         */
        get: function () {
            return this._id;
        },
        /**
         * Element's user-defined ID.
         *
         * Will throw an Error if there already is an object with the same ID.
         *
         * Please note that above check will be performed withing the scope of the
         * current chart instance. It will not do checks across other chart instances
         * or in globally in DOM.
         *
         * Make sure the IDs are unique.
         *
         * @param {string} value ID
         */
        set: function (value) {
            if (this._id != value) {
                this._id = value;
                if (this.map.hasKey(value)) {
                    throw Error("Duplicate id (" + value + ") used on multiple objects.");
                }
                else {
                    this.map.setKey(value, this);
                }
                if (_Options__WEBPACK_IMPORTED_MODULE_17__["options"].autoSetClassName) {
                    this.setClassName();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "dom", {
        /**
         * ==========================================================================
         * ELEMENT AND DOM TREE MANIPULATION AND MEASURING
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns DOM element reference associated with this element.
         *
         * @readonly
         * @return {SVGSVGElement} DOM element
         */
        get: function () {
            return this.group.node;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "paper", {
        /**
         * @ignore Exclude from docs
         * @return {Paper} Paper
         */
        get: function () {
            if (this._paper) {
                return this._paper;
            }
            else {
                if (this.parent) {
                    return this.parent.paper;
                }
            }
            return Object(_rendering_Paper__WEBPACK_IMPORTED_MODULE_9__["getGhostPaper"])();
        },
        /**
         * A [[Paper]] instance to place elements on.
         *
         * If there's no Paper set for this element, it goes up the ascendant tree
         * until it finds one.
         *
         * This method is used by important `addChild()` method, so it's essential
         * to have a [[Paper]] instance.
         *
         * If this element has a separate `htmlContainer` set, it will have a
         * [[Paper]] instance itself.
         *
         * @ignore Exclude from docs
         * @param {Paper}  paper  Paper
         */
        set: function (paper) {
            this.setPaper(paper);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets [[Paper]] instance to use to draw elements.
     * @ignore
     * @param {Paper} paper Paper
     * @return {boolean} true if paper was changed, false, if it's the same
     */
    Sprite.prototype.setPaper = function (paper) {
        var oldPaper = this._paper;
        if (oldPaper != paper) {
            this._paper = paper;
            this.appendDefs();
            return true;
        }
        return false;
    };
    Object.defineProperty(Sprite.prototype, "htmlContainer", {
        /**
         * @return {Optional<HTMLElement>} HTML element
         */
        get: function () {
            if (this._htmlContainer) {
                return this._htmlContainer;
            }
            else {
                if (this.parent) {
                    return this.parent.htmlContainer;
                }
            }
        },
        /**
         * An HTML element to be used when placing wrapper element (`<div>`)
         * for the whole chart.
         *
         * This is the same for **all** elements within the same chart.
         *
         * @param {Optional<HTMLElement>} htmlContainer HTML element
         */
        set: function (htmlContainer) {
            this._htmlContainer = htmlContainer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "titleElement", {
        /**
         * Creates (if not yet created) and returns element's `<title>` element.
         *
         * @ignore Exclude from docs
         * @return {AMElement} Title element
         */
        get: function () {
            if (!this._titleElement) {
                this._titleElement = this.paper.add("title");
                this.group.add(this._titleElement);
            }
            return this._titleElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "descriptionElement", {
        /**
         * Creates (if not yet created) and returns element's `<desc>` element.
         *
         * @ignore Exclude from docs
         * @return {AMElement} Desc element
         */
        get: function () {
            if (!this._descriptionElement) {
                this._descriptionElement = this.paper.add("desc");
                this.group.add(this._descriptionElement);
            }
            return this._descriptionElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "filters", {
        /**
         * Returns list of SVG filters (effects) applied to element. If the filter
         * list is not yet initilized, creates and returns an empty one.
         * Note, not all filters combine well with one another. We recommend using one filter per sprite.
         *
         * @return {List<Filter>} List of filters
         */
        get: function () {
            if (!this._filters) {
                this._filters = new _utils_List__WEBPACK_IMPORTED_MODULE_6__["List"]();
                // TODO only add certain events ?
                this._disposers.push(this._filters.events.onAll(this.applyFilters, this));
                this._disposers.push(new _utils_List__WEBPACK_IMPORTED_MODULE_6__["ListDisposer"](this._filters));
            }
            return this._filters;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets required SVG attributes. Must be called every time an element is
     * redrawn so that attributes are (re)applied.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.setSVGAttributes = function () {
        this.fill = this.fill;
        this.opacity = this.opacity;
        this.fillOpacity = this.fillOpacity;
        this.stroke = this.stroke;
        this.strokeOpacity = this.strokeOpacity;
        this.shapeRendering = this.shapeRendering;
        this.strokeDasharray = this.strokeDasharray;
        this.focusable = this.focusable;
        this.tabindex = this.tabindex;
        this.role = this.role;
    };
    /**
     * Sets an attribute directly on an SVG element.
     *
     * @ignore Exclude from docs
     * @param {ISVGAttribute} attribute Attribute object
     */
    Sprite.prototype.setSVGAttribute = function (attribute) {
        this.group.attr(attribute);
    };
    /**
     * Removes an attribute directly from SVG element.
     *
     * @param {string} attribute Attribute key to remove
     */
    Sprite.prototype.removeSVGAttribute = function (attribute) {
        this.group.removeAttr(attribute);
    };
    /**
     * Sets `class` attribute of the elements SVG node.
     *
     * Uses `am4core.options.classNamePrefix`.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.setClassName = function () {
        var className = this.className;
        var classNamePrefix = _Options__WEBPACK_IMPORTED_MODULE_17__["options"].classNamePrefix;
        if (this.element) {
            this.element.addClass(classNamePrefix + className);
        }
        this.group.addClass(classNamePrefix + className + "-group");
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this.id)) {
            this.group.addClass(classNamePrefix + this.id);
        }
    };
    /**
     * Adds an `id` attribute the the element and returns the id.
     *
     * @ignore Exclude from docs
     * @return {string} Element's ID
     */
    Sprite.prototype.uidAttr = function () {
        this.setSVGAttribute({ "id": this.uid });
        return this.uid;
    };
    /**
     * [updateClipPath description]
     *
     * @todo Description
     */
    Sprite.prototype.updateClipPath = function () {
        var element = this._clipElement;
        if (element) {
            element.moveTo({ x: this.mask.pixelX, y: this.mask.pixelY });
        }
    };
    /**
     * @ignore
     */
    Sprite.prototype.createClipPath = function () {
        if (!this._clipPath) {
            this._clipPath = this.paper.addGroup("clipPath");
            this.paper.appendDef(this._clipPath);
            this._disposers.push(this._clipPath);
            var id = _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].getUniqueId();
            this._clipPath.attr({ "id": id });
            this.group.attr({ "clip-path": "url(#" + id + ")" });
        }
    };
    /**
     * Applies the mask Sprite.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.applyMask = function () {
        var mask = this.mask;
        if (this._clipPath && mask) {
            // Container
            if (mask instanceof _Container__WEBPACK_IMPORTED_MODULE_10__["Container"]) {
                this._clipElement.attr({ "width": _utils_Math__WEBPACK_IMPORTED_MODULE_26__["max"](0, mask.pixelWidth), "height": _utils_Math__WEBPACK_IMPORTED_MODULE_26__["max"](0, mask.pixelHeight) });
                var point = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["spritePointToSprite"]({ x: mask.pixelX, y: mask.pixelY }, mask.parent, this);
                this._clipPath.x = point.x;
                this._clipPath.y = point.y;
            }
            // Sprite
            else {
                if (mask.element && mask.element != this._clipElement) {
                    this._clipElement = mask.element;
                    this._clipPath.add(this._clipElement);
                }
                this._clipPath.scale = mask.scale;
                this._clipPath.x = mask.pixelX;
                this._clipPath.y = mask.pixelY;
                this._clipPath.rotation = mask.rotation;
            }
        }
    };
    /**
     * Applies filters to the element.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.applyFilters = function () {
        var _this = this;
        // we create a separate filter for each sprite as otherwise it would be impossible to animate filter.
        // svg doesn't support multiple filters applied to one element, so we put all the primitives to one filterElement of a sprite.
        if (this._filters && this._filters.length > 0) {
            var width_1 = 100;
            var height_1 = 100;
            if (!this.filterElement) {
                this.filterElement = this.paper.addGroup("filter");
                this._disposers.push(this.filterElement);
            }
            else {
                this.filterElement.removeChildNodes();
            }
            this.paper.appendDef(this.filterElement);
            var id = "filter-" + this.uid;
            this.filterElement.attr({ "id": id });
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_31__["each"](this.filters.iterator(), function (filter) {
                filter.sprite = _this;
                filter.paper = _this.paper;
                filter.appendPrimitives(_this.filterElement);
                if (filter.width > width_1) {
                    width_1 = filter.width;
                }
                if (filter.height > height_1) {
                    height_1 = filter.height;
                }
                filter.scale = _this.globalScale;
            });
            var w = width_1 + "%";
            var h = height_1 + "%";
            /* temporarily removed as it is breaking tooltips on Safari @todo come back to this
            if (this._measuredHeight <= 1) {
                h = height + "";
            }

            if (this._measuredWidth <= 1) {
                h = width + "";
            }*/
            this.filterElement.attr({ "width": w, "height": h, "x": -(width_1 - 100) / 2 + "%", "y": -(height_1 - 100) / 2 + "%" });
            this.group.attr({ "filter": "url(#" + id + ")" });
        }
        else if (this.filterElement) {
            this.group.removeAttr("filter");
            this.filterElement.removeChildNodes();
        }
    };
    /**
     * [removeClipPath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Sprite.prototype.removeClipPath = function () {
        if (this._clipPath) {
            //this._clipPath.dispose();
            this.removeDispose(this._clipPath);
            this._clipPath = undefined;
        }
    };
    /**
     * [setElement description]
     *
     * @ignore
     * @todo Description
     * @param {AMElement} element [description]
     */
    Sprite.prototype.setElement = function (element) {
        this.element = element;
        this.setSVGAttributes();
        this.applyAccessibility();
    };
    Object.defineProperty(Sprite.prototype, "element", {
        /**
         * @return {AMElement} Element
         */
        get: function () {
            return this._element;
        },
        /**
         * The main element for this Sprite, usually an SVG `<g>`.
         *
         * All other sub-elements are created in it.
         *
         * @param {Optional<AMElement>}  element  Element
         */
        set: function (element) {
            // Destroy previous element if there was one before
            this.removeElement();
            // Set new element
            this._element = element;
            // Add element to group
            // Since we are adding Element to group, which is already in the
            // `.disposers` it will be removed automatically when Sprite is disposed
            // of
            this.group.add(element);
            // This is needed if someone is setting element not in draw method but
            // from outside
            if (!this.invalid) {
                this.validate();
            }
            if (_Options__WEBPACK_IMPORTED_MODULE_17__["options"].autoSetClassName) {
                this.setClassName();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "svgContainer", {
        /**
         * HTML container (`<div>`) which is used to place chart's `<svg>` element
         * in.
         *
         * @return {Optional<SVGContainer>} Container for chart elements
         */
        get: function () {
            if (this._svgContainer) {
                return this._svgContainer;
            }
            else {
                if (this.parent) {
                    return this.parent.svgContainer;
                }
            }
        },
        /**
         * Sets HTML container to add SVG and other chart elements to.
         *
         * @param {Optional<SVGContainer>} svgContainer Container for chart elements
         */
        set: function (svgContainer) {
            this._svgContainer = svgContainer;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Measures main element.
     *
     * Saves measurements into private `_bbox` property.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.measureElement = function () {
        if (this.element) {
            if (this.definedBBox) {
                this._bbox = this.definedBBox;
            }
            else {
                var svgBBox = this.element.getBBox();
                this._bbox = { x: svgBBox.x, y: svgBBox.y, width: svgBBox.width, height: svgBBox.height };
            }
        }
    };
    /**
     * Positions element according its center settings.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    Sprite.prototype.updateCenter = function () {
        if (this.element) {
            var prevElementTransform = this.element.transformString;
            var bbox = this.bbox;
            var ex = 0;
            var ey = 0;
            var elementX = bbox.x;
            var elementY = bbox.y;
            var elementWidth = bbox.width;
            var elementHeigth = bbox.height;
            var pixelPaddingLeft = this.pixelPaddingLeft;
            var pixelPaddingRight = this.pixelPaddingRight;
            var pixelPaddingTop = this.pixelPaddingTop;
            var pixelPaddingBottom = this.pixelPaddingBottom;
            // add padding to the measured size
            var measuredWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["max"](elementWidth + pixelPaddingLeft + pixelPaddingRight, this.pixelWidth);
            var measuredHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["max"](elementHeigth + pixelPaddingTop + pixelPaddingBottom, this.pixelHeight);
            // extremes
            var left = bbox.x;
            var right = bbox.x + measuredWidth;
            var top_1 = bbox.y;
            var bottom = bbox.y + measuredHeight;
            var horizontalCenter = this.horizontalCenter;
            var verticalCenter = this.verticalCenter;
            switch (horizontalCenter) {
                case "none":
                    ex = elementX + pixelPaddingLeft;
                    break;
                case "left":
                    ex = pixelPaddingLeft;
                    break;
                case "middle":
                    ex = pixelPaddingLeft - (elementWidth + pixelPaddingRight + pixelPaddingLeft) / 2;
                    break;
                case "right":
                    ex = -pixelPaddingRight - elementWidth;
                    break;
            }
            switch (verticalCenter) {
                case "none":
                    ey = elementY + pixelPaddingTop;
                    break;
                case "top":
                    ey = pixelPaddingTop;
                    break;
                case "middle":
                    ey = pixelPaddingTop - (elementHeigth + pixelPaddingBottom + pixelPaddingTop) / 2;
                    break;
                case "bottom":
                    ey = -pixelPaddingBottom - elementHeigth;
                    break;
            }
            this._measuredHeight = measuredHeight;
            this._measuredWidth = measuredWidth;
            var x = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](ex - elementX, this._positionPrecision, true);
            var y = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](ey - elementY, this._positionPrecision, true);
            this.ex = x - pixelPaddingLeft;
            this.ey = y - pixelPaddingTop;
            this.maxLeft = left + x - pixelPaddingLeft;
            this.maxRight = right + x - pixelPaddingLeft;
            this.maxTop = top_1 + y - pixelPaddingTop;
            this.maxBottom = bottom + y - pixelPaddingTop;
            if (this.pixelPerfect) {
                x -= 0.5;
                y -= 0.5;
            }
            this.element.moveTo({ x: x, y: y });
            if (prevElementTransform != this.element.transformString) {
                this.dispatchImmediately("transformed");
            }
        }
    };
    /**
     * Measures the whole element.
     *
     * Returns `true` if the size has changed from the last measurement.
     *
     * @ignore Exclude from docs
     * @return {boolean} Did the size changed from the last measurement?
     */
    Sprite.prototype.measure = function () {
        this.updateCenter();
        var bbox = this.bbox;
        var measuredWidth = this._measuredWidth;
        var measuredHeight = this._measuredHeight;
        // extremes
        var left = this.maxLeft;
        var right = this.maxRight;
        var top = this.maxTop;
        var bottom = this.maxBottom;
        // non-parent wise size
        this._measuredWidthSelf = measuredWidth;
        this._measuredHeightSelf = measuredHeight;
        var positionPrecision = this._positionPrecision;
        // if a sprite is rotated or scaled, calculate measured size after transformations
        if (this.rotation !== 0 || this.scale !== 1) {
            // not good to handleGlobalScale here.
            if (this.nonScalingStroke) {
                this.strokeWidth = this.strokeWidth;
            }
            var svg = this.paper.svg;
            var matrix = svg.createSVGMatrix();
            var rotation = this.rotation;
            matrix.a = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["cos"](rotation) * this.scale;
            matrix.c = -_utils_Math__WEBPACK_IMPORTED_MODULE_26__["sin"](rotation) * this.scale;
            matrix.e = 0;
            matrix.b = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["sin"](rotation) * this.scale;
            matrix.d = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["cos"](rotation) * this.scale;
            matrix.f = 0;
            var p1 = svg.createSVGPoint();
            p1.x = left;
            p1.y = top;
            var p2 = svg.createSVGPoint();
            p2.x = right;
            p2.y = top;
            var p3 = svg.createSVGPoint();
            p3.x = right;
            p3.y = bottom;
            var p4 = svg.createSVGPoint();
            p4.x = left;
            p4.y = bottom;
            var pt1 = p1.matrixTransform(matrix);
            var pt2 = p2.matrixTransform(matrix);
            var pt3 = p3.matrixTransform(matrix);
            var pt4 = p4.matrixTransform(matrix);
            left = Math.min(pt1.x, pt2.x, pt3.x, pt4.x);
            right = Math.max(pt1.x, pt2.x, pt3.x, pt4.x);
            top = Math.min(pt1.y, pt2.y, pt3.y, pt4.y);
            bottom = Math.max(pt1.y, pt2.y, pt3.y, pt4.y);
            measuredWidth = right - left;
            measuredHeight = bottom - top;
            this.maxLeft = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](left, positionPrecision, true);
            this.maxRight = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](right, positionPrecision, true);
            this.maxTop = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](top, positionPrecision, true);
            this.maxBottom = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](bottom, positionPrecision, true);
        }
        this._measuredWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](measuredWidth, positionPrecision, true);
        this._measuredHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](measuredHeight, positionPrecision, true);
        // dispatch event
        if (this._measuredWidth != this._prevMeasuredWidth || this._measuredHeight != this._prevMeasuredHeight) {
            this._prevMeasuredHeight = this._measuredHeight;
            this._prevMeasuredWidth = this._measuredWidth;
            // TODO clear existing sizechanged dispatches ?
            this.dispatch("sizechanged");
            if (this.isHover && this.tooltip && this.tooltip.visible) {
                this.updateTooltipPosition();
            }
            return true;
        }
        return false;
    };
    /**
     * Insert this element before sibling element.
     *
     * @param  {Sprite}  sprite  Target element
     * @return {Sprite}          This element
     */
    Sprite.prototype.insertBefore = function (sprite) {
        var parent = this.parent;
        if (parent) {
            var index = parent.children.indexOf(sprite);
            if (index !== -1) {
                parent.children.moveValue(this, index);
                parent.sortChildren();
            }
        }
        return this;
    };
    /**
     * Insert this element after sibling element.
     *
     * @param  {Sprite}  sprite  Target element
     * @return {Sprite}          This element
     */
    Sprite.prototype.insertAfter = function (sprite) {
        var parent = this.parent;
        if (parent) {
            var index = parent.children.indexOf(sprite);
            if (index !== -1) {
                parent.children.moveValue(this, index + 1);
                parent.sortChildren();
            }
        }
        return this;
    };
    /**
     * Removes the main SVG element.
     *
     * This does not destroy the whole Sprite element. To do that use
     * `dispose()` instead.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.removeElement = function () {
        // remove visual element
        if (this._element) {
            this.removeDispose(this._element);
            this._element = undefined;
        }
    };
    /**
     * Returns relative (percent) value of the X coordindate within this element.
     *
     * A relative value is a hundredth of a percent. So 100% would result in a 1
     * as relative value.
     *
     * @param  {number | Percent}  value  Absolute or relative X coordinate
     * @return {number}                   Relative value
     */
    Sprite.prototype.getRelativeX = function (value) {
        if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"]) {
            return value.value;
        }
        else if (this.parent) {
            return value / this.parent.innerWidth;
        }
        return 0;
    };
    /**
     * Returns relative (percent) value of the Y coordindate within this element.
     *
     * A relative value is a hundredth of a percent. So 100% would result in a 1
     * as relative value.
     *
     * @param  {number | Percent}  value  Absolute or relative Y coordinate
     * @return {number}                   Relative value
     */
    Sprite.prototype.getRelativeY = function (value) {
        if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"]) {
            return value.value;
        }
        else if (this.parent) {
            return value / this.parent.innerHeight;
        }
        return 0;
    };
    /**
     * Returns an X coordinate in pixel within the element.
     *
     * If number is passed in as parameter, the same number will be returned
     * back.
     *
     * If [[Percent]] is passed in, it will be recalculated to pixels.
     *
     * @param  {number | Percent}  value  Absolute or relative X coordinate
     * @return {number}                   X coordinate in pixels
     */
    Sprite.prototype.getPixelX = function (value) {
        // we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth
        // all the time and this would result chain of the same actions and will slow down the system a lot
        var pixel = 0;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
            pixel = value;
        }
        else if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"]) {
            var relative = value.value;
            if (this.parent) {
                pixel = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](this.parent.innerWidth * relative, this._positionPrecision, true);
            }
        }
        return pixel;
    };
    /**
     * Returns an Y coordinate in pixel within the element.
     *
     * If number is passed in as parameter, the same number will be returned
     * back.
     *
     * If [[Percent]] is passed in, it will be recalculated to pixels.
     *
     * @param  {number | Percent}  value  Absolute or relative Y coordinate
     * @return {number}                   Y coordinate in pixels
     */
    Sprite.prototype.getPixelY = function (value) {
        // we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth
        // all the time and this would result chain of the same actions and will slow down the system a lot
        var pixel = 0;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
            pixel = value;
        }
        else if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"]) {
            var relative = value.value;
            if (this.parent) {
                pixel = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](this.parent.innerHeight * relative, this._positionPrecision, true);
            }
        }
        return pixel;
    };
    /**
     * Moves the element to a specified coordinates.
     *
     * Using this method is preferred method of moving element, as it saves some
     * CPU processing power over setting `x` and `y` properties separately.
     *
     * The method respects element's center settings. The element will be
     * positioned so that `point` coordinates come in whatever "center" of the
     * element is, as set in `horizontalCenter` and `verticalCenter`.
     *
     * Besides moving the element, you can also at the same time scale and
     * rotate the element.
     *
     * @param {IPoint}  point     New coordinates
     * @param {number}  rotation  New rotation
     * @param {number}  scale     New Scale
     */
    Sprite.prototype.moveTo = function (point, rotation, scale, isDragged) {
        if (this.isDragged && !isDragged) {
            return;
        }
        if (point) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](point.x)) {
                this.setPropertyValue("x", point.x);
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](point.y)) {
                this.setPropertyValue("y", point.y);
            }
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](rotation)) {
            this.rotation = rotation;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](scale)) {
            this.scale = scale;
        }
        // must leave this
        this.invalidatePosition();
    };
    Object.defineProperty(Sprite.prototype, "mask", {
        /**
         * Returns [[Sprite]] element currently used as mask for this element.
         *
         * @ignore Exclude from docs
         * @return {Optional<Sprite>} A [[Sprite]] to use as mask
         */
        get: function () {
            return this.adapter.apply("mask", this._mask.get());
        },
        /**
         * Sets another [[Sprite]] element as this elements mask.
         *
         * @ignore Exclude from docs
         * @param {Optional<Sprite>} mask A [[Sprite]] to use as mask
         */
        set: function (mask) {
            var _this = this;
            if (this._mask.get() !== mask) {
                // this is good
                if (mask) {
                    this.createClipPath();
                    if (!(mask instanceof _Container__WEBPACK_IMPORTED_MODULE_10__["Container"])) {
                        mask.isMeasured = false;
                        if (mask.element) {
                            this._clipElement = mask.element;
                        }
                    }
                    else {
                        this._clipElement = this.paper.add("rect");
                    }
                    if (this._clipElement) {
                        this._clipPath.add(this._clipElement);
                    }
                    this._mask.set(mask, new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        //mask.addEventListener(SpriteEvent.TRANSFORMED, this.applyMask, false, this);
                        mask.events.on("maxsizechanged", function () { if (_this.inited) {
                            _this.applyMask;
                        } }, undefined, false),
                        mask.events.on("validated", this.applyMask, this, false),
                        mask.events.on("positionchanged", this.applyMask, this, false)
                    ]));
                    this.applyMask();
                }
                else {
                    this._mask.reset();
                    this.group.removeAttr("clip-path");
                    this.removeClipPath();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "maskRectangle", {
        /**
         * @ignore Exclude from docs
         * @return {IRectangle} Mask Rectangle
         */
        get: function () {
            return this._maskRectangle;
        },
        // you can set IRectangle as a mask instead o a sprite. Note, the changes of the object won't be monitored
        /**
         * Instead of creating a [[Sprite]] for mask, you can just use a
         * [[Rectangle]] by setting this accessor.
         *
         * Please note that the element will not monitor any changes to the mask
         * rectangle.
         *
         * @ignore Exclude from docs
         * @param {IRectangle} rect Mask Rectangle
         */
        set: function (rect) {
            if (rect) {
                this.createClipPath();
                if (!this._clipElement) {
                    this._clipElement = this.paper.add("rect");
                    this._clipPath.add(this._clipElement);
                }
                this._clipElement.attr({ "width": rect.width, "height": rect.height });
            }
            else {
                this.removeClipPath();
                this._clipElement = undefined;
            }
            this._maskRectangle = rect;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "isMeasured", {
        /**
         * @ignore Exclude from docs
         * @return {boolean} Was element already measured?
         */
        get: function () {
            return this._isMeasured;
        },
        /**
         * Indicates if this element was already measured.
         *
         * @ignore Exclude from docs
         * @param {boolean} value Was element already measured?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (!value) {
                this._measuredWidth = 0;
                this._measuredHeight = 0;
                //this._pixelHeight = 0;
                //this._pixelWidth = 0;
            }
            if (this._isMeasured != value) {
                this._isMeasured = value;
                this.invalidatePosition();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if the this element has any of its parts overlapping with another
     * element.
     *
     * @todo Description (review)
     * @param  {Sprite}   sprite  Second element to test again
     * @return {boolean}          Overlapping?
     */
    Sprite.prototype.hitTest = function (sprite) {
        // validate, otherwise we will not know measuredWidth and measuredHeight
        if (this.invalid) {
            this.validate();
        }
        if (sprite.invalid) {
            sprite.validate();
        }
        var ax1 = this.pixelX;
        var ay1 = this.pixelY;
        var ax2 = ax1 + this.measuredWidth;
        var ay2 = ay1 + this.measuredHeight;
        var bx1 = sprite.pixelX;
        var by1 = sprite.pixelY;
        var bx2 = bx1 + sprite.measuredWidth;
        var by2 = by1 + sprite.measuredHeight;
        return !(bx1 > ax2 || bx2 < ax1 || by1 > ay2 || by2 < ay1);
    };
    Object.defineProperty(Sprite.prototype, "inited", {
        /**
         * ==========================================================================
         * STATE-RELATED
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns `true` if Sprite has already finished initializing.
         *
         * @return {boolean} Initialized?
         */
        get: function () {
            return this._inited;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns `true` if Sprite has already finished initializing and is ready.
     *
     * If this object is a [[Container]] it will wait for all of its children
     * are ready before becoming ready itself and firing a `"ready"` event.
     *
     * @return {boolean} is ready?
     */
    Sprite.prototype.isReady = function () {
        return this._ready;
    };
    Object.defineProperty(Sprite.prototype, "states", {
        /**
         * Returns a collection of element's available [[SpriteState]] entries.
         *
         * @see {@link SpriteState}
         * @return {DictionaryTemplate<string, SpriteState>} States
         */
        get: function () {
            if (!this._states) {
                var state = new _SpriteState__WEBPACK_IMPORTED_MODULE_1__["SpriteState"]();
                // works
                this._states = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["DictionaryTemplate"](state);
                // TODO what about removeKey ?
                this._disposers.push(this._states.events.on("insertKey", this.processState, this, false));
                this._disposers.push(this._states.events.on("setKey", this.processState, this, false));
                this._disposers.push(new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["DictionaryDisposer"](this._states));
                this._disposers.push(state);
            }
            return this._states;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "hiddenState", {
        /**
         * Returns a [[SpriteState]] object for "hidden" state.
         *
         * This is a shortcut to `this.states.getKey("hidden")`.
         *
         * @return {SpriteState} Hidden state
         */
        get: function () {
            if (!this.states.getKey("hidden")) {
                var hiddenState = this.states.create("hidden");
                hiddenState.properties.opacity = 0;
                hiddenState.properties.visible = false;
            }
            return this.states.getKey("hidden");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "defaultState", {
        /**
         * Returns a [[SpriteState]] object for "default" state.
         *
         * This is a shortcut to `this.states.getKey("default")`.
         *
         * @return {SpriteState} Hidden state
         */
        get: function () {
            if (!this.states.getKey("default")) {
                var defaultState = this.states.create("default");
                defaultState.properties.opacity = 1;
            }
            return this.states.getKey("default");
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if some key states are defined and updates Sprite properties
     * accordingly.
     *
     * For example if there's a state "down" defined for Sprite, we automatically
     * make it "clickable".
     *
     * @ignore Exclude from docs
     * @param {IDictionaryEvents<string, SpriteState>["insertKey" | "setKey"]} event An event which caused state list update
     */
    Sprite.prototype.processState = function (event) {
        var state = event.newValue;
        state.sprite = this;
        state.name = event.key;
        if (this.states.hasKey("hover") || _utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this.tooltipHTML) || _utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this.tooltipText)) {
            this.hoverable = true;
        }
        if (this.states.hasKey("down")) {
            this.clickable = true;
        }
        if (this.states.hasKey("focus")) {
            this.focusable = true;
        }
        // Propagate the new state to clones
        if (this.applyOnClones) {
            var clones = this.clones.values;
            var length_1 = clones.length;
            for (var i = 0; i < length_1; ++i) {
                var clone = clones[i];
                if (!clone.isDisposed()) {
                    clone.states.setKey(state.name, state);
                }
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "animations", {
        /**
         * Returns a list elements's animations currently being played.
         *
         * If the list has not been initialized it is created.
         *
         * @return {Array<Animation>} List of animations
         */
        get: function () {
            if (!this._animations) {
                this._animations = [];
                this._disposers.push(new _utils_Animation__WEBPACK_IMPORTED_MODULE_8__["AnimationDisposer"](this._animations));
            }
            return this._animations;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts element's local coordinates to the coordinates within the main
     * chart container.
     *
     * @param  {IPoint}  point  Local point
     * @return {IPoint}         Global point
     */
    Sprite.prototype.getSvgPoint = function (point) {
        // Calculate SVG point
        var bbox = this.htmlContainer.getBoundingClientRect();
        return {
            "x": point.x - bbox.left,
            "y": point.y - bbox.top
        };
    };
    /**
     * Creates and starts an [[Animation]] with given `animationOptions`.
     *
     * @see {@link Animation} for additional information about available options
     * @param  {ISpriteAnimationOptions[] | ISpriteAnimationOptions}  animationOptions  Animation options
     * @param  {number}                                               duration          Duration in milliseconds
     * @param  {(number) => number}                                   easing            Easing function
     * @return {Animation}                                                              Animation instance
     */
    Sprite.prototype.animate = function (animationOptions, duration, easing) {
        return new _utils_Animation__WEBPACK_IMPORTED_MODULE_8__["Animation"](this, animationOptions, duration, easing).start();
    };
    /**
     * Applies a [[SpriteState]] on this element.
     *
     * The first parameter can either be a name state or a [[SpriteState]]
     * instance.
     *
     * When run, this method will apply SVG properties defined in a
     * [[SpriteState]], but only those that are relevant to this particular
     * element, i.e. are in the `properties` array.
     *
     * @see {@link SpriteState}
     * @param {string | SpriteState} value               A state - name key or instance
     * @param {number}               transitionDuration  Duration of the transition between current and new state
     * @param {number) => number}    easing              An easing function
     */
    Sprite.prototype.setState = function (value, transitionDuration, easing) {
        var state;
        if (value instanceof _SpriteState__WEBPACK_IMPORTED_MODULE_1__["SpriteState"]) {
            this.states.setKey(value.name, value);
            state = value;
        }
        else {
            state = this.states.getKey(value);
            if (!state) {
                return;
            }
        }
        // stop previous transition
        // not good - foe expample, we are animating to some "active" state and in them middle "hover" state happens. then "active" stat won't be applied
        //if (this._transition) {
        //this._transition.stop();
        //}
        if (state.name == "hover") {
            if (this.isHidden) {
                return;
            }
            this.isHover = true;
        }
        if (state.name == "hidden") {
            this.isHiding = true;
        }
        else {
            if (!this.visible) {
                this.setVisibility(state.properties.visible || this.defaultState.properties.visible);
            }
        }
        if (state.name == "active") {
            this.isActive = true;
        }
        // we do not set isActive = false here if it's not active, but container does that if setStateOnChildren = true
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](transitionDuration)) {
            transitionDuration = state.transitionDuration;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](easing)) {
            easing = state.transitionEasing;
        }
        return this.transitTo(state, transitionDuration, easing);
    };
    /**
     * Applies proper state based on the condition of the element. A condition is
     * deducted in this order:
     * * "hover" if Sprite has currently any pointers over it
     * * "down" if Sprite has any pointers (touch or mouse) currently pressed over it
     * * "focus" if Sprite has currently got focus (accessibility)
     * * "hidden" if Sprite is currently hidden
     *
     * Returns an [[Animation]] object, which is handling gradual transition from
     * current values of properties, to the new target state(s).
     *
     * @param  {number}     duration  Duration for the animation (ms)
     * @return {Optional<Animation>}  [[Animation]] object which is handling the transition
     */
    Sprite.prototype.applyCurrentState = function (duration) {
        //if (!this.isHidden) { // this was done for hover state not to take effect if "hidden" is actually visible, need to think about it.
        var animation = this.setState(this.defaultState, duration);
        if (this.isHover) {
            animation = this.setState("hover", duration);
        }
        if (this.isDown && this.interactions.downPointers.length) {
            animation = this.setState("down", duration);
        }
        this.isFocused = this.isFocused;
        if (this.isActive) {
            animation = this.setState("active", duration);
            if (this.isHover && this.states.hasKey("hoverActive")) {
                animation = this.setState("hoverActive", duration);
            }
        }
        return animation;
        //}
    };
    /**
     * Starts an [[Animation]] of the properties to specific values as they are
     * set in `state`.
     *
     * @ignore Exclude from docs
     * @param  {SpriteState}         state     Target State
     * @param  {number}              duration  Duration in milliseconds
     * @param  {(number) => number}  easing    Easing function
     * @return {Animation}                     Transition Animation
     */
    Sprite.prototype.transitTo = function (state, duration, easing) {
        var _this = this;
        // Init
        var options = [], propValues = state.allValues, transition;
        // todo: do this for numeric/color properties only?
        // @todo use state.getPropertyValue instead
        _utils_Object__WEBPACK_IMPORTED_MODULE_29__["each"](propValues, function (propertyName, finalValue) {
            var currentValue = _this[propertyName];
            // save current value to default state. this solves a big problem where values must be set both on sprite and default state
            if (finalValue != currentValue && _this.defaultState.properties[propertyName] == undefined) {
                _this.defaultState.properties[propertyName] = currentValue;
            }
            //if (finalValue != currentValue && $type.hasValue(finalValue)) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](finalValue)) {
                var option = { from: currentValue, to: finalValue, property: propertyName };
                options.push(option);
            }
        });
        if (options.length > 0) {
            transition = this.animate(options, duration, easing);
            if (transition && !transition.isFinished()) {
                // TODO should this use events.once ?
                // TODO push onto _disposers array ?
                this._disposers.push(transition.events.on("animationended", function () {
                    _this.dispatchImmediately("transitionended");
                }));
            }
            else {
                this.dispatchImmediately("transitionended");
            }
        }
        // apply filters if set
        if (state.filters.length > 0) {
            var newFilters_1 = [];
            // check for the same filters
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_31__["each"](state.filters.iterator(), function (stateFilter) {
                var newFilter = stateFilter.clone();
                newFilters_1.push(newFilter);
                var animationOptions = [];
                _utils_Iterator__WEBPACK_IMPORTED_MODULE_31__["each"](_this.filters.iterator(), function (currentFilter) {
                    // if we have the same filters
                    if (currentFilter.className == newFilter.className) {
                        if (!_utils_Iterator__WEBPACK_IMPORTED_MODULE_31__["contains"](_this.defaultState.filters.iterator(), function (x) { return x.className === newFilter.className; })) {
                            _this.defaultState.filters.push(currentFilter);
                        }
                        _utils_Object__WEBPACK_IMPORTED_MODULE_29__["each"](newFilter.properties, function (propertyName, newValue) {
                            var currentValue = currentFilter.properties[propertyName];
                            // if values are not the same, push to animation options array
                            if (currentValue != newValue) {
                                animationOptions.push({ property: propertyName, from: currentValue, to: newValue });
                            }
                        });
                    }
                });
                // animate to new value
                newFilter.animate(animationOptions, duration, easing);
            });
            this.filters.clear();
            this.filters.pushAll(newFilters_1);
        }
        return transition;
    };
    /**
     * Returns `true` if Sprite is currently transiting from one state/value to
     * another.
     *
     * @return {boolean} Is in transition?
     */
    Sprite.prototype.isInTransition = function () {
        return this.animations.length > 0;
    };
    Object.defineProperty(Sprite.prototype, "isHover", {
        /**
         * Returns indicator if this element has a mouse pointer currently hovering
         * over it, or if it has any touch pointers pressed on it.
         *
         * @return {boolean} Is hovered?
         */
        get: function () {
            if (this.isInteractive()) {
                return this.interactions.isHover;
            }
            return false;
        },
        /**
         * Indicates if this element has a mouse pointer currently hovering
         * over it, or if it has any touch pointers pressed on it.
         *
         * @param {boolean} value Is hovered?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (value !== this.isHover) {
                if (this.isInteractive()) {
                    this.interactions.isHover = value;
                    if (value) {
                        this.handleOver();
                    }
                    else {
                        this.handleOut();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "isDragged", {
        /**
         * Returns indicator if this element is being dragged at the moment.
         *
         * @return {boolean} Is dragged?
         */
        get: function () {
            return this._isDragged;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "isDown", {
        /**
         * @return {boolean} Is down?
         */
        get: function () {
            if (this.isInteractive()) {
                return this.interactions.isDown;
            }
            return false;
        },
        /**
         * Indicates if this element has any pointers (mouse or touch) pressing down
         * on it.
         *
         * @param {boolean} value Is down?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.isInteractive() && this.isDown != value) {
                this.interactions.isDown = value;
                if (value) {
                    this.handleDown();
                }
                else {
                    this.handleUp();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "isFocused", {
        /**
         * @return {boolean} Is focused?
         */
        get: function () {
            if (this.isInteractive()) {
                return this.interactions.isFocused;
            }
            return false;
        },
        /**
         * Indicates if this element is focused (possibly by tab navigation).
         *
         * @param {boolean} value Is focused?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.focusable && this.isFocused != value) {
                if (this.isInteractive()) {
                    this.interactions.isFocused = value;
                    if (value === true) {
                        this.handleFocus();
                    }
                    else {
                        this.handleBlur();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "isActive", {
        /**
         * @return {boolean} Is active?
         */
        get: function () {
            return this._isActive;
        },
        /**
         * Indicates if this element is currently active (toggled on) or not
         * (toggled off).
         *
         * @param {boolean} value Is active?
         */
        set: function (value) {
            this.setActive(value);
        },
        enumerable: true,
        configurable: true
    });
    Sprite.prototype.setActive = function (value) {
        value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
        if (this._isActive !== value) {
            this._isActive = value;
            if (value && this.states.hasKey("active")) {
                this.setState("active");
                if (this.isHover && this.states.hasKey("hoverActive")) {
                    this.setState("hoverActive");
                }
            }
            else {
                this.applyCurrentState();
            }
            this.dispatchImmediately("toggled");
        }
    };
    Object.defineProperty(Sprite.prototype, "disabled", {
        /**
         * @return {boolean} Disabled?
         */
        get: function () {
            //if(this._internalDisabled){
            //	return true;
            //}
            var current = this.getPropertyValue("disabled");
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](current)) {
                return current;
            }
            else {
                if (this.virtualParent) {
                    return this.virtualParent.disabled;
                }
                if (this.parent) {
                    return this.parent.disabled;
                }
            }
            return false;
        },
        /**
         * Controls if element is disabled.
         *
         * A disabled element is hidden, and is removed from any processing, layout
         * calculations, and generally treated as if it does not exist.
         *
         * The element itself is not destroyed, though. Setting this back to `false`,
         * will "resurrect" the element.
         *
         * @param {boolean}  value  Disabled?
         */
        set: function (value) {
            this.setDisabled(value);
        },
        enumerable: true,
        configurable: true
    });
    Sprite.prototype.setDisabled = function (value) {
        value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
        var current = this.getPropertyValue("disabled");
        if (current != value) {
            this.setPropertyValue("disabled", value, true);
            if (value) {
                this.parent = this.parent;
                this.removeFromInvalids();
                this.group.attr({ "display": "none" });
                this.dispatch("disabled");
            }
            else {
                if (this.parent) {
                    var group = this.parent.element;
                    if (!group.hasChild(this.group)) {
                        group.add(this.group);
                    }
                }
                if (this instanceof _Container__WEBPACK_IMPORTED_MODULE_10__["Container"]) {
                    this.deepInvalidate();
                }
                else {
                    this.invalidate();
                }
                if (!this.__disabled) {
                    this.removeSVGAttribute("display");
                }
                this.dispatch("enabled");
            }
            this.dispatch("transformed");
            _System__WEBPACK_IMPORTED_MODULE_32__["system"].requestFrame();
            return true;
        }
        return false;
    };
    Object.defineProperty(Sprite.prototype, "__disabled", {
        /**
         * @ignore
         * @return {boolean} Disabled?
         */
        get: function () {
            return this._internalDisabled;
        },
        /**
         * Internal disable method.
         *
         * Do not use it for disabling elements. Use `disabled` accessor instead.
         *
         * @ignore Exclude from docs
         * @param {boolean} value Disabled?
         */
        set: function (value) {
            if (this._internalDisabled != value) {
                this._internalDisabled = value;
                this._updateDisabled = true;
                this.invalidatePosition(); // better use this instead of invalidate()
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "numberFormatter", {
        /**
         * @return {NumberFormatter} A [[NumberFormatter]] instance to be used
         */
        get: function () {
            if (this._numberFormatter) {
                return this._numberFormatter;
            }
            else if (this.virtualParent) {
                return this.virtualParent.numberFormatter;
            }
            else if (this.parent) {
                return this.parent.numberFormatter;
            }
            this._numberFormatter = new _formatters_NumberFormatter__WEBPACK_IMPORTED_MODULE_19__["NumberFormatter"]();
            this._numberFormatter.language = this.language;
            return this.numberFormatter;
        },
        /**
         * ==========================================================================
         * FORMATTERS AND OTHER EXTERNAL HELPERS
         * ==========================================================================
         * @hidden
         */
        /**
         * A [[NumberFormatter]] instance.
         *
         * This is used to format numbers.
         *
         * ```TypeScript
         * chart.numberFormatter.numberFormat = "#,###.#####";
         * ```
         * ```JavaScript
         * chart.numberFormatter.numberFormat = "#,###.#####";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "numberFormatter": {
         *     "numberFormat": "#,###.#####"
         *   }
         * }
         * ```
         *
         * You can set a separate instance of formatter for each
         * individual element. However that would be unnecessary overhead as
         * all elements would automatically inherit formatter from their parents,
         * all the way up to the chart itself.
         *
         *
         * @see {@link NumberFormatter} for more info on formatting numbers
         * @param {NumberFormatter}  value  An instance of NumberFormatter
         */
        set: function (value) {
            this._numberFormatter = value;
            this._numberFormatter.language = this.language;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "dateFormatter", {
        /**
         * @return {DateFormatter} An instance of DateFormatter
         */
        get: function () {
            if (this._dateFormatter) {
                return this._dateFormatter;
            }
            else if (this.virtualParent) {
                return this.virtualParent.dateFormatter;
            }
            else if (this.parent) {
                return this.parent.dateFormatter;
            }
            this._dateFormatter = new _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_20__["DateFormatter"]();
            this._dateFormatter.language = this.language;
            return this.dateFormatter;
        },
        /**
         * A [[DateFormatter]] instance.
         *
         * This is used to format dates, e.g. on a date axes, balloons, etc.
         *
         * ```TypeScript
         * chart.dateFormatter.dateFormat = "yyyy-MM-dd";
         * ```
         * ```JavaScript
         * chart.dateFormatter.dateFormat = "yyyy-MM-dd";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "dateFormatter": {
         *     "dateFormat": "yyyy-MM-dd"
         *   }
         * }
         * ```
         *
         * You can set a separate instance of formatter for each
         * individual element. However that would be unnecessary overhead as
         * all elements would automatically inherit formatter from their parents,
         * all the way up to the chart itself.
         *
         * @see {@link DateFormatter} for more info on dates formatting
         * @param {DateFormatter}  value  An instance of DateFormatter
         */
        set: function (value) {
            this._dateFormatter = value;
            this._dateFormatter.language = this.language;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "durationFormatter", {
        /**
         * @return {DurationFormatter} An instance of DurationFormatter
         */
        get: function () {
            if (this._durationFormatter) {
                return this._durationFormatter;
            }
            else if (this.virtualParent) {
                return this.virtualParent.durationFormatter;
            }
            else if (this.parent) {
                return this.parent.durationFormatter;
            }
            this._durationFormatter = new _formatters_DurationFormatter__WEBPACK_IMPORTED_MODULE_21__["DurationFormatter"]();
            this._durationFormatter.language = this.language;
            return this.durationFormatter;
        },
        /**
         * A [[DurationFormatter]] instance.
         *
         * This is used to format numbers as durations, e.g. on a value axes.
         *
         * You can set a separate instance of formatter for each
         * individual element. However that would be unnecessary overhead as
         * all elements would automatically inherit formatter from their parents,
         * all the way up to the chart itself.
         *
         * @see {@link DurationFormatter} for more info on durations
         * @param {DurationFormatter}  value  An instance of DurationFormatter
         */
        set: function (value) {
            this._durationFormatter = value;
            this._durationFormatter.language = this.language;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "language", {
        /**
         * @return {Language} An instance of Language
         */
        get: function () {
            var language = this._language.get();
            if (language) {
                return language;
            }
            else if (this.virtualParent) {
                return this.virtualParent.language;
            }
            else if (this.parent) {
                return this.parent.language;
            }
            language = new _utils_Language__WEBPACK_IMPORTED_MODULE_23__["Language"]();
            this.language = language;
            return language;
        },
        /**
         * A [[Language]] instance to use for translations.
         *
         * Normally it is enough to set language for the top-most element - chart.
         *
         * All other element child elements will automatically re-use that language
         * object.
         *
         * @param {Language}  value  An instance of Language
         */
        set: function (value) {
            var _this = this;
            if (this._language.get() !== value) {
                this._language.set(value, value.events.on("localechanged", function (ev) {
                    if (_this instanceof _Container__WEBPACK_IMPORTED_MODULE_10__["Container"]) {
                        _this.deepInvalidate();
                    }
                }));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * ==========================================================================
     * DATA-RELATED STUFF
     * ==========================================================================
     * @hidden
     */
    /**
     * Parses the string for meta tags `{tag}` and replaces them with a real
     * value. Supports straight up tags referring to the field in data, i.e.
     * `{value}` or tags with additional formatting info. E.g.:
     *
     * ```Text
     * {myfield.formatDate("yyyy-MM-dd")}
     * {myfield.formatDate()}
     * {myfield.formatNumber("#,####.00")}
     * {myfield.formatNumber()}
     * {myField.formatDuration("mm:ss")}
     * ```
     *
     * Etc.
     *
     * This method Will automatically detect and use proper formatter for the
     * value.
     *
     * The source value will be looked up in various places: (in order)
     * * Sprite's own `dataItem`
     * * Sprite's properties
     * * Parent's `dataItem`
     * * Parent's properties
     *
     * @ignore Exclude from docs
     * @param  {string}    string            A string to format
     * @param  {DataItem}  dataItem          DataItem
     * @return {string}                      Formatted string
     */
    Sprite.prototype.populateString = function (string, dataItem) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](string)) {
            string = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["castString"](string);
            string = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_22__["getTextFormatter"])().escape(string);
            var tags = string.match(/\{([^}]+)\}/g);
            var i = void 0;
            if (tags) {
                for (i = 0; i < tags.length; i++) {
                    var tag = tags[i].replace(/\{([^}]+)\}/, "$1");
                    var value = this.getTagValue(tag, "", dataItem);
                    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value)) {
                        value = "";
                    }
                    string = string.split(tags[i]).join(value);
                }
            }
            string = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_22__["getTextFormatter"])().unescape(string);
        }
        else {
            string = "";
        }
        return this.adapter.apply("populateString", string);
    };
    /**
     * Gets the value from data item and formats it according to specified format.
     *
     * If `format` is specified, it will use its contents to choose formatter for
     * the value. Otherwise it will select formatter accordingly to actual value
     * type.
     *
     * @ignore Exclude from docs
     * @todo Ability to force certain formatter on known numeric and date values
     * @see {@link NumberFormatter}
     * @see {@link DateFormatter}
     * @see {@link DurationFormatter}
     * @param  {string}    tagName           Tag name to replace
     * @param  {string}    format            Format to use
     * @param  {DataItem}  dataItem          DataItem
     * @return {string}                      Formatted value
     */
    Sprite.prototype.getTagValue = function (tagName, format, dataItem) {
        var value;
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](dataItem)) {
            dataItem = this.dataItem;
        }
        // Parse parts
        var parts = [];
        var reg = /([^.]+)\(([^)]*)\)|([^.]+)/g;
        ;
        var matches;
        while ((matches = reg.exec(tagName)) !== null) {
            if (matches[3]) {
                // Simple property
                parts.push({
                    prop: matches[3]
                });
            }
            else {
                // Method
                // Parse parameters
                var params = [];
                if (_utils_Utils__WEBPACK_IMPORTED_MODULE_25__["trim"](matches[2]) != "") {
                    var reg2 = /'([^']*)'|"([^"]*)"|([0-9\-]+)/g;
                    var matches2 = void 0;
                    while ((matches2 = reg2.exec(matches[2])) !== null) {
                        params.push(matches2[1] || matches2[2] || matches2[3]);
                    }
                }
                parts.push({
                    method: matches[1],
                    params: params
                });
            }
        }
        // Check if we can retrieve the value from data item
        if (dataItem) {
            // Check values
            value = this.getTagValueFromObject(parts, dataItem.values);
            // Check properties
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value) || _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isObject"](value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and wont't get to the dateX date.
                value = this.getTagValueFromObject(parts, dataItem);
            }
            // Check data context
            var dataContext = dataItem.dataContext;
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value) && dataContext) {
                value = this.getTagValueFromObject(parts, dataItem.dataContext);
                // scond data context level sometimes exist (tree map)
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value) && dataContext.dataContext) {
                    value = this.getTagValueFromObject(parts, dataContext.dataContext);
                }
            }
            // Check component's data item
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value) && dataItem.component && dataItem.component.dataItem !== dataItem) {
                value = dataItem.component.getTagValue(tagName, format);
            }
        }
        // Check sprite's properties
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value)) {
            value = this.getTagValueFromObject(parts, this.populateStringFrom || this);
        }
        // Finally, check the parent
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value) && this.parent) {
            value = this.parent.getTagValue(tagName, format);
        }
        return value;
    };
    /**
     * Tries to retrieve values from properties of any object, then applies
     * proper formatting to it.
     *
     * @ignore Exclude from docs
     * @todo Description (improve)
     * @param  {any[]}   parts   Properties ant methods to access
     * @param  {any}     object  Source object
     * @param  {string}  format  A specific format to apply
     * @return {any}             Formatted value
     */
    Sprite.prototype.getTagValueFromObject = function (parts, object, format) {
        var current = object;
        var formatApplied = false;
        for (var i = 0, len = parts.length; i < len; i++) {
            var part = parts[i];
            if (part.prop) {
                // Regular property
                current = current[part.prop];
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](current)) {
                    // Not set, return undefined
                    return;
                }
            }
            else {
                // Method
                switch (part.method) {
                    case "formatNumber":
                        var numberValue = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["anyToNumber"](current);
                        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](numberValue)) {
                            current = this.numberFormatter.format(numberValue, format || part.params[0] || undefined);
                            formatApplied = true;
                        }
                        break;
                    case "formatDate":
                        var dateValue = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["anyToDate"](current);
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isDate"](dateValue) || _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNaN"](dateValue.getTime())) {
                            // Was not able to get date out of value, quitting and letting
                            // calling method try another value
                            return;
                        }
                        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](dateValue)) {
                            current = this.dateFormatter.format(dateValue, format || part.params[0] || undefined);
                            formatApplied = true;
                        }
                        break;
                    case "formatDuration":
                        var durationValue = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["anyToNumber"](current);
                        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](durationValue)) {
                            current = this.durationFormatter.format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);
                            formatApplied = true;
                        }
                        break;
                    case "urlEncode":
                    case "encodeURIComponent":
                        current = encodeURIComponent(current);
                        break;
                    default:
                        if (current[part.method]) {
                            current[part.method].apply(this, part.params);
                        }
                        break;
                }
            }
        }
        // Apply default format if it wasn't applied explicitly
        if (!formatApplied) {
            var formatParts = [{
                    method: "",
                    params: format
                }];
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](format)) {
                // Format is not set
                // Determine from the type of the value
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](current)) {
                    formatParts[0].method = "formatNumber";
                    formatParts[0].params = "";
                }
                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isDate"](current)) {
                    formatParts[0].method = "formatDate";
                    formatParts[0].params = "";
                }
            }
            else {
                // Format set
                // Try to determine formatter based on the format
                var formatterType = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["getFormat"](format);
                // format
                if (formatterType === _utils_Strings__WEBPACK_IMPORTED_MODULE_27__["NUMBER"]) {
                    formatParts[0].method = "formatNumber";
                }
                else if (formatterType === _utils_Strings__WEBPACK_IMPORTED_MODULE_27__["DATE"]) {
                    formatParts[0].method = "formatDate";
                }
                else if (formatterType === _utils_Strings__WEBPACK_IMPORTED_MODULE_27__["DURATION"]) {
                    formatParts[0].method = "formatDuration";
                }
            }
            // Apply format
            if (formatParts[0].method) {
                current = this.getTagValueFromObject(formatParts, current);
            }
        }
        return current;
    };
    Object.defineProperty(Sprite.prototype, "dataItem", {
        /**
         * @return {this} [[DataItem]]
         */
        get: function () {
            if (!this._dataItem) {
                if (this.virtualParent) {
                    return this.virtualParent.dataItem;
                }
                if (this.parent) {
                    return this.parent.dataItem;
                }
            }
            return this._dataItem;
        },
        /**
         * A [[DataItem]] to use as element's data source.
         *
         * @todo Review type
         * @param {this["_dataItem"]}  dataItem  DataItem
         */
        set: function (dataItem) {
            //an not use this["_dataItem"] here, as we return parent data item if this sprite doesn't have one.
            // @todo:think about it
            this.setDataItem(dataItem);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets currently used [[DataItem]].
     *
     * If the element has also `configField` set, it will also look for any
     * config in DataItem's data context to apply to this element.
     *
     * @param {DataItem} dataItem DataItem
     */
    Sprite.prototype.setDataItem = function (dataItem) {
        var _this = this;
        if (this._dataItem != dataItem) {
            this._dataItem = dataItem;
            if (this.configField) {
                if (dataItem.dataContext) {
                    this.config = dataItem.dataContext[this.configField];
                }
            }
            var dataContext_1 = dataItem.dataContext;
            if (dataContext_1) {
                _utils_Object__WEBPACK_IMPORTED_MODULE_29__["each"](this.propertyFields, function (propertyName, fieldValue) {
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](dataContext_1[fieldValue])) {
                        var anyThis = _this;
                        anyThis[propertyName] = dataContext_1[fieldValue];
                    }
                });
            }
            this.invalidate();
        }
    };
    /**
     * ==========================================================================
     * PROPERTY UTILITIES
     * ==========================================================================
     * @hidden
     */
    /**
     * Returns element's property value.
     *
     * Will check if there are any bindings with [[DataItem]].
     *
     * Will also apply any adapters bound to `propertyName`.
     *
     * @param  {ISpriteProperties}  propertyName  Property name
     * @return {any}                              Property value
     */
    Sprite.prototype.getPropertyValue = function (propertyName) {
        var propValue = this.properties[propertyName];
        // Apply adapter
        // @todo get rid of <any>
        if (!this._isTemplate) {
            propValue = this.adapter.apply(propertyName, propValue);
        }
        return propValue;
    };
    Sprite.prototype.setColorProperty = function (property, value, invalidate) {
        var currentValue = this.properties[property];
        if (value instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"] && currentValue instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"] && value.hex == currentValue.hex) {
            return false;
        }
        else {
            return this.setPropertyValue(property, value, invalidate);
        }
    };
    Sprite.prototype.setPercentProperty = function (property, value, invalidate, transform, precision, floor) {
        value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumberOrPercent"](value);
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
            value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, precision, floor);
            return this.setPropertyValue(property, value, invalidate, transform);
        }
        else {
            var currentValue = this.properties[property];
            if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"] && currentValue instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"] && value.value == currentValue.value) {
                return false;
            }
            else {
                return this.setPropertyValue(property, value, invalidate, transform);
            }
        }
    };
    /**
     * Sets elements's property value. Will also propagate the same property value
     * on all element's clones.
     *
     * @param  {this["_properties"]}  property    Property
     * @param  {any}                  value       Value
     * @param  {boolean}              invalidate  Should the sprite be invalidated, cause it's re-rendering
     * @param  {boolean}              transform   Re-apply positioning of the element
     * @return {boolean}                          Did the value change? It will return `true` if the new value and the old value of the property are not the same
     * @todo Review propagation to clones. Right now we simply check if clone is disposed before setting the same property on it. It's better to remove from clone list altogether.
     */
    Sprite.prototype.setPropertyValue = function (property, value, invalidate, transform) {
        var currentValue = this.properties[property];
        if (this.properties[property] !== value) {
            this.properties[property] = value;
            if (this.events.isEnabled("propertychanged")) {
                var event_1 = {
                    type: "propertychanged",
                    target: this,
                    property: property
                };
                this.events.dispatchImmediately("propertychanged", event_1);
            }
            if (invalidate) {
                this.invalidate();
            }
            if (transform) {
                this.invalidatePosition();
            }
            if (this.applyOnClones) {
                var clones = this.clones.values;
                var length_2 = clones.length;
                for (var i = 0; i < length_2; ++i) {
                    var clone = clones[i];
                    if (!clone.isDisposed()) {
                        //(<Sprite>clone).setPropertyValue(<any>property, value, invalidate, transform);
                        clone[property] = value;
                    }
                }
            }
            return true;
        }
        return false;
    };
    Sprite.prototype.bind = function (property, source, bindToProperty, modifier) {
        var _this = this;
        if (bindToProperty === void 0) { bindToProperty = property; }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this._bindings[property])) {
            this._bindings[property].dispose();
        }
        // set current value
        this[property] = source[bindToProperty];
        //source.addEventListener(AMEvent.PROPERTY_CHANGED, this.handleBindings, false, this);
        this._bindings[property] = source.events.on("propertychanged", function (event) {
            if (event.property === bindToProperty) {
                var value = source[bindToProperty];
                if (modifier) {
                    value = modifier(value);
                }
                // TODO clonesById
                _this[property] = value;
            }
        });
    };
    /**
     * Sets up and obeserver function to monitor changes in particular property
     * or properties.
     *
     * @ignore Exclude from docs
     * @param   {string | string[]}  property  Element's property name
     * @param   {function}           listener  Handler function
     * @param   {C}                  context   Context for handler function
     * @returns {IDisposer}                    Event Disposer
     */
    Sprite.prototype.observe = function (property, listener, context) {
        var _this = this;
        return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"](_utils_Array__WEBPACK_IMPORTED_MODULE_28__["map"](_utils_Array__WEBPACK_IMPORTED_MODULE_28__["toArray"](property), function (prop) {
            return _this.events.on("propertychanged", function (e) {
                if (e.property === prop) {
                    listener.call(context, e);
                }
            });
        }));
    };
    /**
     * ==========================================================================
     * ACCESSIBILITY-RELATED PROPERTIES
     * ==========================================================================
     * @hidden
     */
    /**
     * Applies accessibility to the SVG element.
     *
     * Adds `<title>` and `<description>` elements as well as `aria-labelledby`
     * and `role` properties.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.applyAccessibility = function () {
        // Check if we need to add label and description
        var title = this.readerTitle, description = this.readerDescription, role = this.role, hidden = this.readerHidden, checked = this.readerChecked, controls = this.readerControls, live = this.readerLive;
        // Init label/describe ids
        var labelledByIds = [], describedByIds = [];
        var labelledBy = this.readerLabelledBy;
        if (labelledBy) {
            labelledByIds.push(labelledBy);
        }
        var describedBy = this.readerDescribedBy;
        if (describedBy) {
            describedByIds.push(describedBy);
        }
        // If we have only label, we use `aria-label` attribute.
        // If there are both label and description, we'll go with separate tags and
        // use `aria-labelledby`
        if (title && !description && !this.showSystemTooltip) {
            // Only label is set, use attribute
            this.setSVGAttribute({
                "aria-label": title
            });
            // Remove previous elements
            this.removeSVGAttribute("aria-description");
            if (this._titleElement) {
                this.group.removeElement(this._titleElement);
                this._titleElement = undefined;
            }
            if (this._descriptionElement) {
                this.group.removeElement(this._descriptionElement);
                this._descriptionElement = undefined;
            }
        }
        else {
            if (title) {
                var titleElement = this.titleElement;
                var titleId = this.uid + "-title";
                if (titleElement.node.textContent != title) {
                    titleElement.node.textContent = title;
                    titleElement.attr({ id: titleId });
                }
                labelledByIds.push(titleId);
            }
            else if (this._titleElement) {
                this.group.removeElement(this._titleElement);
                this._titleElement = undefined;
            }
            if (description) {
                var descriptionElement = this.descriptionElement;
                var descriptionId = this.uid + "-description";
                if (descriptionElement.node.textContent != description) {
                    descriptionElement.node.textContent = description;
                    descriptionElement.attr({ id: descriptionId });
                }
                labelledByIds.push(descriptionId);
            }
            else if (this._descriptionElement) {
                this.group.removeElement(this._descriptionElement);
                this._descriptionElement = undefined;
            }
        }
        // Add label and described properties
        if (labelledByIds.length) {
            this.setSVGAttribute({ "aria-labelledby": labelledByIds.join(" ") });
        }
        if (describedByIds.length) {
            this.setSVGAttribute({ "aria-describedby": describedByIds.join(" ") });
        }
        // Apply role
        if (role) {
            this.setSVGAttribute({ "role": role });
        }
        else {
            this.removeSVGAttribute("role");
        }
        // Apply aria-hidden
        if (hidden) {
            this.setSVGAttribute({ "aria-hidden": "true" });
        }
        else {
            this.removeSVGAttribute("aria-hidden");
        }
        // Apply aria-checked
        if (checked) {
            this.setSVGAttribute({ "aria-checked": "true" });
        }
        else if (checked === false) {
            this.setSVGAttribute({ "aria-checked": "false" });
        }
        else {
            this.removeSVGAttribute("aria-checked");
        }
        // Apply aria-controls
        if (controls) {
            this.setSVGAttribute({ "aria-controls": controls });
        }
        else {
            this.removeSVGAttribute("aria-controls");
        }
        // Apply aria-live
        if (live) {
            this.setSVGAttribute({ "aria-live": live });
        }
        else {
            this.removeSVGAttribute("aria-live");
        }
    };
    Object.defineProperty(Sprite.prototype, "readerTitle", {
        /**
         * @return {string} Title
         */
        get: function () {
            return this.getPropertyValue("readerTitle");
        },
        /**
         * Screen reader title of the element.
         *
         * @param {string} value Title
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("readerTitle", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerDescription", {
        /**
         * @return {string} Description
         */
        get: function () {
            return this.getPropertyValue("readerDescription");
        },
        /**
         * Screen reader description of the element.
         *
         * @param {string} value Description
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("readerDescription", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "role", {
        /**
         * @return {Roles} Role
         */
        get: function () {
            return this.getPropertyValue("role");
        },
        /**
         * A WAI-ARIA role for the element.
         *
         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#role_definitions} for more information on WAI-ARIA roles
         * @param {Roles}  value  Role
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("role", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerHidden", {
        /**
         * @return {boolean} Hidden?
         */
        get: function () {
            return this.getPropertyValue("readerHidden");
        },
        /**
         * Controls if element should be hidden from screen readers.
         *
         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-hidden} for more information
         * @param {boolean}  value  Hidden?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("readerHidden", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerChecked", {
        /**
         * @ignore Exclude from docs
         * @return {boolean} Checked?
         */
        get: function () {
            return this.getPropertyValue("readerChecked");
        },
        /**
         * Controls if element is currently marked as "checked".
         *
         * @ignore Exclude from docs
         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-checked} for more information
         * @param {boolean} value Checked?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("readerChecked", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerControls", {
        /**
         * @ignore Exclude from docs
         * @return {string} Setting value
         */
        get: function () {
            return this.getPropertyValue("readerControls");
        },
        /**
         * A `uid` of an element this element controls.
         *
         * @ignore Exclude from docs
         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-controls} for more information
         * @param {string} value Setting value
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("readerControls", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerLive", {
        /**
         * @ignore Exclude from docs
         * @return {AriaLive} Setting value
         */
        get: function () {
            return this.getPropertyValue("readerLive");
        },
        /**
         * Controls accessibility setting "aria-live" for the element.
         *
         * @ignore Exclude from docs
         * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions} for more information
         * @param {AriaLive} value Setting value
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("readerLive", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerLabelledBy", {
        /**
         * @ignore Exclude from docs
         * @return {Sprite} Target element
         */
        get: function () {
            return this.getPropertyValue("readerLabelledBy");
        },
        /**
         * A `uid` of an element that describes this element.
         *
         * @ignore Exclude from docs
         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby} for more information
         * @param {Sprite} value Target element
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("readerLabelledBy", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "readerDescribedBy", {
        /**
         * @ignore Exclude from docs
         * @return {Sprite} Target element
         */
        get: function () {
            return this.getPropertyValue("readerDescribedBy");
        },
        /**
         * A `uid` of an element that describes this element.
         *
         * @ignore Exclude from docs
         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-describedby} for more information
         * @param {Sprite} value Target element
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("readerDescribedBy", value)) {
                this.applyAccessibility();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "keyboardOptions", {
        /**
         * ==========================================================================
         * USER INTERACTIONS
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns elements keyboard options.
         *
         * @return {IKeyboardOptions} Keyboard options
         */
        get: function () {
            if (!this.interactions.keyboardOptions) {
                if (this.virtualParent) {
                    return this.virtualParent.keyboardOptions;
                }
                if (this.parent) {
                    return this.parent.keyboardOptions;
                }
            }
            return this.interactions.keyboardOptions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "interactions", {
        /**
         * Returns (creates if necessary) an [[InteractionObject]] associated with
         * this element.
         *
         * [[InteractionObject]] is used to attach all kinds of user-interactions to
         * the element, e.g. click/touch, dragging, hovering, and similar events.
         *
         * @return {InteractionObject} Interaction object
         */
        get: function () {
            if (!this._interaction) {
                var interaction = Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_15__["getInteraction"])().getInteraction(this.dom);
                this._interaction = interaction;
                this._interaction.clickable = this.clickable;
                this._interaction.hoverable = this.hoverable;
                this._interaction.trackable = this.trackable;
                this._interaction.draggable = this.draggable;
                this._interaction.swipeable = this.swipeable;
                this._interaction.resizable = this.resizable;
                this._interaction.wheelable = this.wheelable;
                this._interaction.inert = this.inert;
                this._interaction.sprite = this;
                this._disposers.push(this._interaction);
            }
            return this._interaction;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns true if interactions object was created. Mostly used just to avoid creating interactions object if not needed.
     * @return {boolean} Is Sprite interactive?
     */
    Sprite.prototype.isInteractive = function () {
        if (this._interaction) {
            return true;
        }
        else {
            return false;
        }
    };
    Object.defineProperty(Sprite.prototype, "focusable", {
        /**
         * @return {Optional<boolean>} Can element be focused?
         */
        get: function () {
            return this.getPropertyValue("focusable");
        },
        /**
         * ==========================================================================
         * ELEMENT FOCUS-RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Controls if the element can gain focus.
         *
         * Focusable element will be selectable via TAB key.
         *
         * Please note, clicking it with a mouse or touching will not add focus to
         * it.
         *
         * Focused element will show a system-specific highlight, which might ruin
         * the overal look. This is why we don't focus element on click/touch.
         *
         * A default setting varies for different elements. By default all elements
         * are not focusable, except certain items like buttons, legend items, etc.
         *
         * @default undefined (auto)
         * @param {Optional<boolean>}  value  Can element be focused?
         */
        set: function (value) {
            var _this = this;
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("focusable", value)) {
                if (!value && !this.isInteractive()) {
                }
                else {
                    this.interactions.focusable = value;
                    if (value) {
                        this.setSVGAttribute({ "focusable": value });
                    }
                    else {
                        this.removeSVGAttribute("focusable");
                    }
                    // Set focus events that would apply "focus" state
                    // setEventDisposer will also remove listeners if value == false
                    this.interactions.setEventDisposer("sprite-focusable", value, function () { return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        _this.events.on("blur", _this.handleBlur, _this, false),
                        _this.events.on("focus", _this.handleFocus, _this, false)
                    ]); });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Applies filters (if set) when element gains focus.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["focus"]} ev Original event
     */
    Sprite.prototype.handleFocus = function (ev) {
        if (this.focusable) {
            if (this.topParent) {
                this.topParent.hasFocused = true;
            }
            if (this.focusFilter) {
                // Any `filters` manipulation will trigger `applyFilters()` so we don't
                // need to call it here
                this.filters.push(this.focusFilter);
            }
            if (this.hoverOnFocus) {
                // Trigger a hover event as well
                this.isHover = true;
                this.handleOver();
            }
        }
    };
    /**
     * Removes focus filter (if set) when elementloses focus.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["blur"]} ev Original event
     */
    Sprite.prototype.handleBlur = function (ev) {
        if (this.focusable) {
            if (this.topParent) {
                this.topParent.hasFocused = false;
            }
            if (this.focusFilter) {
                // Any `filters` manipulation will trigger `applyFilters()` so we don't
                // need to call it here
                this.filters.removeValue(this.focusFilter);
            }
            if (this.hoverOnFocus) {
                // Trigger a out event as well
                this.isHover = false;
                this.handleOut();
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "focusFilter", {
        /**
         * A reference to a [[Filter]] to apply to element when it gains focus.
         *
         * Normally, browsers will draw a default ugly square around focused element,
         * which totally makes sense because its purpose is to help identify active
         * element for visually impaired people.
         *
         * However, if you would rather apply a filter, so you can modify how focused
         * element looks like, use `focusFilter`.
         *
         * Simply set it to an anstance of [[FocusFilter]], or any other filter
         * object.
         *
         * ```TypeScript
         * chart.focusFilter = new am4core.FocusFilter();
         * ```
         * ```JavaScript
         * chart.focusFilter = new am4core.FocusFilter();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "focusFilter": {
         *     "type": "FocusFilter"
         *   },
         *   // ...
         * }
         * ```
         *
         * @see {@link Filter}
         * @ignore Exclude from docs
         * @return {Optional<Filter>} Focused element filter
         * @todo This is still experimental, use at your own risk.
         */
        get: function () {
            /*if (!this._focusFilter) {
                this._focusFilter = new FocusFilter();
                this._disposers.push(this._focusFilter);
            }*/
            //return this._focusFilter;
            var focusFilter = this._focusFilter;
            if (focusFilter) {
                return focusFilter;
            }
            if (this.virtualParent) {
                return this.virtualParent.focusFilter;
            }
            else if (this.parent) {
                return this.parent.focusFilter;
            }
            //this._focusFilter = new FocusFilter();
            //this._disposers.push(this._focusFilter);
        },
        /**
         * @see {@link Filter}
         * @ignore Exclude from docs
         * @todo This is still experimental, don't use it
         */
        set: function (value) {
            this._focusFilter = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "hoverOnFocus", {
        /**
         * @return {boolean} Trigger hover on focus?
         */
        get: function () {
            return this.getPropertyValue("hoverOnFocus");
        },
        /**
         * If set to `true`, this element will also trigger `"over"` event with all
         * the related consequences, like "hover" state being applied and tooltip
         * being shown.
         *
         * Useful as an accessibility feature to display rollover tooltips on items
         * selected via keyboard.
         *
         * @param {boolean}  value  Trigger hover on focus?
         * @default false
         */
        set: function (value) {
            if (value !== this.hoverOnFocus) {
                this.setPropertyValue("hoverOnFocus", value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tabindex", {
        /**
         * Returns current TAB index for focusable item.
         *
         * @return {number} TAB index
         */
        get: function () {
            var index = this._tabindex;
            if (index != null) {
                return index;
            }
            else if (this.virtualParent) {
                return this.virtualParent.tabindex;
            }
            else if (this.parent) {
                return this.parent.tabindex;
            }
        },
        /**
         * Sets TAB index.
         *
         * Tab index maintains the order in which focusable elements gain focus when
         * TAB key is pressed.
         *
         * Please note, tab index is not local to the chart. It affects the whole
         * of the page, including non-SVG elements. Maintain extreme causion when
         * setting tab indexes, as it affects the user experience for the whole
         * web page.
         *
         * @param {number} value TAB index
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            if (this.setPropertyValue("tabindex", value) && _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                this.interactions.tabindex = value;
                this.setSVGAttribute({ "tabindex": value });
                if (value > -1) {
                    this.focusable = true;
                }
                else {
                    this.focusable = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "inertiaOptions", {
        /**
         * ==========================================================================
         * DRAGGING AND RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns element's options to be used for inertia. This setting is
         * inheritable, meaning that if not set directly, it will search in all its
         * ascendants until very top.
         *
         * Inertia is used only if element's `inert` is set to `true`.
         *
         * "Inert" element, when dragged and released, will carry the momentum of the
         * movement, and will continue moving in the same drag direction, gradually
         * reducing in speed until finally stops.
         *
         * Check [[IInertiaOptions]] for how you tweak inertia animations.
         *
         * @return {Dictionary<InertiaTypes, IInertiaOptions>} Inertia options
         */
        get: function () {
            if (!this.interactions.inertiaOptions) {
                if (this.parent) {
                    return this.parent.inertiaOptions;
                }
            }
            return this.interactions.inertiaOptions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "draggable", {
        /**
         * @return {boolean} `true` if element can be dragged
         */
        get: function () {
            return this.getPropertyValue("draggable");
        },
        /**
         * Controls if the element is draggable.
         *
         * @param {boolean}  value  `true` if element can be dragged
         */
        set: function (value) {
            var _this = this;
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("draggable", value)) {
                if (!value && !this.isInteractive()) {
                }
                else {
                    this.applyCursorStyle();
                    this.interactions.draggable = value;
                    //interaction.processDraggable(this);
                    // Add events
                    // @todo Maybe attach to InteractionObject's multidisposer so that
                    // sprites events get disposed together with them?
                    // this.interactions.disposers.getItem("movable")
                    // setEventDisposer will also remove listeners if value == false
                    this.interactions.setEventDisposer("sprite-draggable", value, function () { return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        _this.events.on("down", _this.handleDown, _this, false),
                        _this.events.on("dragstart", _this.handleDragStart, _this, false),
                        _this.events.on("drag", _this.handleDragMove, _this, false),
                        _this.events.on("dragstop", _this.handleDragStop, _this, false)
                    ]); });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Executes when dragged element is being started to drag.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.handleDragStart = function () {
        this.interactions.originalPosition = {
            x: this.pixelX,
            y: this.pixelY
        };
        this._isDragged = true;
        this.hideTooltip(0);
    };
    /**
     * Tell this element to start being dragged. This is useful if you want to
     * drag items by interactions performed not directly on the target element.
     *
     * Parameter `pointer` is highly recommended. By passing in the Pointer you
     * will ensure that movement is tracked for the pointer that you want. If not
     * supplied, the system will try to determine the most logical pointer.
     *
     * However this may fail if you have more than one pointer active, which
     * might happen if you have several objects being dragged on a touch device.
     *
     * @ignore Exclude from docs
     * @param {IPointer} pointer Pointer to use for movement
     */
    Sprite.prototype.dragStart = function (pointer) {
        //this.dragStop(pointer);
        //this.draggable = true;
        this._isDragged = true;
        Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_15__["getInteraction"])().dragStart(this.interactions, pointer);
    };
    /**
     * Executes when dragged element is being dropped.
     *
     * @ignore Exclude from docs
     */
    Sprite.prototype.handleDragStop = function () {
        this._isDragged = false;
        this.showTooltip();
        this.interactions.originalPosition = undefined;
    };
    /**
     * Stops manually initiated dragging of the element.
     *
     * @ignore Exclude from docs
     * @param {IPointer} pointer Pointer to use as a reference
     */
    Sprite.prototype.dragStop = function (pointer) {
        //this.draggable = false;
        this._isDragged = false;
        Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_15__["getInteraction"])().dragStop(this.interactions, pointer);
        //this.handleDragStop();
    };
    /**
     * Executes when {Sprite} is being dragged.
     *
     * @ignore Exclude from docs
     * @param {InteractionEvent} ev Event object
     * @todo Implement parent position offset calculation
     */
    Sprite.prototype.handleDragMove = function (ev) {
        var point = this.interactions.originalPosition;
        if (point) {
            var globalScale = this.parent.globalScale * this.svgContainer.cssScale;
            this.moveTo({ x: point.x + ev.shift.x / globalScale, y: point.y + ev.shift.y / globalScale }, undefined, undefined, true);
            //this.dispatchImmediately("drag", ev);
        }
    };
    Object.defineProperty(Sprite.prototype, "inert", {
        /**
         * @return {boolean} `true` if element should use inertia when animated
         */
        get: function () {
            return this.getPropertyValue("inert");
        },
        /**
         * Controls if the element should use inertia when interacted with.
         *
         * "Inert" element, when dragged and released, will carry the momentum of the
         * movement, and will continue moving in the same drag direction, gradually
         * reducing in speed until finally stops.
         *
         * @default false
         * @param {boolean} value `true` if element should use inertia when animated
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("inert", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.interactions.inert = value;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "hoverOptions", {
        /**
         * ==========================================================================
         * HOVERING
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns Sprite's hover options.
         *
         * @see {@link IHoverOptions} for available options.
         * @return {IHoverOptions} Options
         */
        get: function () {
            if (!this.interactions.hoverOptions) {
                if (this.virtualParent) {
                    return this.virtualParent.hoverOptions;
                }
                if (this.parent) {
                    return this.parent.hoverOptions;
                }
            }
            return this.interactions.hoverOptions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "hoverable", {
        /**
         * @return {boolean} `true` if element is hoverable
         */
        get: function () {
            return this.getPropertyValue("hoverable");
        },
        /**
         * Controls if the element is hoverable (hover events are registered).
         *
         * Use `over` and `out` events, to watch for those respective actions.
         *
         * @default false
         * @param {boolean} value `true` if element can be hovered
         */
        set: function (value) {
            var _this = this;
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("hoverable", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.applyCursorStyle();
                    this.interactions.hoverable = value;
                    // setEventDisposer will also remove listeners if value == false
                    this.interactions.setEventDisposer("sprite-hoverable", value, function () { return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        _this.events.on("over", _this.handleOver, _this, false),
                        _this.events.on("out", _this.handleOut, _this, false),
                    ]); });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles tasks when element becomes hovered:
     * * Shows [[Tooltip]] if applicable
     * * Applies "hover" state
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["over"]} ev Event object
     */
    Sprite.prototype.handleOver = function (ev) {
        if (this._outTimeout) {
            this._outTimeout.dispose();
        }
        if (this.isHover) {
            if (this.states.hasKey("hover")) {
                //this.setState("hover");
                // This will check `isHover` and will set "hover" state
                if (!this.isHidden) {
                    this.applyCurrentState();
                }
            }
            var point = void 0;
            if (ev && ev.pointer) {
                point = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["documentPointToSvg"](ev.pointer.point, this.svgContainer.SVGContainer, this.svgContainer.cssScale);
            }
            this.showTooltip(point);
        }
        else {
            this.hideTooltip();
            if (!this.isHidden && this.states.hasKey("hover")) {
                this.applyCurrentState();
            }
        }
    };
    /**
     * Handles tasks when element loses hover:
     *
     * * Hides [[Tooltip]]
     * * Applies default state
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["out"]} ev [description]
     */
    Sprite.prototype.handleOut = function (ev) {
        this.hideTooltip();
        this._outTimeout = this.setTimeout(this.handleOutReal.bind(this), this.rollOutDelay);
    };
    /**
     * [handleOutReal description]
     *
     * @ignore
     * @todo description
     */
    Sprite.prototype.handleOutReal = function () {
        if (!this.isHidden && !this.isHiding && this.states.hasKey("hover")) {
            this.applyCurrentState();
        }
    };
    Object.defineProperty(Sprite.prototype, "hitOptions", {
        /**
         * ==========================================================================
         * CLICKING/TAPPING AND TOGGLING STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns Sprite's click (hit) options.
         *
         * Click (hit) options control things like double-click, timeouts, etc.
         *
         * @see {@link IHitOptions} for available options.
         * @return {IHitOptions} Options
         */
        get: function () {
            if (!this.interactions.hitOptions) {
                if (this.virtualParent) {
                    return this.virtualParent.hitOptions;
                }
                if (this.parent) {
                    return this.parent.hitOptions;
                }
            }
            return this.interactions.hitOptions;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Prepares element's after `down` event.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["down"]} ev Event
     */
    Sprite.prototype.handleDown = function (ev) {
        if (this.interactions.downPointers.length === 1) {
            this.interactions.originalPosition = {
                x: this.pixelX,
                y: this.pixelY
            };
            this.interactions.originalAngle = this.rotation;
            this.interactions.originalScale = this.scale;
            if (this.states.hasKey("down")) {
                this.setState("down");
            }
        }
    };
    /**
     * Prepares element's after `up` event.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["up"]} ev Event
     */
    Sprite.prototype.handleUp = function (ev) {
        /*if (!this.isDown) {
            this.interactions.originalPosition = null;
            this.interactions.originalAngle = null;
            this.interactions.originalScale = null;
        }*/
        if (this.states.hasKey("down")) {
            this.applyCurrentState();
        }
    };
    Object.defineProperty(Sprite.prototype, "clickable", {
        /**
         * @return {boolean}
         */
        get: function () {
            return this.getPropertyValue("clickable");
        },
        /**
         * Indicates if the element is clickable.
         *
         * Some type of the elements, like buttons are clickable by default.
         *
         * Most of the elements are not clickable by default.
         *
         * Use `hit`, `doublehit`, `up`, `down`, `toggled` events to watch for
         * respective click/touch actions.
         *
         * @param {boolean} value `true` if element can be clicked
         */
        set: function (value) {
            var _this = this;
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("clickable", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.applyCursorStyle();
                    this.interactions.clickable = value;
                    // setEventDisposer will also remove listeners if value == false
                    this.interactions.setEventDisposer("sprite-clickable", value, function () { return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        _this.events.on("down", _this.handleDown, _this, false),
                        _this.events.on("up", _this.handleUp, _this, false)
                    ]); });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "togglable", {
        /**
         * @return {boolean} Is togglable?
         */
        get: function () {
            return this.getPropertyValue("togglable");
        },
        /**
         * Indicates if element can be toggled on and off by subsequent clicks/taps.
         *
         * Togglable element will alternate its `isActive` property between `true`
         * and `false` with each click.
         *
         * @param {boolean} value Is togglable?
         */
        set: function (value) {
            var _this = this;
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("togglable", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    // setEventDisposer will also remove listeners if value == false
                    this.interactions.setEventDisposer("sprite-togglable", value, function () { return _this.events.on("hit", _this.handleToggle, _this, false); });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles toggling of the element.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<Sprite, ISpriteEvents>["hit"]} ev Event
     */
    Sprite.prototype.handleToggle = function (ev) {
        this.isActive = !this.isActive;
    };
    Object.defineProperty(Sprite.prototype, "url", {
        /**
         * @return {Optional<string>} URL
         */
        get: function () {
            return this.getPropertyValue("url");
        },
        /**
         * Click-through URL for this element.
         *
         * If set, clicking/tapping this element will open the new URL in a target
         * window/tab as set by `urlTarget`.
         *
         * Please note that URL will be parsed by data placeholders in curly
         * brackets, to be populated from data. E.g.:
         *
         * ```TypeScript
         * series.columns.template.url = "https://www.google.com/search?q={category.urlEncode()}";
         * ```
         * ```JavaScript
         * series.columns.template.url = "https://www.google.com/search?q={category.urlEncode()}";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     // ...
         *     "columns": {
         *       "url": "https://www.google.com/search?q={category.urlEncode()}"
         *     }
         *   }]
         * }
         * ```
         *
         * @param {Optional<string>} value URL
         */
        set: function (value) {
            if (this.setPropertyValue("url", value)) {
                if (this._urlDisposer) {
                    this._urlDisposer.dispose();
                }
                // If URL is not empty, set up events
                if (_utils_Utils__WEBPACK_IMPORTED_MODULE_25__["isNotEmpty"](value)) {
                    this._urlDisposer = this.events.on("hit", this.urlHandler, this, false);
                    // Set other required parameters
                    this.clickable = true;
                    this.cursorOverStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].pointer;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "baseId", {
        get: function () {
            if (!this._baseId && this.parent) {
                this.baseId = this.parent.baseId;
            }
            return this._baseId;
        },
        set: function (value) {
            this.setBaseId(value);
        },
        enumerable: true,
        configurable: true
    });
    Sprite.prototype.setBaseId = function (value) {
        if (value != this._baseId) {
            if (this.invalid) {
                this.invalid = false;
                _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].removeFromInvalidSprites(this);
                this.invalidate();
            }
            this._baseId = value;
        }
    };
    Object.defineProperty(Sprite.prototype, "urlTarget", {
        /**
         * @return {string} URL target
         */
        get: function () {
            return this.getPropertyValue("urlTarget");
        },
        /**
         * Target to use for URL clicks:
         *
         * * _blank
         * * _self (default)
         * * _parent
         * * _top
         * * Name of the window/frame
         *
         * Ignored if `url` is not set.
         *
         * @param {string} value URL target
         */
        set: function (value) {
            this.setPropertyValue("urlTarget", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles URL transition on element click.
     *
     * @ignore Exclude from docs
     * @param {InteractionEvent} ev An event object
     */
    Sprite.prototype.urlHandler = function (ev) {
        // Is URL set?
        if (_utils_Utils__WEBPACK_IMPORTED_MODULE_25__["isNotEmpty"](this.url)) {
            // Proceed to the URL
            var url = this.populateString(this.url);
            if (this.urlTarget === "_self") {
                window.location.href = url;
            }
            else {
                window.open(url, this.urlTarget);
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "swipeOptions", {
        /**
         * ==========================================================================
         * SWIPING GESTURE TRACKING
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns element's swipe gesture options.
         *
         * @return {ISwipeOptions} Swipe gesture options
         */
        get: function () {
            if (!this.interactions.swipeOptions) {
                if (this.virtualParent) {
                    return this.virtualParent.swipeOptions;
                }
                if (this.parent) {
                    return this.parent.swipeOptions;
                }
            }
            return this.interactions.swipeOptions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "swipeable", {
        /**
         * @return {boolean} Element swipable?
         */
        get: function () {
            return this.getPropertyValue("swipeable");
        },
        /**
         * Controls if element is swipeable.
         *
         * Swipable element will invoke `swipe`, `swipeleft` and `swiperight` events,
         * when quick horizontal drag action is performed with either mouse or touch.
         *
         * Please note that combining swipe and drag is possible, however will incur
         * a slight but noticeable delay in drag start.
         *
         * @param {boolean}  value  Element swipable?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("swipeable", value)) {
                this.applyCursorStyle();
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.interactions.swipeable = value;
                }
                //interaction.processSwipeable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "trackable", {
        /**
         * @return {boolean} Track cursor movement over element?
         */
        get: function () {
            return this.getPropertyValue("trackable");
        },
        /**
         * ==========================================================================
         * POINTER TRACKING
         * ==========================================================================
         * @hidden
         */
        /**
         * Indicates if the element is trackable (mouse position over it is reported to
         * event listeners).
         *
         * Will invoke `track` events whenever pointer (cursor) changes position
         * while over element.
         *
         * Please note, touch devices will also invoke `track` events when touch
         * point is moved while holding down on a trackable element.
         *
         * @param {boolean} value Track cursor movement over element?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("trackable", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.applyCursorStyle();
                    this.interactions.trackable = value;
                }
                //interaction.processTrackable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "wheelable", {
        /**
         * @return {boolean} Mouse wheel events enabled?
         */
        get: function () {
            return this.getPropertyValue("wheelable");
        },
        /**
         * ==========================================================================
         * MOUSE-WHEEL RELATED
         * ==========================================================================
         * @hidden
         */
        /**
         * Indicates if the element can be interacted with mouse wheel.
         *
         * Will invoke `wheel`, `wheelup`, `wheeldown`, `wheelleft`, and `wheelright`
         * events when using mouse wheel over the element.
         *
         * @param {boolean} value Mouse wheel events enabled?
         */
        set: function (value) {
            if (this.setPropertyValue("wheelable", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.applyCursorStyle();
                    this.interactions.wheelable = value;
                }
                //interaction.processWheelable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "resizable", {
        /**
         * @return {boolean} Element resizable?
         */
        get: function () {
            return this.getPropertyValue("resizable");
        },
        /**
         * ==========================================================================
         * RESIZE
         * ==========================================================================
         * @hidden
         */
        /**
         * Indicates if this element is resizable.
         *
         * Enabling resize will turn on various interactions on the element. Their
         * actual functionality will depend on other properties.
         *
         * If the element also `draggable`, resize will only happen with two points
         * of contact on a touch device.
         *
         * If the element is not draggable, resize can be performed with just one
         * point of contact, touch or mouse.
         *
         * Will invoke `resize` event every time the size of the element changes.
         *
         * @param {boolean}  value  Element resizable?
         */
        set: function (value) {
            var _this = this;
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("resizable", value)) {
                if (!value && !this.isInteractive()) {
                    // void
                }
                else {
                    this.applyCursorStyle();
                    this.interactions.resizable = value;
                    // setEventDisposer will also remove listeners if value == false
                    this.interactions.setEventDisposer("sprite-resizable", value, function () { return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        _this.events.on("down", _this.handleDown, _this, false),
                        _this.events.on("resize", _this.handleResize, _this, false)
                    ]); });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles resize intermediate step.
     *
     * By default this method resizes actual element. Each element, can override
     * this method to implement their own resize logic.
     *
     * @ignore Exclude from docs
     * @param {InteractionEvent} ev Event object
     */
    Sprite.prototype.handleResize = function (ev) {
        this.scale = this.interactions.originalScale * ev.scale;
        this.validatePosition();
        /*center: (io.draggable
        ? $math.getMidPoint(point1, point2)
        : {
            "x": io.originalPosition.x,
            "y": io.originalPosition.y
        })*/
        //this.moveTo(this.originalPosition.x + ev.shift.x, this.originalPosition.y + ev.shift.y);
        if (this.draggable) {
            var svgPoint1 = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["documentPointToSvg"](ev.point1, this.htmlContainer, this.svgContainer.cssScale);
            var svgPoint2 = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["documentPointToSvg"](ev.point2, this.htmlContainer, this.svgContainer.cssScale);
            var svgMidPoint = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["getMidPoint"](svgPoint1, svgPoint2);
            var parentPoint1 = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["documentPointToSprite"](ev.startPoint1, this.parent);
            var parentPoint2 = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["documentPointToSprite"](ev.startPoint2, this.parent);
            var originalPosition = this.interactions.originalPosition;
            var originalScale = this.interactions.originalScale;
            if (originalPosition) {
                var spritePoint1 = { x: (parentPoint1.x - originalPosition.x) / originalScale, y: (parentPoint1.y - originalPosition.y) / originalScale };
                var spritePoint2 = { x: (parentPoint2.x - originalPosition.x) / originalScale, y: (parentPoint2.y - originalPosition.y) / originalScale };
                var spriteMidPoint = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["getMidPoint"](spritePoint1, spritePoint2);
                var parentPoint = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["svgPointToSprite"](svgMidPoint, this.parent);
                this.moveTo({ x: parentPoint.x - spriteMidPoint.x * this.scale, y: parentPoint.y - spriteMidPoint.y * this.scale });
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "cursorOptions", {
        /**
         * ==========================================================================
         * MOUSE-RELATED
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns element's cursor options.
         *
         * Cursor options usually define cursor style for various states of the
         * hovered element.
         *
         * Elements inherit `cursorOptions` from their parents if they don't have
         * them set explicitly.
         *
         * @see {@link ICursorOptions} for a list of available options
         * @return {ICursorOptions} Cursor options
         */
        get: function () {
            if (!this.interactions.cursorOptions) {
                if (this.virtualParent) {
                    return this.virtualParent.cursorOptions;
                }
                if (this.parent) {
                    return this.parent.cursorOptions;
                }
            }
            return this.interactions.cursorOptions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "cursorOverStyle", {
        /**
         * A shortcut to setting mouse cursor on hover.
         *
         * Example:
         *
         * ```TypeScript
         * series.slices.template.cursorOverStyle = am4core.MouseCursorStyle.pointer;
         * ```
         * ```JavaScript
         * series.slices.template.cursorOverStyle = am4core.MouseCursorStyle.pointer;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": {
         *     // ...
         *     "slices": {
         *       "cursorOverStyle": "pointer"
         *     }
         *   }
         * }
         * ```
         *
         * @param {Array<IStyleProperty>} style An array of styles to apply onhover
         */
        set: function (style) {
            this.cursorOptions.overStyle = style;
            Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_15__["getInteraction"])().applyCursorOverStyle(this.interactions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "cursorDownStyle", {
        /**
         * A shortcut to setting mouse cursor when button is pressed down.
         *
         * Example:
         *
         * ```TypeScript
         * series.slices.template.cursorDownStyle = am4core.MouseCursorStyle.grabbing;
         * ```
         * ```JavaScript
         * series.slices.template.cursorDownStyle = am4core.MouseCursorStyle.grabbing;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": {
         *     // ...
         *     "slices": {
         *       "cursorDownStyle": "grabbing"
         *     }
         *   }
         * }
         * ```
         *
         * @param {Array<IStyleProperty>} style An array of styles to apply onhover
         */
        set: function (style) {
            this.cursorOptions.downStyle = style;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Applies default cursor styles for interactable elements.
     *
     * @ignore Exclude from docs
     * @todo Determine if this is necessary. Maybe let's not apply any cursor styles by default
     */
    Sprite.prototype.applyCursorStyle = function () {
        // Draggable styles
        /*if (this.draggable) {

            if (!$type.hasValue(this.cursorOptions.overStyle)) {
                this.cursorOptions.overStyle = MouseCursorStyle.grab;
            }

            if (!$type.hasValue(this.cursorOptions.downStyle)) {
                this.cursorOptions.downStyle = MouseCursorStyle.grabbing;
            }
        }*/
    };
    Object.defineProperty(Sprite.prototype, "interactionsEnabled", {
        /**
         * @return {boolean} Is interaction enabled for this element?
         */
        get: function () {
            var value = this.getPropertyValue("interactionsEnabled");
            if (value === false) {
                return false;
            }
            if (this.virtualParent) {
                return this.virtualParent.interactionsEnabled;
            }
            if (this.parent) {
                return this.parent.interactionsEnabled;
            }
            return true;
        },
        /**
         * Setting this to `false` will effectively disable all interactivity on the
         * element.
         *
         * @param {boolean}  value  Is interaction enabled for this element?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("interactionsEnabled", value)) {
                var pointerEvents = null; // must be null, not "null"!
                if (!value) {
                    pointerEvents = "none";
                }
                else {
                    // this is for IE
                    this.group.node.style.pointerEvents = "";
                }
                this.group.node.style.pointerEvents = pointerEvents;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "exporting", {
        /**
         * @return {Export} Export instance
         */
        get: function () {
            return this.getExporting();
        },
        /**
         * ==========================================================================
         * EXPORT-RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * An [[Export]] instance.
         *
         * Used to access API of the chart export functionality.
         *
         * If `exporting` is not set, the element inherits [[Export]] instance from
         * its parents.
         *
         * Upon request, if no parent has such instance, a new one is created, using
         * default settings, what in most cases is just enough.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/} for more info about exporting
         * @param {Export}  exp  Export
         */
        set: function (exp) {
            this._exporting.set(exp, exp);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * This is here as a method so that inheriting classes could override it.
     *
     * @return {Export} Export instance
     */
    Sprite.prototype.getExporting = function () {
        var _export = this._exporting.get();
        if (_export) {
            return _export;
        }
        else {
            if (this.isStandaloneInstance || !this.parent) {
                _export = new _export_Export__WEBPACK_IMPORTED_MODULE_24__["Export"](this.svgContainer.SVGContainer);
                _export.sprite = this;
                _export.language = this.language;
                _export.dateFormatter = this.dateFormatter;
                _export.durationFormatter = this.durationFormatter;
                this._exporting.set(_export, _export);
            }
            else {
                return this.parent.exporting;
            }
        }
        return _export;
    };
    Object.defineProperty(Sprite.prototype, "exportable", {
        /**
         * @return {boolean} Export?
         */
        get: function () {
            var svgContainer = this.svgContainer;
            return !svgContainer || _utils_Array__WEBPACK_IMPORTED_MODULE_28__["indexOf"](svgContainer.nonExportableSprites, this) == -1;
        },
        /**
         * If set to `false` this element will be omitted when exporting the chart
         * to an image.
         *
         * @default true
         * @param {boolean}  value  Export?
         */
        set: function (value) {
            var svgContainer = this.svgContainer;
            if (svgContainer && value != this.exportable) {
                if (value) {
                    _utils_Array__WEBPACK_IMPORTED_MODULE_28__["remove"](svgContainer.nonExportableSprites, this);
                }
                else {
                    svgContainer.nonExportableSprites.push(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * ==========================================================================
     * MODAL/POPUP RELATED STUFF
     * ==========================================================================
     * @hidden
     */
    /**
     * Private method to be used for "classPrefix" adapter for modals/popups.
     *
     * @param {string}  value  Prefix
     */
    Sprite.prototype.modalPrefix = function (value) {
        value = _Options__WEBPACK_IMPORTED_MODULE_17__["options"].classNamePrefix + value;
        return value;
    };
    Object.defineProperty(Sprite.prototype, "modal", {
        /**
         * Returns a [[Modal]] instance, associated with this chart.
         * (elements top parent)
         *
         * Accessing modal does not make it appear. To make a modal appear, use
         * `showModal()` method.
         *
         * @see {@link Modal} for more information about using Modal windows
         * @return {Modal} Modal instance
         */
        get: function () {
            var svgContainer = this.svgContainer;
            if (svgContainer) {
                var modal = svgContainer.modal;
                if (!modal.adapter.has("classPrefix", this.modalPrefix)) {
                    modal.adapter.add("classPrefix", this.modalPrefix);
                }
                return modal;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Opens a modal window with specific content (`text` parameter) and,
     * optionally, `title`.
     *
     * The `text` parameter can contain HTML content.
     *
     * @see {@link Modal} for more information about using Modal windows
     * @param {string}  text   Modal contents
     * @param {string}  title  Title for the modal window
     */
    Sprite.prototype.openModal = function (text, title) {
        var svgContainer = this.svgContainer;
        if (svgContainer) {
            return svgContainer.openModal(text, title);
        }
    };
    /**
     * Hides modal window if there is one currently open.
     */
    Sprite.prototype.closeModal = function () {
        var svgContainer = this.svgContainer;
        if (svgContainer) {
            svgContainer.closeModal();
        }
    };
    Object.defineProperty(Sprite.prototype, "popups", {
        /**
         * A list of popups for this chart.
         *
         * @return {ListTemplate<Popup>} Popups
         */
        get: function () {
            var svgContainer = this.svgContainer;
            if (svgContainer) {
                var popups = svgContainer.popups;
                popups.template.sprite = this;
                if (!popups.template.adapter.has("classPrefix", this.modalPrefix)) {
                    popups.template.adapter.add("classPrefix", this.modalPrefix);
                }
                return popups;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates, opens, and returns a new [[Popup]] window.
     *
     * `text` can be any valid HTML.
     *
     * `title` is currently not supported.
     *
     * @param  {string}  text   Popup contents
     * @param  {string}  title  Popup title
     * @return {Popup}          Popup instance
     */
    Sprite.prototype.openPopup = function (text, title) {
        var svgContainer = this.svgContainer;
        if (svgContainer) {
            return svgContainer.openPopup(text, title);
        }
    };
    /**
     * Closes all currently open popup windows
     */
    Sprite.prototype.closeAllPopups = function () {
        var svgContainer = this.svgContainer;
        if (svgContainer) {
            return svgContainer.closeAllPopups();
        }
    };
    Object.defineProperty(Sprite.prototype, "x", {
        /**
         * @return {number | Percent} X coordinate
         */
        get: function () {
            return this.getPropertyValue("x");
        },
        /**
         * ==========================================================================
         * POSITIONAL PROPERTIES AND RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Element's absolute or relative X coordinate.
         *
         * If setting both X and Y, please consider using `moveTo()` method instead,
         * as it will be faster to set both coordinates at once.
         *
         * @param {number | Percent} value X coordinate
         */
        set: function (value) {
            if (!this.isDragged) {
                this.setPercentProperty("x", value, false, true, this._positionPrecision, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelX", {
        /**
         * Returns element's current absolute X coordinate in pixels.
         *
         * @readonly
         * @return {number} X coordinate (px)
         */
        get: function () {
            return this.adapter.apply("pixelX", _utils_Math__WEBPACK_IMPORTED_MODULE_26__["fitToRange"](this.getPixelX(this.x), this.minX, this.maxX));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeX", {
        /**
         * Returns element's current relative X coordinate in [[Percent]].
         *
         * @return {number} X coordinate ([[Percent]])
         */
        get: function () {
            return this.adapter.apply("relativeX", this.getRelativeX(this.x));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "minX", {
        /**
         * @ignore Exclude from docs
         * @return {number} Min X (px)
         */
        get: function () {
            return this.getPropertyValue("minX");
        },
        /**
         * The smallest allowable absolute X coordinate for this element.
         *
         * This is used to contain element movement within certain boundaries.
         *
         * @ignore Exclude from docs
         * @param {number} value Min X (px)
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, this._positionPrecision, true);
                this.setPropertyValue("minX", value, false, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "maxX", {
        /**
         * @ignore Exclude from docs
         * @return {number} Max X (px)
         */
        get: function () {
            return this.getPropertyValue("maxX");
        },
        /**
         * The biggest allowable absolute X coordinate for this element.
         *
         * This is used to contain element movement within certain boundaries.
         *
         * @ignore Exclude from docs
         * @param {number} value Max X (px)
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, this._positionPrecision, true);
                this.setPropertyValue("maxX", value, false, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "y", {
        /**
         * @return {number | Percent} Y coordinate
         */
        get: function () {
            return this.getPropertyValue("y");
        },
        /**
         * Element's absolute or relative Y coordinate.
         *
         * If setting both X and Y, please consider using `moveTo()` method instead,
         * as it will be faster to set both coordinates at once.
         *
         * @param {number | Percent}  value  Y coordinate
         */
        set: function (value) {
            if (!this.isDragged) {
                this.setPercentProperty("y", value, false, true, this._positionPrecision, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelY", {
        /**
         * Returns element's current absolute Y coordinate in pixels.
         *
         * @readonly
         * @return {number} Y coordinate (px)
         */
        get: function () {
            return this.adapter.apply("pixelY", _utils_Math__WEBPACK_IMPORTED_MODULE_26__["fitToRange"](this.getPixelY(this.y), this.minY, this.maxY));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeY", {
        /**
         * Returns element's current relative Y coordinate in [[Percent]].
         *
         * @readonly
         * @return {number} Y coordinate ([[Percent]])
         */
        get: function () {
            return this.adapter.apply("relativeY", this.getRelativeX(this.y));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "minY", {
        /**
         * @ignore Exclude from docs
         * @return {number} Min Y (px)
         */
        get: function () {
            return this.getPropertyValue("minY");
        },
        /**
         * The smallest allowable absolute Y coordinate for this element.
         *
         * This is used to contain element movement within certain boundaries.
         *
         * @ignore Exclude from docs
         * @param {number} value Min Y (px)
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, this._positionPrecision, true);
                this.setPropertyValue("minY", value, false, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "maxY", {
        /**
         * @ignore Exclude from docs
         * @return {number} Max Y (px)
         */
        get: function () {
            return this.getPropertyValue("maxY");
        },
        /**
         * The biggest allowable absolute Y coordinate for this element.
         *
         * This is used to contain element movement within certain boundaries.
         *
         * @ignore Exclude from docs
         * @param {number}  value  Max Y (px)
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, this._positionPrecision, true);
                this.setPropertyValue("maxY", value, false, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "dx", {
        /**
         * @return {number} Horizontal offset (px)
         */
        get: function () {
            return this.getPropertyValue("dx");
        },
        /**
         * A horizontal offset for the element in pixels.
         *
         * Can be negative value for offset to the left.
         *
         * @param {number}  value  Horizontal offset (px)
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, this._positionPrecision, true);
                this.setPropertyValue("dx", value, false, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "dy", {
        /**
         * @return {number} Vertical offset (px)
         */
        get: function () {
            return this.getPropertyValue("dy");
        },
        /**
         * A vertical offset for the element in pixels.
         *
         * Can be negative value for offset upwards.
         *
         * @param {number}  value  Vertical offset (px)
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](value, this._positionPrecision, true);
                this.setPropertyValue("dy", value, false, true);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "rotation", {
        /**
         * @return {number} Rotation (0-360)
         */
        get: function () {
            return this.getPropertyValue("rotation");
        },
        /**
         * Rotation of the element in degrees. (0-360)
         *
         * @param {number}  value  Rotation (0-360)
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                value = 0;
            }
            this.setPropertyValue("rotation", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "align", {
        /**
         * @return {Align} Horizontal align
         */
        get: function () {
            return this.getPropertyValue("align");
        },
        /**
         * Controls horizontal alignment of the element.
         *
         * This is used by parent [[Container]] when layouting its children.
         *
         * @param {Align}  value  Horizontal align
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("align", value)) {
                if (this.parent) {
                    this.parent.invalidateLayout();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "valign", {
        /**
         * @return {VerticalAlign} Vertical align
         */
        get: function () {
            return this.getPropertyValue("valign");
        },
        /**
         * Controls vertical alignment of the element.
         *
         * This is used by parent [[Container]] when layouting its children.
         *
         * @param {VerticalAlign}  value  Vertical align
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("valign", value)) {
                if (this.parent) {
                    this.parent.invalidateLayout();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "horizontalCenter", {
        /**
         * @return {HorizontalCenter} Horizontal center
         */
        get: function () {
            return this.getPropertyValue("horizontalCenter");
        },
        /**
         * Controls which part of the element to treat as a horizontal center.
         *
         * The setting will be used when positioning, resizing and rotating the
         * element.
         *
         * @param {HorizontalCenter}  value  Horizontal center
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("horizontalCenter", value)) {
                this.updateCenter();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "verticalCenter", {
        /**
         * @return {VerticalCenter} Vertical center
         */
        get: function () {
            return this.getPropertyValue("verticalCenter");
        },
        /**
         * Controls which part of the element to treat as a vertical center.
         *
         * The setting will be used when positioning, resizing and rotating the
         * element.
         *
         * @param {VerticalCenter}  value  Vertical center
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("verticalCenter", value)) {
                this.updateCenter();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "maxWidth", {
        /**
         * @return {number} Maximum width (px)
         */
        get: function () {
            var maxWidth = this.getPropertyValue("maxWidth");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](maxWidth)) {
                if (this.parent) {
                    return this.parent.maxWidth;
                }
            }
            return maxWidth;
        },
        /**
         * ==========================================================================
         * DIMENSIONAL PROPERTIES AND RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Maximum allowed width for the element in pixels.
         *
         * @param {number}  value  Maximum width (px)
         */
        set: function (value) {
            this.setMaxWidth(value);
        },
        enumerable: true,
        configurable: true
    });
    Sprite.prototype.setMaxWidth = function (value) {
        var prevWidth = this.maxWidth;
        var prevHeight = this.maxHeight;
        if (this.setPropertyValue("maxWidth", value)) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this.relativeWidth)) {
                this.invalidate();
            }
            var event_2 = {
                type: "maxsizechanged",
                target: this,
                previousWidth: prevWidth,
                previousHeight: prevHeight
            };
            this.dispatchImmediately("maxsizechanged", event_2);
        }
    };
    Object.defineProperty(Sprite.prototype, "maxHeight", {
        /**
         * @return {number} Maximum height (px)
         */
        get: function () {
            var maxHeight = this.getPropertyValue("maxHeight");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](maxHeight)) {
                if (this.parent) {
                    return this.parent.maxHeight;
                }
            }
            return maxHeight;
        },
        /**
         * Maximum allowed height for the element in pixels.
         *
         * @param {number}  value  Maximum height (px)
         */
        set: function (value) {
            this.setMaxHeight(value);
        },
        enumerable: true,
        configurable: true
    });
    Sprite.prototype.setMaxHeight = function (value) {
        var prevWidth = this.maxWidth;
        var prevHeight = this.maxHeight;
        if (this.setPropertyValue("maxHeight", value)) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this.relativeHeight)) {
                this.invalidate();
            }
            var event_3 = {
                type: "maxsizechanged",
                target: this,
                previousWidth: prevWidth,
                previousHeight: prevWidth
            };
            this.dispatchImmediately("maxsizechanged", event_3);
        }
    };
    Object.defineProperty(Sprite.prototype, "minWidth", {
        /**
         * @return {Optional<number>} Minimum width (px)
         */
        get: function () {
            return this.getPropertyValue("minWidth");
        },
        /**
         * Minimum width of the element in pixels.
         *
         * Set to `undefined` to remove the limit.
         *
         * @param {Optional<number>}  value  Minimum width (px)
         */
        set: function (value) {
            this.setPropertyValue("minWidth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "minHeight", {
        /**
         * @return {Optional<number>} Minimum height (px)
         */
        get: function () {
            return this.getPropertyValue("minHeight");
        },
        /**
         * Minimum height for the element in pixels.
         *
         * Set to `undefined` to remove the limit.
         *
         * @param {Optional<number>}  value  Minimum height (px)
         */
        set: function (value) {
            this.setPropertyValue("minHeight", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "width", {
        /**
         * @return {number | Percent} Width (absolute or relative)
         */
        get: function () {
            return this.getPropertyValue("width");
        },
        /**
         * Element's absolute or relative width.
         *
         * The width can either be absolute, set in numer pixels, or relative, set
         * in [[Percent]].
         *
         * Relative width will be calculated using closest measured ancestor
         * [[Container]].
         *
         * @param {number | Percent}  value  Width (numeric in pixels or relative)
         */
        set: function (value) {
            var changed = this.setPercentProperty("width", value, true, false, this._positionPrecision, true);
            if (changed) {
                this.percentWidth = undefined;
                this.relativeWidth = undefined;
                if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"]) {
                    this.percentWidth = value.percent;
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this._pixelWidth)) {
                        this.maxWidth = undefined;
                    }
                    this._pixelWidth = undefined;
                }
                else {
                    this._pixelWidth = Number(value);
                    //this._measuredWidth = this._pixelWidth;
                    this.maxWidth = this._pixelWidth;
                }
                this.invalidatePosition();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "height", {
        /**
         * @return {number | Percent} height (absolute or relative)
         */
        get: function () {
            return this.getPropertyValue("height");
        },
        /**
         * Element's absolute or relative height.
         *
         * The height can either be absolute, set in numer pixels, or relative, set
         * in [[Percent]].
         *
         * Relative height will be calculated using closest measured ancestor
         * [[Container]].
         *
         * @param {number | Percent}  value  Height (numeric in pixels or relative)
         */
        set: function (value) {
            var changed = this.setPercentProperty("height", value, true, false, this._positionPrecision, true);
            if (changed) {
                this.percentHeight = undefined;
                this._relativeHeight = undefined;
                if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_33__["Percent"]) {
                    this.percentHeight = value.percent;
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this._pixelHeight)) {
                        this.maxHeight = undefined;
                    }
                    this._pixelHeight = undefined;
                }
                else {
                    this._pixelHeight = Number(value);
                    //this._measuredHeight = this._pixelHeight;
                    this.maxHeight = this._pixelHeight; // yes, we reset maxWidth
                }
                this.invalidatePosition();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelWidth", {
        /**
         * Returns element's width in pixels, if width was set. For actual width use measuredWidth property.
         *
         * @readonly
         * @return {number} Width (px)
         */
        get: function () {
            var width;
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this.percentWidth)) {
                width = this.maxWidth;
            }
            else if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this._pixelWidth)) {
                width = this._pixelWidth;
            }
            else {
                width = 0;
            }
            var minWidth = this.minWidth;
            if (minWidth != null && width < minWidth) {
                width = minWidth;
            }
            return this.adapter.apply("pixelWidth", _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](width, this._positionPrecision, true));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelHeight", {
        /**
         * Returns element's height in pixels. For actual height use measuredHeight property.
         *
         * @readonly
         * @return {number} Height (px)
         */
        get: function () {
            var height;
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this.percentHeight)) {
                height = this.maxHeight;
            }
            else if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](this._pixelHeight)) {
                height = this._pixelHeight;
            }
            else {
                height = 0; //this._measuredHeightSelf;
            }
            var minHeight = this.minHeight;
            if (minHeight != null && height < minHeight) {
                height = minHeight;
            }
            return this.adapter.apply("pixelHeight", _utils_Math__WEBPACK_IMPORTED_MODULE_26__["round"](height, this._positionPrecision, true));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeWidth", {
        /**
         * @return {$type.Optional<number>} Relative width
         * @ignore
         */
        get: function () {
            var relativeWidth = this._relativeWidth;
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](relativeWidth)) {
                return this.adapter.apply("relativeWidth", relativeWidth);
            }
        },
        /**
         * Element's relative width in [[Percent]].
         * @ignore
         *
         * @param {$type.Optional<number>}  value  Relative width
         */
        set: function (value) {
            if (this._relativeWidth != value) {
                this._relativeWidth = value;
                //			this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeHeight", {
        /**
         * @return {$type.Optional<number>} Relative height
         * @ignore
         */
        get: function () {
            var relativeHeight = this._relativeHeight;
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](relativeHeight)) {
                return this.adapter.apply("relativeHeight", relativeHeight);
            }
        },
        /**
         * Element's relative height in [[Percent]].
         *
         * @param {$type.Optional<number>}  value  Relative height
         * @ignore
         */
        set: function (value) {
            if (this._relativeHeight != value) {
                this._relativeHeight = value;
                //			this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "measuredWidth", {
        /**
         * Returns element's measured width in pixels.
         *
         * A measured width is actual width of contents plus `paddingRight` and* `paddingLeft`, relative to sprite parent, meaning that
         * rotation and scale is taken into account.
         *
         * @readonly
         * @return {number} Width (px)
         */
        get: function () {
            if (this.disabled || this.__disabled) {
                return 0;
            }
            return this.adapter.apply("measuredWidth", this._measuredWidth);
            // it's not good to fit to min/max range as then rotations and scale won't be taken into account
            //return this.adapter.apply("measuredWidth", $math.fitToRange(this._measuredWidth, this.minWidth, this.maxWidth));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "measuredHeight", {
        /**
         * Returns elements's measured height in pixels.
         *
         * A measured height is actual height of contents plus `paddingTop` and `paddingBottom`, relative to sprite parent, meaning that
         * rotation and scale taken into account.
         *
         * @readonly
         * @return {number} Height (px)
         */
        get: function () {
            if (this.disabled || this.__disabled) {
                return 0;
            }
            // it's not good to fit to min/max range as then rotations and scale won't be taken into account
            //return this.adapter.apply("measuredHeight", $math.fitToRange(this._measuredHeight, this.minHeight, this.maxHeight));
            return this.adapter.apply("measuredHeight", this._measuredHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "outerWidth", {
        /**
         * Returns element's measured width plus its left and right margins in
         * pixels.
         *
         * @readonly
         * @return {number} Outer width (px)
         */
        get: function () {
            return this.adapter.apply("outerWidth", this.pixelWidth + this.pixelMarginRight + this.pixelMarginLeft);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "outerHeight", {
        /**
         * Returns element's measured height plus its top and bottom margins in
         * pixels.
         *
         * @readonly
         * @return {number} Outer height (px)
         */
        get: function () {
            return this.adapter.apply("outerHeight", this.pixelHeight + this.pixelMarginTop + this.pixelMarginBottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "innerWidth", {
        /**
         * Returns element's measured inner width in pixels.
         *
         * Inner width is actual available space for content, e.g. element's width
         * minus horizontal padding.
         *
         * @readonly
         * @return {number} Inner width (px)
         */
        get: function () {
            return this.adapter.apply("innerWidth", Math.max(0, this.pixelWidth - this.pixelPaddingRight - this.pixelPaddingLeft));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "innerHeight", {
        /**
         * Returns element's measured inner height in pixels.
         *
         * Inner height is actual available space for content, e.g. element's height
         * minus vertical padding.
         *
         * @readonly
         * @return {number} Inner height (px)
         */
        get: function () {
            return this.adapter.apply("innerHeight", Math.max(0, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "globalScale", {
        /**
         * Returns element's current "global" scale.
         *
         * Scale values accumulate over hierarchy of elements.
         *
         * E.g. if a [[Container]] has `scale = 2` and it's child has a `scale = 2`,
         * the child's `globalScale` will be 4. (a multitude of `2 x 2`)
         *
         * @readonly
         * @return {number} Global scale
         */
        get: function () {
            var scale = this.scale;
            if (this.parent) {
                scale = scale * this.parent.globalScale;
            }
            return this.adapter.apply("globalScale", scale);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "scale", {
        /**
         * @return {number} Scale (0-1)
         */
        get: function () {
            return this.getPropertyValue("scale");
        },
        /**
         * Scale of the element.
         *
         * The scale is set from 0 (element reduced to nothing) to 1 (default size).
         * * 2 will mean element is increased twice.
         * * 0.5 - reduced by 50%.
         *
         * Etc.
         *
         * @param {number}  value  Scale (0-1)
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            if (value < 0) {
                value = 0;
            }
            if (value != this.getPropertyValue("scale")) {
                this.setPropertyValue("scale", value, false, true);
                this.handleGlobalScale();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets all four margins for the element at once.
     *
     * Margins are set in pixels.
     *
     * @param  {number}  top     Top margin
     * @param  {number}  right   Right margin
     * @param  {number}  bottom  Bottom margin
     * @param  {number}  left    Left margin
     * @return {Sprite}          Current element
     */
    Sprite.prototype.margin = function (top, right, bottom, left) {
        this.marginTop = top;
        this.marginRight = right;
        this.marginBottom = bottom;
        this.marginLeft = left;
        return this;
    };
    Object.defineProperty(Sprite.prototype, "marginLeft", {
        /**
         * @return {number | Percent} Margin value
         */
        get: function () {
            return this.getPropertyValue("marginLeft");
        },
        /**
         * Left margin - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Margin value
         */
        set: function (value) {
            this.setPercentProperty("marginLeft", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "marginRight", {
        /**
         * @return {number | Percent} Margin value
         */
        get: function () {
            return this.getPropertyValue("marginRight");
        },
        /**
         * Right margin - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Margin value
         */
        set: function (value) {
            this.setPercentProperty("marginRight", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "marginTop", {
        /**
         * @return {number | Percent} Margin value
         */
        get: function () {
            return this.getPropertyValue("marginTop");
        },
        /**
         * Top margin - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Margin value
         */
        set: function (value) {
            this.setPercentProperty("marginTop", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "marginBottom", {
        /**
         * @return {number | Percent} Margin value
         */
        get: function () {
            return this.getPropertyValue("marginBottom");
        },
        /**
         * Bottom margin - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Margin value
         */
        set: function (value) {
            this.setPercentProperty("marginBottom", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelMarginRight", {
        /**
         * Returns current right margin in pixels.
         *
         * @readonly
         * @return {number} Right margin (px)
         */
        get: function () {
            return this.adapter.apply("pixelMarginRight", this.getPixelX(this.marginRight));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeMarginRight", {
        /**
         * Returns current relative right margin.
         *
         * @readonly
         * @return {number} Relative right margin
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.adapter.apply("relativeMarginRight", this.getRelativeX(this.marginRight));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelMarginLeft", {
        /**
         * Returns current left margin in pixels.
         *
         * @readonly
         * @return {number} Left margin (px)
         */
        get: function () {
            return this.adapter.apply("pixelMarginLeft", this.getPixelX(this.marginLeft));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeMarginLeft", {
        /**
         * Returns current relative left margin.
         *
         * @readonly
         * @return {number} Relative left margin
         */
        get: function () {
            //@todo Maybe use [[Percent]]?
            return this.adapter.apply("relativeMarginLeft", this.getRelativeX(this.marginLeft));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelMarginTop", {
        /**
         * Returns current top margin in pixels.
         *
         * @readonly
         * @return {number} Top margin (px)
         */
        get: function () {
            return this.adapter.apply("pixelMarginTop", this.getPixelY(this.marginTop));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeMarginTop", {
        /**
         * Returns current relative top margin.
         *
         * @readonly
         * @return {number} Relative top margin
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.adapter.apply("relativeMarginTop", this.getRelativeY(this.marginTop));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelMarginBottom", {
        /**
         * Returns current bottom margin in pixels.
         *
         * @readonly
         * @return {number} Bottom margin (px)
         */
        get: function () {
            return this.adapter.apply("pixelMarginBottom", this.getPixelY(this.marginBottom));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativeMarginBottom", {
        /**
         * Returns current relative bottom margin.
         *
         * @readonly
         * @return {number} Relative bottom margin
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.adapter.apply("relativeMarginBottom", this.getRelativeY(this.marginBottom));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets padding for the element in pixels.
     *
     * @param  {number}  top     Top padding (px)
     * @param  {number}  right   Right padding (px)
     * @param  {number}  bottom  Bottom padding (px)
     * @param  {number}  left    Left padding (px)
     * @return {Sprite}          Element
     */
    Sprite.prototype.padding = function (top, right, bottom, left) {
        this.paddingTop = top;
        this.paddingRight = right;
        this.paddingBottom = bottom;
        this.paddingLeft = left;
        return this;
    };
    Object.defineProperty(Sprite.prototype, "paddingLeft", {
        /**
         * @return {number | Percent} Padding value
         */
        get: function () {
            return this.getPropertyValue("paddingLeft");
        },
        /**
         * Left padding - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Padding value
         */
        set: function (value) {
            this.setPercentProperty("paddingLeft", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "paddingRight", {
        /**
         * @return {number | Percent} Padding value
         */
        get: function () {
            return this.getPropertyValue("paddingRight");
        },
        /**
         * Right padding - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Padding value
         */
        set: function (value) {
            this.setPercentProperty("paddingRight", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "paddingTop", {
        /**
         * @return {number | Percent} Padding value
         */
        get: function () {
            return this.getPropertyValue("paddingTop");
        },
        /**
         * Top padding - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Padding value
         */
        set: function (value) {
            this.setPercentProperty("paddingTop", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "paddingBottom", {
        /**
         * @return {number | Percent} Padding value
         */
        get: function () {
            return this.getPropertyValue("paddingBottom");
        },
        /**
         * Bottom padding - absolute (px) or relative ([[Percent]]).
         *
         * @param {number | Percent}  value  Padding value
         */
        set: function (value) {
            this.setPercentProperty("paddingBottom", value, true, true, this._positionPrecision, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelPaddingRight", {
        /**
         * Returns current right padding in pixels.
         *
         * @readonly
         * @return {number} Right padding (px)
         */
        get: function () {
            return this.getPixelX(this.paddingRight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativePaddingRight", {
        /**
         * Returns current relative right padding.
         *
         * @readonly
         * @return {number} Relative right padding
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.getRelativeX(this.paddingRight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelPaddingLeft", {
        /**
         * Returns current left padding in pixels.
         *
         * @readonly
         * @return {number} Left padding (px)
         */
        get: function () {
            return this.getPixelX(this.paddingLeft);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativePaddingLeft", {
        /**
         * Returns current relative left padding.
         *
         * @readonly
         * @return {number} Relative left padding
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.getRelativeX(this.paddingLeft);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelPaddingTop", {
        /**
         * Returns current top padding in pixels.
         *
         * @readonly
         * @return {number} Top padding (px)
         */
        get: function () {
            return this.getPixelY(this.paddingTop);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativePaddingTop", {
        /**
         * Returns current relative top padding.
         *
         * @readonly
         * @return {number} Relative top padding
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.getRelativeY(this.paddingTop);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelPaddingBottom", {
        /**
         * Returns current bottom padding in pixels.
         *
         * @readonly
         * @return {number} Bottom padding (px)
         */
        get: function () {
            return this.getPixelY(this.paddingBottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "relativePaddingBottom", {
        /**
         * Returns current relative bottom padding.
         *
         * @readonly
         * @return {number} Relative bottom padding
         */
        get: function () {
            // @todo Maybe use [[Percent]]?
            return this.getRelativeY(this.paddingBottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "path", {
        /**
         * Path of a tick element
         * @type {string}
         */
        get: function () {
            return this.getPropertyValue("path");
        },
        /**
         * ==========================================================================
         * APPEARANCE-RELATED PROPERTIES AND RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Path of a sprite element
         * @type {string}
         */
        set: function (value) {
            if (this.setPropertyValue("path", value)) {
                if (!this.element) {
                    this.element = this.paper.add("path");
                }
                this.element.attr({ "d": value });
                this.invalidatePosition();
                // otherwise is 0x0
                if (!this.inited) {
                    this.events.once("inited", this.validatePosition, this, false);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "fillModifier", {
        /**
         * @return {ColorModifier} Fill color modifier
         */
        get: function () {
            return this.getPropertyValue("fillModifier");
        },
        /**
         * [[ColorModifier]] that can be used to modify color and pattern of the
         * element's fill, e.g. create gradients.
         *
         * @param {ColorModifier}  value  Fill color modifiier
         */
        set: function (value) {
            if (this.setPropertyValue("fillModifier", value)) {
                this.setFill(this.fill);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "strokeModifier", {
        /**
         * @return {ColorModifier} Stroke color modifier
         */
        get: function () {
            return this.getPropertyValue("strokeModifier");
        },
        /**
         * [[ColorModifier]] that can be used to modify color and pattern of the
         * element's stroke (outline), e.g. create gradients.
         *
         * @param {ColorModifier}  value  Stroke color modifier
         */
        set: function (value) {
            this.setPropertyValue("strokeModifier", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "fillOpacity", {
        /**
         * @return {number} Opacity (0-9)
         */
        get: function () {
            return this.getPropertyValue("fillOpacity");
        },
        /**
         * Element's fill opacity.
         *
         * Opacity ranges from 0 (fully transparent) to 1 (fully opaque).
         *
         * @param {number}  value  Opacity (0-1)
         */
        set: function (value) {
            value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["toNumberRange"](value, 0, 1);
            if (this.setPropertyValue("fillOpacity", value)) {
                this.setSVGAttribute({ "fill-opacity": value });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "fill", {
        /**
         * @return {Color} Fill
         */
        get: function () {
            return this.getPropertyValue("fill");
        },
        /**
         * Element's fill color or pattern.
         *
         * @param {Optional<Color | Pattern | LinearGradient | RadialGradient>}  value  Fill
         */
        set: function (value) {
            this.setFill(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets actual `fill` property on the SVG element, including applicable color
     * modifiers.
     *
     * @ignore Exclude from docs
     * @param {Optional<Color | Pattern | LinearGradient | RadialGradient>}  value  Fill
     */
    Sprite.prototype.setFill = function (value) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isObject"](value)) {
            value = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_14__["toColor"])(value);
        }
        if (this.setColorProperty("fill", value) || this.fillModifier) {
            // this can not go into next if, as value is turned to Gradient
            if (value instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                if (this.fillModifier) {
                    value = this.fillModifier.modify(value);
                }
            }
            this.realFill = value;
            // todo: review this place when some Color type will be added
            if (value instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                this.setSVGAttribute({ "fill": value.toString() });
            }
            else if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value)) {
                this.removeSVGAttribute("fill");
            }
            else if (value instanceof _rendering_fills_Pattern__WEBPACK_IMPORTED_MODULE_11__["Pattern"] || value instanceof _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_12__["LinearGradient"] || value instanceof _rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_13__["RadialGradient"]) {
                var fill = value;
                fill.paper = this.paper;
                this.setSVGAttribute({ "fill": "url(#" + fill.id + ")" });
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "opacity", {
        /**
         * @return {number} Opacity (0-1)
         */
        get: function () {
            return this.getPropertyValue("opacity");
        },
        /**
         * Element's opacity.
         *
         * Opacity setting can range from 0 (fully transparent) to 1 (fully opaque).
         *
         * ATTENTION: It is highly not recommended to use `opacity` directly on the
         * element. The charts use `opacity` to hide/show elements, so your setting
         * might be lost if element is hidden and then later shown.
         *
         * Instead use methods `hide()` and `show()` to completely toggle off and on
         * the element.
         *
         * Or, use properties `fillOpacity` and `strokeOpacity`, if you need to make
         * the element semi-transparent.
         *
         * @param {number} value Opacity (0-1)
         */
        set: function (value) {
            value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["toNumberRange"](value, 0, 1);
            if (this.setPropertyValue("opacity", value)) {
                this.setSVGAttribute({ "opacity": value });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "stroke", {
        /**
         * @return {Color} Stroke setting
         */
        get: function () {
            return this.getPropertyValue("stroke");
        },
        /**
         * Element's stroke (outline) color or pattern.
         *
         * @param {Color | Pattern | LinearGradient | RadialGradient}  value  Stroke setting
         */
        set: function (value) {
            this.setStroke(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets actual `stroke` property on the SVG element, including applicable
     * color modifiers.
     *
     * @ignore Exclude from docs
     * @param {Color | Pattern | LinearGradient | RadialGradient} value Stroke setting
     */
    Sprite.prototype.setStroke = function (value) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isObject"](value)) {
            value = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_14__["toColor"])(value);
        }
        if (this.setColorProperty("stroke", value) || this.strokeModifier) {
            // this can not go into next if, as value is turned to Gradient
            if (value instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                if (this.strokeModifier) {
                    value = this.strokeModifier.modify(value);
                }
            }
            this.realStroke = value;
            if (value instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                if (value.hex == "none") {
                    this.removeSVGAttribute("stroke");
                }
                else {
                    this.setSVGAttribute({ "stroke": value.toString() });
                }
            }
            else if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value)) {
                this.removeSVGAttribute("stroke");
            }
            else if (value instanceof _rendering_fills_Pattern__WEBPACK_IMPORTED_MODULE_11__["Pattern"] || value instanceof _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_12__["LinearGradient"] || value instanceof _rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_13__["RadialGradient"]) {
                var stroke = value;
                stroke.paper = this.paper;
                this.setSVGAttribute({ "stroke": "url(#" + stroke.id + ")" });
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "strokeOpacity", {
        /**
         * @return {number} Opacity (0-1)
         */
        get: function () {
            return this.getPropertyValue("strokeOpacity");
        },
        /**
         * Stroke (outline) opacity.
         *
         * The values may range from 0 (fully transparent) to 1 (fully opaque).
         *
         * @param {number}  value  Opacity (0-1)
         */
        set: function (value) {
            value = _utils_Math__WEBPACK_IMPORTED_MODULE_26__["toNumberRange"](value, 0, 1);
            if (this.setPropertyValue("strokeOpacity", value)) {
                this.setSVGAttribute({ "stroke-opacity": value });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "nonScalingStroke", {
        /**
         * @return {boolean} Do not scale stroke (outline)
         */
        get: function () {
            return this.getPropertyValue("nonScalingStroke");
        },
        /**
         * Controls if the element's stroke (outline) should remain keep constant
         * thicnkess and do not scale when the whole element is resized.
         *
         * @param {boolean}  value  Do not scale stroke (outline)
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (this.setPropertyValue("nonScalingStroke", value)) {
                this.strokeWidth = this.strokeWidth;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "nonScaling", {
        /**
         * @return {boolean} Is element scaleable?
         */
        get: function () {
            return this.getPropertyValue("nonScaling");
        },
        /**
         * Controls if element should keep constant size and not scale even if there is
         * space available, or it does not fit.
         *
         * @param {boolean}  value  Is element scaleable?
         */
        set: function (value) {
            // @todo Description (review)
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            this.setPropertyValue("nonScaling", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "strokeWidth", {
        /**
         * @return {number} Thickness (px)
         */
        get: function () {
            return this.getPropertyValue("strokeWidth");
        },
        /**
         * Stroke (outline) thickness in pixels.
         *
         * @param {number}  value  Thickness (px)
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            this.setPropertyValue("strokeWidth", value, true);
            if (this.nonScalingStroke) {
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](value)) {
                    value = 1;
                }
                value = value / this.globalScale;
            }
            this.setSVGAttribute({ "stroke-width": value });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "strokeDasharray", {
        /**
         * @return {string} `stroke-dasharray`
         */
        get: function () {
            return this.getPropertyValue("strokeDasharray");
        },
        /**
         * A `stroke-dasharray` for the stroke (outline).
         *
         * "Dasharray" allows setting rules to make lines dashed, dotted, etc.
         *
         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`
         * @param {string}  value  `stroke-dasharray`
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("strokeDasharray", value)) {
                this.setSVGAttribute({ "stroke-dasharray": value });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "shapeRendering", {
        /**
         * @return {ShapeRendering} 'shape-rendering' value
         */
        get: function () {
            return this.getPropertyValue("shapeRendering");
        },
        /**
         * An SVG-specific `shape-rendering` value.
         *
         * `shape-rendering` controls how vector graphics are drawn and rendered.
         *
         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering} for more information about `shape-rendering`
         * @default "auto"
         * @param {ShapeRendering}  value  'shape-rendering' value
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (this.setPropertyValue("shapeRendering", value)) {
                this.setSVGAttribute({ "shape-rendering": value });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "pixelPerfect", {
        /**
         * @return {boolean} Use pixel perfect?
         */
        get: function () {
            return this.getPropertyValue("pixelPerfect");
        },
        /**
         * Controls if SVG vectors should be drawn with "pixel" precision, producing
         * perfectly crisp lines on retina displays.
         *
         * Setting this to `true` might improve visual quality, but may have a
         * negative effect on performance.
         *
         * Different elements use different default setting for `pixelPerfect`.
         *
         * We recommend leaving this at their default settings, unless there's a
         * specific need.
         *
         * @param {boolean}  value  Use pixel perfect?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            if (value) {
                this._positionPrecision = 0;
            }
            else {
                this._positionPrecision = 3;
            }
            this.setPropertyValue("pixelPerfect", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "rtl", {
        /**
         * @return {boolean} RTL?
         */
        get: function () {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this._rtl)) {
                return this._rtl;
            }
            else if (this.virtualParent) {
                return this.virtualParent.rtl;
            }
            else if (this.parent) {
                return this.parent.rtl;
            }
            this.rtl = false;
            return this.rtl;
        },
        /**
         * An RTL (right-to-left) setting.
         *
         * RTL may affect alignment, text, and other visual properties.
         *
         * @param {DateFormatter}  value  `true` for to use RTL
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            this._rtl = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * ==========================================================================
     * VISIBILITY AND ORDER PROPERTIES AND RELATED STUFF
     * ==========================================================================
     * @hidden
     */
    /**
     * Reveals hidden element.
     *
     * Has no effect if element is already visible.
     *
     * If `duration` is not specified, it will use default.
     *
     * @param  {number}  duration  Fade in duration (ms)
     * @return {Optional<Animation>} Animation object if such object was created
     */
    Sprite.prototype.show = function (duration) {
        return this.showReal(duration);
    };
    /**
     * Performs actual operations to reveal this element.
     *
     * @ignore Exclude from docs
     * @param  {number} duration Fade in duration (ms)
     * @return {number}          Fade in duration (ms)
     */
    Sprite.prototype.showReal = function (duration) {
        var _this = this;
        var transition;
        var properties = this.defaultState.properties;
        if (!this.disabled && (this.isHidden || !this.visible || this.isHiding || (properties.opacity != null && this.opacity < properties.opacity && !this.isShowing))) {
            // helps to avoid flicker, as show might change opacity or visibility but item might be at invalid state/position
            if (this.invalid) {
                this.validate();
            }
            if (this.positionInvalid) {
                this.validatePosition();
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](duration)) {
                duration = this.defaultState.transitionDuration;
            }
            if (this._hideAnimation) {
                this._hideAnimation.kill();
                this._hideAnimation = undefined;
            }
            // Cancel hide handler just in case it was there
            if (this._showHideDisposer) {
                this.removeDispose(this._showHideDisposer);
            }
            this._isHidden = false;
            this.isHiding = false;
            this.isShowing = true;
            // Apply current state
            transition = this.applyCurrentState(duration);
            if (transition && !transition.isFinished()) {
                this._showHideDisposer = transition.events.on("animationended", function () {
                    _this.isShowing = false;
                });
                this._disposers.push(this._showHideDisposer);
            }
            else {
                this.isShowing = false;
            }
            // Make it visible
            var visible = this.defaultState.properties.visible;
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](visible)) {
                visible = true;
            }
            this.visible = visible;
            // Dispatch "show" event
            this.dispatchImmediately("shown");
        }
        return transition;
    };
    /**
     * Initiates hiding of Sprite.
     * When called it will fade out the the Sprite to transparency, then make it
     * invisible.
     * @param {number} duration Duration in millisecons
     */
    /**
     * Hides the element, by applying `hidden` state.
     *
     * Has no effect if element is already hidden.
     *
     * If `duration` is not specified, it will use default.
     *
     * While element is fading out, its `isHiding` property will resolve to
     * `true`.
     *
     * When element is hidden, its `visible` property will resolve to `false`.
     *
     * @param  {number}  duration  Fade out duration (ms)
     * @return {Optional<Animation>} hide Animation object if such object was created
     */
    Sprite.prototype.hide = function (duration) {
        return this.hideReal(duration);
    };
    /**
     * Hides actual SVG elements and handles hiding animations.
     *
     * @param  {number}  duration  Fade out duration (ms)
     * @return {Animation}            Fade out duration (ms)
     * @ignore
     */
    Sprite.prototype.hideReal = function (duration) {
        var _this = this;
        var transition;
        if (!this.isHiding && this.visible) {
            this.hideTooltip(0);
            if (this._hideAnimation) {
                this._hideAnimation.kill();
                this._hideAnimation = undefined;
            }
            this.isShowing = false;
            // Cancel hide handler just in case it was there
            if (this._showHideDisposer) {
                this.removeDispose(this._showHideDisposer);
            }
            // Get state
            var hiddenState = this.hiddenState;
            // Transition to "hidden" state, provided Sprite has one set
            if (hiddenState) {
                // Yes, we have a "hidden" state
                // `setState` will return an `Animation` object which we can set
                // events on
                transition = this.setState(hiddenState, duration, undefined);
                if (transition && !transition.isFinished()) {
                    this._hideAnimation = transition;
                    this._showHideDisposer = transition.events.on("animationended", function () {
                        _this.isHiding = false;
                        _this._isHidden = true;
                    }, this);
                    this._disposers.push(this._showHideDisposer);
                    // Thrown everything into `_disposers` just in case Sprite gets
                    // destroyed in the meantime
                    this._disposers.push(transition);
                }
                else {
                    this.isHiding = false;
                    this._isHidden = true;
                }
            }
            else {
                // No hidden state, let's just set `visible` and call it a day
                this.visible = false;
                this.isHiding = false;
                this._isHidden = true;
            }
            // Dispach "hidden" event
            this.dispatchImmediately("hidden");
            this.invalidate(); // hide it at once to avoid flickers // validate() causes SO
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](duration)) {
            duration = this.hiddenState.transitionDuration;
        }
        return transition;
    };
    Object.defineProperty(Sprite.prototype, "visible", {
        /**
         * Returns current visibility of the element.
         *
         * @return {boolean} Visible?
         */
        get: function () {
            return this.getVisibility();
        },
        /**
         * Sets visibility of the element.
         *
         * @param {boolean} value Visible?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            this.setVisibility(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns visibility value
     * @ignore
     */
    Sprite.prototype.getVisibility = function () {
        var value = this.getPropertyValue("visible");
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](value)) {
            value = true;
        }
        return value;
    };
    /**
     * Sets `visibility` property:
     *
     * * `true` - visible
     * * `false` - hidden
     *
     * @param  {boolean}  value  true - visible, false - hidden
     * @return {string}          Current visibility
     */
    Sprite.prototype.setVisibility = function (value) {
        if (this.setPropertyValue("visible", value)) {
            if (value) {
                this.group.removeAttr("visibility");
            }
            else {
                this.group.attr({ "visibility": "hidden" });
            }
            //this.invalidatePosition();
            if (this.events.isEnabled("visibilitychanged")) {
                var event_4 = {
                    type: "visibilitychanged",
                    target: this,
                    visible: value
                };
                this.events.dispatchImmediately("visibilitychanged", event_4);
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "zIndex", {
        /**
         * @return {number} zIndex
         */
        get: function () {
            return this.getPropertyValue("zIndex");
        },
        /**
         * A "zIndex" of the element.
         *
         * "zIndex" determines the order of how elements are placed over each other.
         *
         * Higher "zIndex" will mean the element will be draw on top of elements
         * with lower "zIndexes".
         *
         * @param {number}  value  zIndex
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            if (this.setPropertyValue("zIndex", value)) {
                this.dispatch("zIndexChanged");
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Moves the element to the very top in element order, so that it appears
     * in front of other elements.
     */
    Sprite.prototype.toFront = function () {
        var parent = this.parent;
        if (parent && parent.children.indexOf(this) != parent.children.length - 1) {
            parent.children.moveValue(this, parent.children.length - 1);
            this.dispatch("zIndexChanged");
        }
    };
    /**
     * Moves the element to the very bottom in the element order, so that it
     * appears behind other elements.
     */
    Sprite.prototype.toBack = function () {
        var parent = this.parent;
        if (parent && parent.children.indexOf(this) != 0) {
            parent.children.moveValue(this, 0);
            this.dispatch("zIndexChanged");
        }
    };
    Object.defineProperty(Sprite.prototype, "tooltip", {
        /**
         * @return {Optional<Tooltip>} Tooltip
         */
        get: function () {
            if (this._tooltip) {
                return this._tooltip;
            }
            else if (this.virtualParent) {
                return this.virtualParent.tooltip;
            }
            else if (this.parent) {
                return this.parent.tooltip;
            }
        },
        /**
         * ==========================================================================
         * TOOLTIP-RELATED PROPERTIES STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * A [[Tooltip]] object to be used when displayed rollover information for
         * the element.
         *
         * @param {Tooltip}  tooltip  Tooltip
         */
        set: function (tooltip) {
            if (this._tooltip) {
                //this._tooltip.dispose();
                this.removeDispose(this._tooltip);
            }
            this._tooltip = tooltip;
            if (tooltip) {
                tooltip.parent = this.tooltipContainer;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipDataItem", {
        /**
         * @return {DataItem} Tooltip data item
         */
        get: function () {
            var tooltipDataItem = this._tooltipDataItem;
            if (tooltipDataItem) {
                return tooltipDataItem;
            }
            else {
                return this.dataItem;
            }
        },
        /**
         * A [[DataItem]] to use when populating content for the element's
         * [[Tooltip]].
         *
         * @see {@link Tooltip}
         * @see {@link DataItem}
         * @param {DataItem}  value  Tooltip data item
         */
        set: function (value) {
            // important: do not dispose tooltip dataItem, as it is some actual data item from data!
            this._tooltipDataItem = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipColorSource", {
        /**
         * @return {Optional<Sprite>} Tooltip color source
         */
        get: function () {
            return this._tooltipColorSource;
        },
        /**
         * A [[Sprite]] or sprite template to use when getting colors for tooltip. If a template is set,
         * tooltip will look for a clone in tooltipDataItem.sprites. If no clone is found, then template colors will be used.
         *
         * @see {@link Tooltip}
         * @see {@link Sprite}
         * @param {Optional<Sprite>}  sprite Sprite
         */
        set: function (sprite) {
            this._tooltipColorSource = sprite;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows the element's [[Tooltip]].
     *
     * A tooltip will be populated using text templates in either `tooltipHTML` or
     * `tooltipText` as well as data in `tooltipDataItem`.
     *
     * @see {@link Tooltip}
     * @param {point} optional point (sprite-related) to which tooltip must point.
     * @return {boolean} returns true if the tooltip was shown and false if it wasn't (no text was found)
     */
    Sprite.prototype.showTooltip = function (point) {
        // do not show if hidden
        var sprite = this;
        while (sprite != undefined) {
            if (!sprite.visible || sprite.disabled || sprite.__disabled) {
                return;
            }
            sprite = sprite.parent;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this.tooltipText) || _utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](this.tooltipHTML)) {
            var tooltip = this.tooltip;
            var tooltipDataItem = this.tooltipDataItem;
            if (tooltip) {
                var colorSource_1 = this;
                var tooltipColorSource_1 = this.tooltipColorSource;
                if ((tooltip.getStrokeFromObject || tooltip.getFillFromObject) && tooltipColorSource_1) {
                    if (tooltipColorSource_1.isTemplate) {
                        if (tooltipDataItem) {
                            _utils_Array__WEBPACK_IMPORTED_MODULE_28__["eachContinue"](tooltipDataItem.sprites, function (sprite) {
                                if (sprite.clonedFrom == tooltipColorSource_1) {
                                    colorSource_1 = sprite;
                                    return false;
                                }
                                return true;
                            });
                        }
                    }
                    else {
                        colorSource_1 = tooltipColorSource_1;
                    }
                }
                if (tooltip.getStrokeFromObject) {
                    var stroke = this.stroke;
                    var source = colorSource_1;
                    while (source.parent != undefined) {
                        stroke = source.stroke;
                        if (stroke == undefined) {
                            source = source.parent;
                        }
                        if (stroke != undefined) {
                            break;
                        }
                    }
                    if (stroke instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                        tooltip.background.animate({ property: "stroke", to: stroke }, tooltip.animationDuration);
                    }
                    else {
                        tooltip.background.stroke = stroke;
                    }
                }
                // Set data item
                tooltip.dataItem = tooltipDataItem;
                tooltip.label.populateStringFrom = this;
                if (tooltip.getFillFromObject) {
                    var fill = this.fill;
                    var source = colorSource_1;
                    while (source.parent != undefined) {
                        fill = source.fill;
                        if (fill == undefined || (fill instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"] && fill.rgb == undefined)) {
                            source = source.parent;
                        }
                        else if (fill != undefined) {
                            break;
                        }
                    }
                    if (fill == undefined) {
                        fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_14__["color"])("#000000");
                    }
                    if (fill instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                        if (!tooltip.visible) {
                            tooltip.background.fill = fill;
                        }
                        else {
                            tooltip.background.animate({ property: "fill", to: fill }, tooltip.animationDuration);
                        }
                    }
                    else {
                        tooltip.background.fill = fill;
                    }
                    if (tooltip.autoTextColor && fill instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_14__["Color"]) {
                        tooltip.label.fill = fill.alternative;
                    }
                }
                // Apply tooltip text
                var text = "";
                if (this.tooltipHTML) {
                    tooltip.html = this.tooltipHTML;
                    text = this.tooltipHTML;
                }
                if (this.tooltipText) {
                    tooltip.text = this.tooltipText;
                    text = this.tooltipText;
                }
                if (this.updateTooltipPosition(point)) {
                    // Set accessibility option
                    tooltip.readerDescribedBy = this.uidAttr();
                    // make label to render to be able to check currentText
                    if (tooltip.label.invalid) {
                        tooltip.label.validate();
                    }
                    if (text != undefined && text != "" && tooltip.label.currentText != "") {
                        //@todo: think of how to solve this better
                        if (tooltip && !tooltip.parent) {
                            tooltip.parent = this.tooltipContainer;
                        }
                        // Reveal tooltip
                        // showing it in 1 ms helps to avoid strange flickering in IE
                        var duration = tooltip.defaultState.transitionDuration;
                        if (duration <= 0) {
                            duration = 1;
                        }
                        tooltip.show(duration);
                        return true;
                    }
                }
                else {
                    this.hideTooltip(0);
                }
            }
        }
        return false;
    };
    /**
     * @ignore
     */
    Sprite.prototype.updateTooltipPosition = function (point) {
        var _this = this;
        if (this.tooltipPosition == "pointer") {
            this._interactionDisposer = Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_15__["getInteraction"])().body.events.on("track", function (ev) {
                return _this.pointTooltipTo(_utils_Utils__WEBPACK_IMPORTED_MODULE_25__["documentPointToSvg"](ev.point, _this.svgContainer.SVGContainer, _this.svgContainer.cssScale), true);
            });
            if (point) {
                return this.pointTooltipTo(point, true);
            }
        }
        else {
            // Point to the X/Y of this Sprite
            var globalPoint = _utils_Utils__WEBPACK_IMPORTED_MODULE_25__["spritePointToSvg"]({
                "x": this.tooltipX,
                "y": this.tooltipY
            }, this);
            return this.pointTooltipTo(globalPoint);
        }
    };
    /**
     * Sets the point the [[Tooltip]] should point to.
     *
     * @param {IPoint}   point      Coordinates to point to
     * @param {boolean}  instantly  Move instantly without animation
     */
    Sprite.prototype.pointTooltipTo = function (point, instantly) {
        var tooltip = this.tooltip;
        if (tooltip) {
            if (_utils_Math__WEBPACK_IMPORTED_MODULE_26__["isInRectangle"](point, { x: 0, y: 0, width: this.topParent.maxWidth, height: this.topParent.maxHeight })) {
                tooltip.pointTo(point, instantly);
                return true;
            }
        }
        return false;
    };
    /**
     * Hides element's [[Tooltip]].
     *
     * @see {@link Tooltip}
     */
    Sprite.prototype.hideTooltip = function (duration) {
        var tooltip = this.tooltip;
        if (tooltip) {
            tooltip.hide(duration);
            if (this._interactionDisposer) {
                this._interactionDisposer.dispose();
            }
        }
    };
    Object.defineProperty(Sprite.prototype, "tooltipHTML", {
        /**
         * @return {string} Tooltip HTML content template
         */
        get: function () {
            return this.getPropertyValue("tooltipHTML");
        },
        /**
         * An HTML template to be used to populate [[Tooltip]] contents.
         *
         * If element has `tooltipDataItem` or `dataItem` set, this will be parsed
         * for any data values to be replaced with the values from respective data
         * items.
         *
         * @param {string} value Tooltip HTML content template
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            this.hoverable = true;
            if (this.setPropertyValue("tooltipHTML", value)) {
                if (this.tooltip) {
                    if (this.tooltip.visible) {
                        this.showTooltip();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipText", {
        /**
         * @return {string} Tooltip content template
         */
        get: function () {
            return this.getPropertyValue("tooltipText");
        },
        /**
         * A text template to be used to populate Tooltip's contents.
         *
         * If element has `tooltipDataItem` or `dataItem` set, this will be parsed
         * for any data values to be replaced with the values from respective data
         * items.
         *
         * This template will also be parsed for any special formatting tags.
         *
         * @param {string} value Tooltip content template
         * @see {@link TextFormatter}
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toText"](value);
            if (value) {
                this.hoverable = true;
            }
            if (this.setPropertyValue("tooltipText", value)) {
                if (this.tooltip) {
                    if (this.tooltip.visible) {
                        this.showTooltip();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipContainer", {
        /**
         * @ignore Exclude from docs
         * @return {Optional<Container>} Container
         */
        get: function () {
            if (this._tooltipContainer) {
                return this._tooltipContainer;
            }
            else if (this.parent) {
                return this.parent.tooltipContainer;
            }
        },
        /**
         * A container reference that should be used to place element's
         * [[Tooltip]] in.
         *
         * Will use parent's container if does not have one set.
         *
         * @ignore Exclude from docs
         * @param {Container} value Container
         * @todo Dispose of the old _tooltipContainer ?
         */
        set: function (value) {
            this._tooltipContainer = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipX", {
        /**
         * @ignore Exclude from docs
         * @return {number} Tooltip X (px)
         */
        get: function () {
            return this.getTooltipX();
        },
        /**
         * X coordinate the [[Tooltip]] should be shown at.
         *
         * @ignore Exclude from docs
         * @param {number}  value  Tooltip X (px)
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            if (this.setPropertyValue("tooltipX", value) && this.tooltip) {
                this.tooltip.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipPosition", {
        /**
         * @type {"fixed" | "pointer"} Position
         */
        get: function () {
            return this.getPropertyValue("tooltipPosition");
        },
        /**
         * Specifies if [[Tooltip]] should follow the mouse or touch pointer or stay
         * at the fixed position.
         *
         * @param { "fixed" | "pointer" }  value  Position
         */
        set: function (value) {
            this.setPropertyValue("tooltipPosition", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "tooltipY", {
        /**
         * @ignore Exclude from docs
         * @return {number} Tooltip Y (px)
         */
        get: function () {
            return this.getTooltipY();
        },
        /**
         * Y coordinate the [[Tooltip]] should be shown at.
         *
         * @ignore Exclude from docs
         * @param {number}  value  Tooltip Y (px)
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toNumber"](value);
            if (this.setPropertyValue("tooltipY", value) && this.tooltip) {
                this.tooltip.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns Tooltip X coordinate if it's set, or middle of the element.
     *
     * @ignore Exclude from docs
     * @return {number} X (px)
     */
    Sprite.prototype.getTooltipX = function () {
        var x = this.getPropertyValue("tooltipX");
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](x)) {
            x = this.maxLeft + this.measuredWidth / 2 - this.pixelPaddingLeft - this.ex; // overflow is know only for measured items, so this is not always good
        }
        return x;
    };
    /**
     * Returns Tooltip Y coordinate if it's set, or middle of the element.
     *
     * @ignore Exclude from docs
     * @return {number} Y (px)
     */
    Sprite.prototype.getTooltipY = function () {
        var y = this.getPropertyValue("tooltipY");
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_30__["isNumber"](y)) {
            y = this.maxTop + this.measuredHeight / 2 - this.pixelPaddingTop - this.ey; // overflow is know only for measured items, so this is not always good
        }
        return y;
    };
    /**
     * Displays a modal or console message with error, and halts any further
     * processing of this item.
     *
     * @ignore Exclude from docs
     * @param {Error} e Error
     * @todo Implement from applying further actions to this item
     */
    Sprite.prototype.raiseCriticalError = function (e) {
        if (this.svgContainer) {
            this.modal.content = e.message;
            this.modal.closable = false;
            this.modal.open();
            this.disabled = true;
        }
        if (_Options__WEBPACK_IMPORTED_MODULE_17__["options"].verbose) {
            console.log(e);
        }
    };
    /**
 * Processes JSON-based config before it is applied to the object.
 *
 * @ignore Exclude from docs
 * @param {object}  config  Config
 */
    Sprite.prototype.processConfig = function (config) {
        if (config) {
            // Tooltip color source
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](config.tooltipColorSource) && _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isString"](config.tooltipColorSource) && this.map.hasKey(config.tooltipColorSource)) {
                config.tooltipColorSource = this.map.getKey(config.tooltipColorSource);
            }
            // Cursor styles
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](config.cursorOverStyle) && _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isString"](config.cursorOverStyle)) {
                config.cursorOverStyle = this.getCursorStyle(config.cursorOverStyle);
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](config.cursorDowntyle) && _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isString"](config.cursorDowntyle)) {
                config.cursorDowntyle = this.getCursorStyle(config.cursorDowntyle);
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](config.cursorOptions)) {
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](config.cursorOptions.overStyle) && _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isString"](config.cursorOptions.overStyle)) {
                    config.cursorOptions.overStyle = this.getCursorStyle(config.cursorOptions.overStyle);
                }
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_30__["hasValue"](config.cursorOptions.downStyle) && _utils_Type__WEBPACK_IMPORTED_MODULE_30__["isString"](config.cursorOptions.downStyle)) {
                    config.cursorOptions.downStyle = this.getCursorStyle(config.cursorOptions.downStyle);
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Converts string name of the cursor into actual [[MouseCursorStyle]].
     *
     * @param  {string}                      style  Cursor type
     * @return {Optional<MouseCursorStyle>}         Cursor definition
     */
    Sprite.prototype.getCursorStyle = function (style) {
        switch (style) {
            case "grab":
                return _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].grab;
            case "grabbing":
                return _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].grabbing;
            case "pointer":
                return _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].pointer;
            case "horizontalResize":
                return _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].horizontalResize;
            case "verticalResize":
                return _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].verticalResize;
            default:
                return _interaction_Mouse__WEBPACK_IMPORTED_MODULE_16__["MouseCursorStyle"].default;
        }
    };
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param  {string}  a  Element 1
     * @param  {string}  b  Element 2
     * @return {Ordering}   Sorting number
     */
    Sprite.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "tooltipColorSource") {
            return 1;
        }
        else if (b == "tooltipColorSource") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    Object.defineProperty(Sprite.prototype, "isHidden", {
        /**
         * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.
         * This was added becaus hidden state might have visibility set to true and so
         * there would not be possible to find out if a sprite is technically hidden or not.
         *
         * @type {boolean}
         */
        get: function () {
            if (this._isHidden) {
                return this._isHidden;
            }
            else if (this._parent) {
                return this._parent.isHidden;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "showOnInit", {
        /**
         * @return {boolean} Show on init?
         */
        get: function () {
            return this.getPropertyValue("showOnInit");
        },
        /**
         * If this is set to `true`, Sprite, when inited will be instantly hidden
         * ("hidden" state applied) and then shown ("default" state applied).
         *
         * If your "default" state's `transitionDuration > 0` this will result in
         * initial animation from "hidden" state to "default" state.
         *
         * If you need a Sprite which has `showOnInit = true` not to be shown
         * initially, set `sprite.hidden = true`. Setting `sprite.visible = false`
         * will not prevent the animation and the sprite will be shown.
         *
         * @param {boolean}  value show on init?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            this.setShowOnInit(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    Sprite.prototype.setShowOnInit = function (value) {
        if (this.setPropertyValue("showOnInit", value)) {
            if (!this.isTemplate) {
                if (value && !this.inited && !this.hidden) {
                    this._showOnInitDisposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_7__["MultiDisposer"]([
                        _Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].events.once("enterframe", this.hideInitially, this),
                        this.events.once("beforevalidated", this.hideInitially, this, false),
                        this.events.on("inited", this.appear, this, false)
                    ]);
                    this._disposers.push(this._showOnInitDisposer);
                }
                else {
                    if (this._showOnInitDisposer) {
                        this._showOnInitDisposer.dispose();
                    }
                }
            }
        }
    };
    /**
     * @ignore
     */
    Sprite.prototype.hideInitially = function () {
        if (!this.isDisposed()) {
            this.appeared = false;
            //if (!this.hidden && !this._isHidden) { // not good for series, as on enterframe it doesn't have data items yet.
            if (!this.inited) {
                this.hide(0);
            }
        }
    };
    /**
     * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.
     */
    Sprite.prototype.appear = function () {
        var _this = this;
        this.appeared = false;
        if (!this.hidden && !this.isHidden) {
            this.hide(0);
        }
        if (!this.hidden) {
            var animation = this.show();
            if (animation && !animation.isFinished()) {
                animation.events.on("animationended", function () {
                    _this.appeared = true;
                });
            }
            else {
                this.appeared = true;
            }
        }
        else {
            this.appeared = true;
        }
    };
    Object.defineProperty(Sprite.prototype, "hidden", {
        /**
         * @return {boolean} Is initially hidden?
         */
        get: function () {
            return this.getPropertyValue("hidden");
        },
        /**
         * If a sprite has `showOnInit = true`, it will animate from "hidden" to
         * "default" state when initialized. To prevent this but keep
         * `showOnInit = true`, you can set `sprite.hidden = true`.
         *
         * @param {boolean}  value initially hidden?
         */
        set: function (value) {
            value = _utils_Type__WEBPACK_IMPORTED_MODULE_30__["toBoolean"](value);
            this.setPropertyValue("hidden", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sprite.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         * @type {IRectangle}
         */
        get: function () {
            if (this.definedBBox) {
                return this.definedBBox;
            }
            return this._bbox;
        },
        enumerable: true,
        configurable: true
    });
    return Sprite;
}(_Base__WEBPACK_IMPORTED_MODULE_3__["BaseObjectEvents"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_18__["registry"].registeredClasses["Sprite"] = Sprite;
//# sourceMappingURL=Sprite.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteEvents.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/SpriteEvents.js ***!
  \*************************************************************************/
/*! exports provided: SpriteEventDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpriteEventDispatcher", function() { return SpriteEventDispatcher; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");






/**
 * An [[EventDispatcher]] for [[Sprite]].
 *
 * @type {TargetedEventDispatcher}
 * @important
 */
var SpriteEventDispatcher = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SpriteEventDispatcher, _super);
    function SpriteEventDispatcher() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * [_interactionEvents description]
         *
         * @todo Description
         * @type {Dictionary}
         */
        _this._interactionEvents = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
        return _this;
    }
    /**
     * [_dispatchSpriteEvent description]
     *
     * @todo Description
     * @type {[type]}
     */
    SpriteEventDispatcher.prototype._dispatchSpriteEvent = function (ev) {
        if (this.target.disabled || this.target.isTemplate) {
            return;
        }
        // TODO remove this <any> later
        if (this.target.events.isEnabled(ev.type)) {
            var imev = _utils_Object__WEBPACK_IMPORTED_MODULE_5__["merge"](ev, {
                target: this.target
            });
            this.target.events.dispatchImmediately(imev.type, imev);
        }
    };
    /**
     * [_dispatchSpritePointEvent description]
     *
     * @todo Description
     * @type {[type]}
     */
    SpriteEventDispatcher.prototype._dispatchSpritePointEvent = function (ev) {
        if (this.target.disabled || this.target.isTemplate) {
            return;
        }
        // TODO remove this <any> later
        if (this.target.events.isEnabled(ev.type)) {
            var imev = _utils_Object__WEBPACK_IMPORTED_MODULE_5__["merge"](ev, {
                target: this.target,
                spritePoint: _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["documentPointToSprite"](ev.point, this.target),
                svgPoint: this.target.getSvgPoint(ev.point)
            });
            this.target.events.dispatchImmediately(imev.type, imev);
        }
    };
    /**
     * [_addInteractionObjectEvent description]
     *
     * @todo Description
     * @type {[type]}
     */
    SpriteEventDispatcher.prototype._addInteractionObjectEvent = function (type, callback, context, shouldClone) {
        var _this = this;
        var counter = this._interactionEvents.insertKeyIfEmpty(type, function () {
            var disposer = _this.target.interactions.events.on(type, callback, context, shouldClone);
            return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["CounterDisposer"](function () {
                _this._interactionEvents.removeKey(type);
                disposer.dispose();
            });
        });
        return counter.increment();
    };
    /**
     * [_on description]
     *
     * @todo Description
     * @type {[type]}
     */
    SpriteEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {
        var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);
        var disposers = [info.disposer];
        /**
         * Catching Sprite-related events, converting them to [[SpriteEvent]] and
         * triggering them on sprite
         */
        switch (type) {
            case "hit":
            case "track":
            case "doublehit":
            case "wheel":
            case "wheelup":
            case "wheeldown":
            case "wheelleft":
            case "wheelright":
                disposers.push(this._addInteractionObjectEvent(type, this._dispatchSpritePointEvent, this, shouldClone));
                break;
            case "rightclick":
            case "down":
            //case "hold":
            case "up":
            case "drag":
            case "dragstart":
            case "dragstop":
            case "over":
            case "out":
            case "swipe":
            case "swipeleft":
            case "swiperight":
            case "resize":
            //case "rotate":
            case "focus":
            case "blur":
            case "toggled":
                disposers.push(this._addInteractionObjectEvent(type, this._dispatchSpriteEvent, this, shouldClone));
                break;
        }
        /**
         * Set functional properties based on events. For example if we add a
         * "drag" event handler, we want to make the Sprite draggable, even if we
         * don't explicitly set "draggable"
         */
        switch (type) {
            case "hit":
            case "doublehit":
            case "rightclick":
            case "down":
            case "up":
                this.target.clickable = true;
                break;
            case "toggled":
                this.target.togglable = true;
                break;
            case "drag":
            case "dragstart":
            case "dragstop":
                this.target.draggable = true;
                break;
            case "track":
                this.target.trackable = true;
                break;
            case "resize":
                this.target.resizable = true;
                break;
            case "swipe":
            case "swipeleft":
            case "swiperight":
                this.target.swipeable = true;
                break;
            case "wheel":
            case "wheelup":
            case "wheeldown":
            case "wheelleft":
            case "wheelright":
                this.target.wheelable = true;
                break;
            case "over":
                this.target.hoverable = true;
            case "out":
                this.target.hoverable = true;
                break;
            case "focus":
            case "blur":
                this.target.focusable = true;
                break;
        }
        info.disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MultiDisposer"](disposers);
        return info;
    };
    return SpriteEventDispatcher;
}(_utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_2__["TargetedEventDispatcher"]));

//# sourceMappingURL=SpriteEvents.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteState.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/SpriteState.js ***!
  \************************************************************************/
/*! exports provided: SpriteState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpriteState", function() { return SpriteState; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Module contains functionality related to [[Sprite]] states.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * Defines a state for [[Sprite]].
 *
 * A "state" is a special object that has all the same properties as the
 * [[Sprite]] of the same type, and which can be used to quickly apply a set
 * of property values. (set state)
 *
 * When [[Sprite]] (or any object that extends Sprite) is created it creates a
 * "default" state. You can modify the "default" state so that when the Sprite
 * returns to default state certain properties are added.
 *
 * Default state can be accessed using Sprite's `defaultState` getter.
 *
 * ```TypeScript
 * sprite.defaultState.properties.fillOpacity = 0.5;
 * ```
 * ```JavaScript
 * sprite.defaultState.properties.fillOpacity = 0.5;
 * ```
 * ```JSON
 * {
 *   // ...
 *   "defaultState": {
 *     "properties": {
 *       "fillOpacity": 0.5
 *     }
 *   }
 * }
 * ```
 *
 * If Sprite is "hoverable", it automatically adds a "hover" state, which is
 * applied when it has a cursor over it.
 *
 * ```TypeScript
 * let hoverstate = sprite.states.create("hover");
 * hoverstate.properties.fillOpacity = 1;
 * ```
 * ```JavaScript
 * var hoverstate = sprite.states.create("hover");
 * hoverstate.properties.fillOpacity = 1;
 * ```
 * ```JSON
 * {
 *   // ...
 *   "states": {
 *     "hover": {
 *       "properties": {
 *         "fillOpacity": 0.5
 *       }
 *     }
 *   }
 * }
 * ```
 *
 * The above will automatically apply "hover" state when the Sprite is hovered,
 * thus will set its `fillOpacity` property to 1, and will reset it to 0.5 when
 * it's no longer hovered.
 *
 * Every object that inherits from [[Sprite]] can and will add their own
 * properties to the available list.
 *
 * User can create their own states, and apply them as needed:
 *
 * ```TypeScript
 * let myCustomState = sprite.states.create("mystate");
 * myCustomState.properties.fillOpacity = 0.5;
 * myCustomState.properties.strokeOpacity = 0.8;
 * sprite.setState("mystate");
 * ```
 * ```JavaScript
 * var myCustomState = sprite.states.create("mystate");
 * myCustomState.properties.fillOpacity = 0.5;
 * myCustomState.properties.strokeOpacity = 0.8;
 * sprite.setState("mystate");
 * ```
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/states/}
 * @important
 */
var SpriteState = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SpriteState, _super);
    /**
     * Constructor
     */
    function SpriteState() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Holds Adapter.
         *
         * @type {Adapter<Sprite, SpriteAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        /**
         * Duration of the transition to this state. 0 means instantenous transition.
         * Any number means the [[Sprite]] will transit smoothly to this state,
         * animating all animatable properties.
         *
         * @default 0
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {number}
         */
        _this.transitionDuration = 0;
        /**
         * Easing function to use when transitioning to this state.
         *
         * @default cubicOut
         * @see {@link Ease}
         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations
         * @type {(number) => number}
         */
        _this.transitionEasing = _utils_Ease__WEBPACK_IMPORTED_MODULE_7__["cubicOut"];
        /**
         * Collection of properties and their values that should be applied to [[Sprite]]
         * when switching to this State.
         *
         * The property values set on a [[SpriteState]] will override the ones set
         * directly on a [[Sprite]].
         *
         * @type {Dictionary<string, any>}
         */
        _this.properties = {};
        /**
         * A collection of key/value pairs that can be used to bind specific Sprite
         * properties to [[DataItem]].
         *
         * For example: `fill` property can be bound to `myCustomColor` field in
         * DataItem. The Sprite will automatically get the value for `fill` from its
         * DataItem.
         *
         * SpriteState-specific binding will override binding set directly on
         * [[Sprite]]. I.e. you can make Sprite use different fill color on hover by
         * adding a `fill` binding to a different DataItem key for Sprite's "hover"
         * state object.
         *
         * @see {@link Sprite}
         * @type {Object}
         */
        _this.propertyFields = {};
        //public propertyFields: Dictionary<keyof this["_properties"], string> = new Dictionary<keyof this["_properties"], string>();;
        /**
         * A list of [[Filter]] elements to be applied to the relative [[Sprite]]
         * when switching to this State.
         *
         * @param {List}
         */
        _this.filters = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
        /**
         * Identifies if this object is a "template" and should not be treated as
         * real object that is drawn or actually used in the chart.
         *
         * @type {boolean}
         */
        _this.isTemplate = false;
        _this.className = "SpriteState";
        // Make filter list disposable
        _this._disposers.push(new _utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.filters));
        // Decorate adapter with events so that we can apply its settings whenever
        // it is modified
        _this.adapter.events.on("inserted", function (ev) {
            _this[ev.newValue.key] = _this[ev.newValue.key];
        }, undefined, false);
        _this.adapter.events.on("removed", function (ev) {
            _this[ev.newValue.key] = _this[ev.newValue.key];
        }, undefined, false);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns [[Sprite]] element's property value.
     *
     * Will check if there are any bindings with [[DataItem]] and if there are
     * any method callbacks set up for the specific property.
     *
     * @param  {Properties}  propertyName  Property name
     * @return {any}                       Property value
     */
    SpriteState.prototype.getPropertyValue = function (propertyName) {
        var propValue = this.properties[propertyName];
        var sprite = this.sprite;
        if (sprite) {
            var fieldName = this.propertyFields[propertyName];
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](fieldName)) {
                if (sprite.dataItem) {
                    propValue = sprite.dataItem.dataContext[fieldName];
                }
            }
            // Apply adapters
            // If the value itself is undefined, we're going to pass in Sprite's
            // value to adapters
            // @todo get rid of <any>
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](propValue)) {
                var spriteValue = sprite.getPropertyValue(propertyName);
                propValue = this.adapter.apply(propertyName, sprite.getPropertyValue(propertyName));
                if (propValue == spriteValue) {
                    propValue = undefined;
                }
            }
            else {
                propValue = this.adapter.apply(propertyName, propValue);
            }
            /*let method = this.propertyMethods.getKey(propertyName);
            if (method) {
                propValue = method(sprite, propertyName);
            }*/
        }
        return propValue;
    };
    /**
     * Copies all property and style values from another [[SpriteState]] object.
     *
     * @param {SpriteState}  source  Source [[SpriteState]]
     */
    SpriteState.prototype.copyFrom = function (source) {
        if (source && source != this) {
            this.transitionDuration = source.transitionDuration;
            this.transitionEasing = source.transitionEasing;
            _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["copyProperties"](source.properties, this.properties);
            _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["copyProperties"](source.propertyFields, this.propertyFields);
            this.filters.copyFrom(source.filters);
            this.adapter.copyFrom(source.adapter);
        }
    };
    Object.defineProperty(SpriteState.prototype, "allValues", {
        /**
         * Returns all values that should be applied by the SpriteState.
         *
         * It takes adapters into account.
         *
         * @ignore Exclude from docs
         * @return {ISpriteProperties} Properties
         * @todo Add adapter values
         * @todo proper type this["_properties"]
         */
        get: function () {
            var _this = this;
            // Init return value
            var res = {};
            // Apply adapters to all values
            _utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](this.properties, function (prop, value) {
                res[prop] = _this.getPropertyValue(prop);
            });
            // Cycle through all adapters and add values for missing properties
            var keys = this.adapter.keys();
            _utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](keys, function (_x, prop) {
                var value = _this.getPropertyValue(prop);
                res[prop] = value;
            });
            // Cycle through all property fileds and add values for missing properties
            var propertyFields = this.propertyFields;
            _utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](propertyFields, function (prop) {
                var value = _this.getPropertyValue(prop);
                res[prop] = value;
            });
            return res;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Resets the State to initial state - no values or Filters applied.
     */
    SpriteState.prototype.reset = function () {
        this.properties = {};
        this.filters.clear();
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    SpriteState.prototype.processConfig = function (config) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config) && _utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config["properties"])) {
            _utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](config["properties"], function (key, value) {
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isString"](value)) {
                    if (value.match(/^[0-9.\-]+\%$/)) {
                        config["properties"][key] = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(_utils_Type__WEBPACK_IMPORTED_MODULE_9__["toNumber"](value));
                    }
                    else if (value.match(/^\#[0-9abcdef]{3,}$/i)) {
                        config["properties"][key] = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(value);
                    }
                }
            });
        }
        _super.prototype.processConfig.call(this, config);
    };
    return SpriteState;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

//# sourceMappingURL=SpriteState.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/System.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/System.js ***!
  \*******************************************************************/
/*! exports provided: System, system */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "System", function() { return System; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "system", function() { return system; });
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _Options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _utils_AsyncPending__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/AsyncPending */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * The main class that handles system-wide tasks, like caching, heartbeats, etc.
 * @important
 */
var System = /** @class */ (function () {
    /**
     * Performs initialization of the System object.
     *
     * Called when the first [[Sprite]] object is created.
     *
     * @ignore Exclude from docs
     */
    function System() {
        /**
         * A flag indicating if the system is on pause.
         *
         * @type {boolean}
         */
        this._isPaused = false;
        /**
         * Unique ID of the object.
         *
         * @type {string}
         */
        this.uid = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].getUniqueId();
        /**
         * @todo Description
         * @todo Needed?
         * @ignore Exclude from docs
         * @type {number}
         */
        this.dummyCounter = 0;
        this._frameRequested = false;
        this.updateStepDuration = 45;
        this.time = Date.now();
    }
    /**
     * Reports time elapsed since timer was reset.
     *
     * @ignore Exclude from docs
     * @todo Needed?
     * @param {string}   msg    Message to report in console
     * @param {boolean}  reset  Reset time counter
     */
    System.prototype.reportTime = function (msg, reset) {
        if (this.dummyCounter < 6) {
            //console.log(Date.now() - this.time, msg, this.dummyCounter2);
        }
        if (reset) {
            this.time = Date.now();
        }
    };
    /**
     * Performs "heartbeat" operations `frameRate` number of times per second.
     *
     * When the chart element is invalidated, it is not immediately redrawn.
     *
     * Instead it waits for the next `update()` cycle to be re-validated.
     *
     * @ignore Exclude from docs
     * @todo Maybe should be private?
     */
    System.prototype.update = function () {
        var _this = this;
        if (this._isPaused) {
            return;
        }
        this._frameRequested = false;
        var time = Date.now();
        _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].dispatchImmediately("enterframe");
        //this.validateLayouts();
        //this.validatePositions();
        /*
                for (let key in registry.invalidLayouts) {
                    this.validateLayouts(key);
                }
                for (let key in registry.invalidPositions) {
                    this.validatePositions(key);
                }
        */
        var skippedComponents = [];
        // data objects first - do all calculations
        // only data is parsed in chunks, thats why we do for loop instead of a while like with other invalid items.
        // important to go backwards, as items are removed!
        // TODO use iterator instead
        for (var key in _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDatas) {
            if (_utils_Object__WEBPACK_IMPORTED_MODULE_7__["hasKey"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDatas, key)) {
                var invalidData = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDatas[key];
                while (invalidData.length > 0) {
                    var component = invalidData[0];
                    var dataProvider = component.dataProvider;
                    if (!component.isDisposed()) {
                        if (dataProvider && dataProvider.dataInvalid) {
                            try {
                                dataProvider.validateData();
                                if (dataProvider.dataValidationProgress < 1) {
                                    break;
                                }
                            }
                            catch (e) {
                                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidData, dataProvider);
                                dataProvider.raiseCriticalError(e);
                            }
                        }
                        else {
                            try {
                                component.validateData();
                                if (component.dataValidationProgress < 1) {
                                    break;
                                }
                            }
                            catch (e) {
                                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidData, component);
                                component.raiseCriticalError(e);
                            }
                        }
                    }
                    else {
                        _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidData, component);
                    }
                }
                if (Date.now() - time > this.updateStepDuration) {
                    break;
                }
            }
        }
        while (_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidRawDatas.length > 0) {
            var component = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidRawDatas[0];
            if (!component.isDisposed()) {
                try {
                    component.validateRawData();
                }
                catch (e) {
                    _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidRawDatas, component);
                    component.raiseCriticalError(e);
                }
            }
            else {
                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidRawDatas, component);
            }
        }
        // TODO use iterator instead
        while (_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataItems.length > 0) {
            var component = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataItems[0];
            var dataProvider = component.dataProvider;
            // this is needed to avoid partial value validation when data is parsed in chunks
            if (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {
                // void
            }
            else {
                try {
                    component.validateDataItems();
                }
                catch (e) {
                    _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataItems, component);
                    component.raiseCriticalError(e);
                }
            }
            // this might seem too much, as validateValues removes from invalidDataItems aswell, but just to be sure (in case validateData is overriden and no super is called)
            _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataItems, component);
        }
        // TODO use iterator instead
        while (_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataRange.length > 0) {
            var component = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataRange[0];
            var dataProvider = component.dataProvider;
            if (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {
                // void
            }
            else {
                try {
                    component.validateDataRange();
                    if (!component.skipRangeEvent) {
                        component.dispatchImmediately("datarangechanged");
                    }
                    component.skipRangeEvent = false;
                }
                catch (e) {
                    _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataRange, component);
                    component.raiseCriticalError(e);
                }
            }
            // this might seem too much, as validateDataRange removes from invalidDataRange aswell, but just to be sure (in case validateData is overriden and no super is called)
            _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDataRange, component);
        }
        var skippedSprites = [];
        // display objects later
        // TODO use iterator instead
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidLayouts, function (key) {
            _this.validateLayouts(key);
        });
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidPositions, function (key) {
            _this.validatePositions(key);
        });
        var hasSkipped = false;
        time = Date.now();
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidSprites, function (key, invalidSprites) {
            var count = 0;
            while (invalidSprites.length > 0) {
                _this.validateLayouts(key);
                _this.validatePositions(key);
                count++;
                if (count == 5) {
                    if (Date.now() - time > _this.updateStepDuration) {
                        break;
                    }
                    count = 0;
                }
                var sprite = invalidSprites[invalidSprites.length - 1];
                // we need to check this, as validateLayout might validate sprite
                if (sprite && !sprite.isDisposed()) {
                    if (!_this.checkIfValidate(sprite)) {
                        // void
                        skippedSprites.push(sprite);
                    }
                    else {
                        if (!_this.checkIfValidate2(sprite)) {
                            // void
                            skippedSprites.push(sprite);
                        }
                        else {
                            try {
                                if (sprite instanceof _Container__WEBPACK_IMPORTED_MODULE_1__["Container"]) {
                                    sprite.children.each(function (child) {
                                        if (child.invalid) {
                                            if (!_this.checkIfValidate(child)) {
                                                skippedSprites.push(child);
                                            }
                                            else if (child.dataItem && child.dataItem.component && child.dataItem.component.dataInvalid) {
                                                skippedSprites.push(child);
                                            }
                                            else {
                                                child.validate();
                                            }
                                        }
                                    });
                                }
                                sprite.validate();
                            }
                            catch (e) {
                                sprite.invalid = false;
                                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidSprites, sprite);
                                sprite.raiseCriticalError(e);
                            }
                        }
                    }
                    // this might seem too much, but it's ok
                    sprite.invalid = false;
                }
                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidSprites, sprite);
            }
            _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidSprites[key] = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidSprites[key].concat(skippedSprites);
        });
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidSprites, function (key, value) {
            if (value.length > 0) {
                hasSkipped = true;
            }
        });
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDatas, function (key, value) {
            if (value.length > 0) {
                hasSkipped = true;
            }
        });
        // TODO make this more efficient
        // TODO don't copy the array
        _utils_Array__WEBPACK_IMPORTED_MODULE_6__["each"](_utils_Array__WEBPACK_IMPORTED_MODULE_6__["copy"](_utils_Animation__WEBPACK_IMPORTED_MODULE_5__["animations"]), function (x) {
            x.update();
        });
        //if(!hasSkipped){
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidLayouts, function (key) {
            _this.validateLayouts(key);
        });
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidPositions, function (key) {
            _this.validatePositions(key);
        });
        //}
        Object(_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_4__["triggerIdle"])();
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidLayouts, function (key) {
            _this.validateLayouts(key);
        });
        _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidPositions, function (key) {
            _this.validatePositions(key);
        });
        _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].dispatchImmediately("exitframe");
        if (hasSkipped || _utils_Animation__WEBPACK_IMPORTED_MODULE_5__["animations"].length > 0 || skippedComponents.length > 0) {
            this.requestFrame();
        }
        if (this.updateStepDuration < 200) {
            var all0_1 = true;
            _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidDatas, function (key, value) {
                if (value.length > 0) {
                    all0_1 = false;
                }
            });
            _utils_Object__WEBPACK_IMPORTED_MODULE_7__["each"](_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidSprites, function (key, value) {
                if (value.length > 0) {
                    all0_1 = false;
                }
            });
            if (all0_1) {
                this.updateStepDuration = 200;
            }
        }
    };
    System.prototype.checkIfValidate = function (sprite) {
        if (sprite instanceof _Component__WEBPACK_IMPORTED_MODULE_2__["Component"] && (sprite.dataInvalid || (sprite.dataProvider && sprite.dataProvider.dataInvalid))) {
            return false;
        }
        else {
            return true;
        }
    };
    System.prototype.checkIfValidate2 = function (sprite) {
        if (sprite.dataItem && sprite.dataItem.component && sprite.dataItem.component.dataInvalid && !sprite.dataItem.component.isTemplate) {
            return false;
        }
        else {
            return true;
        }
    };
    /**
     * Requests new animation frame
     */
    System.prototype.requestFrame = function () {
        var _this = this;
        if (!this._frameRequested) {
            Object(_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_4__["raf"])(function () {
                _this.update();
            });
            this._frameRequested = true;
        }
    };
    /**
     * Triggers position re-validation on all [[Sprite]] elements that have
     * invalid(ated) positions.
     *
     * @ignore Exclude from docs
     * @todo Maybe should be private?
     */
    System.prototype.validatePositions = function (id) {
        // invalid positions
        // TODO use iterator instead
        var invalidPositions = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidPositions[id];
        while (invalidPositions.length > 0) {
            var sprite = invalidPositions[invalidPositions.length - 1];
            if (!sprite.isDisposed()) {
                try {
                    if (sprite instanceof _Container__WEBPACK_IMPORTED_MODULE_1__["Container"]) {
                        sprite.children.each(function (sprite) {
                            if (sprite.positionInvalid) {
                                sprite.validatePosition();
                            }
                        });
                    }
                    sprite.validatePosition();
                }
                catch (e) {
                    sprite.positionInvalid = false;
                    _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidPositions, sprite);
                    sprite.raiseCriticalError(e);
                }
            }
            else {
                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidPositions, sprite);
            }
        }
    };
    /**
     * Triggers position re-validation on all [[Container]] elements that have
     * invalid(ated) layouts.
     *
     * @ignore Exclude from docs
     * @todo Maybe should be private?
     */
    System.prototype.validateLayouts = function (id) {
        // invalid positions
        // TODO use iterator instead
        var invalidLayouts = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].invalidLayouts[id];
        while (invalidLayouts.length > 0) {
            var container = invalidLayouts[invalidLayouts.length - 1];
            if (!container.isDisposed()) {
                try {
                    container.children.each(function (sprite) {
                        if (sprite instanceof _Container__WEBPACK_IMPORTED_MODULE_1__["Container"] && sprite.layoutInvalid && !sprite.isDisposed()) {
                            sprite.validateLayout();
                        }
                    });
                    container.validateLayout();
                }
                catch (e) {
                    container.layoutInvalid = false;
                    _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidLayouts, container);
                    container.raiseCriticalError(e);
                }
            }
            else {
                _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](invalidLayouts, container);
            }
        }
    };
    /**
     * Outputs string to console if `verbose` is `true`.
     *
     * @param {any} value Message to output to console
     */
    System.prototype.log = function (value) {
        if (_Options__WEBPACK_IMPORTED_MODULE_3__["options"].verbose) {
            if (console) {
                console.log(value);
            }
        }
    };
    Object.defineProperty(System.prototype, "isPaused", {
        /**
         * @return {boolean} Is system on pause?
         */
        get: function () {
            return this._isPaused;
        },
        /**
         * Pauses all the processes of all the amCharts objects on the page
         *
         * @return {boolean} is paused?
         */
        set: function (value) {
            this._isPaused = value;
            if (!value) {
                this._frameRequested = false;
                this.requestFrame();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * amCharts Version.
     *
     * This follows npm's semver specification.
     *
     * @see {@link https://docs.npmjs.com/misc/semver}
     * @type {string}
     */
    System.VERSION = "4.1.0";
    return System;
}());

/**
 * A singleton global instance of [[System]].
 *
 * All code should use this, rather than instantiating their
 * own System objects.
 */
var system = new System();
//# sourceMappingURL=System.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/data/CSVParser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/data/CSVParser.js ***!
  \***************************************************************************/
/*! exports provided: CSVParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSVParser", function() { return CSVParser; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _DataParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataParser.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * CSV parser.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Define possible separators.
 */
var separators = [",", ";", "\t"];
/**
 * A parser for CSV format.
 *
 * @important
 */
var CSVParser = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CSVParser, _super);
    function CSVParser() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Content-type suitable for CSV format.
         *
         * @type {string}
         */
        _this.contentType = "text/csv";
        /**
         * Parser options.
         *
         * @see {@link ICSVOptions} for description of each option
         * @type {ICSVOptions}
         */
        _this.options = {
            delimiter: "",
            reverse: false,
            skipRows: 0,
            skipEmpty: true,
            useColumnNames: false
        };
        return _this;
    }
    /**
     * Tests if the format is CSV.
     *
     * @param  {string}   data  Source data
     * @return {boolean}        Is it CSV?
     */
    CSVParser.isCSV = function (data) {
        return CSVParser.getDelimiterFromData(data) ? true : false;
    };
    /**
     * Tries to determine a column separator.
     *
     * @param  {string}  data  Source data
     * @return {string}        Separator
     */
    CSVParser.getDelimiterFromData = function (data) {
        // We're going to take first few lines of the CSV with different
        // possible separators and check if it results in same number of columns.
        // If it does, we're going to assume it's a CSV
        var lines = data.split("\n");
        var len = lines.length;
        var separator;
        _utils_Array__WEBPACK_IMPORTED_MODULE_3__["each"](separators, function (sep) {
            var columns = 0, lineColums = 0;
            // TODO replace with iterators
            for (var i = 0; i < len; ++i) {
                // Get number of columns in a line
                columns = lines[i].split(sep).length;
                if (columns > 1) {
                    // More than one column - possible candidate
                    if (lineColums === 0) {
                        // First line
                        lineColums = columns;
                    }
                    else if (columns != lineColums) {
                        // Incorrect number of columns, give up on this separator
                        lineColums = 0;
                        break;
                    }
                }
                else {
                    // Not this separator
                    // Not point in continuing
                    lineColums = 0;
                    break;
                }
            }
            // Check if we have a winner
            if (lineColums) {
                separator = sep;
            }
        });
        return separator;
    };
    /**
     * Parses and returns data.
     *
     * @param  {string}  data  Unparsed data
     * @return {any}           Parsed data
     */
    CSVParser.prototype.parse = function (csv) {
        // Check if we have delimiter set
        if (!this.options.delimiter) {
            this.options.delimiter = CSVParser.getDelimiterFromData(csv);
        }
        // Get CSV data as array
        var data = this.CSVToArray(csv, this.options.delimiter);
        // Do we need to cast some fields to numbers?
        var empty = _utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](this.options.emptyAs);
        var numbers = this.parsableNumbers;
        var dates = this.parsableDates;
        // Init resuling array
        var res = [], cols = [], col, i;
        // First row holds column names?
        if (this.options.useColumnNames) {
            cols = data.shift();
            // Normalize column names
            for (var x = 0; x < cols.length; x++) {
                // trim
                col = _utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](cols[x]) ? cols[x].replace(/^\s+|\s+$/gm, "") : "";
                // Check for empty
                if ("" === col) {
                    col = "col" + x;
                }
                cols[x] = col;
            }
            if (0 < this.options.skipRows)
                this.options.skipRows--;
        }
        // Skip rows
        for (i = 0; i < this.options.skipRows; i++) {
            data.shift();
        }
        // Iterate through the result set
        var row;
        while ((row = this.options.reverse ? data.pop() : data.shift())) {
            if (this.options.skipEmpty && row.length === 1 && row[0] === "")
                continue;
            var dataPoint = {};
            for (i = 0; i < row.length; i++) {
                col = undefined === cols[i] ? "col" + i : cols[i];
                dataPoint[col] = row[i] === "" ? this.options.emptyAs : row[i];
                // Convert
                if (empty) {
                    dataPoint[col] = this.maybeToEmpty(dataPoint[col]);
                }
                if (numbers) {
                    dataPoint[col] = this.maybeToNumber(col, dataPoint[col]);
                }
                if (dates) {
                    dataPoint[col] = this.maybeToDate(col, dataPoint[col]);
                }
            }
            res.push(dataPoint);
        }
        return res;
    };
    /**
     * Converts CSV into array.
     *
     * The functionality of this function is taken from here:
     * http://www.bennadel.com/blog/1504-ask-ben-parsing-csv-strings-with-javascript-exec-regular-expression-command.htm
     *
     * @param  {string}  data       Source data
     * @param  {string}  delimiter  Column delimiter
     * @return {any[]}              Parsed array
     */
    CSVParser.prototype.CSVToArray = function (data, delimiter) {
        // Check to see if the delimiter is defined. If not,
        // then default to comma.
        delimiter = (delimiter || ',');
        // Create a regular expression to parse the CSV values.
        var objPattern = new RegExp((
        // Delimiters.
        "(\\" + delimiter + "|\\r?\\n|\\r|^)" +
            // Quoted fields.
            "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +
            // Standard fields.
            "([^\"\\" + delimiter + "\\r\\n]*))"), "gi");
        // Create an array to hold our data. Give the array
        // a default empty first row.
        var arrData = [
            []
        ];
        // Create an array to hold our individual pattern
        // matching groups.
        var arrMatches = null;
        // Keep looping over the regular expression matches
        // until we can no longer find a match.
        while ((arrMatches = objPattern.exec(data))) {
            // Get the delimiter that was found.
            var strMatchedDelimiter = arrMatches[1];
            // Check to see if the given delimiter has a length
            // (is not the start of string) and if it matches
            // field delimiter. If id does not, then we know
            // that this delimiter is a row delimiter.
            if (strMatchedDelimiter.length &&
                (strMatchedDelimiter !== delimiter)) {
                // Since we have reached a new row of data,
                // add an empty row to our data array.
                arrData.push([]);
            }
            // Now that we have our delimiter out of the way,
            // let's check to see which kind of value we
            // captured (quoted or unquoted).
            var strMatchedValue = void 0;
            if (arrMatches[2]) {
                // We found a quoted value. When we capture
                // this value, unescape any double quotes.
                strMatchedValue = arrMatches[2].replace(new RegExp("\"\"", "g"), "\"");
            }
            else {
                // We found a non-quoted value.
                strMatchedValue = arrMatches[3];
            }
            // Now that we have our value string, let's add
            // it to the data array.
            arrData[arrData.length - 1].push(strMatchedValue);
        }
        // Return the parsed data.
        return (arrData);
    };
    return CSVParser;
}(_DataParser__WEBPACK_IMPORTED_MODULE_1__["DataParser"]));

//# sourceMappingURL=CSVParser.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataLoader.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/data/DataLoader.js ***!
  \****************************************************************************/
/*! exports provided: DataLoader, dataLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataLoader", function() { return DataLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataLoader", function() { return dataLoader; });
/* harmony import */ var _CSVParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CSVParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/CSVParser.js");
/* harmony import */ var _JSONParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./JSONParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/JSONParser.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_Net__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Net */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Net.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * Data Loader is responsible for loading and parsing external data
 */





;
/**
 * Data Loader is responsible for loading and parsing external data.
 *
 * There is just one instance of DataLoader per system. Unless you have a
 * speicific reason, do not instantiate additional instances.
 *
 * The global instance of Data Loader is accessible via:
 *
 * ```TypeScript
 * am4core.dataLoader;
 * ```
 * ```JavaScript
 * am4core.dataLoader;
 * ```
 *
 * A loading of specific data source is done via [[DataSource]].
 *
     Please refer to [[DataSource]] for information how to use it.
 *
 * @see {@link IDataLoaderAdapters} for a list of available Adapters
 */
var DataLoader = /** @class */ (function () {
    function DataLoader() {
        /**
         * Adapter.
         *
         * @type {Adapter<DataLoader, IDataLoaderAdapters>}
         */
        this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](this);
    }
    /**
     * Loads a supplied [[DataSource]] or an array of data sources, then calls
     * their respective `parse` methods.
     *
     * @param  {DataSource | DataSource[]}  source  A single data source or an array of multiple of data sources
     */
    DataLoader.prototype.load = function (source) {
        var sources = Array.isArray(source) ? source : [source];
        // Add each Source to the list to be loaded simultaneously
        var promises = _utils_Array__WEBPACK_IMPORTED_MODULE_4__["map"](sources, function (x) {
            // Dispatch events
            x.dispatchImmediately("started");
            x.dispatchImmediately("loadstarted");
            return _utils_Net__WEBPACK_IMPORTED_MODULE_3__["load"](x.url, x, x.requestOptions);
        });
        // Run all promises in parallel
        Promise.all(promises).then(function (res) {
            // Process each loaded source
            _utils_Array__WEBPACK_IMPORTED_MODULE_4__["each"](res, function (result) {
                // Get Source
                var source = result.target;
                // Dispatch events
                source.dispatchImmediately("loadended");
                if (result.error) {
                    if (source.events.isEnabled("error")) {
                        source.events.dispatchImmediately("error", {
                            type: "error",
                            code: result.xhr.status,
                            message: source.language.translate("Unable to load file: %1", null, source.url),
                            target: source
                        });
                    }
                }
                else {
                    // Initiate parsing of the loaded data
                    source.processData(result.response, result.type);
                }
                source.dispatchImmediately("ended");
            });
        }).catch(function (res) {
            if (res.target) {
                res.target.dispatchImmediately("loadended");
                if (res.target.events.isEnabled("error")) {
                    res.target.events.dispatchImmediately("error", {
                        type: "error",
                        code: res.xhr.status,
                        message: res.target.language.translate("Unable to load file: %1", null, res.target.url),
                        target: res.target
                    });
                }
                res.target.dispatchImmediately("ended");
            }
        });
    };
    /**
     * Instantiates a [[DataParser]] object based on the data type.
     * Built-in parser types are as follows:
     *
     * * "csv" or "text/csv"
     * * "json" or "application/json"
     *
     * @param  {string}      contentType  A format type
     * @return {DataParser}               A parser object
     */
    DataLoader.prototype.getParserByType = function (contentType) {
        // Let some plugin decide
        var parser;
        if (parser = this.adapter.apply("getParserByType", {
            parser: null,
            type: contentType
        }).parser) {
            return parser;
        }
        if (contentType == "csv" || contentType == "text/csv" || contentType == "application/vnd.ms-excel") {
            return new _CSVParser__WEBPACK_IMPORTED_MODULE_0__["CSVParser"]();
        }
        if (contentType == "json" || contentType == "application/json") {
            return new _JSONParser__WEBPACK_IMPORTED_MODULE_1__["JSONParser"]();
        }
        return;
    };
    /**
     * Tries to determine a parser out of content type and/or actual data.
     *
     * @param  {string}      data         Data
     * @param  {string}      contentType  Content-type
     * @return {DataParser}               Parser instance
     */
    DataLoader.prototype.getParserByData = function (data, contentType) {
        // Let some plugin decide
        var parser = this.adapter.apply("getParserByData", {
            parser: null,
            data: data,
            type: contentType
        }).parser;
        // Check if we have parser from outside code
        if (!parser) {
            // No, let's try to figure it out
            if (parser = this.getParserByType(contentType)) {
                // We're able to figure out parser by conten-type
                return parser;
            }
            else if (_JSONParser__WEBPACK_IMPORTED_MODULE_1__["JSONParser"].isJSON(data)) {
                return this.getParserByType("json");
            }
            else if (_CSVParser__WEBPACK_IMPORTED_MODULE_0__["CSVParser"].isCSV(data)) {
                return this.getParserByType("csv");
            }
        }
        return parser;
    };
    return DataLoader;
}());

/**
 * Create instance of Data Loader
 */
var dataLoader = new DataLoader();
//# sourceMappingURL=DataLoader.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataParser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/data/DataParser.js ***!
  \****************************************************************************/
/*! exports provided: DataParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataParser", function() { return DataParser; });
/* harmony import */ var _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../formatters/DateFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Data parser module.
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class for the data parsers.
 */
var DataParser = /** @class */ (function () {
    function DataParser() {
    }
    /**
     * A "placeholder" function for real parsers to override.
     *
     * @ignore Exclude from docs
     * @param  {string}  data  Source data
     * @return {any}           Parsed data (empty)
     */
    DataParser.prototype.parse = function (data) {
        return [];
    };
    ;
    Object.defineProperty(DataParser.prototype, "parsableNumbers", {
        /**
         * Checks if there are any numeric fields that need to be converted to
         * numbers.
         *
         * @return {boolean} Numeric fields?
         */
        get: function () {
            return this.options.numberFields && (this.options.numberFields.length > 0);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a value to 'number' if it is in `numberFields`.
     *
     * @param  {string}  field  Field name
     * @param  {any}     value  Value
     * @return {any}            Parsed or original value
     */
    DataParser.prototype.maybeToNumber = function (field, value) {
        if (this.options.numberFields.indexOf(field) !== -1) {
            return _utils_Utils__WEBPACK_IMPORTED_MODULE_1__["anyToNumber"](value);
        }
        return value;
    };
    Object.defineProperty(DataParser.prototype, "parsableDates", {
        /**
         * Checks if there are any date fields that need to be converted to `Date`
         * objects.
         *
         * @return {boolean} Date fields?
         */
        get: function () {
            return this.options.dateFields && (this.options.dateFields.length > 0);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a value to `Date` if it is in `dateFields`.
     *
     * @param  {string}  field  Field name
     * @param  {any}     value  Value
     * @return {any}            Parsed or original value
     */
    DataParser.prototype.maybeToDate = function (field, value) {
        if (this.options.dateFields.indexOf(field) !== -1) {
            return this.options.dateFormatter.parse(value, this.dateFormat);
        }
        return value;
    };
    /**
     * Replaces empty value with something else.
     *
     * @param  {any}  value  Source value
     * @return {any}         Source value or replacement
     */
    DataParser.prototype.maybeToEmpty = function (value) {
        if ((!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](value) || value == "") && _utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](this.options.emptyAs)) {
            return this.options.emptyAs;
        }
        return value;
    };
    Object.defineProperty(DataParser.prototype, "dateFormatter", {
        /**
         * [[DateFormatter]] object for date parsing.
         *
         * If there was not [[DateFormatter]] supplied in parser options, a new one
         * is created.
         *
         * @return {DateFormatter} Date formatter
         * @see {@link DateFormatter}
         */
        get: function () {
            if (!this.options.dateFormatter) {
                this.options.dateFormatter = new _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_0__["DateFormatter"];
                if (this.options.dateFormat) {
                    this.options.dateFormat = this.options.dateFormat;
                }
            }
            return this.options.dateFormatter;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataParser.prototype, "dateFormat", {
        /**
         * A date format to use when parsing dates.
         *
         * @return {string} Date format
         * @see {@link DateFormatter}
         */
        get: function () {
            return this.options.dateFormat || this.dateFormatter.inputDateFormat;
        },
        enumerable: true,
        configurable: true
    });
    return DataParser;
}());

//# sourceMappingURL=DataParser.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataSource.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/data/DataSource.js ***!
  \****************************************************************************/
/*! exports provided: DataSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataSource", function() { return DataSource; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _DataLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataLoader */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataLoader.js");
/* harmony import */ var _JSONParser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./JSONParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/JSONParser.js");
/* harmony import */ var _CSVParser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CSVParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/CSVParser.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../formatters/DateFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










;
;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Represents a single data source - external file with all of its settings,
 * such as format, data parsing, etc.
 *
 * ```TypeScript
 * chart.dataSource.url = "http://www.myweb.com/data.json";
 * chart.dataSource.parser = am4core.JSONParser;
 * ```
 * ```JavaScript
 * chart.dataSource.url = "http://www.myweb.com/data.json";
 * chart.dataSource.parser = am4core.JSONParser;
 * ```
 * ```JSON
 * {
 *   // ...
 *   "dataSource": {
 *     "url": "http://www.myweb.com/data.json",
 *     "parser": "JSONParser"
 *   },
 *   // ...
 * }
 * ```
 *
 * @see {@link IDataSourceEvents} for a list of available events
 * @see {@link IDataSourceAdapters} for a list of available Adapters
 */
var DataSource = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DataSource, _super);
    /**
     * Constructor
     */
    function DataSource(url, parser) {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Adapter.
         *
         * @type {Adapter<DataSource, IDataSourceAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_5__["Adapter"](_this);
        /**
         * Custom options for HTTP(S) request.
         *
         * @type {INetRequestOptions}
         */
        _this._requestOptions = {};
        /**
         * If set to `true`, any subsequent data loads will be considered incremental
         * (containing only new data points that are supposed to be added to existing
         * data).
         *
         * NOTE: this setting works only with element's `data` property. It won't
         * work with any other externally-loadable data property.
         *
         * @default false
         * @type {boolean}
         */
        _this._incremental = false;
        /**
         * A collection of key/value pairs to attach to a data source URL when making
         * an incremental request.
         */
        _this._incrementalParams = {};
        /**
         * This setting is used only when `incremental = true`. If set to `true`,
         * it will try to retain the same number of data items across each load.
         *
         * E.g. if incremental load yeilded 5 new records, then 5 items from the
         * beginning of data will be removed so that we end up with the same number
         * of data items.
         *
         * @default false
         * @type {boolean}
         */
        _this._keepCount = false;
        /**
         * Will show loading indicator when loading files.
         *
         * @type {boolean}
         */
        _this.showPreloader = true;
        _this.className = "DataSource";
        // Set defaults
        if (url) {
            _this.url = url;
        }
        // Set parser
        if (parser) {
            if (typeof parser == "string") {
                _this.parser = _DataLoader__WEBPACK_IMPORTED_MODULE_1__["dataLoader"].getParserByType(parser);
            }
            else {
                _this.parser = parser;
            }
        }
        return _this;
    }
    /**
     * Processes the loaded data.
     *
     * @ignore Exclude from docs
     * @param {string}  data         Raw (unparsed) data
     * @param {string}  contentType  Content type of the loaded data (optional)
     */
    DataSource.prototype.processData = function (data, contentType) {
        // Parsing started
        this.dispatchImmediately("parsestarted");
        // Check if parser is set
        if (!this.parser) {
            // Try to resolve from data
            this.parser = _DataLoader__WEBPACK_IMPORTED_MODULE_1__["dataLoader"].getParserByData(data, contentType);
            if (!this.parser) {
                // We have a problem - nobody knows what to do with the data
                // Raise error
                if (this.events.isEnabled("parseerror")) {
                    var event_1 = {
                        type: "parseerror",
                        message: this.language.translate("No parser available for file: %1", null, this.url),
                        target: this
                    };
                    this.events.dispatchImmediately("parseerror", event_1);
                }
                this.dispatchImmediately("parseended");
                return;
            }
        }
        // Apply options adapters
        this.parser.options = this.adapter.apply("parserOptions", this.parser.options);
        this.parser.options.dateFields = this.adapter.apply("dateFields", this.parser.options.dateFields || []);
        this.parser.options.numberFields = this.adapter.apply("numberFields", this.parser.options.numberFields || []);
        // Check if we need to pass in date formatter
        if (this.parser.options.dateFields && !this.parser.options.dateFormatter) {
            this.parser.options.dateFormatter = this.dateFormatter;
        }
        // Parse
        this.data = this.adapter.apply("parsedData", this.parser.parse(this.adapter.apply("unparsedData", data)));
        // Check for parsing errors
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.data) && this.events.isEnabled("parseerror")) {
            var event_2 = {
                type: "parseerror",
                message: this.language.translate("Error parsing file: %1", null, this.url),
                target: this
            };
            this.events.dispatchImmediately("parseerror", event_2);
        }
        // Wrap up
        this.dispatchImmediately("parseended");
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.data)) {
            this.dispatchImmediately("done", {
                "data": this.data
            });
        }
        // The component is responsible for updating its own data vtriggered via
        // events.
        // Update last data load
        this.lastLoad = new Date();
    };
    Object.defineProperty(DataSource.prototype, "url", {
        /**
         * @return {string} URL
         */
        get: function () {
            // Get URL
            var url = this.disableCache
                ? this.timestampUrl(this._url)
                : this._url;
            // Add incremental params
            if (this.incremental && this.component.data.length) {
                url = this.addUrlParams(url, this.incrementalParams);
            }
            return this.adapter.apply("url", url);
        },
        /**
         * URL of the data source.
         *
         * @param {string}  value  URL
         */
        set: function (value) {
            this._url = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "requestOptions", {
        /**
         * @return {INetRequestOptions} Options
         */
        get: function () {
            return this.adapter.apply("requestOptions", this._requestOptions);
        },
        /**
         * Custom options for HTTP(S) request.
         *
         * At this moment the only option supported is: `requestHeaders`, which holds
         * an array of objects for custom request headers, e.g.:
         *
         * ```TypeScript
         * chart.dataSource.requestOptions.requestHeaders = [{
         *   "key": "x-access-token",
         *   "value": "123456789"
         * }];
         * ``````JavaScript
         * chart.dataSource.requestOptions.requestHeaders = [{
         *   "key": "x-access-token",
         *   "value": "123456789"
         * }];
         * ```
         * ```JSON
         * {
         *   // ...
         *   "dataSource": {
         *     // ...
         *     "requestOptions": {
         *       "requestHeaders": [{
         *         "key": "x-access-token",
         *         "value": "123456789"
         *       }]
         *     }
         *   }
         * }
         * ```
         *
         * NOTE: setting this options on an-already loaded DataSource will not
         * trigger a reload.
         *
         * @param {INetRequestOptions}  value  Options
         */
        set: function (value) {
            this._requestOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "parser", {
        /**
         * @return {DataParser} Data parser
         */
        get: function () {
            if (!this._parser) {
                this._parser = new _JSONParser__WEBPACK_IMPORTED_MODULE_2__["JSONParser"]();
            }
            return this.adapter.apply("parser", this._parser);
        },
        /**
         * A parser to be used to parse data.
         *
         * ```TypeScript
         * chart.dataSource.url = "http://www.myweb.com/data.json";
         * chart.dataSource.parser = am4core.JSONParser;
         * ```
         * ```JavaScript
         * chart.dataSource.url = "http://www.myweb.com/data.json";
         * chart.dataSource.parser = am4core.JSONParser;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "dataSource": {
         *     "url": "http://www.myweb.com/data.json",
         *     "parser": "JSONParser"
         *   },
         *   // ...
         * }
         * ```
         *
         * @default JSONParser
         * @param {DataParser}  value  Data parser
         */
        set: function (value) {
            this._parser = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "reloadFrequency", {
        /**
         * @return {number} Reload frequency (ms)
         */
        get: function () {
            return this.adapter.apply("reloadTimeout", this._reloadFrequency);
        },
        /**
         * Data source reload frequency.
         *
         * If set, it will reload the same URL every X milliseconds.
         *
         * @param {number} value Reload frequency (ms)
         */
        set: function (value) {
            var _this = this;
            if (this._reloadFrequency != value) {
                this._reloadFrequency = value;
                // Should we schedule a reload?
                if (value) {
                    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this._reloadDisposer)) {
                        this._reloadDisposer = this.events.on("ended", function (ev) {
                            _this._reloadTimeout = setTimeout(function () {
                                _this.load();
                            }, _this.reloadFrequency);
                        });
                    }
                }
                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this._reloadDisposer)) {
                    this._reloadDisposer.dispose();
                    this._reloadDisposer = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "incremental", {
        /**
         * @return {boolean} Incremental load?
         */
        get: function () {
            return this.adapter.apply("incremental", this._incremental);
        },
        /**
         * Should subsequent reloads be treated as incremental?
         *
         * Incremental loads will assume that they contain only new data items
         * since the last load.
         *
         * If `incremental = false` the loader will replace all of the target's
         * data with each load.
         *
         * This setting does not have any effect trhe first time data is loaded.
         *
         * NOTE: this setting works only with element's `data` property. It won't
         * work with any other externally-loadable data property.
         *
         * @default false
         * @param {boolean} Incremental load?
         */
        set: function (value) {
            this._incremental = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "incrementalParams", {
        /**
         * @return {object} Incremental request parameters
         */
        get: function () {
            return this.adapter.apply("incrementalParams", this._incrementalParams);
        },
        /**
         * An object consisting of key/value pairs to apply to an URL when data
         * source is making an incremental request.
         *
         * @param {object}  value  Incremental request parameters
         */
        set: function (value) {
            this._incrementalParams = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "keepCount", {
        /**
         * @return {boolean} keepCount load?
         */
        get: function () {
            return this.adapter.apply("keepCount", this._keepCount);
        },
        /**
         * This setting is used only when `incremental = true`. If set to `true`,
         * it will try to retain the same number of data items across each load.
         *
         * E.g. if incremental load yeilded 5 new records, then 5 items from the
         * beginning of data will be removed so that we end up with the same number
         * of data items.
         *
         * @default false
         * @param {boolean} Keep record count?
         */
        set: function (value) {
            this._keepCount = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "language", {
        /**
         * @return {Language} A [[Language]] instance to be used
         */
        get: function () {
            if (this._language) {
                return this._language;
            }
            else if (this.component) {
                this._language = this.component.language;
                return this._language;
            }
            this.language = new _utils_Language__WEBPACK_IMPORTED_MODULE_6__["Language"]();
            return this.language;
        },
        /**
         * Language instance to use.
         *
         * Will inherit and use chart's language, if not set.
         *
         * @param {Language} value An instance of Language
         */
        set: function (value) {
            this._language = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataSource.prototype, "dateFormatter", {
        /**
         * @return {DateFormatter} A [[DateFormatter]] instance to be used
         */
        get: function () {
            if (this._dateFormatter) {
                return this._dateFormatter;
            }
            else if (this.component) {
                this._dateFormatter = this.component.dateFormatter;
                return this._dateFormatter;
            }
            this.dateFormatter = new _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_7__["DateFormatter"]();
            return this.dateFormatter;
        },
        /**
         * A [[DateFormatter]] to use when parsing dates from string formats.
         *
         * Will inherit and use chart's DateFormatter if not ser.
         *
         * @param {DateFormatter} value An instance of [[DateFormatter]]
         */
        set: function (value) {
            this._dateFormatter = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds current timestamp to the URL.
     *
     * @param  {string}  url  Source URL
     * @return {string}       Timestamped URL
     */
    DataSource.prototype.timestampUrl = function (url) {
        var tstamp = new Date().getTime().toString();
        var params = {};
        params[tstamp] = "";
        return this.addUrlParams(url, params);
    };
    /**
     * Disposes of this object.
     */
    DataSource.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this._reloadTimeout) {
            clearTimeout(this._reloadTimeout);
        }
    };
    /**
     * Initiate the load.
     *
     * All loading in JavaScript is asynchronous. This function will trigger the
     * load and will exit immediately.
     *
     * Use DataSource's events to watch for loaded data and errors.
     */
    DataSource.prototype.load = function () {
        if (this._reloadTimeout) {
            clearTimeout(this._reloadTimeout);
        }
        _DataLoader__WEBPACK_IMPORTED_MODULE_1__["dataLoader"].load(this);
    };
    /**
     * Adds parameters to `url` as query strings. Will take care of proper
     * separators.
     *
     * @param  {string}  url     Source URL
     * @param  {object}  params  Parameters
     * @return {string}          New URL
     */
    DataSource.prototype.addUrlParams = function (url, params) {
        var join = url.match(/\?/) ? "&" : "?";
        var add = [];
        _utils_Object__WEBPACK_IMPORTED_MODULE_10__["each"](params, function (key, value) {
            if (value != "") {
                add.push(key + "=" + encodeURIComponent(value));
            }
            else {
                add.push(key);
            }
        });
        if (add.length) {
            return url + join + add.join("&");
        }
        return url;
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    DataSource.prototype.processConfig = function (config) {
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["json"] = _JSONParser__WEBPACK_IMPORTED_MODULE_2__["JSONParser"];
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["JSONParser"] = _JSONParser__WEBPACK_IMPORTED_MODULE_2__["JSONParser"];
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["csv"] = _CSVParser__WEBPACK_IMPORTED_MODULE_3__["CSVParser"];
        _Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["CSVParser"] = _CSVParser__WEBPACK_IMPORTED_MODULE_3__["CSVParser"];
        _super.prototype.processConfig.call(this, config);
    };
    return DataSource;
}(_Base__WEBPACK_IMPORTED_MODULE_4__["BaseObjectEvents"]));

//# sourceMappingURL=DataSource.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/data/JSONParser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/data/JSONParser.js ***!
  \****************************************************************************/
/*! exports provided: JSONParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JSONParser", function() { return JSONParser; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _DataParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataParser.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * JSON parser.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * A parser for JSON.
 *
 * @important
 */
var JSONParser = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](JSONParser, _super);
    function JSONParser() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Content-type suitable for JSON format.
         *
         * @type {string}
         */
        _this.contentType = "application/json";
        /**
         * Parser options.
         *
         * @see {@link IJSONOptions} for description of each option
         * @type {IJSONOptions}
         */
        _this.options = {};
        return _this;
    }
    /**
     * Tests if the data is valid JSON.
     *
     * @param  {string}   data  Source data
     * @return {boolean}        Is it JSON?
     */
    JSONParser.isJSON = function (data) {
        try {
            // Try parsing JSON
            JSON.parse(data);
            // If we got to this point it means it's a valid JSON
            return true;
        }
        catch (e) {
            return false;
        }
    };
    /**
     * Parses and returns data.
     *
     * @param  {string}  data  Unparsed data
     * @return {any}           Parsed data
     */
    JSONParser.prototype.parse = function (data) {
        var _this = this;
        // Init return
        var res;
        // Try parsing
        try {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](JSON)) {
                res = JSON.parse(data);
            }
        }
        catch (e) {
            return undefined;
        }
        // Do we need to cast some fields to numbers or dates?
        var empty = _utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](this.options.emptyAs);
        var numbers = this.parsableNumbers;
        var dates = this.parsableDates;
        if (Array.isArray(res) && (numbers || dates || empty)) {
            var _loop_1 = function (i, len) {
                var row = res[i];
                _utils_Object__WEBPACK_IMPORTED_MODULE_2__["each"](row, function (key, value) {
                    if (empty) {
                        row[key] = _this.maybeToEmpty(row[key]);
                    }
                    if (numbers) {
                        row[key] = _this.maybeToNumber(key, row[key]);
                    }
                    if (dates) {
                        row[key] = _this.maybeToDate(key, row[key]);
                    }
                });
            };
            // Iterate through the data and check if it needs to be converted
            for (var i = 0, len = res.length; i < len; i++) {
                _loop_1(i, len);
            }
        }
        // Convert to array
        //return Array.isArray(res) ? res : [res];
        return res;
    };
    return JSONParser;
}(_DataParser__WEBPACK_IMPORTED_MODULE_1__["DataParser"]));

//# sourceMappingURL=JSONParser.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/defs/SVGDefaults.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/defs/SVGDefaults.js ***!
  \*****************************************************************************/
/*! exports provided: SVGDefaults */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SVGDefaults", function() { return SVGDefaults; });
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/**
 *
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

/**
 * Defines a class that holds default properties for new SVG elements
 */
var SVGDefaults = /** @class */ (function () {
    function SVGDefaults() {
    }
    SVGDefaults.opacity = 1;
    SVGDefaults.strokeOpacity = 1;
    SVGDefaults.strokeWidth = 1;
    SVGDefaults.fillOpacity = 1;
    SVGDefaults.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_0__["color"])("#000000");
    SVGDefaults.stroke = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_0__["color"])("#000000");
    SVGDefaults.focusable = undefined;
    SVGDefaults.tabindex = 0;
    return SVGDefaults;
}());

//# sourceMappingURL=SVGDefaults.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Cone.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Cone.js ***!
  \*****************************************************************************/
/*! exports provided: Cone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cone", function() { return Cone; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _elements_Ellipse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../elements/Ellipse */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Ellipse.js");
/* harmony import */ var _rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../rendering/fills/LinearGradientModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradientModifier.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Cone module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Builds a round cone/cylinder.
 *
 * @see {@link IConeEvents} for a list of available events
 * @see {@link IConeAdapters} for a list of available Adapters
 */
var Cone = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Cone, _super);
    /**
     * Constructor
     */
    function Cone() {
        var _this = _super.call(this) || this;
        _this.className = "Cone";
        _this.angle = 30;
        _this.radius = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.topRadius = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.top = _this.createChild(_elements_Ellipse__WEBPACK_IMPORTED_MODULE_3__["Ellipse"]);
        _this.top.shouldClone = false;
        _this.bottom = _this.createChild(_elements_Ellipse__WEBPACK_IMPORTED_MODULE_3__["Ellipse"]);
        _this.bottom.shouldClone = false;
        _this.body = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.body.shouldClone = false;
        _this.body.setElement(_this.paper.add("path"));
        _this.layout = "none";
        _this.bodyFillModifier = new _rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_4__["LinearGradientModifier"]();
        _this.bodyFillModifier.lightnesses = [0, -0.25, 0];
        _this.body.fillModifier = _this.bodyFillModifier;
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Cone.prototype.draw = function () {
        _super.prototype.draw.call(this);
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["copyProperties"](this, this.top, _Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["copyProperties"](this, this.bottom, _Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["copyProperties"](this, this.body, _Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        var w = this.innerWidth;
        var h = this.innerHeight;
        var bottom = this.bottom;
        var top = this.top;
        var angle = this.angle;
        var radiusBase;
        var dx;
        var dy;
        if (this.orientation == "horizontal") {
            radiusBase = h / 2;
            bottom.y = h / 2;
            top.y = h / 2;
            top.x = w;
            dx = (90 - angle) / 90;
            dy = 0;
            this.bodyFillModifier.gradient.rotation = 90;
        }
        else {
            dx = 0;
            dy = (90 - angle) / 90;
            radiusBase = w / 2;
            bottom.y = h;
            bottom.x = w / 2;
            top.x = w / 2;
            this.bodyFillModifier.gradient.rotation = 0;
        }
        var radius = this.radius.value * radiusBase;
        var topRadius = this.topRadius.value * radiusBase;
        bottom.radius = radius - radius * dx;
        bottom.radiusY = radius - radius * dy;
        top.radius = topRadius - topRadius * dx;
        top.radiusY = topRadius - topRadius * dy;
        var path;
        if (this.orientation == "horizontal") {
            path = _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: h / 2 - bottom.radiusY }) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["arcTo"](-90, -180, bottom.radius, bottom.radiusY) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: w, y: h / 2 + top.radiusY }) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["arcTo"](90, 180, top.radius, top.radiusY) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["closePath"]();
        }
        else {
            path = _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: w / 2 - top.radius, y: 0 }) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["arcTo"](180, -180, top.radius, top.radiusY) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: w / 2 + bottom.radius, y: h }) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["arcTo"](0, 180, bottom.radius, bottom.radiusY) + _rendering_Path__WEBPACK_IMPORTED_MODULE_7__["closePath"]();
        }
        this.body.path = path;
    };
    Object.defineProperty(Cone.prototype, "angle", {
        /**
         * @return {number} Angle
         */
        get: function () {
            return this.getPropertyValue("angle");
        },
        /**
         * Angle of the point of view to the 3D element. (0-360)
         *
         * @default 30
         * @param {number}  value  Angle
         */
        set: function (value) {
            this.setPropertyValue("angle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cone.prototype, "radius", {
        /**
         * @return {Percent} Bottom radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * A relative radius of the cone's bottom (base).
         *
         * It is relevant to the inner width or height of the element.
         *
         * @default Percent(100)
         * @param {Percent}  value  Bottom radius
         */
        set: function (value) {
            this.setPropertyValue("radius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cone.prototype, "topRadius", {
        /**
         * @return {Percent} Top radius
         */
        get: function () {
            return this.getPropertyValue("topRadius");
        },
        /**
         * A relative radius of the cone's top (tip).
         *
         * It is relevant to the inner width or height of the element.
         *
         * @default Percent(0)
         * @param {Percent}  value  Top radius
         */
        set: function (value) {
            this.setPropertyValue("topRadius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cone.prototype, "orientation", {
        /**
         * @type {Orientation} Orientation
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
         * Orientation of the cone
         *
         * @default "vertical"
         * @param {Orientation}  value  Orientation
         */
        set: function (value) {
            this.setPropertyValue("orientation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Cone;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

//# sourceMappingURL=Cone.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Rectangle3D.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Rectangle3D.js ***!
  \************************************************************************************/
/*! exports provided: Rectangle3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle3D", function() { return Rectangle3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../rendering/filters/LightenFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/LightenFilter.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Creates a 3D rectangle.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Builds a 3D rectangle
 * @see {@link IRectangle3DEvents} for a list of available events
 * @see {@link IRectangle3DAdapters} for a list of available Adapters
 */
var Rectangle3D = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Rectangle3D, _super);
    /**
     * Constructor
     */
    function Rectangle3D() {
        var _this = _super.call(this) || this;
        _this.angle = 30;
        _this.depth = 30;
        _this.className = "Rectangle3D";
        _this.layout = "none";
        var sideBack = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        sideBack.shouldClone = false;
        sideBack.setElement(_this.paper.add("path"));
        sideBack.isMeasured = false;
        var lightenFilterBack = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_3__["LightenFilter"]();
        lightenFilterBack.lightness = -0.2;
        sideBack.filters.push(lightenFilterBack);
        _this.sideBack = sideBack;
        _this._disposers.push(_this.sideBack);
        var sideBottom = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        sideBottom.shouldClone = false;
        sideBottom.setElement(_this.paper.add("path"));
        sideBottom.isMeasured = false;
        var lightenFilterBottom = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_3__["LightenFilter"]();
        lightenFilterBottom.lightness = -0.5;
        sideBottom.filters.push(lightenFilterBottom);
        _this.sideBottom = sideBottom;
        _this._disposers.push(_this.sideBottom);
        var sideLeft = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        sideLeft.shouldClone = false;
        sideLeft.setElement(_this.paper.add("path"));
        sideLeft.isMeasured = false;
        var lightenFilterLeft = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_3__["LightenFilter"]();
        lightenFilterLeft.lightness = -0.4;
        sideLeft.filters.push(lightenFilterLeft);
        _this.sideLeft = sideLeft;
        _this._disposers.push(_this.sideLeft);
        var sideRight = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        sideRight.shouldClone = false;
        sideRight.setElement(_this.paper.add("path"));
        sideRight.isMeasured = false;
        var lightenFilterRight = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_3__["LightenFilter"]();
        lightenFilterRight.lightness = -0.2;
        sideRight.filters.push(lightenFilterRight);
        _this.sideRight = sideRight;
        _this._disposers.push(_this.sideRight);
        var sideTop = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        sideTop.shouldClone = false;
        sideTop.setElement(_this.paper.add("path"));
        sideTop.isMeasured = false;
        var lightenFilterTop = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_3__["LightenFilter"]();
        lightenFilterTop.lightness = -0.1;
        sideTop.filters.push(lightenFilterTop);
        _this.sideTop = sideTop;
        _this._disposers.push(_this.sideTop);
        var sideFront = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        sideFront.shouldClone = false;
        sideFront.setElement(_this.paper.add("path"));
        sideFront.isMeasured = false;
        _this.sideFront = sideFront;
        _this._disposers.push(_this.sideFront);
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Rectangle3D.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var w = this.innerWidth;
        var h = this.innerHeight;
        var depth = this.depth;
        var angle = this.angle;
        var sin = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](angle);
        var cos = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](angle);
        var a = { x: 0, y: 0 };
        var b = { x: w, y: 0 };
        var c = { x: w, y: h };
        var d = { x: 0, y: h };
        var ah = { x: depth * cos, y: -depth * sin };
        var bh = { x: depth * cos + w, y: -depth * sin };
        var ch = { x: depth * cos + w, y: -depth * sin + h };
        var dh = { x: depth * cos, y: -depth * sin + h };
        this.sideFront.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](a) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](b) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](c) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](d) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["closePath"]();
        this.sideBack.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](ah) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](bh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](ch) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](dh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["closePath"]();
        this.sideLeft.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](a) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](ah) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](dh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](d) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["closePath"]();
        this.sideRight.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](b) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](bh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](ch) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](c) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["closePath"]();
        this.sideBottom.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](d) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](dh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](ch) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](c) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["closePath"]();
        this.sideTop.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](a) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](ah) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](bh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](b) + _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["closePath"]();
    };
    Object.defineProperty(Rectangle3D.prototype, "depth", {
        /**
         * @return {number} Depth (px)
         */
        get: function () {
            return this.getPropertyValue("depth");
        },
        /**
         * Depth (Z dimension) of the 3D rectangle in pixels.
         *
         * @default 30
         * @param {number}  value  Depth (px)
         */
        set: function (value) {
            this.setPropertyValue("depth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rectangle3D.prototype, "angle", {
        /**
         * @return {number} Angle
         */
        get: function () {
            return this.getPropertyValue("angle");
        },
        /**
         * Angle of the point of view to the 3D element. (0-360)
         *
         * @default 30
         * @param {number}  value  Angle
         */
        set: function (value) {
            this.setPropertyValue("angle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Rectangle3D;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

//# sourceMappingURL=Rectangle3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Slice3D.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Slice3D.js ***!
  \********************************************************************************/
/*! exports provided: Slice3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Slice3D", function() { return Slice3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Slice */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../rendering/filters/LightenFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/LightenFilter.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * 3D slice module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a 3D slice of a Pie chart.
 *
 * @see {@link ISlice3DEvents} for a list of available events
 * @see {@link ISlice3DAdapters} for a list of available Adapters
 */
var Slice3D = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Slice3D, _super);
    /**
     * Constructor
     */
    function Slice3D() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "Slice3D";
        _this.layout = "none";
        // Create edge container
        var edge = _this.createChild(_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        _this.edge = edge;
        edge.shouldClone = false;
        edge.isMeasured = false;
        var lightenFilter = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_4__["LightenFilter"]();
        lightenFilter.lightness = -0.25;
        edge.filters.push(lightenFilter);
        edge.toBack();
        //edge.strokeOpacity = 0;
        _this._disposers.push(edge);
        // Set defaults
        _this.angle = 30;
        _this.depth = 20;
        // Create side A element
        var sideA = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.sideA = sideA;
        sideA.shouldClone = false;
        sideA.isMeasured = false;
        sideA.setElement(_this.paper.add("path"));
        var lightenFilterA = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_4__["LightenFilter"]();
        lightenFilterA.lightness = -0.25;
        sideA.filters.push(lightenFilterA);
        //sideA.strokeOpacity = 0;
        _this._disposers.push(sideA);
        // Crate side B element
        var sideB = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.sideB = sideB;
        sideB.shouldClone = false;
        sideB.isMeasured = false;
        sideB.setElement(_this.paper.add("path"));
        var lightenFilterB = new _rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_4__["LightenFilter"]();
        lightenFilterB.lightness = -0.25;
        sideB.filters.push(lightenFilterB);
        _this._disposers.push(sideB);
        //sideB.strokeOpacity = 0;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Slice3D.prototype.draw = function () {
        _super.prototype.draw.call(this);
        // this should go here to hide 3d slices if arc = 0
        for (var i = 0, len = this.edge.children.length; i < len; i++) {
            var slice = this.edge.children.getIndex(i);
            if (slice instanceof _Slice__WEBPACK_IMPORTED_MODULE_1__["Slice"]) {
                slice.radiusY = this.radiusY;
                slice.radius = this.radius;
                slice.fill = this.fill;
                slice.startAngle = this.startAngle;
                slice.arc = this.arc;
                slice.cornerRadius = this.cornerRadius;
                slice.innerRadius = this.innerRadius;
                slice.strokeOpacity = 0;
            }
        }
        if (this.arc !== 0 && this.radius > 0 && this.depth > 0) {
            this.sideB.show(0);
            this.sideA.show(0);
            this.edge.show(0);
            var startAngle = this.startAngle;
            var arc = this.arc;
            var innerRadius = this.pixelInnerRadius || 0;
            var radiusY = this.radiusY || 0;
            var cornerRadius = this.cornerRadius || 0;
            var innerCornerRadius = this.innerCornerRadius;
            var radius = this.radius;
            // this is code duplicate with $path.arc. @todo to think how to avoid it
            var endAngle = startAngle + arc;
            var crSin = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](arc, 45) / 2);
            innerCornerRadius = innerCornerRadius || cornerRadius;
            var innerRadiusY = (radiusY / radius) * innerRadius;
            var cornerRadiusY = (radiusY / radius) * cornerRadius;
            var innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;
            cornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](cornerRadius, 0, (radius - innerRadius) / 2);
            cornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);
            innerCornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](innerCornerRadius, 0, (radius - innerRadius) / 2);
            innerCornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);
            cornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](cornerRadius, 0, radius * crSin);
            cornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](cornerRadiusY, 0, radiusY * crSin);
            innerCornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](innerCornerRadius, 0, innerRadius * crSin);
            innerCornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](innerCornerRadiusY, 0, innerRadiusY * crSin);
            //let crAngle: number = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;
            //let crAngleY: number = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;
            if (innerRadius < innerCornerRadius) {
                innerRadius = innerCornerRadius;
            }
            if (innerRadiusY < innerCornerRadiusY) {
                innerRadiusY = innerCornerRadiusY;
            }
            var crInnerAngle = Math.asin(innerCornerRadius / innerRadius / 2) * _utils_Math__WEBPACK_IMPORTED_MODULE_5__["DEGREES"] * 2;
            var crInnerAngleY = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * _utils_Math__WEBPACK_IMPORTED_MODULE_5__["DEGREES"] * 2;
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](crInnerAngle)) {
                crInnerAngle = 0;
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](crInnerAngleY)) {
                crInnerAngleY = 0;
            }
            //let middleAngle = startAngle + arc / 2;
            //let mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.round($math.sin(middleAngle) * innerRadiusY, 4) };
            var a0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle) * (innerRadius + innerCornerRadius), 4), y: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle) * (innerRadiusY + innerCornerRadiusY), 4) };
            var b0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle) * (radius - cornerRadius), 4), y: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle) * (radiusY - cornerRadiusY), 4) };
            var c0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle) * (radius - cornerRadius), 4), y: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle) * (radiusY - cornerRadiusY), 4) };
            var d0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle) * (innerRadius + innerCornerRadius), 4), y: _utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle) * (innerRadiusY + innerCornerRadiusY), 4) };
            // end of duplicate
            var h = this.depth;
            var ah = { x: a0.x, y: a0.y - h };
            var bh = { x: b0.x, y: b0.y - h };
            var ch = { x: c0.x, y: c0.y - h };
            var dh = { x: d0.x, y: d0.y - h };
            this.sideA.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"](a0) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](b0) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](bh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](ah) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["closePath"]();
            this.sideB.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"](c0) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](d0) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](dh) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](ch) + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["closePath"]();
            if (this.startAngle < 90) {
                this.sideA.toBack();
            }
            else {
                this.sideA.toFront();
            }
            if (this.startAngle + this.arc > 90) {
                this.sideB.toBack();
            }
            else {
                this.sideB.toFront();
            }
        }
        else {
            this.sideA.hide(0);
            this.sideB.hide(0);
            this.edge.hide(0);
        }
    };
    Object.defineProperty(Slice3D.prototype, "depth", {
        /**
         * @return {number} Depth (px)
         */
        get: function () {
            return this.getPropertyValue("depth");
        },
        /**
         * Depth (height) of the 3D slice in pixels.
         *
         * @default 20
         * @param {number}  depth  Depth (px)
         */
        set: function (depth) {
            if (this.setPropertyValue("depth", depth, true)) {
                this.edge.removeChildren();
                var d = 3;
                if (depth > 0) {
                    var count = Math.ceil(this.depth / d);
                    var step = depth / count;
                    for (var i = 0; i <= count; i++) {
                        var slice = this.edge.createChild(_Slice__WEBPACK_IMPORTED_MODULE_1__["Slice"]);
                        slice.isMeasured = false;
                        slice.y = -step * i;
                    }
                }
                this.slice.dy = -this.depth;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice3D.prototype, "angle", {
        /**
         * @return {number} Angle
         */
        get: function () {
            var angle = this.getPropertyValue("angle");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](angle)) {
                angle = 0;
            }
            return angle;
        },
        /**
         * Angle of the point of view to the 3D element. (0-360)
         *
         * @default 30
         * @param {number}  value  Angle
         */
        set: function (value) {
            this.setPropertyValue("angle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice3D.prototype, "radiusY", {
        /**
         * @return {number} Vertical radius (0-1)
         */
        get: function () {
            var radiusY = this.getPropertyValue("radiusY");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](radiusY)) {
                radiusY = this.radius - this.radius * this.angle / 90;
            }
            return radiusY;
        },
        /**
         * Vertical radius for creating skewed slices.
         *
         * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half
         * the `radius`.
         *
         * @param {number} value Vertical radius (0-1)
         */
        set: function (value) {
            this.setPropertyValue("radiusY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param {this} source Source Axis
     */
    Slice3D.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.edge.copyFrom(source.edge);
        this.sideA.copyFrom(source.sideA);
        this.sideB.copyFrom(source.sideB);
    };
    return Slice3D;
}(_Slice__WEBPACK_IMPORTED_MODULE_1__["Slice"]));

//# sourceMappingURL=Slice3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/AmChartsLogo.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/AmChartsLogo.js ***!
  \**********************************************************************************/
/*! exports provided: AmChartsLogo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AmChartsLogo", function() { return AmChartsLogo; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Polyspline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Polyspline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rendering/filters/DesaturateFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DesaturateFilter.js");
/**
 * AmChartsLogo module.
 *
 * AmChartsLogo shows amCharts logo for non-commercial users of a library.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A class used to draw and display progress indicator.
 *
 * @see {@link IAmChartsLogoEvents} for a list of available events
 * @see {@link IAmChartsLogoAdapters} for a list of available Adapters
 * @ignore Exclude from docs
 */
var AmChartsLogo = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AmChartsLogo, _super);
    /**
     * Constructor
     */
    function AmChartsLogo() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "AmChartsLogo";
        _this.valign = "bottom";
        var d = 0.3;
        _this.opacity = 0.3;
        _this.defaultState.properties.opacity = 0.4;
        _this.url = "https://www.amcharts.com/";
        _this.urlTarget = "_blank";
        _this.showSystemTooltip = true;
        _this.readerTitle = "Chart created using amCharts library";
        _this.width = 220 * d;
        _this.height = 70 * d;
        _this.background.opacity = 0;
        var aColor = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_4__["color"])("#474758");
        if (new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_2__["InterfaceColorSet"]().getFor("background").alternative.hex == "#ffffff") {
            aColor = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_4__["color"])("#ffffff");
        }
        var aGradient = new _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_5__["LinearGradient"]();
        aGradient.addColor(aColor);
        aGradient.addColor(aColor, 1, 0.75);
        aGradient.addColor(Object(_utils_Color__WEBPACK_IMPORTED_MODULE_4__["color"])("#3cabff"), 1, 0.755);
        aGradient.rotation = -10;
        var aStroke = aGradient;
        var m = _this.createChild(_Polyspline__WEBPACK_IMPORTED_MODULE_3__["Polyspline"]);
        m.shouldClone = false;
        m.isMeasured = false;
        m.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];
        m.strokeWidth = 6 * d;
        m.tensionX = 0.8;
        m.tensionY = 1;
        m.stroke = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_4__["color"])("#3cabff");
        var a = _this.createChild(_Polyspline__WEBPACK_IMPORTED_MODULE_3__["Polyspline"]);
        a.shouldClone = false;
        a.isMeasured = false;
        a.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];
        a.strokeWidth = 6 * d;
        a.tensionX = 0.75;
        a.tensionY = 1;
        a.stroke = aStroke;
        _this._disposers.push(a);
        var desaturateFilter = new _rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_6__["DesaturateFilter"]();
        _this.filters.push(desaturateFilter);
        var desaturateFilterHover = new _rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_6__["DesaturateFilter"]();
        desaturateFilterHover.saturation = 1;
        var hoverState = _this.states.create("hover");
        hoverState.properties.opacity = 1;
        hoverState.filters.push(desaturateFilterHover);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    return AmChartsLogo;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

//# sourceMappingURL=AmChartsLogo.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js ***!
  \****************************************************************************/
/*! exports provided: Button */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Button", function() { return Button; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Functionality for drawing simple buttons.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Button class is capable of drawing a simple rectangular button with
 * optionally rounded corners and an icon in it.
 *
 * @see {@link IButtonEvents} for a list of available events
 * @see {@link IButtonAdapters} for a list of available Adapters
 */
var Button = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Button, _super);
    /**
     * Constructor
     */
    function Button() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "Button";
        _this.tooltipY = 0;
        // Set defaults
        _this.iconPosition = "left";
        _this.layout = "horizontal";
        _this.contentAlign = "center";
        _this.contentValign = "middle";
        _this.padding(8, 16, 8, 16);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        // Create background
        var background = _this.background;
        background.fill = interfaceColors.getFor("secondaryButton");
        background.stroke = interfaceColors.getFor("secondaryButtonStroke");
        background.fillOpacity = 1;
        background.strokeOpacity = 1;
        background.cornerRadius(3, 3, 3, 3);
        // Create the label element
        _this.label = new _Label__WEBPACK_IMPORTED_MODULE_2__["Label"]();
        _this.label.fill = interfaceColors.getFor("secondaryButtonText");
        ;
        // Create default states
        var hoverState = background.states.create("hover");
        hoverState.properties.fillOpacity = 1;
        hoverState.properties.fill = interfaceColors.getFor("secondaryButtonHover");
        var downState = background.states.create("down");
        downState.transitionDuration = 100;
        downState.properties.fill = interfaceColors.getFor("secondaryButtonDown");
        downState.properties.fillOpacity = 1;
        // Set up accessibility
        // A button should be always focusable
        _this.role = "button";
        _this.focusable = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Button.prototype, "icon", {
        /**
         * @return {Sprite} Icon Sprite
         */
        get: function () {
            return this.getPropertyValue("icon");
        },
        /**
         * A [[Sprite]] to be used as an icon on button.
         *
         * @param {Sprite} icon Icon Sprite
         */
        set: function (icon) {
            var currentIcon = this.getPropertyValue("icon");
            if (currentIcon) {
                //this._icon.dispose();
                //this.removeDispose(currentIcon);
                currentIcon.parent = undefined;
            }
            if (icon) {
                this.setPropertyValue("icon", icon);
                icon.parent = this;
                icon.interactionsEnabled = false;
                this.iconPosition = this.iconPosition;
                this._disposers.push(icon);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "iconPosition", {
        /**
         * @return {"left" | "right"} Icon position
         */
        get: function () {
            return this.getPropertyValue("iconPosition");
        },
        /**
         * Icon position: "left" or "right".
         *
         * @default "left"
         * @param {"left" | "right"}  position  Icon position
         */
        set: function (position) {
            this.setPropertyValue("iconPosition", position);
            if (this.icon) {
                if (position == "left") {
                    this.icon.toBack();
                }
                else {
                    this.icon.toFront();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "label", {
        /**
         * @return {Optional<Label>} Label element
         */
        get: function () {
            return this._label;
        },
        /**
         * [[Label]] element to be used for text.
         *
         * @param {Optional<Label>}  label element
         */
        set: function (label) {
            if (this._label) {
                //this._label.dispose();
                this.removeDispose(this._label);
            }
            this._label = label;
            if (label) {
                label.parent = this;
                label.interactionsEnabled = false;
                this._disposers.push(this._label);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a background element for the button.
     *
     * @ignore Exclude from docs
     * @return {RoundedRectangle} Background element
     */
    Button.prototype.createBackground = function () {
        return new _elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_3__["RoundedRectangle"]();
    };
    return Button;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["Button"] = Button;
//# sourceMappingURL=Button.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js ***!
  \****************************************************************************/
/*! exports provided: Circle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Circle", function() { return Circle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Functionality for drawing circles.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to create a circle
 * @see {@link ICircleEvents} for a list of available events
 * @see {@link ICircleAdapters} for a list of available Adapters
 */
var Circle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Circle, _super);
    /**
     * Constructor
     */
    function Circle() {
        var _this = _super.call(this) || this;
        _this.className = "Circle";
        _this.element = _this.paper.add("circle");
        _this.setPercentProperty("radius", Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100));
        _this.setPropertyValue("horizontalCenter", "middle");
        _this.setPropertyValue("verticalCenter", "middle");
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the circle.
     */
    Circle.prototype.draw = function () {
        _super.prototype.draw.call(this);
        this.element.attr({ "r": this.pixelRadius });
    };
    Object.defineProperty(Circle.prototype, "radius", {
        /**
         * @return {number} Radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Radius of the circle.
         *
         * Can be either absolute (pixels) or relative ([Percent]).
         *
         * @param {number | Percent}  value  Radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Circle.prototype, "pixelRadius", {
        /**
         * Radius of the circle in pixels.
         *
         * This is a read-only property. To set radius in pixels, use `radius`
         * property.
         *
         * @readonly
         * @return {number} Radius (px)
         */
        get: function () {
            return _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.radius, _utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](this.innerWidth / 2, this.innerHeight / 2));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates bounding box.
     *
     * @ignore Exclude from docs
     */
    Circle.prototype.measureElement = function () {
        var pixelRadius = this.pixelRadius;
        this._bbox = {
            x: -pixelRadius,
            y: -pixelRadius,
            width: pixelRadius * 2,
            height: pixelRadius * 2
        };
    };
    return Circle;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Circle"] = Circle;
//# sourceMappingURL=Circle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Ellipse.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Ellipse.js ***!
  \*****************************************************************************/
/*! exports provided: Ellipse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ellipse", function() { return Ellipse; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Ellipse module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws an ellipse
 * @see {@link IEllipseEvents} for a list of available events
 * @see {@link IEllipseAdapters} for a list of available Adapters
 */
var Ellipse = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Ellipse, _super);
    /**
     * Constructor
     */
    function Ellipse() {
        var _this = _super.call(this) || this;
        _this.className = "Ellipse";
        _this.element = _this.paper.add("ellipse");
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the ellipsis.
     */
    Ellipse.prototype.draw = function () {
        _super.prototype.draw.call(this);
        this.element.attr({ "rx": this.radius });
        this.element.attr({ "ry": this.radiusY });
    };
    Object.defineProperty(Ellipse.prototype, "radiusY", {
        /**
         * @return {number} Vertical radius
         */
        get: function () {
            return this.innerHeight / 2;
        },
        /**
         * Vertical radius.
         *
         * It's a relative size to the `radius`.
         *
         * E.g. 0.8 will mean the height of the ellipsis will be 80% of it's
         * horizontal radius.
         *
         * @param {number}  value  Vertical radius
         */
        set: function (value) {
            this.height = value * 2;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Ellipse.prototype, "radius", {
        /**
         * @return {number} Horizontal radius
         */
        get: function () {
            return this.innerWidth / 2;
        },
        /**
         * Horizontal radius.
         *
         * @param {number}  value  Horizontal radius
         */
        set: function (value) {
            this.width = value * 2;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    return Ellipse;
}(_Circle__WEBPACK_IMPORTED_MODULE_1__["Circle"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Ellipse"] = Ellipse;
//# sourceMappingURL=Ellipse.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Image.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Image.js ***!
  \***************************************************************************/
/*! exports provided: Image */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Image", function() { return Image; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Functionality for adding images in SVG tree.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to add `<image>` elements to SVG.
 *
 * @see {@link IImageEvents} for a list of available events
 * @see {@link IImageAdapters} for a list of available Adapters
 */
var Image = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Image, _super);
    /**
     * Constructor
     */
    function Image() {
        var _this = _super.call(this) || this;
        _this.className = "Image";
        _this.element = _this.paper.add("image");
        _this.applyTheme();
        _this.width = 50;
        _this.height = 50;
        return _this;
    }
    /**
     * Draws an `<image>` element.
     *
     * @ignore Exclude from docs
     */
    Image.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.href) {
            var width = this.innerWidth;
            var height = this.innerHeight;
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.widthRatio)) {
                width = height * this.widthRatio;
                this.width = width;
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.heightRatio)) {
                height = width * this.heightRatio;
                this.height = height;
            }
            this.element.attr({
                "width": width,
                "height": height
            });
            this.element.attrNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_3__["XLINK"], "xlink:href", this.href);
        }
    };
    Object.defineProperty(Image.prototype, "href", {
        /**
         * @return {string} Image URI
         */
        get: function () {
            return this.getPropertyValue("href");
        },
        /**
         * An image URI.
         *
         * @param {string}  value  Image URI
         */
        set: function (value) {
            this.setPropertyValue("href", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Image.prototype, "widthRatio", {
        /**
         * @return {number} Ratio
         */
        get: function () {
            return this.getPropertyValue("widthRatio");
        },
        /**
         * Sets image `width` relatively to its `height`.
         *
         * If image's `height = 100` and `widthRatio = 0.5` the actual width will be
         * `50`.
         *
         * @param {number}  value  Ratio
         */
        set: function (value) {
            this.setPropertyValue("widthRatio", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Image.prototype, "heightRatio", {
        /**
         * @return {number} Ratio
         */
        get: function () {
            return this.getPropertyValue("heightRatio");
        },
        /**
         * Sets image `height` relatively to its `width`.
         *
         * If image's `width = 100` and `heightRatio = 0.5` the actual height will be
         * `50`.
         *
         * @param {number}  value  Ratio
         */
        set: function (value) {
            this.setPropertyValue("heightRatio", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Image.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         * @type {IRectangle}
         */
        get: function () {
            return {
                x: 0,
                y: 0,
                width: this.pixelWidth,
                height: this.pixelHeight
            };
        },
        enumerable: true,
        configurable: true
    });
    return Image;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Image"] = Image;
//# sourceMappingURL=Image.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js ***!
  \***************************************************************************/
/*! exports provided: Label */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return Label; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../formatters/TextFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Text class deals with all text placed on chart.
 */









;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Text is used to display highly configurable, data-enabled textual elements.
 *
 * ## Data Binding
 *
 * A Text element can dynamically parse and populate its contents with values
 * from a [[DataItem]].
 *
 * To activate such binding, set element's `dataItem` property.
 *
 * When activated, text contents will be parsed for special tags, e.g.:
 *
 * ```TypeScript
 * label.dataItem = myDataItem;
 * label.text = "The title is: {title}";
 * ```
 * ```JavaScript
 * label.dataItem = myDataItem;
 * label.text = "The title is: {title}";
 * ```
 *
 * The above will automatically replace "{title}" in the string with the
 * actual data value from `myDataItem`.
 *
 * Note, that most often dataItem is set by the Component.
 *
 *
 * @see {@link ILabelEvents} for a list of available events
 * @see {@link ILabelAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/} for info on string formatting and data binding
 * @todo Vertical align
 * @important
 */
var Label = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Label, _super);
    /**
     * Constructor
     */
    function Label() {
        var _this = 
        // Execute super's constructor
        _super.call(this) || this;
        /**
         * Indicates if the whole text does not fit into max dimenstions set for it.
         *
         * @type {boolean}
         */
        _this.isOversized = false;
        // Set this class name
        _this.className = "Label";
        _this.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__["InterfaceColorSet"]().getFor("text");
        // not good to set this, as then these will appear on each label and values set on container won't be applied.
        //this.textDecoration = "none";
        //this.fontWeight = "normal";
        // Set defaults
        _this.wrap = false;
        _this.truncate = false;
        _this.fullWords = true;
        _this.ellipsis = "...";
        _this.textAlign = "start";
        _this.textValign = "top";
        _this.layout = "absolute";
        // Set up adapters for manipulating accessibility
        _this.adapter.add("readerTitle", function (arg) {
            if (!arg) {
                arg = _this.populateString(_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["plainText"](_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["isNotEmpty"](_this.html)
                    ? _this.html
                    : _this.text));
            }
            return arg;
        });
        // Add events to watch for maxWidth/maxHeight changes so that we can
        // invalidate this
        _this.events.on("maxsizechanged", function () {
            if (_this.inited) {
                _this.handleMaxSize();
            }
        }, _this, false);
        // this solves strange bug when text just added to svg is 0x0
        _this.events.once("validated", _this.handleValidate, _this, false);
        // Aply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * A placeholder method that is called **after** element finishes drawing
     * itself.
     *
     * @ignore Exclude from docs
     */
    Label.prototype.afterDraw = function () {
        // since we removed validatePosition from sprite, we still need it here to handle rotated text
        _super.prototype.afterDraw.call(this);
        this.validatePosition();
    };
    /**
     * Sets [[Paper]] instance to use to draw elements.
     * @ignore
     * @param {Paper} paper Paper
     * @return {boolean} true if paper was changed, false, if it's the same
     */
    Label.prototype.setPaper = function (paper) {
        var changed = _super.prototype.setPaper.call(this, paper);
        if (changed) {
            this.hardInvalidate();
        }
        return changed;
    };
    /**
     * @ignore
     */
    Label.prototype.handleValidate = function () {
        if ((this.currentText || this.text) && (this.bbox.width == 0 || this.bbox.height == 0)) {
            _Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].events.once("exitframe", this.hardInvalidate, this);
        }
    };
    /**
     * @ignore
     */
    Label.prototype.handleMaxSize = function () {
        if ((this.bbox.width > this.availableWidth)
            || ((this.bbox.width < this.availableWidth) && (this.isOversized || this.truncate))
            || (this.bbox.height > this.availableHeight)
            || ((this.bbox.height < this.availableHeight) && this.isOversized)) {
            this.invalidate();
        }
        else {
            this.alignSVGText();
        }
    };
    /**
     * [arrange description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Label.prototype.arrange = function () {
    };
    /**
     * Updates current text according to data item and supported features.
     * Returns `true` if current text has changed.
     *
     * @return {boolean} Text changed?
     */
    Label.prototype.updateCurrentText = function () {
        // Determine output format
        var output, text;
        if (_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["isNotEmpty"](this.html) && this.paper.supportsForeignObject()) {
            // We favor HTML text if it's set and browser supports `foreignObject`
            output = "html";
            text = this.html;
        }
        else {
            output = "svg";
            text = this.text;
        }
        // Need to format text all the time
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](text) && text !== "") {
            text = this.populateString(text, this.dataItem);
        }
        if (output == "html") {
            text = this.adapter.apply("htmlOutput", text);
        }
        else {
            text = this.adapter.apply("textOutput", text);
        }
        // Update the text
        var changed = text != this.currentText || output != this._currentFormat;
        this.currentText = text;
        this._currentFormat = output;
        return changed;
    };
    /**
     * Hard invalidate means the text will be redrawn even if it hasn't changed.
     * This is used when we change `fontSize`, `fontFamily`, or for some other
     * reasons.
     */
    Label.prototype.hardInvalidate = function () {
        this._prevStatus = "";
        this.invalidate();
    };
    /**
     * Gets line bbox, uses caching to save cpu
     * @ignore
     */
    Label.prototype.getLineBBox = function (lineInfo) {
        //let cacheKey = lineInfo.text + lineInfo.style;
        //let lineBBox = this.getCache(cacheKey);
        //if (!lineBBox) {
        //lineBBox = lineInfo.element.getBBox();
        //if (lineBBox.width != 0 && lineBBox.height != 0) {
        //	this.setCache(cacheKey, lineBBox, 5000);
        //}
        //}
        lineInfo.bbox = lineInfo.element.getBBox();
    };
    /**
     * Draws the textual label.
     *
     * @ignore Exclude from docs
     */
    Label.prototype.draw = function () {
        // Draw super
        _super.prototype.draw.call(this);
        var oldW = this.bbox.width;
        var oldH = this.bbox.height;
        var topParent = this.topParent;
        if (topParent) {
            if (!topParent.maxWidth || !topParent.maxHeight) {
                topParent.events.once("maxsizechanged", this.hardInvalidate, this, false);
                return;
            }
        }
        // Calculate max width and height
        var maxWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.availableWidth - this.pixelPaddingLeft - this.pixelPaddingRight, 0);
        var maxHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.availableHeight - this.pixelPaddingTop - this.pixelPaddingBottom, 0);
        // save
        var status = maxHeight + "," + maxWidth + this.wrap + this.truncate + this.fullWords + this.rtl + this.ellipsis;
        // Update text
        if (!this.updateCurrentText() && this.inited && this._prevStatus == status) {
            return;
        }
        this._measuredWidth = 0;
        this._measuredHeight = 0;
        // Reset
        this.isOversized = false;
        // Determine output format
        var output = this._currentFormat;
        var text = this.currentText;
        // Empty string
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](text) || text == "") {
            this.element.attr({ display: "none" });
            return;
        }
        // Chop up text into lines
        // We're still processing SVG and HTML in the same way for now
        var lines = text.split("\n");
        // Do we need to go through the trouble of measuring lines
        //let measure: boolean = true;// (lines.length > 1) || this.wrap;
        this._prevStatus = status;
        this.textAlign = this.textAlign;
        // need this to measure
        var display = this.group.getAttr("display");
        if (display == "none") {
            this.group.removeAttr("display");
        }
        // SVG or HTML?
        if (output === "svg") {
            /**
             * SVG
             */
            this.element.removeAttr("display");
            // Clear the element
            var group = this.element;
            this.resetBBox();
            // Init state variables
            var currentHeight = 0;
            var currentFormat = "";
            // Process each line
            for (var i = 0; i < lines.length; i++) {
                // Get line
                var line = lines[i];
                // Check if line is empty
                if (line == "") {
                    // It is, let's just update currentHeight and go to the next one
                    // If it's the first line, we'll have to use arbirary line height,
                    // since there's nothing to measure. For subsequent lines we can take
                    // previous line's height
                    var tempElement = this.getSVGLineElement("", 0);
                    tempElement.add(this.getSvgElement(".", Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().translateStyleShortcuts(currentFormat)));
                    group.add(tempElement);
                    var offset = Math.ceil(tempElement.getBBox().height);
                    if (offset > 0) {
                        currentHeight += offset;
                    }
                    group.removeElement(tempElement);
                    continue;
                }
                // Chunk up the line and process each chunk
                var chunks = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().chunk(line, null, this.ignoreFormatting);
                var currentLineHeight = 0;
                var firstChunk = true;
                var skipTextChunks = false;
                // Create line element or grab it from cache
                var lineInfo = void 0;
                if (lineInfo = this.getLineInfo(i)) {
                    // Empty line
                    lineInfo.element.textContent = "";
                }
                else {
                    // Init new line info
                    lineInfo = {
                        "element": this.getSVGLineElement("", 0),
                        "complex": false
                    };
                    // Create the line element
                    //lineInfo.element = this.getSVGLineElement("", 0);
                    //lineElement = this.getSVGLineElement("", 0);
                    group.add(lineInfo.element);
                }
                lineInfo.element.removeAttr("display");
                lineInfo.element.removeChildren(); // memory leak without this
                if (this.rtl) {
                    chunks.reverse();
                }
                // Process each chunk
                for (var x = 0; x < chunks.length; x++) {
                    // If there's more than one chunk, means the line is "complex"
                    if (x) {
                        lineInfo.complex = true;
                    }
                    // Get chunk
                    var chunk = chunks[x];
                    // Is this chunk format or text?
                    if (chunk.type === "format") {
                        // Log current format, so that we can apply it to multiple lines if
                        // necessary
                        currentFormat = chunk.text;
                    }
                    else {
                        // It's text block
                        // Need to skip?
                        // We do this when truncating. We can't just simply go ahead and
                        // abandon chunk processing as they might have formatting
                        // instructions in them that are relevant for subsequent lines
                        if (skipTextChunks) {
                            continue;
                        }
                        // Add chunk to the current element
                        //lineInfo.element.content += $utils.trim(getTextFormatter().format(currentFormat + chunk.text, output));
                        lineInfo.text = chunk.text;
                        lineInfo.style = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().translateStyleShortcuts(currentFormat);
                        lineInfo.element.add(this.getSvgElement(lineInfo.text, lineInfo.style));
                        this.getLineBBox(lineInfo);
                        lineInfo.bbox.width = Math.ceil(lineInfo.bbox.width);
                        // Updated current line height
                        if (currentLineHeight < lineInfo.bbox.height) {
                            currentLineHeight = lineInfo.bbox.height;
                        }
                        // Wrapping?
                        if ((this.wrap || this.truncate) && (lineInfo.bbox.width > maxWidth)) {
                            // Set oversized
                            this.isOversized = true;
                            // Take temporary measurements
                            var lineText = lineInfo.element.textContent;
                            var avgCharWidth = (lineInfo.bbox.width / lineText.length); // * .9;
                            // Calculate average number of symbols / width
                            var excessChars = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);
                            // Are we truncating or auto-wrapping text?
                            if (this.truncate) {
                                /**
                                 * Processing line truncation
                                 * With the addition of each text chunk we measure if current
                                 * line does not exceed maxWidth. If it does, we will stop
                                 * addition of further chunks as well as try to truncate
                                 * current or any number of previous chunks with an added
                                 * ellipsis
                                 */
                                // Indicator whether we need to add ellipsis to the current
                                // element, even if it fits. This is needed to indicate
                                // whether we have already removed some subsequent chunks in
                                // which case we need to add ellipsis.
                                var addEllipsis = false;
                                // Process each child in the temporary line, until the whole
                                // line fits, preferably with an ellipsis
                                // TODO use iterator instead
                                var node_1 = lineInfo.element.node;
                                if (node_1 && node_1.childNodes) {
                                    for (var e = lineInfo.element.node.childNodes.length - 1; e >= 0; e--) {
                                        // Get current element
                                        var node_2 = lineInfo.element.node.childNodes[e];
                                        // Add ellipsis only if previous chunk was removed in full
                                        // and this chunk already fits
                                        //if (addEllipsis && (bbox.width <= maxWidth)) {
                                        if (addEllipsis && (lineInfo.bbox.width <= maxWidth)) {
                                            // Add ellipsis
                                            node_2.textContent += " " + this.ellipsis;
                                            // Measure again (we need to make sure ellipsis fits)
                                            lineInfo.bbox = lineInfo.element.getBBox();
                                            lineInfo.bbox.width = Math.floor(lineInfo.bbox.width);
                                            // If it fits, we're done here
                                            // If it doesn't we continue rolling
                                            if (lineInfo.bbox.width <= maxWidth) {
                                                break;
                                            }
                                        }
                                        addEllipsis = false;
                                        // Get element text
                                        var elementText = node_2.textContent;
                                        // Calculate average number of symbols / width
                                        lineText = lineInfo.element.textContent;
                                        excessChars = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);
                                        // Do this until we fit
                                        while ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {
                                            // Calculate max available chars
                                            var maxChars = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](elementText.length - excessChars - this.ellipsis.length, 1);
                                            // Is there anything left?
                                            if (maxChars <= 1) {
                                                // Nope, let's jump to the previous item
                                                // Set excess characters to zero so that this loop does
                                                // not repeat when it over
                                                excessChars = 0;
                                                // Add ellipsis to previous item
                                                // Subsequent iterations will check if the ellipsis fits
                                                if (e > 0) {
                                                    // Indicating to add ellipsis to previous item
                                                    addEllipsis = true;
                                                    // Removing this node
                                                    lineInfo.element.node.removeChild(node_2);
                                                }
                                            }
                                            // Truncate the text
                                            elementText = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["truncateWithEllipsis"](elementText, maxChars, this.ellipsis, this.fullWords, this.rtl);
                                            if ((elementText.length > maxChars) && this.fullWords) {
                                                // Still too long?
                                                // Let's try truncating breaking words anyway
                                                elementText = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["truncateWithEllipsis"](elementText, maxChars, this.ellipsis, false, this.rtl);
                                            }
                                            // Set truncated text
                                            node_2.textContent = elementText;
                                            // Measure again
                                            lineInfo.bbox = lineInfo.element.getBBox();
                                            lineInfo.bbox.width = Math.floor(lineInfo.bbox.width);
                                            // Increase excess characters count, just in case it still
                                            // doesn't fit and we have to go at it again
                                            excessChars = Math.ceil(excessChars * 1.1);
                                        }
                                        // Do not process further chunks
                                        skipTextChunks = true;
                                    }
                                }
                            }
                            else {
                                /**
                                 * Processign auto-wrap
                                 * In this case we're going to be adding text chunks until
                                 * they don't fit into current line. Once that happens we will
                                 * inject the rest of the chunks to the next line
                                 */
                                // Get last node added and measure it
                                var node_3 = lineInfo.element.node;
                                if (node_3) {
                                    var lastNode = lineInfo.element.node.lastChild;
                                    // Init split lines
                                    var splitLines = void 0;
                                    while ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {
                                        // Calculate max available chars
                                        var maxChars = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](chunk.text.length - excessChars, 1);
                                        // Don't split the words mid-word if it's not the first chunk
                                        // in the line
                                        if (firstChunk) {
                                            // Split mid-word if necessary
                                            splitLines = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["splitTextByCharCount"](chunk.text, maxChars, true, this.rtl);
                                        }
                                        else {
                                            // Don't split mid-word
                                            splitLines = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["splitTextByCharCount"](chunk.text, maxChars, true, this.rtl);
                                            // Check if the first word is too long
                                            if ((splitLines[0].length > maxChars) || maxChars === 1) {
                                                // Yes - move the whole chunk to the next line
                                                // Remove the element we just added
                                                lineInfo.element.node.removeChild(lastNode);
                                                // Break out of the while on next cycle
                                                excessChars = 0;
                                            }
                                        }
                                        // Use the first line to update last item
                                        if (excessChars > 0) {
                                            lastNode.textContent = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().cleanUp(_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["trim"](splitLines.shift()));
                                        }
                                        // Measure again, just in case
                                        lineInfo.bbox = lineInfo.element.getBBox();
                                        lineInfo.bbox.width = Math.floor(lineInfo.bbox.width);
                                        // Increase excess characters count, just in case it still
                                        // doesn't fit and we have to go at it again
                                        excessChars = Math.ceil(excessChars * 1.1);
                                    }
                                    // Construct the rest of the line
                                    if (splitLines.length > 0) {
                                        var restOfLine = "";
                                        // Add leftovers from splitting the current chunk
                                        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](splitLines)) {
                                            if (this.rtl) {
                                                restOfLine += splitLines.join("") + currentFormat;
                                            }
                                            else {
                                                restOfLine += currentFormat + splitLines.join("");
                                            }
                                        }
                                        // Add the rest of the chunks
                                        for (var c = x + 1; c < chunks.length; c++) {
                                            restOfLine += chunks[c].text;
                                        }
                                        // Inject the rest of the lines as chunks for subsequent
                                        lines.splice(i + 1, 0, restOfLine);
                                    }
                                    // Skip processing the rest of the chunks
                                    skipTextChunks = true;
                                }
                            }
                        }
                        // Let's update the text's bbox with the line's one
                        if (this.bbox.width < lineInfo.bbox.width) {
                            this.bbox.width = lineInfo.bbox.width;
                        }
                        // commented to avoid bug (seen on sankey link) where text is incorrectly aligned
                        //if (this.bbox.x > lineInfo.bbox.x) {
                        //this.bbox.x = lineInfo.bbox.x;
                        //}
                        this.bbox.height = currentHeight + currentLineHeight;
                        // Position current line
                        lineInfo.element.attr({
                            "x": "0",
                            "y": currentHeight + currentLineHeight,
                            "dy": _utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"]((-0.2 * currentLineHeight), 3).toString()
                        });
                        firstChunk = false;
                    }
                }
                // Trim the last item
                var node = lineInfo.element.node;
                if (node) {
                    var lastNode = node.lastChild;
                    if (lastNode) {
                        lastNode.textContent = this.rtl ?
                            _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["ltrim"](lastNode.textContent) :
                            _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["rtrim"](lastNode.textContent);
                    }
                }
                // Increment collective height
                currentHeight += currentLineHeight;
                // Save line cache
                this.addLineInfo(lineInfo, i);
            }
            // Check if maybe we need to hide the whole label if it doesn't fit
            if (this.hideOversized) {
                if ((this.availableWidth < this.bbox.width) || (this.availableHeight < this.bbox.height)) {
                    this.element.attr({ display: "none" });
                    this.isOversized = true;
                }
                else {
                    this.element.removeAttr("display");
                    this.isOversized = false;
                }
            }
            this._measuredWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight);
            this._measuredHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);
            // Align the lines
            this.alignSVGText();
            this.bbox.width = this._measuredWidth;
            this.bbox.height = this._measuredHeight;
            if (oldH != this._measuredHeight || oldW != this._measuredWidth) {
                this.dispatch("transformed");
            }
            this.hideUnused(lines.length);
        }
        else {
            /**
             * HTML
             */
            this.element.removeAttr("display");
            this.resetBBox();
            // Clear the element
            var group = this.element;
            group.removeChildren();
            // Create a ForeignObject to use as HTML container
            var fo = this.paper.foreignObject();
            group.add(fo);
            // Set group and foreignObject dimensions
            var width = maxWidth > 0 ? (maxWidth).toString() + "px" : "100%";
            var height = maxHeight > 0 ? (maxHeight).toString() + "px" : "100%";
            // Create line element
            //let lineElement: HTMLElement = this.getHTMLLineElement(getTextFormatter().format(this.html, output));
            var lineElement = this.getHTMLLineElement(text);
            fo.node.appendChild(lineElement);
            // Temporarily set to inline-block so we can measure real width and height
            lineElement.style.display = "inline-block";
            var clientWidth = lineElement.clientWidth;
            var clientHeight = lineElement.clientHeight;
            lineElement.style.display = "block";
            this._bbox = {
                x: 0,
                y: 0,
                width: clientWidth,
                height: clientHeight
            };
            // Set exact dimensions of foreignObject so it is sized exactly as
            // the content within
            fo.attr({
                width: clientWidth,
                height: clientHeight
            });
            // Set measurements and update bbox
            this._measuredWidth = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight);
            this._measuredHeight = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);
            this.bbox.width = this._measuredWidth;
            this.bbox.height = this._measuredHeight;
            // Don't let labels bleed out of the alotted area
            if (this.truncate) {
                lineElement.style.overflow = "hidden";
            }
            if ((clientWidth > maxWidth) || (clientHeight > maxHeight)) {
                this.isOversized = true;
            }
        }
        // Set applicable styles
        this.setStyles();
        this.updateCenter();
        this.updateBackground();
        if (display == "none") {
            this.group.attr({ display: "none" });
        }
    };
    /**
     * Aligns the lines horizontally ant vertically, based on properties.
     *
     * @ignore Exclude from docs
     */
    Label.prototype.alignSVGText = function () {
        // Get Group
        var group = this.element;
        var children = group.node.children || group.node.childNodes;
        // Is there anything to align?
        if (!children || (children && children.length == 0)) {
            return;
        }
        var width = this._measuredWidth;
        var height = this._measuredHeight;
        var paddingLeft = this.pixelPaddingLeft;
        var paddingRight = this.pixelPaddingRight;
        var paddingTop = this.pixelPaddingTop;
        var paddingBottom = this.pixelPaddingBottom;
        // Process each line
        //$iter.each(group.children.backwards().iterator(), (element) => {
        for (var i = children.length - 1; i >= 0; i--) {
            // Align horizontally
            // Since we are using `text-anchor` for horizontal alignment, all we need
            // to do here is move the `x` position
            var node = children[i];
            node.setAttribute("text-anchor", this.textAlign);
            switch (this.textAlign) {
                case "middle":
                    node.setAttribute("x", (width / 2).toString() + "px");
                    break;
                case "end":
                    if (this.rtl) {
                    }
                    else {
                        node.setAttribute("x", width.toString());
                    }
                    break;
                default:
                    if (this.rtl) {
                        node.setAttribute("x", width.toString());
                    }
                    else {
                        node.removeAttribute("text-anchor");
                    }
                    break;
            }
            var y = _utils_Type__WEBPACK_IMPORTED_MODULE_8__["toNumber"](node.getAttribute("y"));
            switch (this.textValign) {
                case "middle":
                    node.setAttribute("y", (y + (height - this.bbox.height) / 2).toString());
                    break;
                case "bottom":
                    node.setAttribute("y", (y + height - this.bbox.height).toString());
                    break;
                default:
                    node.setAttribute("y", y.toString());
                    break;
            }
        }
    };
    /**
     * Produces an SVG line element with formatted text.
     *
     * @ignore Exclude from docs
     * @param  {string}     text    Text to wrap into line
     * @param  {number}     y       Current line vertical position
     * @return {AMElement}          A DOM element
     * @todo Implement HTML support
     */
    Label.prototype.getSVGLineElement = function (text, y) {
        // Create a <text> node and set text
        var element = this.paper.addGroup("text");
        element.textContent = text;
        // Set parameters
        element.attr({
            "x": "0"
            //"alignment-baseline": "hanging",
            //"baseline-shift": "-20%",
            //"text-anchor": "center"
        });
        // Set `y` position
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](y)) {
            element.attr({
                "y": y.toString()
            });
        }
        // Don't let labels blled out of the alotted area
        if (this.truncate || this.wrap) {
            element.attr({ "overflow": "hidden" });
        }
        // Add RTL?
        if (this.rtl) {
            element.attr({
                "direction": "rtl",
                "unicode-bidi": "bidi-override"
            });
        }
        return element;
    };
    /**
     * Resets cached BBox.
     *
     * @ignore Exclude from docs
     */
    Label.prototype.resetBBox = function () {
        this._bbox = { x: 0, y: 0, width: 0, height: 0 };
    };
    /**
     * Creates and returns an HTML line element (`<div>`).
     *
     * @ignore Exclude from docs
     * @param  {string}       text  Text to add
     * @return {HTMLElement}        `<div>` element reference
     */
    Label.prototype.getHTMLLineElement = function (text) {
        // Create the <div> element
        var div = document.createElement("div");
        div.innerHTML = text;
        // Set text alignment
        switch (this.textAlign) {
            case "middle":
                div.style.textAlign = "center";
                break;
            case "end":
                div.style.textAlign = "right";
                break;
        }
        // Disable or enable wrapping
        if (this.wrap) {
            div.style.wordWrap = "break-word";
        }
        else {
            div.style.whiteSpace = "nowrap";
        }
        // Don't let labels bleed out of the alotted area
        // Moved to `draw()` because setting "hidden" kills all measuring
        /*if (this.truncate) {
            div.style.overflow = "hidden";
        }*/
        // Set RTL-related styles
        if (this.rtl) {
            div.style.direction = "rtl";
            div.style.unicodeBidi = "bidi-override";
        }
        // Translate some of the SVG styles into CSS
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.fill)) {
            div.style.color = this.fill.toString();
        }
        return div;
    };
    /**
     * Applies specific styles to text to make it not selectable, unless it is
     * explicitly set as `selectable`.
     *
     * @ignore Exclude from docs
     * @todo Set styles via AMElement
     */
    Label.prototype.setStyles = function () {
        var group = this.element;
        if (!this.selectable || this.draggable || this.resizable || this.swipeable) {
            group.addStyle({
                "webkitUserSelect": "none",
                "msUserSelect": "none"
            });
        }
        else if (this.selectable) {
            group.removeStyle("webkitUserSelect");
            group.removeStyle("msUserSelect");
        }
    };
    /**
     * Hides unused lines
     */
    Label.prototype.hideUnused = function (index) {
        this.initLineCache();
        var lines = this.getCache("lineInfo");
        if (lines.length >= index) {
            for (var i = index; i < lines.length; i++) {
                var line = lines[i];
                if (line && line.element) {
                    line.element.attr({ "display": "none" });
                }
            }
        }
    };
    Object.defineProperty(Label.prototype, "text", {
        /**
         * @return {string} SVG text
         */
        get: function () {
            return this.getPropertyValue("text");
        },
        /**
         * An SVG text.
         *
         * Please note that setting `html` will override this setting if browser
         * supports `foreignObject` in SGV, such as most modern browsers excluding
         * IEs.
         *
         * @param {string}  value  SVG Text
         */
        set: function (value) {
            //this.setPropertyValue("html", undefined);
            this.setPropertyValue("text", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "wrap", {
        /**
         * @return {boolean} Auto-wrap enabled or not
         */
        get: function () {
            return this.getPropertyValue("wrap");
        },
        /**
         * Enables or disables autowrapping of text.
         *
         * @param {boolean}  value  Auto-wrapping enabled
         */
        set: function (value) {
            this.resetBBox();
            this.setPropertyValue("wrap", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "truncate", {
        /**
         * @return {boolean} Truncate text?
         */
        get: function () {
            return this.getPropertyValue("truncate");
        },
        /**
         * Indicates if text lines need to be truncated if they do not fit, using
         * configurable `ellipsis` string.
         *
         * `truncate` overrides `wrap` if both are set to `true`.
         *
         * NOTE: For HTML text, this setting **won't** trigger a parser and actual
         * line truncation with ellipsis. It will just hide everything that goes
         * outside the label.
         *
         * @param {boolean}  value  trincate text?
         */
        set: function (value) {
            this.resetBBox();
            this.setPropertyValue("truncate", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "fullWords", {
        /**
         * @return {boolean} Truncate on full words?
         */
        get: function () {
            return this.getPropertyValue("fullWords");
        },
        /**
         * If `truncate` is enabled, should Label try to break only on full words
         * (`true`), or whenever needed, including middle of the word. (`false`)
         *
         * @default true
         * @param {boolean}  value  Truncate on full words?
         */
        set: function (value) {
            this.setPropertyValue("fullWords", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "ellipsis", {
        /**
         * @return {string} Ellipsis string
         */
        get: function () {
            return this.getPropertyValue("ellipsis");
        },
        /**
         * Ellipsis character to use if `truncate` is enabled.
         *
         * @param {string} value Ellipsis string
         * @default "..."
         */
        set: function (value) {
            this.setPropertyValue("ellipsis", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "selectable", {
        /**
         * @return {boolean} Text selectable?
         */
        get: function () {
            return this.getPropertyValue("selectable");
        },
        /**
         * Forces the text to be selectable. This setting will be ignored if the
         * object has some kind of interaction attached to it, such as it is
         * `draggable`, `swipeable`, `resizable`.
         *
         * @param {boolean}  value  Text selectable?
         * @default false
         */
        set: function (value) {
            this.setPropertyValue("selectable", value, true);
            this.setStyles();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "textAlign", {
        /**
         * @return {TextAlign} Alignment
         */
        get: function () {
            return this.getPropertyValue("textAlign");
        },
        /**
         * Horizontal text alignment.
         *
         * Available choices:
         * * "start"
         * * "middle"
         * * "end"
         *
         * @param {TextAlign}  value  Alignment
         */
        set: function (value) {
            this.setPropertyValue("textAlign", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "textValign", {
        /**
         * @ignore Exclude from docs (not used)
         * @return {TextValign} Alignment
         * @deprecated
         */
        get: function () {
            return this.getPropertyValue("textValign");
        },
        /**
         * Vertical text alignment.
         *
         * @ignore Exclude from docs (not used)
         * @param {TextValign}  value  Alignment
         * @deprecated
         */
        set: function (value) {
            this.setPropertyValue("textValign", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "html", {
        /**
         * @return {string} HTML content
         */
        get: function () {
            return this.getPropertyValue("html");
        },
        /**
         * Raw HTML to be used as text.
         *
         * NOTE: HTML text is subject to browser support. It relies on browsers
         * supporting SVG `foreignObject` nodes. Some browsers (read IEs) do not
         * support it. On those browsers, the text will fall back to basic SVG text,
         * striping out all HTML markup and styling that goes with it.
         *
         * For more information about `foreignObject` and its browser compatibility
         * refer to [this page](https://developer.mozilla.org/en/docs/Web/SVG/Element/foreignObject#Browser_compatibility).
         *
         * @param {string} value HTML text
         */
        set: function (value) {
            this.setPropertyValue("html", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "hideOversized", {
        /**
         * @return {boolean} Hide if text does not fit?
         */
        get: function () {
            return this.getPropertyValue("hideOversized");
        },
        /**
         * Indicates whether the whole text should be hidden if it does not fit into
         * its allotted space.
         *
         * @param {boolean}  value  Hide if text does not fit?
         */
        set: function (value) {
            this.setPropertyValue("hideOversized", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "ignoreFormatting", {
        /**
         * @return {boolean} Ignore formatting?
         */
        get: function () {
            return this.getPropertyValue("ignoreFormatting");
        },
        /**
         * If set to `true` square-bracket formatting blocks will be treated as
         * regular text.
         *
         * @default false
         * @param {boolean}  value  Ignore formatting?
         */
        set: function (value) {
            this.setPropertyValue("ignoreFormatting", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Override `mesaureElement` so it does not get measure again, because
     * internal `_bbox` is being updated by measuring routines in Text itself.
     */
    Label.prototype.measureElement = function () { };
    /**
     * Returns information about a line element.
     *
     * @ignore Exclude from docs
     * @param  {number}         index  Line index
     * @return {ITextLineInfo}         Line info object
     */
    Label.prototype.getLineInfo = function (index) {
        this.initLineCache();
        var lines = this.getCache("lineInfo");
        return lines.length > index ? lines[index] : undefined;
    };
    /**
     * Adds a line to line info cache.
     *
     * @ignore Exclude from docs
     * @param {ITextLineInfo}  line     Line info object
     * @param {number}         index    Insert at specified index
     */
    Label.prototype.addLineInfo = function (line, index) {
        this.initLineCache();
        this.getCache("lineInfo")[index] = line;
    };
    /**
     * Checks if line cache is initialized and initializes it.
     */
    Label.prototype.initLineCache = function () {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.getCache("lineInfo"))) {
            this.setCache("lineInfo", [], 0);
        }
    };
    /**
     * Sets a [[DataItem]] to use for populating dynamic sections of the text.
     *
     * Check the description for [[Text]] class, for data binding.
     *
     * @param {DataItem} dataItem Data item
     */
    Label.prototype.setDataItem = function (dataItem) {
        if (this._sourceDataItemEvents) {
            this._sourceDataItemEvents.dispose();
        }
        if (dataItem) {
            this._sourceDataItemEvents = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                dataItem.events.on("valuechanged", this.invalidate, this, false),
                dataItem.events.on("workingvaluechanged", this.invalidate, this, false),
                dataItem.events.on("calculatedvaluechanged", this.invalidate, this, false),
                dataItem.events.on("propertychanged", this.invalidate, this, false)
            ]);
        }
        _super.prototype.setDataItem.call(this, dataItem);
    };
    Object.defineProperty(Label.prototype, "availableWidth", {
        /**
         * Returns available horizontal space.
         *
         * @ignore Exclude from docs
         * @return {number} Available width (px)
         */
        get: function () {
            return _utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.maxWidth) ? this.maxWidth : this.pixelWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "availableHeight", {
        /**
         * Returns available vertical space.
         *
         * @return {number} Available height (px)
         */
        get: function () {
            return _utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.maxHeight) ? this.maxHeight : this.pixelHeight;
        },
        enumerable: true,
        configurable: true
    });
    // temp, replacing textFormatter method
    Label.prototype.getSvgElement = function (text, style) {
        var element = this.paper.add("tspan");
        element.textContent = text;
        if (style) {
            element.node.setAttribute("style", style);
        }
        return element;
    };
    /**
     * Invalidates the whole element, including layout AND all its child
     * elements.
     */
    Label.prototype.deepInvalidate = function () {
        _super.prototype.deepInvalidate.call(this);
        this.hardInvalidate();
    };
    return Label;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Label"] = Label;
//# sourceMappingURL=Label.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js ***!
  \**************************************************************************/
/*! exports provided: Line */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return Line; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Line drawing functionality.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a line.
 *
 * @see {@link ILineEvents} for a list of available events
 * @see {@link ILineAdapters} for a list of available Adapters
 */
var Line = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Line, _super);
    /**
     * Constructor
     */
    function Line() {
        var _this = _super.call(this) || this;
        _this.className = "Line";
        _this.element = _this.paper.add("line");
        _this.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_2__["color"])(); //"none";
        _this.x1 = 0;
        _this.y1 = 0;
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the line.
     *
     * @ignore Exclude from docs
     */
    Line.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.x1 == this.x2 || this.y1 == this.y2) {
            this.pixelPerfect = true;
        }
        else {
            this.pixelPerfect = false;
        }
        this.x1 = this.x1;
        this.x2 = this.x2;
        this.y1 = this.y1;
        this.y2 = this.y2;
    };
    Object.defineProperty(Line.prototype, "x1", {
        /**
         * @return {number} X
         */
        get: function () {
            return this.getPropertyValue("x1");
        },
        /**
         * X coordinate of first end.
         *
         * @param {number} value X
         */
        set: function (value) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](value)) {
                value = 0;
            }
            var delta = 0;
            if (this.pixelPerfect && this.stroke instanceof _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__["LinearGradient"]) {
                delta = 0.00001;
            }
            this.setPropertyValue("x1", value, true);
            this.element.attr({ "x1": value + delta });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Line.prototype, "x2", {
        /**
         * @return {number} X
         */
        get: function () {
            var value = this.getPropertyValue("x2");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](value)) {
                value = this.pixelWidth;
            }
            return value;
        },
        /**
         * X coordinate of second end.
         *
         * @param {number} value X
         */
        set: function (value) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](value)) {
                value = 0;
            }
            this.setPropertyValue("x2", value, true);
            this.element.attr({ "x2": value });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Line.prototype, "y1", {
        /**
         * @return {number} Y
         */
        get: function () {
            return this.getPropertyValue("y1");
        },
        /**
         * Y coordinate of first end.
         *
         * @param {number} value Y
         */
        set: function (value) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](value)) {
                value = 0;
            }
            var delta = 0;
            if (this.pixelPerfect && this.stroke instanceof _rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__["LinearGradient"]) {
                delta = 0.00001;
            }
            this.setPropertyValue("y1", value, true);
            this.element.attr({ "y1": value + delta });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Line.prototype, "y2", {
        /**
         * @return {number} Y
         */
        get: function () {
            var value = this.getPropertyValue("y2");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](value)) {
                value = this.pixelHeight;
            }
            return value;
        },
        /**
         * Y coordinate of second end.
         *
         * @param {number} value Y
         */
        set: function (value) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](value)) {
                value = 0;
            }
            this.setPropertyValue("y2", value, true);
            this.element.attr({ "y2": value });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position along the line (0-1) into pixel coordinates.
     *
     * @param  {number}             position  Position (0-1)
     * @return {IOrientationPoint}            Coordinates
     */
    Line.prototype.positionToPoint = function (position) {
        var point1 = { x: this.x1, y: this.y1 };
        var point2 = { x: this.x2, y: this.y2 };
        var point = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["getMidPoint"](point1, point2, position);
        var angle = _utils_Math__WEBPACK_IMPORTED_MODULE_6__["getAngle"](point1, point2);
        return { x: point.x, y: point.y, angle: angle };
    };
    return Line;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["Line"] = Line;
//# sourceMappingURL=Line.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Modal.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Modal.js ***!
  \***************************************************************************/
/*! exports provided: Modal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modal", function() { return Modal; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Popup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Popup */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Popup.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/**
 * Modal class is used to display information over chart area.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * Shows an HTML modal which covers window or a chart area.
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.
 */
var Modal = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Modal, _super);
    /**
     * Constructor
     */
    function Modal() {
        var _this = _super.call(this) || this;
        /**
         * Adapter.
         *
         * @type {Adapter<Modal, IModalAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        _this.className = "Modal";
        _this.showCurtain = true;
        _this.draggable = false;
        return _this;
    }
    return Modal;
}(_Popup__WEBPACK_IMPORTED_MODULE_1__["Popup"]));

//# sourceMappingURL=Modal.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PlayButton.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/PlayButton.js ***!
  \********************************************************************************/
/*! exports provided: PlayButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlayButton", function() { return PlayButton; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _RoundedRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Triangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Triangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Play button functionality.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a zoom out button.
 *
 * @see {@link IPlayButtonEvents} for a list of available events
 * @see {@link IPlayButtonAdapters} for a list of available Adapters
 */
var PlayButton = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PlayButton, _super);
    /**
     * Constructor
     */
    function PlayButton() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "PlayButton";
        _this.padding(12, 12, 12, 12);
        _this.showSystemTooltip = true;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        var background = _this.background;
        background.cornerRadius(25, 25, 25, 25);
        background.fill = interfaceColors.getFor("primaryButton");
        background.stroke = interfaceColors.getFor("primaryButtonStroke");
        background.strokeOpacity = 0;
        background.states.getKey("hover").properties.fill = interfaceColors.getFor("primaryButtonHover");
        background.states.getKey("down").properties.fill = interfaceColors.getFor("primaryButtonActive");
        // Create a play icon
        var playIcon = new _Triangle__WEBPACK_IMPORTED_MODULE_5__["Triangle"]();
        playIcon.direction = "right";
        playIcon.width = 9;
        playIcon.height = 11;
        playIcon.marginLeft = 1;
        playIcon.marginRight = 1;
        playIcon.horizontalCenter = "middle";
        playIcon.verticalCenter = "middle";
        playIcon.stroke = interfaceColors.getFor("primaryButtonText");
        playIcon.fill = playIcon.stroke;
        _this.icon = playIcon;
        // Create a play icon
        var stopIcon = new _RoundedRectangle__WEBPACK_IMPORTED_MODULE_2__["RoundedRectangle"]();
        stopIcon.width = 11;
        stopIcon.height = 11;
        stopIcon.horizontalCenter = "middle";
        stopIcon.verticalCenter = "middle";
        stopIcon.cornerRadius(0, 0, 0, 0);
        stopIcon.stroke = interfaceColors.getFor("primaryButtonText");
        stopIcon.fill = playIcon.stroke;
        _this.togglable = true;
        var activeState = _this.states.create("active");
        activeState.transitionDuration = 0;
        activeState.properties.icon = stopIcon;
        _this.defaultState.transitionDuration = 0;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    PlayButton.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Play");
        }
    };
    return PlayButton;
}(_Button__WEBPACK_IMPORTED_MODULE_1__["Button"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PlayButton"] = PlayButton;
//# sourceMappingURL=PlayButton.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedRectangle.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedRectangle.js ***!
  \**************************************************************************************/
/*! exports provided: PointedRectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointedRectangle", function() { return PointedRectangle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PointedShape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PointedShape */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedShape.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Pointed rectangle module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a rectangle with a pointer.
 *
 * @see {@link IPointedRectangleEvents} for a list of available events
 * @see {@link IPointedRectangleAdapters} for a list of available Adapters
 */
var PointedRectangle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PointedRectangle, _super);
    /**
     * Constructor
     */
    function PointedRectangle() {
        var _this = _super.call(this) || this;
        _this.className = "PointedRectangle";
        _this.element = _this.paper.add("path");
        _this.cornerRadius = 0;
        _this.cornerRadius = 6;
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    PointedRectangle.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var cr = this.cornerRadius;
        var w = this.innerWidth;
        var h = this.innerHeight;
        if (w > 0 && h > 0) {
            var x = this.pointerX;
            var y = this.pointerY;
            var bwh = this.pointerBaseWidth / 2;
            var maxcr = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["min"](w / 2, h / 2);
            var crtl = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](cr, 0, maxcr);
            var crtr = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](cr, 0, maxcr);
            var crbr = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](cr, 0, maxcr);
            var crbl = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](cr, 0, maxcr);
            // corner coordinates
            // top left
            var xtl = 0;
            var ytl = 0;
            // top right
            var xtr = w;
            var ytr = 0;
            // bottom right
            var xbr = w;
            var ybr = h;
            // bottom left
            var xbl = 0;
            var ybl = h;
            var lineT = void 0;
            var lineR = void 0;
            var lineB = void 0;
            var lineL = void 0;
            // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located
            // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)
            var d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);
            var d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);
            // top
            if (d1 > 0 && d2 > 0) {
                var stemX = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](x, crtl + bwh, w - bwh - crtr);
                y = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](y, -Infinity, 0);
                lineT = "M" + crtl + ",0 L" + (stemX - bwh) + ",0 L" + x + "," + y + " L" + (stemX + bwh) + ",0 L" + (w - crtr) + ",0";
            }
            else {
                lineT = "M" + crtl + ",0 L" + (w - crtr) + ",0";
            }
            // bottom
            if (d1 < 0 && d2 < 0) {
                var stemX = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](x, crbl + bwh, w - bwh - crbr);
                y = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](y, h, Infinity);
                lineB = " L" + (w - crbr) + "," + h + " L" + (stemX + bwh) + "," + h + " L" + x + "," + y + " L" + (stemX - bwh) + "," + h + " L" + crbl + "," + h;
            }
            else {
                lineB = " L" + crbl + "," + h;
            }
            // left
            if (d1 < 0 && d2 > 0) {
                var stemY = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](y, crtl + bwh, h - crbl - bwh);
                x = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](x, -Infinity, 0);
                lineL = " L0," + (h - crbl) + " L0," + (stemY + bwh) + " L" + x + "," + y + " L0," + (stemY - bwh) + " L0," + crtl;
            }
            else {
                lineL = " L0," + crtl;
            }
            // right
            if (d1 > 0 && d2 < 0) {
                var stemY = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](y, crtr + bwh, h - bwh - crbr);
                x = _utils_Math__WEBPACK_IMPORTED_MODULE_2__["fitToRange"](x, w, Infinity);
                lineR = " L" + w + "," + crtr + " L" + w + "," + (stemY - bwh) + " L" + x + "," + y + " L" + w + "," + (stemY + bwh) + " L" + w + "," + (h - crbr);
            }
            else {
                lineR = " L" + w + "," + (h - crbr);
            }
            var arcTR = " a" + crtr + "," + crtr + " 0 0 1 " + crtr + "," + crtr;
            var arcBR = " a" + crbr + "," + crbr + " 0 0 1 -" + crbr + "," + crbr;
            var arcBL = " a" + crbl + "," + crbl + " 0 0 1 -" + crbl + ",-" + crbl;
            var arcTL = " a" + crtl + "," + crtl + " 0 0 1 " + crtl + ",-" + crtl;
            this.path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL;
        }
    };
    Object.defineProperty(PointedRectangle.prototype, "cornerRadius", {
        /**
         * @return {number} Corner radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadius");
        },
        /**
         * Radius of rectangle's border in pixels.
         *
         * @default 0
         * @param {number}  value  Corner radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return PointedRectangle;
}(_PointedShape__WEBPACK_IMPORTED_MODULE_1__["PointedShape"]));

//# sourceMappingURL=PointedRectangle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedShape.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedShape.js ***!
  \**********************************************************************************/
/*! exports provided: PointedShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointedShape", function() { return PointedShape; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Pointed shape module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a shape with a pointer.
 *
 * @see {@link IPointedShapeEvents} for a list of available events
 * @see {@link IPointedShapeAdapters} for a list of available Adapters
 */
var PointedShape = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PointedShape, _super);
    /**
     * Constructor
     */
    function PointedShape() {
        var _this = _super.call(this) || this;
        _this.className = "PointedShape";
        _this.pointerBaseWidth = 15;
        _this.pointerLength = 10;
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    PointedShape.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](this.pointerX)) {
            this.pointerX = this.pixelWidth / 2;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](this.pointerY)) {
            this.pointerY = this.pixelHeight + 10;
        }
    };
    Object.defineProperty(PointedShape.prototype, "pointerBaseWidth", {
        /**
         * @return {number} Width (px)
         */
        get: function () {
            return this.getPropertyValue("pointerBaseWidth");
        },
        /**
         * A width of the pinter's (stem's) thick end (base) in pixels.
         *
         * @default 15
         * @param {number}  value  Width (px)
         */
        set: function (value) {
            this.setPropertyValue("pointerBaseWidth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointedShape.prototype, "pointerLength", {
        /**
         * @return {number} Length (px)
         */
        get: function () {
            return this.getPropertyValue("pointerLength");
        },
        /**
         * A length of the pinter (stem) in pixels.
         *
         * @default 10
         * @param {number}  value  Length (px)
         */
        set: function (value) {
            this.setPropertyValue("pointerLength", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointedShape.prototype, "pointerX", {
        /**
         * @return {number} X
         */
        get: function () {
            return this.getPropertyValue("pointerX");
        },
        /**
         * X coordinate the shape is pointing to.
         *
         * @param {number}  value  X
         */
        set: function (value) {
            this.setPropertyValue("pointerX", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointedShape.prototype, "pointerY", {
        /**
         * @return {number} Y
         */
        get: function () {
            return this.getPropertyValue("pointerY");
        },
        /**
         * Y coordinate the shape is pointing to.
         *
         * @param {number}  value  Y
         */
        set: function (value) {
            this.setPropertyValue("pointerY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return PointedShape;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

//# sourceMappingURL=PointedShape.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js ***!
  \*****************************************************************************/
/*! exports provided: Polyarc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polyarc", function() { return Polyarc; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Polyline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Polyline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Module for a multi-part arched line.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a multi-part arched line.
 *
 * @see {@link IPolyarcEvents} for a list of available events
 * @see {@link IPolyarcAdapters} for a list of available Adapters
 */
var Polyarc = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Polyarc, _super);
    /**
     * Constructor
     */
    function Polyarc() {
        var _this = _super.call(this) || this;
        _this.className = "Polyarc";
        _this.controlPointDistance = 0.5;
        _this.controlPointPosition = 0.5;
        _this.applyTheme();
        return _this;
    }
    /**
     * Creats and adds an SVG path for the arc.
     *
     * @ignore Exclude from docs
     */
    Polyarc.prototype.makePath = function () {
        this._distance = 0;
        var segments = this.segments;
        if (segments && segments.length > 0) {
            var path = "";
            this._realSegments = [];
            for (var i = 0, len = segments.length; i < len; i++) {
                var points = segments[i];
                var realPoints = [];
                this._realSegments.push(realPoints);
                if (points.length > 0) {
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](points[0]);
                    for (var p = 1; p < points.length; p++) {
                        var pointA = points[p - 1];
                        var pointB = points[p];
                        var distanceAB = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getDistance"](pointB, pointA);
                        var cpDistance = distanceAB * this.controlPointDistance;
                        var controlPointPosition = this.controlPointPosition;
                        var angle = -_core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getAngle"](pointA, pointB);
                        var cpx = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 0.5 - cpDistance * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle);
                        var cpy = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 0.5 - cpDistance * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle);
                        var controlPoint1 = { x: cpx, y: cpy };
                        var cpx2 = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 1.5 - cpDistance * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle);
                        var cpy2 = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 1.5 - cpDistance * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle);
                        var controlPoint2 = { x: cpx2, y: cpy2 };
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["cubicCurveTo"](pointB, controlPoint1, controlPoint2);
                        // we add a lot of points in order to get the position/angle later
                        var stepCount = Math.ceil(distanceAB);
                        var prevPoint = pointA;
                        if (stepCount > 0) {
                            for (var i_1 = 0; i_1 <= stepCount; i_1++) {
                                var point = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getPointOnCubicCurve"](pointA, pointB, controlPoint1, controlPoint2, i_1 / stepCount);
                                realPoints.push(point);
                                this._distance += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getDistance"](prevPoint, point);
                                prevPoint = point;
                            }
                        }
                        else {
                            realPoints.push(pointA);
                        }
                    }
                }
            }
            this.path = path;
        }
    };
    Object.defineProperty(Polyarc.prototype, "controlPointPosition", {
        /**
         * @return {number} Position (0-1)
         */
        get: function () {
            return this.getPropertyValue("controlPointPosition");
        },
        /**
         * Relative position along the line the control point is. (0-1)
         *
         * @default 0.5
         * @param {number}  value  Position (0-1)
         */
        set: function (value) {
            this.setPropertyValue("controlPointPosition", value);
            this.makePath();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Polyarc.prototype, "controlPointDistance", {
        /**
         * @return {number} Distance (0-1)
         */
        get: function () {
            return this.getPropertyValue("controlPointDistance");
        },
        /**
         * Relative distance of the control point. (0-1)
         *
         * Default is half the length of the line. (0.5)
         *
         * @default 0.5
         * @param {number}  value  Distance (0-1)
         */
        set: function (value) {
            this.setPropertyValue("controlPointDistance", value);
            this.makePath();
        },
        enumerable: true,
        configurable: true
    });
    return Polyarc;
}(_Polyline__WEBPACK_IMPORTED_MODULE_1__["Polyline"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Polyarc"] = Polyarc;
//# sourceMappingURL=Polyarc.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js ***!
  \*****************************************************************************/
/*! exports provided: Polygon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polygon", function() { return Polygon; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _utils_Morpher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Morpher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Morpher.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Polygon module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a polygon.
 *
 * @see {@link IPolygonEvents} for a list of available events
 * @see {@link IPolygonAdapters} for a list of available Adapters
 */
var Polygon = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Polygon, _super);
    /**
     * Constructor
     */
    function Polygon() {
        var _this = _super.call(this) || this;
        _this.className = "Polygon";
        _this.element = _this.paper.add("path");
        _this.shapeRendering = "auto";
        _this._currentPoints = [];
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Polygon.prototype, "points", {
        /**
         * @return {IPoint[]} Polygon points
         */
        get: function () {
            return this.getPropertyValue("points");
        },
        /**
         * An array of X/Y coordinates for each elbow of the polygon.
         *
         * @todo Example
         * @param {IPoint[][][]}  points  Polygon points
         */
        set: function (points) {
            this.setPropertyValue("points", points, true);
            this._currentPoints = this.points;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Polygon.prototype, "currentPoints", {
        /**
         * @return {IPoint[]} Polygon points
         */
        get: function () {
            return this._currentPoints;
        },
        /**
         * Current points. Used when morphing the element, so that original `points`
         * are not overwritten.
         *
         * @param {IPoint[][][]}  points  Polygon points
         */
        set: function (points) {
            if (this._currentPoints != points) {
                this._currentPoints = points;
                this.draw();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Polygon.prototype.draw = function () {
        var path = "";
        var points = this._currentPoints;
        var left;
        var right;
        var top;
        var bottom;
        if (points.length > 0) {
            // separate areas
            for (var i = 0, len = points.length; i < len; i++) {
                // surface
                var surface = points[i][0];
                var hole = points[i][1];
                if (surface && surface.length > 0) {
                    var point = surface[0];
                    path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](point);
                    for (var s = 0; s < surface.length; s++) {
                        point = surface[s];
                        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"](point);
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](right) || (right < point.x)) {
                            right = point.x;
                        }
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](left) || (left > point.x)) {
                            left = point.x;
                        }
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](top) || (top > point.y)) {
                            top = point.y;
                        }
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](bottom) || (bottom < point.y)) {
                            bottom = point.y;
                        }
                    }
                }
                // hole
                if (hole && hole.length > 0) {
                    var point = hole[0];
                    path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](point);
                    for (var h = 0, hlen = hole.length; h < hlen; h++) {
                        point = hole[h];
                        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"](point);
                    }
                }
            }
            if (path) {
                path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["closePath"]();
            }
            this.bbox.x = left;
            this.bbox.y = top;
            this.bbox.width = right - left;
            this.bbox.height = bottom - top;
        }
        this.path = path;
    };
    /**
     * Measures element
     */
    Polygon.prototype.measureElement = function () {
        // Overriding to avoid extra measurement.
    };
    Object.defineProperty(Polygon.prototype, "centerPoint", {
        /**
         * A calculated center point for the shape.
         *
         * @readonly
         * @return {IPoint} Center
         */
        get: function () {
            return { x: this.bbox.x + this.bbox.width / 2, y: this.bbox.y + this.bbox.height / 2 };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Polygon.prototype, "morpher", {
        /**
         * A [[Morpher]] instance that is used to morph polygon into some other
         * shape.
         *
         * @readonly
         * @return {Morpher} Morpher instance
         */
        get: function () {
            if (!this._morpher) {
                this._morpher = new _utils_Morpher__WEBPACK_IMPORTED_MODULE_2__["Morpher"](this);
                this._disposers.push(this._morpher);
            }
            return this._morpher;
        },
        enumerable: true,
        configurable: true
    });
    return Polygon;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Polygon"] = Polygon;
//# sourceMappingURL=Polygon.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js ***!
  \******************************************************************************/
/*! exports provided: Polyline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polyline", function() { return Polyline; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Polyline module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a polyline.
 *
 * @see {@link IPolylineEvents} for a list of available events
 * @see {@link IPolylineAdapters} for a list of available Adapters
 */
var Polyline = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Polyline, _super);
    /**
     * Constructor
     */
    function Polyline() {
        var _this = _super.call(this) || this;
        /**
         * [_distance description]
         *
         * @todo Description
         * @type {number}
         */
        _this._distance = 0;
        _this.className = "Polyline";
        _this.element = _this.paper.add("path");
        _this.shapeRendering = "auto";
        _this.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_2__["color"])();
        _this.strokeOpacity = 1;
        _this.applyTheme();
        return _this;
    }
    /**
     * Creats and adds an SVG path for the arc.
     *
     * @ignore Exclude from docs
     */
    Polyline.prototype.makePath = function () {
        this._distance = 0;
        var segments = this.segments;
        if (segments && segments.length > 0) {
            var path = "";
            for (var i = 0, len = segments.length; i < len; i++) {
                var points = segments[i];
                if (points.length > 0) {
                    path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](points[0]);
                    for (var p = 1; p < points.length; p++) {
                        var point = points[p];
                        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"](point);
                        this._distance += _utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](points[p - 1], point);
                    }
                }
            }
            this.path = path;
        }
        this._realSegments = segments;
    };
    Object.defineProperty(Polyline.prototype, "segments", {
        /**
         * @return {Optional<IPoint[]>} Segments
         */
        get: function () {
            return this.getPropertyValue("segments");
        },
        /**
         * A list of segment coordinates for the multi-part line.
         *
         * @todo Example
         * @param {Optional<IPoint[][]>}  segments  Segments
         */
        set: function (segments) {
            this.setPropertyValue("segments", segments);
            this.makePath();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Polyline.prototype, "distance", {
        /**
         * [distance description]
         *
         * @todo Description
         * @return {number} [description]
         */
        get: function () {
            return this._distance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position along the line (0-1) into pixel coordinates.
     *
     * @param  {number}             position  Position (0-1)
     * @return {IOrientationPoint}            Coordinates
     */
    Polyline.prototype.positionToPoint = function (position) {
        var deltaAngle = 0;
        if (position < 0) {
            position = Math.abs(position);
            deltaAngle = 180;
        }
        var segments = this._realSegments;
        if (segments) {
            var totalDistance = this.distance;
            var currentDistance = 0;
            var distanceAB = void 0;
            var positionA = 0;
            var positionB = 0;
            var pointA = void 0;
            var pointB = void 0;
            for (var s = 0; s < segments.length; s++) {
                var points = segments[s];
                if (points.length > 1) {
                    for (var p = 1; p < points.length; p++) {
                        pointA = points[p - 1];
                        pointB = points[p];
                        positionA = currentDistance / totalDistance;
                        distanceAB = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](pointA, pointB);
                        currentDistance += distanceAB;
                        positionB = currentDistance / totalDistance;
                        if (positionA <= position && positionB > position) {
                            s = segments.length;
                            break;
                        }
                    }
                }
                else if (points.length == 1) {
                    pointA = points[0];
                    pointB = points[0];
                    positionA = 0;
                    positionB = 1;
                }
            }
            if (pointA && pointB) {
                var positionAB = (position - positionA) / (positionB - positionA);
                var midPoint = _utils_Math__WEBPACK_IMPORTED_MODULE_5__["getMidPoint"](pointA, pointB, positionAB);
                return { x: midPoint.x, y: midPoint.y, angle: deltaAngle + _utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](pointA, pointB) };
            }
        }
        return { x: 0, y: 0, angle: 0 };
    };
    return Polyline;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Polyline"] = Polyline;
//# sourceMappingURL=Polyline.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js ***!
  \********************************************************************************/
/*! exports provided: Polyspline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polyspline", function() { return Polyspline; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Polyline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Polyline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Polyspline (smoothed line) module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a polysline. (smoothed multi-sigment line)
 *
 * @see {@link IPolysplineEvents} for a list of available events
 * @see {@link IPolysplineAdapters} for a list of available Adapters
 */
var Polyspline = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Polyspline, _super);
    /**
     * Constructor
     */
    function Polyspline() {
        var _this = _super.call(this) || this;
        _this.className = "Polyspline";
        _this.tensionX = 0.5;
        _this.tensionY = 0.5;
        _this.applyTheme();
        return _this;
    }
    /**
     * Creats and adds an SVG path for the arc.
     *
     * @ignore Exclude from docs
     */
    Polyspline.prototype.makePath = function () {
        this._distance = 0;
        var segments = this.segments;
        var tensionX = this.tensionX;
        var tensionY = this.tensionY;
        if (segments && segments.length > 0) {
            var path = "";
            this._realSegments = [];
            for (var i = 0, len = segments.length; i < len; i++) {
                var points = segments[i];
                var realPoints = [];
                this._realSegments.push(realPoints);
                if (points.length > 0) {
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](points[0]);
                    for (var p = 0; p < points.length - 1; p++) {
                        var p0 = points[p - 1];
                        var p1 = points[p];
                        var p2 = points[p + 1];
                        var p3 = points[p + 2];
                        if (p === 0) {
                            p0 = points[p];
                        }
                        else if (p == points.length - 2) {
                            p3 = points[p + 1];
                        }
                        if (!p3) {
                            p3 = p2;
                        }
                        var controlPointA = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getCubicControlPointA"](p0, p1, p2, p3, tensionX, tensionY);
                        var controlPointB = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getCubicControlPointB"](p0, p1, p2, p3, tensionX, tensionY);
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["cubicCurveTo"](p2, controlPointA, controlPointB);
                        // now split to small segments so that we could have positionToPoint later
                        var stepCount = Math.ceil(_core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getDistance"](p1, p2)) / 2;
                        var prevPoint = p1;
                        if (stepCount > 0) {
                            for (var s = 0; s <= stepCount; s++) {
                                var point = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getPointOnCubicCurve"](p1, p2, controlPointA, controlPointB, s / stepCount);
                                realPoints.push(point);
                                this._distance += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getDistance"](prevPoint, point);
                                //path += $path.lineTo(point);
                                prevPoint = point;
                            }
                        }
                        else {
                            realPoints.push(p0);
                        }
                    }
                }
            }
            this.path = path;
        }
    };
    Object.defineProperty(Polyspline.prototype, "tensionX", {
        /**
         * @return {number} Tension
         */
        get: function () {
            return this.getPropertyValue("tensionX");
        },
        /**
         * Horizontal tension for the spline.
         *
         * Used by the line smoothing algorithm.
         *
         * @default 0.5
         * @param {number}  value  Tension
         */
        set: function (value) {
            this.setPropertyValue("tensionX", value);
            this.makePath();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Polyspline.prototype, "tensionY", {
        /**
         * @return {number} Tension
         */
        get: function () {
            return this.getPropertyValue("tensionY");
        },
        /**
         * Vertical tension for the spline.
         *
         * Used by the line smoothing algorithm.
         *
         * @default 0.5
         * @param {number}  value  Tensions
         */
        set: function (value) {
            this.setPropertyValue("tensionY", value, true);
            this.makePath();
        },
        enumerable: true,
        configurable: true
    });
    return Polyspline;
}(_Polyline__WEBPACK_IMPORTED_MODULE_1__["Polyline"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Polyspline"] = Polyspline;
//# sourceMappingURL=Polyspline.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Popup.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Popup.js ***!
  \***************************************************************************/
/*! exports provided: Popup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Popup", function() { return Popup; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PopupCSS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PopupCSS */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PopupCSS.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/**
 * Popup class is used to display information over chart area.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */








/**
 * Shows an HTML popup which covers window or a chart area.
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.
 * @todo Positioning over whole window
 */
var Popup = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Popup, _super);
    /**
     * Constructor
     */
    function Popup() {
        var _this = _super.call(this) || this;
        /**
         * Adapter.
         *
         * @type {Adapter<Popup, IPopupAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        /**
         * Holds references to various HTML elements, Popup consists of.
         */
        _this._elements = {};
        /**
         * Holdes Interaction objects for various Popup's elements.
         */
        _this._IOs = {};
        /**
         * Contents of popup window.
         *
         * @type {string}
         */
        _this._content = "";
        /**
         * Title of the popup window.
         *
         * @type {string}
         */
        _this._title = "";
        /**
         * Prefix to apply to class names for popup elements.
         *
         * @type {string}
         */
        _this._classPrefix = "ampopup";
        /**
         * If set to `true` [[Popup]] will use default styles.
         *
         * @type {boolean}
         */
        _this._defaultStyles = true;
        /**
         * If set to `true` [[Popup]] will dim out all chart content behind it by
         * showing a semi-transparent fill. (curtain)
         *
         * @type {boolean}
         */
        _this._showCurtain = false;
        /**
         * Indicates whether popup can be dragged.
         *
         * @type {boolean}
         */
        _this._draggable = true;
        /**
         * Horizontal position of the content window.
         *
         * @type {Align}
         */
        _this._align = "center";
        /**
         * Vertical position of the content window.
         *
         * @type {VerticalAlign}
         */
        _this._verticalAlign = "middle";
        /**
         * Shift in position of the element. (used for dragging)
         *
         * @type {number}
         */
        _this._shift = {
            x: 0,
            y: 0
        };
        /**
         * Temporary shift in position of the element. (used for dragging)
         *
         * @type {number}
         */
        _this._tempShift = {
            x: 0,
            y: 0
        };
        /**
         * A title for screen readers. It is very highly recommended to set that title
         * so that people using screen reader tools can get an immediate summary of
         * the information in the popup.
         *
         * @type {string}
         */
        _this._readerTitle = "";
        /**
         * Is popup closable?
         *
         * @type {boolean}
         */
        _this._closable = true;
        /**
         * Was CSS already loaded?
         *
         * @type {boolean}
         */
        _this._cssLoaded = false;
        /**
         * If set to other than "none" will try to re-adjust the position of the
         * popop to fit within chart container or browser window.
         *
         * @ignore Feature not yet implemented
         * @todo Implement
         * @type {"none" | "container" | "window"}
         */
        _this._fitTo = "window";
        /**
         * Identifies if this object is a "template" and should not be treated as
         * real object that is drawn or actually used in the chart.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this.isTemplate = false;
        /**
         * Indicates if the element was already sized and should not be measured for
         * sized again, saving some precious resources.
         *
         * @type {boolean}
         */
        _this._sized = false;
        _this.className = "Popup";
        return _this;
    }
    /**
     * Shows popup window.
     */
    Popup.prototype.open = function () {
        if (this.container) {
            if (this._elements.wrapper) {
                this.container.appendChild(this._elements.wrapper);
            }
            if (this._elements.curtain) {
                this.container.appendChild(this._elements.curtain);
                this.showCurtain = this.showCurtain;
            }
            this.positionElement();
            this.dispatchImmediately("opened");
        }
    };
    /**
     * Hides popup window.
     */
    Popup.prototype.close = function () {
        if (this._elements.wrapper) {
            if (this._elements.wrapper.parentElement) {
                this._elements.wrapper.parentElement.removeChild(this._elements.wrapper);
            }
        }
        if (this._elements.curtain) {
            if (this._elements.curtain.parentElement) {
                this._elements.curtain.parentElement.removeChild(this._elements.curtain);
            }
        }
        this.dispatchImmediately("closed");
        this.releasePointers();
    };
    /**
     * Destroy (dispose) popup.
     */
    Popup.prototype.dispose = function () {
        this.close();
        _super.prototype.dispose.call(this);
    };
    /**
     * Positions content element in the center of popup based on its actual size.
     *
     * @ignore Exclude from docs
     */
    Popup.prototype.positionElement = function (forceResize) {
        var _this = this;
        if (forceResize === void 0) { forceResize = true; }
        if (!this._elements.wrapper) {
            return;
        }
        setTimeout(function () {
            if (!_this._elements.wrapper) {
                return;
            }
            if (forceResize || !_this._sized) {
                _this._elements.wrapper.style.opacity = "0.01";
                _this._elements.wrapper.style.left = "0";
                _this._elements.wrapper.style.top = "0";
                _this._elements.wrapper.style.margin = "0 0 0 0";
                // Size the element, but only for the first time
                if (!_this._elements.wrapper.style.width) {
                    var bbox = _this._elements.wrapper.getBoundingClientRect();
                    _this._elements.wrapper.style.width = bbox.width + "px";
                    _this._elements.wrapper.style.height = bbox.height + "px";
                }
                _this._sized = true;
            }
            setTimeout(function () {
                if (!_this._elements.wrapper) {
                    return;
                }
                var bbox;
                if ((forceResize || !_this._sized) && _this._bbox) {
                    bbox = _this._bbox;
                }
                else {
                    bbox = _this._elements.wrapper.getBoundingClientRect();
                    _this._elements.wrapper.style.opacity = "";
                }
                // Set horizontal positioning
                switch (_this.align) {
                    case "left":
                        _this._elements.wrapper.style.left = "0";
                        _this._elements.wrapper.style.right = "auto";
                        _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);
                        break;
                    case "center":
                        _this._elements.wrapper.style.left = "50%";
                        _this._elements.wrapper.style.right = "auto";
                        _this._elements.wrapper.style.marginLeft = _this.toStyle(Math.round(-bbox.width / 2) + (_this._shift.x + _this._tempShift.x));
                        break;
                    case "right":
                        _this._elements.wrapper.style.left = "auto";
                        _this._elements.wrapper.style.right = "0";
                        _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);
                        break;
                    default:
                        _this._elements.wrapper.style.left = _this.toStyle(_this.left) || "auto";
                        _this._elements.wrapper.style.right = _this.toStyle(_this.right) || "auto";
                        _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);
                        break;
                }
                // Set vertical positioning
                switch (_this.verticalAlign) {
                    case "top":
                        _this._elements.wrapper.style.top = "0";
                        _this._elements.wrapper.style.bottom = "auto";
                        _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);
                        break;
                    case "middle":
                        _this._elements.wrapper.style.top = "50%";
                        _this._elements.wrapper.style.bottom = "auto";
                        _this._elements.wrapper.style.marginTop = _this.toStyle(Math.round(-bbox.height / 2) + (_this._shift.y + _this._tempShift.y));
                        break;
                    case "bottom":
                        _this._elements.wrapper.style.top = "auto";
                        _this._elements.wrapper.style.bottom = "0";
                        _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);
                        break;
                    default:
                        _this._elements.wrapper.style.top = _this.toStyle(_this.top) || "auto";
                        _this._elements.wrapper.style.bottom = _this.toStyle(_this.bottom) || "auto";
                        _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);
                        break;
                }
            }, 1);
        }, 1);
    };
    Popup.prototype.setupDragging = function () {
        var _this = this;
        if (this.draggable) {
            if (!this._IOs.wrapper.events.has("drag")) {
                this._IOs.wrapper.events.on("drag", function (ev) {
                    _this._tempShift.x = ev.shift.x;
                    _this._tempShift.y = ev.shift.y;
                    _this.positionElement(false);
                });
            }
            if (!this._IOs.wrapper.events.has("dragstop")) {
                this._IOs.wrapper.events.on("dragstop", function (ev) {
                    _this._shift.x += _this._tempShift.x;
                    _this._shift.y += _this._tempShift.y;
                    _this._tempShift.x = 0;
                    _this._tempShift.y = 0;
                    _this.positionElement(false);
                });
            }
        }
        else {
            // @todo Remove events
        }
    };
    Popup.prototype.toStyle = function (value) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](value)) {
            return null;
        }
        else if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
            return "" + value + "px";
        }
        else {
            return value.toString();
        }
    };
    Object.defineProperty(Popup.prototype, "classPrefix", {
        /**
         * A prefix that is applied to class names of various popup elements.
         *
         * @return {string} Class name prefix
         */
        get: function () {
            return this.adapter.apply("classPrefix", this._classPrefix);
        },
        /**
         * @param {string} value Class name prefix
         */
        set: function (value) {
            this._classPrefix = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "classPrefixRaw", {
        /**
         * Returns raw prefix (without adapters applied).
         *
         * @ignore Exclude from docs
         * @return {string} Class name prefix
         */
        get: function () {
            return this._classPrefix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "content", {
        /**
         * @return {string} Popup content
         */
        get: function () {
            return this.adapter.apply("content", this._content);
        },
        /**
         * Popup content.
         *
         * Popup content can be any valid HTML, including CSS.
         *
         * @param {string} value Popup content
         */
        set: function (value) {
            if (this._content != value) {
                this._content = value;
                if (!this._elements.content) {
                    this.createContentElement();
                }
                this._elements.content.innerHTML = value;
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Popup.prototype.getClassNames = function () {
        return this.adapter.apply("classNames", {
            wrapperClass: this.classPrefix + "",
            titleClass: this.classPrefix + "-title",
            contentClass: this.classPrefix + "-content",
            curtainClass: this.classPrefix + "-curtain",
            closeClass: this.classPrefix + "-close"
        });
    };
    /**
     * Creates content element.
     */
    Popup.prototype.createContentElement = function () {
        // Check if it's created already
        if (this._elements.wrapper) {
            return;
        }
        // Get class names for popup elements
        var classNames = this.getClassNames();
        // Create content element
        var wrapper = document.createElement("div");
        wrapper.className = classNames.contentClass;
        wrapper.style.opacity = "0.01";
        // Create close button
        var close = document.createElement("a");
        close.className = classNames.closeClass;
        // Content title
        var title = document.createElement("div");
        title.innerHTML = this.title;
        title.className = classNames.titleClass;
        if (!this.title) {
            title.style.display = "none";
        }
        // Content div
        var content = document.createElement("div");
        content.innerHTML = this.content;
        // Set up events for content
        this._IOs.wrapper = Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().getInteraction(wrapper);
        this._disposers.push(this._IOs.wrapper);
        // Set hover/out events
        this._IOs.wrapper.events.on("over", this.disablePointers, this);
        this._IOs.wrapper.events.on("out", this.releasePointers, this);
        // Create an InteractionObject for close
        this._IOs.close = Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().getInteraction(close);
        this._disposers.push(this._IOs.close);
        // Hide close for now
        close.style.visibility = "hidden";
        // Add accessible stuff
        wrapper.setAttribute("role", "dialog");
        // Add to wrapper
        wrapper.appendChild(close);
        wrapper.appendChild(title);
        wrapper.appendChild(content);
        this.container.appendChild(wrapper);
        // Save for later access
        this._elements.wrapper = wrapper;
        this._elements.content = content;
        this._elements.title = title;
        this._elements.close = close;
        // Load CSS
        if (this.defaultStyles) {
            this.loadDefaultCSS();
        }
        // Create curtain as well
        this.createCurtainElement();
        // Apply events
        this.applyEvents();
        this.applyReaderSettings();
        // Draggable?
        this.setupDragging();
    };
    Object.defineProperty(Popup.prototype, "title", {
        /**
         * @return {string} Popup title
         */
        get: function () {
            return this.adapter.apply("title", this._title);
        },
        /**
         * Popup title.
         *
         * Popup title can be any valid HTML, including CSS.
         *
         * @param {string}  value  Popup title
         */
        set: function (value) {
            if (this._title != value) {
                this._title = value;
                if (!this._elements.content) {
                    this.createContentElement();
                }
                this._elements.title.innerHTML = value;
                this.positionElement();
                this.applyReaderSettings();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "readerTitle", {
        /**
         * @return {string} Popup content
         */
        get: function () {
            return this.adapter.apply("readerTitle", this._readerTitle != "" ? this._readerTitle : this.title);
        },
        /**
         * A title for screen readers. It is very highly recommended to set that title
         * so that people using screen reader tools can get an immediate summary of
         * the information in the popup.
         *
         * @param {string}  value  Reader title
         */
        set: function (value) {
            if (this._readerTitle != value) {
                this._readerTitle = value;
                this.applyReaderSettings();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "closable", {
        /**
         * @return {boolean} Closable?
         */
        get: function () {
            return this.adapter.apply("closable", this._closable);
        },
        /**
         * Is popup closable?
         *
         * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,
         * clicking curtain, or clicking the close button.
         *
         * If it is not closable, the only way to close it is via `close()` call.
         *
         * @param {boolean} value Closable?
         */
        set: function (value) {
            if (value !== this._closable) {
                this._closable = value;
                this.applyEvents();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "fitTo", {
        /**
         * @ignore
         * @todo Implement
         * @return {"none" | "container" | "window"} Fit option
         */
        get: function () {
            return this.adapter.apply("fitTo", this._fitTo);
        },
        /**
         * If set to other than "none" will try to re-adjust the position of the
         * popop to fit within chart container or browser window.
         *
         * @ignore
         * @todo Implement
         * @default "window"
         * @param {"none" | "container" | "window"}  value  Fit option
         */
        set: function (value) {
            if (value != this._fitTo) {
                this._fitTo = value;
                this.positionElement;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "defaultStyles", {
        /**
         * @return {boolean} Use default CSS?
         */
        get: function () {
            return this.adapter.apply("defaultStyles", this._defaultStyles);
        },
        /**
         * Should popup use default CSS?
         *
         * If default CSS is disabled, an external CSS should handle the look of the
         * popup, since it will look quite out of place otherwise.
         *
         * @default true
         * @param {string} Use default CSS?
         */
        set: function (value) {
            if (this._defaultStyles != value) {
                this._defaultStyles = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "showCurtain", {
        /**
         * @return {boolean} Show curtain?
         */
        get: function () {
            return this.adapter.apply("showCurtain", this._showCurtain);
        },
        /**
         * Should popup use dim out all content behind it?
         *
         * @default false
         * @param {boolean} Show curtain?
         */
        set: function (value) {
            if (this._showCurtain != value) {
                this._showCurtain = value;
                if (this._elements.curtain) {
                    this._elements.curtain.style.display = value ? "block" : "none";
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates curtain element.
     */
    Popup.prototype.createCurtainElement = function () {
        // Get class names for popup elements
        var classNames = this.getClassNames();
        // Create the curtain
        var curtain = document.createElement("div");
        curtain.className = classNames.curtainClass;
        // Append curtain to wrapper
        this.container.appendChild(curtain);
        // Create an InteractionObject for curtain because we might need to
        // set interactions on it
        this._IOs.curtain = Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().getInteraction(curtain);
        // Add Curtain IO to disposers
        this._disposers.push(this._IOs.curtain);
        // Set events to disable underlying interactivity
        this._IOs.curtain.events.on("over", this.disablePointers, this);
        this._IOs.curtain.events.on("out", this.releasePointers, this);
        // Hide it?
        curtain.style.display = this.showCurtain ? "block" : "none";
        // Save for later
        this._elements.curtain = curtain;
    };
    Object.defineProperty(Popup.prototype, "draggable", {
        /**
         * @return {boolean} Show curtain?
         */
        get: function () {
            return this.adapter.apply("draggable", this._draggable);
        },
        /**
         * Can the popup be dragged with a pointer?
         *
         * @default false
         * @param {boolean} Show curtain?
         */
        set: function (value) {
            if (this._draggable != value) {
                this._draggable = value;
                this.setupDragging();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "align", {
        /**
         * @return {boolean} Horizontal position
         */
        get: function () {
            return this.adapter.apply("align", this._align);
        },
        /**
         * Horizontal positioning of the content window.
         *
         * Available options: "left", "center" (default), "right", and "none".
         *
         * @default "center"
         * @param {Align} Horizontal position
         */
        set: function (value) {
            if (this._align != value) {
                this._align = value;
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "verticalAlign", {
        /**
         * @return {boolean} Vertical position
         */
        get: function () {
            return this.adapter.apply("verticalAlign", this._verticalAlign);
        },
        /**
         * Vertical positioning of the content window.
         *
         * Available options: "top", "middle" (default), "bottom", and "none".
         *
         * @default "middle"
         * @param {VerticalAlign} Vertical position
         */
        set: function (value) {
            if (this._verticalAlign != value) {
                this._verticalAlign = value;
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "left", {
        /**
         * @return {boolean} Left
         */
        get: function () {
            return this.adapter.apply("left", this._left);
        },
        /**
         * "left" coordinate of a non-aligned (`align = "none"`) popup.
         *
         * Can be either absolute pixel value, or relative (`Percent`).
         *
         * Setting this property will automatically set `align` to "none".
         *
         * NOTE: The position is relative to the chart container.
         *
         * @param {number | Percent} Left
         */
        set: function (value) {
            if (this.left != value) {
                this._left = value;
                this._align = "none";
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "right", {
        /**
         * @return {boolean} Right
         */
        get: function () {
            return this.adapter.apply("right", this._right);
        },
        /**
         * "right" coordinate of a non-aligned (`align = "none"`) popup.
         *
         * Can be either absolute pixel value, or relative (`Percent`).
         *
         * Setting this property will automatically set `align` to "none".
         *
         * NOTE: The position is relative to the chart container.
         *
         * @param {number | Percent} Right
         */
        set: function (value) {
            if (this.right != value) {
                this._right = value;
                this._align = "none";
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "top", {
        /**
         * @return {boolean} Top
         */
        get: function () {
            return this.adapter.apply("top", this._top);
        },
        /**
         * "top" coordinate of a non-aligned (`verticalAlign = "none"`) popup.
         *
         * Can be either absolute pixel value, or relative (`Percent`).
         *
         * Setting this property will automatically set `verticalAlign` to "none".
         *
         * NOTE: The position is relative to the chart container.
         *
         * @param {number | Percent} Top
         */
        set: function (value) {
            if (this.top != value) {
                this._top = value;
                this._verticalAlign = "none";
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "bottom", {
        /**
         * @return {boolean} Bottom
         */
        get: function () {
            return this.adapter.apply("bottom", this._bottom);
        },
        /**
         * "bottom" coordinate of a non-aligned (`verticalAlign = "none"`) popup.
         *
         * Can be either absolute pixel value, or relative (`Percent`).
         *
         * Setting this property will automatically set `verticalAlign` to "none".
         *
         * NOTE: The position is relative to the chart container.
         *
         * @param {number | Percent} Bottom
         */
        set: function (value) {
            if (this.bottom != value) {
                this._bottom = value;
                this._verticalAlign = "none";
                this.positionElement();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Popup.prototype, "elements", {
        /**
         * Returns an object with references to various elements of the Popup.
         *
         * * `wrapper`
         * * `title`
         * * `content`
         * * `close`
         * * `curtain`
         */
        get: function () {
            return this._elements;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Loads popup CSS.
     *
     * @ignore Exclude from docs
     */
    Popup.prototype.loadDefaultCSS = function () {
        if (!this._cssLoaded) {
            this._disposers.push(Object(_PopupCSS__WEBPACK_IMPORTED_MODULE_1__["default"])(this.classPrefix));
            _utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](this._elements, function (key, el) {
                el.style.display = "";
            });
            this._cssLoaded = true;
        }
    };
    /**
     * If popup is closable, this method adds various events to popup elements.
     */
    Popup.prototype.applyEvents = function () {
        var _this = this;
        if (this._IOs.close) {
            if (this.closable) {
                this._IOs.close.element.style.visibility = "visible";
                var disposers = [
                    Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().body.events.on("keyup", function (ev) {
                        if (_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__["keyboard"].isKey(ev.event, "esc") && _this.closable) {
                            _this.close();
                        }
                    }),
                    this._IOs.close.events.on("hit", function (ev) {
                        _this.close();
                    })
                ];
                disposers.push(this._IOs.curtain.events.on("hit", function (ev) {
                    if (_this.showCurtain) {
                        _this.close();
                    }
                }));
                this._disposers.push(new _utils_Disposer__WEBPACK_IMPORTED_MODULE_6__["MultiDisposer"](disposers));
            }
            else {
                this._IOs.close.element.style.visibility = "hidden";
            }
        }
    };
    /**
     * Disables interactivity on parent chart.
     */
    Popup.prototype.disablePointers = function () {
        if (this.sprite) {
            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;
            this.sprite.interactionsEnabled = false;
        }
    };
    /**
     * Releases temporarily disabled pointers on parent chart.
     */
    Popup.prototype.releasePointers = function () {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this._spriteInteractionsEnabled)) {
            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;
            this._spriteInteractionsEnabled = undefined;
        }
    };
    /**
     * Sets screen reader related settings.
     */
    Popup.prototype.applyReaderSettings = function () {
        this.elements.wrapper.setAttribute("aria-label", this.readerTitle);
    };
    /**
     * Copies all properties and related data from different element.
     *
     * @param {this} object Source element
     */
    Popup.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.container = source.container;
        this.sprite = source.sprite;
        this.classPrefix = source.classPrefixRaw;
        this.content = source.content;
        this.title = source.title;
        this.readerTitle = source.readerTitle;
        this.defaultStyles = source.defaultStyles;
        this.showCurtain = source.showCurtain;
        this.align = source.align;
        this.verticalAlign = source.verticalAlign;
        this.left = source.left;
        this.right = source.right;
        this.top = source.top;
        this.bottom = source.bottom;
        this.adapter.copyFrom(source.adapter);
    };
    return Popup;
}(_Base__WEBPACK_IMPORTED_MODULE_3__["BaseObjectEvents"]));

//# sourceMappingURL=Popup.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PopupCSS.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/PopupCSS.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");



var rules = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
/**
 * Default CSS for Popup.
 *
 * @ignore Exclude from docs
 * @param  {string}     prefix  Prefix for CSS classes
 * @return {IDisposer}          Disposer for the CSS definition
 */
/* harmony default export */ __webpack_exports__["default"] = (function (prefix) {
    if (!prefix) {
        prefix = "ampopup";
    }
    var counter = rules.insertKeyIfEmpty(prefix, function () {
        var disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MultiDisposer"]([
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + prefix, {
                //"width": "100%",
                //"height": "100%",
                "overflow": "visible",
                "position": "absolute",
                "top": "0",
                "left": "0",
                "z-index": "2000"
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + prefix + "-curtain", {
                "width": "100%",
                "height": "100%",
                "position": "absolute",
                "top": "0",
                "left": "0",
                "z-index": "2001",
                "background": "#fff",
                "opacity": "0.5"
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + prefix + "-title", {
                "font-weight": "bold",
                "font-size": "120%"
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + prefix + "-content", {
                /*"width": "100%",
                "height": "100%",*/
                "padding": "1em 2em",
                "background": "rgb(255, 255, 255);",
                "background-color": "rgba(255, 255, 255, 0.8)",
                "display": "inline-block",
                "position": "absolute",
                "top": "0",
                "left": "0",
                "max-width": "90%",
                "max-height": "90%",
                "overflow": "auto",
                "z-index": "2002"
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + prefix + "-close", {
                "display": "block",
                "position": "absolute",
                "top": "0.3em",
                "right": "0.3em",
                "background-color": "rgb(100, 100, 100)",
                "background": "rgba(100, 100, 100, 0.1) url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyBoZWlnaHQ9IjUxMiIgdmVyc2lvbj0iMSIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHdpZHRoPSI1MTIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTQ0NS4yIDEwOS4ybC00Mi40LTQyLjRMMjU2IDIxMy42IDEwOS4yIDY2LjhsLTQyLjQgNDIuNEwyMTMuNiAyNTYgNjYuOCA0MDIuOGw0Mi40IDQyLjRMMjU2IDI5OC40bDE0Ni44IDE0Ni44IDQyLjQtNDIuNEwyOTguNCAyNTYiLz48L3N2Zz4=) no-repeat center",
                "background-size": "80%",
                "width": "1.2em",
                "height": "1.2em",
                "cursor": "pointer"
            }),
        ]);
        return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["CounterDisposer"](function () {
            rules.removeKey(prefix);
            disposer.dispose();
        });
    });
    return counter.increment();
});
//# sourceMappingURL=PopupCSS.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Preloader.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Preloader.js ***!
  \*******************************************************************************/
/*! exports provided: Preloader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Preloader", function() { return Preloader; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Slice */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js");
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Preloader module.
 *
 * Preloader is a progress indicator.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A class used to draw and display progress indicator.
 *
 * @see {@link IPreloaderEvents} for a list of available events
 * @see {@link IPreloaderAdapters} for a list of available Adapters
 */
var Preloader = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Preloader, _super);
    /**
     * Constructor
     */
    function Preloader() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "Preloader";
        // Set dimensions
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_2__["InterfaceColorSet"]();
        // Create main container
        var sliceContainer = _this.createChild(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        sliceContainer.shouldClone = false;
        // Add background (100%) slice
        var backgroundSlice = sliceContainer.createChild(_Slice__WEBPACK_IMPORTED_MODULE_3__["Slice"]);
        backgroundSlice.shouldClone = false;
        backgroundSlice.radius = 53;
        backgroundSlice.arc = 360;
        backgroundSlice.fill = interfaceColors.getFor("fill");
        backgroundSlice.fillOpacity = 0.8;
        backgroundSlice.innerRadius = 42;
        backgroundSlice.isMeasured = false;
        _this.backgroundSlice = backgroundSlice;
        // Add progress slice
        var progressSlice = sliceContainer.createChild(_Slice__WEBPACK_IMPORTED_MODULE_3__["Slice"]);
        progressSlice.shouldClone = false;
        progressSlice.radius = 50;
        progressSlice.innerRadius = 45;
        progressSlice.fill = interfaceColors.getFor("alternativeBackground");
        progressSlice.fillOpacity = 0.2;
        progressSlice.isMeasured = false;
        _this.progressSlice = progressSlice;
        // Add text label element
        var label = sliceContainer.createChild(_Label__WEBPACK_IMPORTED_MODULE_4__["Label"]);
        label.shouldClone = false;
        label.horizontalCenter = "middle";
        label.verticalCenter = "middle";
        label.isMeasured = false;
        label.fill = interfaceColors.getFor("text");
        label.align = "center";
        label.valign = "middle";
        label.fillOpacity = 0.4;
        _this.label = label;
        // Set defaults
        _this.background.opacity = 1;
        _this.background.fill = interfaceColors.getFor("background");
        _this.contentAlign = "center";
        _this.contentValign = "middle";
        _this.delay = 500;
        // Create hidden state
        var hiddenState = _this.states.create("hidden");
        hiddenState.properties.opacity = 0;
        // Hide by default
        _this.visible = false;
        _this.hide(0);
        _this.__disabled = true;
        // Make it disposable
        // @todo Maybe it's enough to just dispose `sliceContainer`?
        _this._disposers.push(_this.backgroundSlice);
        _this._disposers.push(_this.progressSlice);
        _this._disposers.push(_this.label);
        _this._disposers.push(sliceContainer);
        return _this;
    }
    Object.defineProperty(Preloader.prototype, "progress", {
        /**
         * @return {number} Progress (0-1)
         */
        get: function () {
            return this.getPropertyValue("progress");
        },
        /**
         * Current preload progress. (0-1)
         *
         * * 0 - 0%
         * * 0.5 - 50%
         * * 1 - 100%
         *
         * Setting this to a value less than 1, will automatically reveal the
         * preloader, while setting it to 1 (100%) will hide it.
         *
         * @param {number} value Progress (0-1)
         */
        set: function (value) {
            var _this = this;
            this.__disabled = false;
            this.validateLayout(); // show not in center without this
            this.setPropertyValue("progress", value);
            /*if (!this.visible && value == 1) {
                return;
            }*/
            this.progressSlice.arc = 360 * value;
            if (this.label) {
                this.label.text = Math.round(value * 100) + "%";
            }
            if (value >= 1) {
                // Cancel the timeout
                if (this._started) {
                    this._started = undefined;
                }
                // TODO remove closure ?
                _Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].events.once("enterframe", function () {
                    var animation = _this.hide();
                    if (animation && !animation.isFinished()) {
                        animation.events.once("animationended", function () {
                            _this.__disabled = true;
                        });
                    }
                    else {
                        _this.__disabled = true;
                    }
                });
                this.interactionsEnabled = false;
                this.setPropertyValue("progress", 0);
            }
            else if (value > 0) {
                if (this.delay) {
                    if (!this._started) {
                        this._started = new Date().getTime();
                    }
                    else if ((this._started + this.delay) >= new Date().getTime()) {
                        this.__disabled = false;
                        this.show();
                        this.interactionsEnabled = true;
                    }
                }
                else {
                    this.__disabled = false;
                    this.show();
                    this.interactionsEnabled = true;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Preloader.prototype, "delay", {
        /**
         * @return {number} Delay (ms)
         */
        get: function () {
            return this.getPropertyValue("delay");
        },
        /**
         * Delay display of preloader by X milliseconds.
         *
         * When loading starts (`progress` is set to <1) and finishes (`progress` is
         * set to 1) before `delay` ms, the loader is never shown.
         *
         * This is used to avoid brief flashing of the preload for very quick loads.
         *
         * @default 1000
         * @param {number}  value  Delay (ms)
         */
        set: function (value) {
            this.setPropertyValue("delay", value);
        },
        enumerable: true,
        configurable: true
    });
    return Preloader;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

//# sourceMappingURL=Preloader.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js ***!
  \*******************************************************************************/
/*! exports provided: Rectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return Rectangle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Functionality for drawing rectangles.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a rectangle.
 *
 * @see {@link IRectangleEvents} for a list of available events
 * @see {@link IRectangleAdapters} for a list of available Adapters
 */
var Rectangle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Rectangle, _super);
    /**
     * Constructor
     * * Creates a `<rect>` element
     * * Creates default state
     */
    function Rectangle() {
        var _this = _super.call(this) || this;
        _this.className = "Rectangle";
        _this.element = _this.paper.add("rect");
        //this.pixelPerfect = false;
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Rectangle.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var precision = this._positionPrecision;
        if (this.pixelPerfect) {
            precision = 0;
        }
        var w = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](this.innerWidth, precision);
        var h = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](this.innerHeight, precision);
        this.element.attr({
            "width": w,
            "height": h
        });
    };
    /**
     * Measures the element.
     *
     * @ignore Exclude from docs
     */
    Rectangle.prototype.measureElement = function () {
    };
    Object.defineProperty(Rectangle.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         * @type {IRectangle}
         */
        get: function () {
            if (this.definedBBox) {
                return this.definedBBox;
            }
            if (this.isMeasured) {
                return {
                    x: 0,
                    y: 0,
                    width: this.innerWidth,
                    height: this.innerHeight
                };
            }
            else {
                return { x: 0, y: 0, width: 0, height: 0 };
            }
        },
        enumerable: true,
        configurable: true
    });
    return Rectangle;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Rectangle"] = Rectangle;
//# sourceMappingURL=Rectangle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js ***!
  \**********************************************************************************/
/*! exports provided: ResizeButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeButton", function() { return ResizeButton; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Resize button module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a draggable resize/grip button.
 *
 * @see {@link IResizeButtonEvents} for a list of available events
 * @see {@link IResizeButtonAdapters} for a list of available Adapters
 */
var ResizeButton = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ResizeButton, _super);
    /**
     * Constructor
     */
    function ResizeButton() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "ResizeButton";
        // Set defaults
        _this.orientation = "horizontal";
        _this.layout = "absolute";
        _this.horizontalCenter = "middle";
        _this.verticalCenter = "middle";
        _this.draggable = true;
        _this.padding(8, 8, 8, 8);
        _this.background.cornerRadius(20, 20, 20, 20);
        // Create an icon
        var icon = new _Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]();
        icon.element = _this.paper.add("path");
        var path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"]({ x: -2, y: -6 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"]({ x: -2, y: 6 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"]({ x: 2, y: -6 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"]({ x: 2, y: 6 });
        icon.path = path;
        icon.pixelPerfect = true;
        icon.padding(0, 4, 0, 4);
        icon.stroke = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]().getFor("alternativeText");
        icon.strokeOpacity = 0.7;
        //icon.align = "center";
        //icon.valign = "middle";
        _this.icon = icon;
        _this.label.dispose();
        _this.label = undefined;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ResizeButton.prototype, "orientation", {
        /**
         * Use for setting of direction (orientation) of the resize button.
         *
         * Available options: "horizontal", "vertical".
         *
         * @param {Orientation} value Orientation
         */
        set: function (value) {
            var icon = this.icon;
            if (icon) {
                if (value == "horizontal") {
                    icon.rotation = 0;
                }
                else {
                    icon.rotation = -90;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return ResizeButton;
}(_Button__WEBPACK_IMPORTED_MODULE_1__["Button"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["ResizeButton"] = ResizeButton;
//# sourceMappingURL=ResizeButton.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js ***!
  \**************************************************************************************/
/*! exports provided: RoundedRectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoundedRectangle", function() { return RoundedRectangle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Rounded rectangle module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a rectangle with rounded corners.
 *
 * @see {@link IRoundedRectangleEvents} for a list of available events
 * @see {@link IRoundedRectangleAdapters} for a list of available Adapters
 */
var RoundedRectangle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RoundedRectangle, _super);
    /**
     * Constructor
     */
    function RoundedRectangle() {
        var _this = _super.call(this) || this;
        _this.className = "RoundedRectangle";
        _this.element = _this.paper.add("path");
        //this.pixelPerfect = false;
        _this.cornerRadius(3, 3, 3, 3);
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    RoundedRectangle.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var w = this.innerWidth;
        var h = this.innerHeight;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](w) && _utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](h)) {
            var maxcr = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["min"](Math.abs(w / 2), Math.abs(h / 2));
            var crtl = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["fitToRange"](this.cornerRadiusTopLeft, 0, maxcr);
            var crtr = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["fitToRange"](this.cornerRadiusTopRight, 0, maxcr);
            var crbr = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["fitToRange"](this.cornerRadiusBottomRight, 0, maxcr);
            var crbl = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["fitToRange"](this.cornerRadiusBottomLeft, 0, maxcr);
            var lineT = "M" + crtl + ",0 L" + (w - crtr) + ",0";
            var lineB = " L" + crbl + "," + h;
            var lineL = " L0," + crtl;
            var lineR = " L" + w + "," + (h - crbr);
            var arcTR = " a" + crtr + "," + crtr + " 0 0 1 " + crtr + "," + crtr;
            var arcBR = " a" + crbr + "," + crbr + " 0 0 1 -" + crbr + "," + crbr;
            var arcBL = " a" + crbl + "," + crbl + " 0 0 1 -" + crbl + ",-" + crbl;
            var arcTL = " a" + crtl + "," + crtl + " 0 0 1 " + crtl + ",-" + crtl;
            var path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL + " Z";
            this.path = path;
        }
    };
    /**
     * Sets radius for all four corners at ones.
     *
     * All numbers are in pixels.
     *
     * @param {number}  tl  Top-left corner
     * @param {number}  tr  Top-right corner
     * @param {number}  bl  Bottom-left corner
     * @param {number}  br  Bottom-right corner
     */
    RoundedRectangle.prototype.cornerRadius = function (tl, tr, bl, br) {
        this.cornerRadiusTopLeft = tl;
        this.cornerRadiusTopRight = tr;
        this.cornerRadiusBottomLeft = bl;
        this.cornerRadiusBottomRight = br;
    };
    Object.defineProperty(RoundedRectangle.prototype, "cornerRadiusTopLeft", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadiusTopLeft");
        },
        /**
         * Radius of the top-left corner in pixels.
         *
         * @default 3
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadiusTopLeft", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoundedRectangle.prototype, "cornerRadiusTopRight", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadiusTopRight");
        },
        /**
         * Radius of the top-right corner in pixels.
         *
         * @default 3
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadiusTopRight", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoundedRectangle.prototype, "cornerRadiusBottomRight", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadiusBottomRight");
        },
        /**
         * Radius of the bottom-right corner in pixels.
         *
         * @default 3
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadiusBottomRight", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoundedRectangle.prototype, "cornerRadiusBottomLeft", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadiusBottomLeft");
        },
        /**
         * Radius of the bottom-left corner in pixels.
         *
         * @default 3
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadiusBottomLeft", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Measures the element.
     *
     * @ignore Exclude from docs
     */
    RoundedRectangle.prototype.measureElement = function () {
    };
    Object.defineProperty(RoundedRectangle.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         * @type {IRectangle}
         */
        get: function () {
            if (this.definedBBox) {
                return this.definedBBox;
            }
            if (this.isMeasured) {
                return {
                    x: 0,
                    y: 0,
                    width: this.innerWidth,
                    height: this.innerHeight
                };
            }
            else {
                return { x: 0, y: 0, width: 0, height: 0 };
            }
        },
        enumerable: true,
        configurable: true
    });
    return RoundedRectangle;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["RoundedRectangle"] = RoundedRectangle;
//# sourceMappingURL=RoundedRectangle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js ***!
  \*******************************************************************************/
/*! exports provided: Scrollbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scrollbar", function() { return Scrollbar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _elements_ResizeButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/ResizeButton */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js");
/* harmony import */ var _elements_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Keyboard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * Provides functionality used to build scrollbars.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */














;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Scrollbar is a generic control allowing to select a range of values or pan
 * the selection.
 *
 * @see {@link IScrollbarEvents} for a list of available events
 * @see {@link IScrollbarAdapters} for a list of available Adapters
 */
var Scrollbar = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Scrollbar, _super);
    /**
     * Construtor
     */
    function Scrollbar() {
        var _this = _super.call(this) || this;
        /**
         * A value of previously selected lower value, used for doubleclick function.
         *
         * @type {number}
         */
        _this._prevStart = 0;
        /**
         * A value of previously selected upper value, used for doubleclick function.
         *
         * @type {number}
         */
        _this._prevEnd = 1;
        /**
         * Indicates if the Scrollbar is currently "busy" (animating and or
         * performing zoom by user interaction).
         *
         * @type {boolean}
         */
        _this._isBusy = false;
        /**
         * [_skipRangeEvents description]
         *
         * @todo Description
         * @type {boolean}
         */
        _this._skipRangeEvents = false;
        /**
         * Update the selection when dragging the grips.
         *
         * If set to `false` selection will be updated only when the grip is
         * released.
         *
         * @default true
         * @type {boolean}
         */
        _this.updateWhileMoving = true;
        _this.className = "Scrollbar";
        _this.minHeight = 12;
        _this.minWidth = 12;
        _this.animationDuration = 0;
        _this.animationEasing = _utils_Ease__WEBPACK_IMPORTED_MODULE_12__["cubicOut"];
        _this.margin(10, 10, 10, 10);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]();
        // background is also container as it might contain graphs, grid, etc
        var background = _this.background;
        background.cornerRadius(10, 10, 10, 10);
        background.fill = interfaceColors.getFor("fill");
        background.fillOpacity = 0.5;
        _this.startGrip = new _elements_ResizeButton__WEBPACK_IMPORTED_MODULE_2__["ResizeButton"]();
        _this.endGrip = new _elements_ResizeButton__WEBPACK_IMPORTED_MODULE_2__["ResizeButton"]();
        // Default orientation...
        // ... is set in `applyInternalDefaults()` because it accesses `language`
        // and should only be started to access when parent is set
        // Set events
        _this.events.on("transformed", _this.updateThumb, _this);
        // Initial positions
        _this.start = 0;
        _this.end = 1;
        // Set roles
        _this.role = "scrollbar";
        _this.thumb.role = "slider";
        _this.thumb.readerLive = "polite";
        _this.startGrip.role = "slider";
        _this.endGrip.role = "slider";
        // otherwise range changed wont' be registered
        _this.events.once("inited", function () {
            _this._previousStart = undefined;
            _this.dispatchRangeChange();
        });
        _this.hideGrips = false;
        _this.orientation = "horizontal";
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Scrollbar.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Set screen reader tetxt accordingly
        if (this.orientation === "horizontal") {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.readerTitle)) {
                this.readerTitle = this.language.translate("Use TAB to select grip buttons or left and right arrows to change selection");
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.thumb.readerDescription)) {
                this.thumb.readerDescription = this.language.translate("Use left and right arrows to move selection");
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.startGrip.readerDescription)) {
                this.startGrip.readerDescription = this.language.translate("Use left and right arrows to move left selection");
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.endGrip.readerDescription)) {
                this.endGrip.readerDescription = this.language.translate("Use left and right arrows to move right selection");
            }
        }
        else {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.readerTitle)) {
                this.readerTitle = this.language.translate("Use TAB select grip buttons or up and down arrows to change selection");
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.thumb.readerDescription)) {
                this.thumb.readerDescription = this.language.translate("Use up and down arrows to move selection");
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.startGrip.readerDescription)) {
                this.startGrip.readerDescription = this.language.translate("Use up and down arrows to move upper selection");
            }
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.endGrip.readerDescription)) {
                this.endGrip.readerDescription = this.language.translate("Use up and down arrows to move lower selection");
            }
        }
    };
    /**
     * Validates the layout of the scrollbar's elements.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.validateLayout = function () {
        this.updateSize();
        _super.prototype.validateLayout.call(this);
        // when size changes, need to update extremes
        this.updateExtremes();
    };
    /**
     * Update background for the scrollbar.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.processBackground = function () {
        _super.prototype.processBackground.call(this);
        var background = this.background;
        background.clickable = true;
        background.events.on("hit", this.handleBgHit, this);
    };
    /**
     * Zooms to the particular place when clicked/tapped on the scrollbar
     * background.
     *
     * @ignore Exclude from docs
     * @param {ISpriteEvents["hit"]}  event  Event
     */
    Scrollbar.prototype.handleBgHit = function (event) {
        this.makeBusy();
        var point = event.spritePoint;
        point = _utils_Utils__WEBPACK_IMPORTED_MODULE_14__["spritePointToSprite"](point, this.background, this);
        var thumb = this.thumb;
        if (this.orientation == "horizontal") {
            var thumbX = point.x - thumb.pixelWidth / 2;
            thumbX = _utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](thumbX, 0, this.innerWidth - thumb.pixelWidth);
            this._thumbAnimation = thumb.animate({ property: "x", to: thumbX }, this.animationDuration, this.animationEasing);
        }
        else {
            var thumbY = point.y - thumb.pixelHeight / 2;
            thumbY = _utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](thumbY, 0, this.innerHeight - thumb.pixelHeight);
            this._thumbAnimation = thumb.animate({ property: "y", to: thumbY }, this.animationDuration, this.animationEasing);
        }
        if (this.animationDuration > 0) {
            this._thumbAnimation.events.on("animationended", this.makeUnbusy, this);
        }
        else {
            this._thumb.validate();
            this.makeUnbusy();
        }
    };
    /**
     * Set scrollbar as busy. (currently zooming)
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.makeBusy = function () {
        this._isBusy = true;
        this._skipRangeEvents = false;
        if (this._unbusyTimeout) {
            this.removeDispose(this._unbusyTimeout);
        }
        this._unbusyTimeout = undefined;
        this.stopAnimations();
    };
    /**
     * Stops all animations, currently playing for the scrollbar.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.stopAnimations = function () {
        if (this._thumbAnimation) {
            this._thumbAnimation.stop(true);
        }
        if (this._zoomAnimation) {
            this._zoomAnimation.stop(true);
        }
    };
    /**
     * Cancels "busy" status of the Scrollbar.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.makeUnbusy = function () {
        /**
         * We cannot make Scrollbar not busy right after release, because then axes
         * will take over controll and Scrollbar will start to animate.
         * Theorethically, it's not right to set timeout by `animationDuration`,
         * however we can not know all the durations of elements we scroll, so we
         * assume that animation duration will be the same as
         * `interpolationDuration` or `rangeChange` duration.
         */
        this._unbusyTimeout = this.setTimeout(this.makeUnbusyReal.bind(this), this.animationDuration * 1.1);
    };
    /**
     * [makeUnbusyReal description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.makeUnbusyReal = function () {
        this._usingGrip = undefined;
        this._isBusy = false;
        if (!this.updateWhileMoving) {
            this.dispatchRangeChange();
        }
    };
    /**
     * Disptatches rangechanged event if it really changed
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.dispatchRangeChange = function () {
        if (this._previousEnd != this.end || this._previousStart != this.start) {
            this._previousStart = this.start;
            this._previousEnd = this.end;
            this.dispatch("rangechanged");
        }
    };
    /**
     * Updates the "thumb" element. A draggable element between the grips.
     */
    Scrollbar.prototype.updateThumb = function () {
        if (!this.parent) {
            return;
        }
        var thumb = this.thumb;
        var start = this.start;
        var end = this.end;
        var startGrip = this.startGrip;
        var endGrip = this.endGrip;
        if (this.orientation == "horizontal") {
            var innerWidth_1 = this.innerWidth;
            thumb.width = innerWidth_1 * (end - start);
            thumb.maxX = innerWidth_1 - thumb.pixelWidth;
            thumb.x = start * innerWidth_1;
            startGrip.moveTo({ x: thumb.pixelX, y: 0 }, undefined, undefined, true); // overrides dragging
            endGrip.moveTo({ x: thumb.pixelX + thumb.pixelWidth, y: 0 }, undefined, undefined, true);
            startGrip.readerTitle = this.language.translate("From %1", undefined, this.adapter.apply("positionValue", {
                value: Math.round(start * 100) + "%",
                position: start
            }).value);
            endGrip.readerTitle = this.language.translate("To %1", undefined, this.adapter.apply("positionValue", {
                value: Math.round(end * 100) + "%",
                position: end
            }).value);
        }
        else {
            var innerHeight_1 = this.innerHeight;
            thumb.height = innerHeight_1 * (end - start);
            thumb.maxY = innerHeight_1 - thumb.pixelHeight;
            thumb.y = (1 - end) * innerHeight_1;
            startGrip.moveTo({ x: 0, y: thumb.pixelY + thumb.pixelHeight }, undefined, undefined, true);
            endGrip.moveTo({ x: 0, y: thumb.pixelY }, undefined, undefined, true);
            startGrip.readerTitle = this.language.translate("To %1", undefined, this.adapter.apply("positionValue", {
                value: Math.round((1 - start) * 100) + "%",
                position: (1 - start)
            }).value);
            endGrip.readerTitle = this.language.translate("From %1", undefined, this.adapter.apply("positionValue", {
                value: Math.round((1 - end) * 100) + "%",
                position: (1 - end)
            }).value);
        }
        // Add accessibility
        thumb.readerTitle = this.language.translate("From %1 to %2", undefined, this.adapter.apply("positionValue", {
            value: Math.round(start * 100) + "%",
            position: start
        }).value, this.adapter.apply("positionValue", {
            value: Math.round(end * 100) + "%",
            position: end
        }).value);
        if (!this._skipRangeEvents && this.updateWhileMoving) {
            this.dispatchRangeChange();
        }
    };
    /**
     * Updates extremes of the scrollbar.
     */
    Scrollbar.prototype.updateExtremes = function () {
        var orientation = this.orientation;
        var minX = 0;
        var minY = 0;
        var maxX = 0;
        var maxY = 0;
        if (orientation == "horizontal") {
            maxX = this.innerWidth;
            minY = maxY = this.innerHeight / 2;
        }
        else {
            maxY = this.innerHeight;
            minX = maxX = this.innerWidth / 2;
        }
        var startGrip = this.startGrip;
        startGrip.minX = minX;
        startGrip.maxX = maxX;
        startGrip.minY = minY;
        startGrip.maxY = maxY;
        var endGrip = this.endGrip;
        endGrip.minX = minX;
        endGrip.maxX = maxX;
        endGrip.minY = minY;
        endGrip.maxY = maxY;
        var thumb = this.thumb;
        thumb.minX = minX;
        thumb.maxX = maxX;
        thumb.minY = minY;
        thumb.maxY = maxY;
    };
    /**
     * Updates size of the scrollbar.
     */
    Scrollbar.prototype.updateSize = function () {
        var orientation = this.orientation;
        var startGrip = this.startGrip;
        if (startGrip) {
            startGrip.orientation = orientation;
        }
        if (this.endGrip) {
            this.endGrip.orientation = orientation;
        }
        var thumb = this.thumb;
        if (thumb) {
            if (orientation == "horizontal") {
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this._pixelWidth)) {
                    this.width = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                }
                // this teorethically might be wrong, if user indeed sets height of a horizontal scrollbar in percent
                // however without this height might be equal to 100% if previous orientation was set to horizontal
                // so this is ok solution, in case user really wants to have scrollbar height set in percent,
                // he should do this after orientation.
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.percentHeight)) {
                    this.height = this.minHeight;
                }
                thumb.height = this.innerHeight;
                thumb.verticalCenter = "middle";
                thumb.horizontalCenter = "left";
            }
            else {
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this._pixelHeight)) {
                    this.height = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                }
                // same as above with percentHeight
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.percentWidth)) {
                    this.width = this.minWidth;
                }
                thumb.width = this.innerWidth;
                thumb.verticalCenter = "top";
                thumb.horizontalCenter = "middle";
            }
        }
    };
    Object.defineProperty(Scrollbar.prototype, "start", {
        /**
         * @return {number} Position (0-1)
         */
        get: function () {
            return Math.min(this.getPosition(this._start), this.getPosition(this._end));
        },
        /**
         * ==========================================================================
         * POSITIONS
         * ==========================================================================
         * @hidden
         */
        /**
         * Relative position (0-1) of the start grip.
         *
         * @param {number}  position  Position (0-1)
         */
        set: function (position) {
            if (!this._isBusy) {
                this.__start = position;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "__start", {
        /**
         * @return {number} [description]
         */
        get: function () {
            return this._start;
        },
        /**
         * [__start description]
         *
         * @todo Description
         * @param {number} position [description]
         */
        set: function (position) {
            this._start = this.getPosition(position);
            this.updateThumb();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "end", {
        /**
         * @return {number} Position (0-1)
         */
        get: function () {
            return Math.max(this.getPosition(this._start), this.getPosition(this._end));
        },
        /**
         * Relative position (0-1) of the end grip.
         *
         * @param {number}  position  Position (0-1)
         */
        set: function (position) {
            if (!this._isBusy) {
                this.__end = position;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "__end", {
        /**
         * @return {number} [description]
         */
        get: function () {
            return this._end;
        },
        /**
         * [__end description]
         *
         * @todo Description
         * @param {number} position [description]
         */
        set: function (position) {
            this._end = this.getPosition(position);
            this.updateThumb();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "range", {
        /**
         * Current selection range.
         *
         * @readonly
         * @return {IRange} Range
         */
        get: function () {
            return { start: this.start, end: this.end, priority: this._usingGrip };
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Disables range change events.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.skipRangeEvents = function () {
        if (!this._isBusy) {
            this._skipRangeEvents = true;
        }
    };
    /**
     * [fixRange description]
     *
     * @todo Description
     * @ignore Exclude from docs
     * @param {IRange}  range  Range
     */
    Scrollbar.prototype.fixRange = function (range) {
        if (range.start != _utils_Math__WEBPACK_IMPORTED_MODULE_11__["round"](this._start, 2) || range.end != _utils_Math__WEBPACK_IMPORTED_MODULE_11__["round"](this._end, 2)) {
            this._start = range.start;
            this._end = range.end;
            this._skipRangeEvents = true;
            this.updateThumb();
            this._skipRangeEvents = false;
            this.thumb.validate();
            this.thumb.background.validate();
        }
    };
    /**
     * [getPosition description]
     *
     * @todo Description
     * @param  {number}  position  [description]
     * @return {number}            [description]
     */
    Scrollbar.prototype.getPosition = function (position) {
        return _utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](_utils_Math__WEBPACK_IMPORTED_MODULE_11__["round"](position, 4), 0, 1);
    };
    Object.defineProperty(Scrollbar.prototype, "orientation", {
        /**
         * @return {Orientation} Orientation
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
         * ==========================================================================
         * MISC
         * ==========================================================================
         * @hidden
         */
        /**
         * Orientation of the scrollbar.
         *
         * Available options: "horizontal" (default) and "vertical".
         *
         * @default "horizontal"
         * @param {Orientation}  value  Orientation
         */
        set: function (value) {
            if (this.setPropertyValue("orientation", value)) {
                // Set mouse cursors and screen reader tetxt accordingly
                if (value === "horizontal") {
                    // Mouse styles
                    this.startGrip.cursorOverStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].horizontalResize;
                    this.endGrip.cursorOverStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].horizontalResize;
                    // Reader text
                    /*this.readerTitle = this.language.translate("Use TAB to select grip buttons or left and right arrows to change selection");
                    this.thumb.readerDescription = this.language.translate("Use left and right arrows to move selection");
                    this.startGrip.readerDescription = this.language.translate("Use left and right arrows to move left selection");
                    this.endGrip.readerDescription = this.language.translate("Use left and right arrows to move right selection");*/
                }
                else {
                    // Mouse styles
                    this.startGrip.cursorOverStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].verticalResize;
                    this.endGrip.cursorOverStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].verticalResize;
                    // Reader text
                    /*this.readerTitle = this.language.translate("Use TAB select grip buttons or up and down arrows to change selection");
                    this.thumb.readerDescription = this.language.translate("Use up and down arrows to move selection");
                    this.startGrip.readerDescription = this.language.translate("Use up and down arrows to move upper selection");
                    this.endGrip.readerDescription = this.language.translate("Use up and down arrows to move lower selection");*/
                }
                this.updateByOrientation();
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    Scrollbar.prototype.updateByOrientation = function () {
    };
    Object.defineProperty(Scrollbar.prototype, "startGrip", {
        /**
         * @return {ResizeButton} Grip element
         */
        get: function () {
            return this._startGrip;
        },
        /**
         * ==========================================================================
         * GRIPS
         * ==========================================================================
         * @hidden
         */
        /**
         * Start grip element. (button)
         *
         * @param {ResizeButton}  button  Grip element
         */
        set: function (button) {
            if (this._startGrip) {
                this.removeDispose(this._startGrip);
            }
            this._startGrip = button;
            this.processGrip(button);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "endGrip", {
        /**
         * @return {ResizeButton} Grip element
         */
        get: function () {
            return this._endGrip;
        },
        /**
         * End grip element. (button)
         *
         * @param {ResizeButton}  button  Grip element
         */
        set: function (button) {
            if (this._endGrip) {
                this.removeDispose(this._endGrip);
            }
            this._endGrip = button;
            this.processGrip(button);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates the grip button with properties and events.
     *
     * @ignore Exclude from docs
     * @param {ResizeButton} button Grip button
     */
    Scrollbar.prototype.processGrip = function (button) {
        button.parent = this;
        button.isMeasured = false;
        button.focusable = true;
        // Set button defaults
        button.showSystemTooltip = true;
        button.zIndex = 100;
        button.events.on("drag", this.handleGripDrag, this);
        button.events.on("dragstop", this.makeUnbusy, this);
        button.events.on("down", this.makeBusy, this);
        this._disposers.push(button);
    };
    /**
     * Updates positions of related elements after grip element is dragged.
     *
     * @ignore Exclude from docs
     * @param {AMEvent<ResizeButton, ISpriteEvents>["drag"]}  event  Event
     */
    Scrollbar.prototype.handleGripDrag = function (event) {
        this.makeBusy();
        if (event.target === this._startGrip) {
            this._usingGrip = "start";
        }
        else {
            this._usingGrip = "end";
        }
        if (this.orientation == "horizontal") {
            this._start = this.startGrip.pixelX / this.innerWidth;
            this._end = this.endGrip.pixelX / this.innerWidth;
        }
        else {
            this._start = 1 - this.startGrip.pixelY / this.innerHeight;
            this._end = 1 - this.endGrip.pixelY / this.innerHeight;
        }
        this.updateThumb();
    };
    Object.defineProperty(Scrollbar.prototype, "thumb", {
        /**
         * @return {RoundedRectangle} Thumb element
         */
        get: function () {
            if (!this._thumb) {
                // Create scrollbar controls (setters will handle adding disposers)
                var thumb = new _elements_Button__WEBPACK_IMPORTED_MODULE_3__["Button"]();
                thumb.background.cornerRadius(10, 10, 10, 10);
                thumb.padding(0, 0, 0, 0);
                this.thumb = thumb;
            }
            return this._thumb;
        },
        /**
         * A "thumb" element.
         *
         * It's a draggable square space between the grips, that can be used to
         * pan the seleciton.
         *
         * @param {RoundedRectangle}  thumb  Thumb element
         */
        set: function (thumb) {
            var _this = this;
            if (thumb) {
                if (this._thumb) {
                    this.removeDispose(this._thumb);
                }
                this._thumb = thumb;
                thumb.parent = this;
                thumb.isMeasured = false;
                thumb.inert = true;
                thumb.draggable = true;
                thumb.clickable = true;
                thumb.hoverable = true;
                thumb.focusable = true;
                thumb.zIndex = 0;
                // TODO remove closures ?
                // Add events
                // Add cursor styles to thumb
                thumb.cursorOverStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].grab;
                thumb.cursorDownStyle = _interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].grabbing;
                thumb.events.on("dragstart", this.makeBusy, this);
                thumb.events.on("dragstop", this.makeUnbusy, this);
                thumb.events.on("positionchanged", this.handleThumbPosition, this);
                thumb.events.on("sizechanged", this.handleThumbPosition, this);
                thumb.events.on("doublehit", this.handleDoubleClick, this);
                // Add event for space and ENTER to toggle full zoom out and back
                // (same as doubleclick)
                this._disposers.push(Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().body.events.on("keyup", function (ev) {
                    if (_utils_Keyboard__WEBPACK_IMPORTED_MODULE_8__["keyboard"].isKey(ev.event, ["space", "enter"]) && _this.thumb.isFocused) {
                        ev.event.preventDefault();
                        _this.handleDoubleClick();
                    }
                }));
                this._disposers.push(this._thumb);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Zooms-in and out the selection on double-click of the thumb.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.handleDoubleClick = function () {
        this.makeBusy();
        var newStart = 0;
        var newEnd = 1;
        if (this.start != 0 || this.end != 1) {
            this._prevStart = this.start;
            this._prevEnd = this.end;
        }
        else {
            newStart = this._prevStart;
            newEnd = this._prevEnd;
        }
        var zoomAnimation = this.animate([{ property: "__start", to: newStart }, { property: "__end", to: newEnd }], this.animationDuration, this.animationEasing);
        if (zoomAnimation && !zoomAnimation.isFinished()) {
            zoomAnimation.events.on("animationended", this.makeUnbusy, this);
            this._zoomAnimation = zoomAnimation;
        }
        else {
            this.makeUnbusy();
        }
    };
    /**
     * Updates positions of other elements when thumb is moved.
     *
     * @ignore Exclude from docs
     */
    Scrollbar.prototype.handleThumbPosition = function () {
        var thumb = this.thumb;
        if (this.orientation == "horizontal") {
            var innerWidth_2 = this.innerWidth;
            var w = thumb.innerWidth;
            var x = thumb.pixelX;
            this._start = x / innerWidth_2;
            this._end = (x + w) / innerWidth_2;
            this.updateThumb();
        }
        else {
            var innerHeight_2 = this.innerHeight;
            var h = thumb.innerHeight;
            var y = thumb.pixelY;
            this._start = 1 - (y + h) / innerHeight_2;
            this._end = 1 - y / innerHeight_2;
            this.updateThumb();
        }
    };
    /**
     * Creates a background element for the scrollbar.
     *
     * @ignore Exclude from docs
     * @return {RoundedRectangle} Background
     */
    Scrollbar.prototype.createBackground = function () {
        return new _elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_6__["RoundedRectangle"]();
    };
    Object.defineProperty(Scrollbar.prototype, "hideGrips", {
        /**
         * @return {boolean} Show only on hover?
         */
        get: function () {
            return this._hideGrips;
        },
        /**
         * Use this property to set whether grips should be always visible (`false`),
         * or they should just appear on scrollbar hover (`true`).
         *
         * @param {boolean}  value  Show only on hover?
         */
        set: function (value) {
            var _this = this;
            this._hideGrips = value;
            if (this._overDisposer) {
                this.removeDispose(this._overDisposer);
            }
            if (this._outDisposer) {
                this.removeDispose(this._outDisposer);
            }
            if (value) {
                this._overDisposer = this.events.on("over", function () {
                    _this.startGrip.show();
                    _this.endGrip.show();
                });
                this._outDisposer = this.events.on("out", function () {
                    _this.startGrip.hide();
                    _this.endGrip.hide();
                });
                this.startGrip.hide();
                this.endGrip.hide();
            }
            else {
                this.startGrip.show();
                this.endGrip.show();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "animationDuration", {
        /**
         * @return {PointerOrientation} Orientation
         */
        get: function () {
            return this.getPropertyValue("animationDuration");
        },
        /**
         * Duration in milliseconds of scrollbar animation (happens when user clicks on a background of a scrollbar)
         * @default 0
         * @param {number} value number
         */
        set: function (value) {
            this.setPropertyValue("animationDuration", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "animationEasing", {
        /**
         * @return {Function}
         */
        get: function () {
            return this.getPropertyValue("animationEasing");
        },
        /**
         * Animation easing function.
         * @todo: review description and default
         * @default $ease.cubicOut
         * @param {Function}  value (value: number) => number
         */
        set: function (value) {
            this.setPropertyValue("animationEasing", value);
        },
        enumerable: true,
        configurable: true
    });
    return Scrollbar;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_7__["registry"].registeredClasses["Scrollbar"] = Scrollbar;
//# sourceMappingURL=Scrollbar.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js ***!
  \***************************************************************************/
/*! exports provided: Slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Slice", function() { return Slice; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../rendering/fills/RadialGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js");
/**
 * Slice module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */








/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a wedged semi-circle - slice. Usually used for Pie/Donut charts.
 *
 * @see {@link ISliceEvents} for a list of available events
 * @see {@link ISliceAdapters} for a list of available Adapters
 */
var Slice = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Slice, _super);
    /**
     * Constructor
     */
    function Slice() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "Slice";
        // Set defaults
        _this.setPropertyValue("cornerRadius", 0);
        _this.setPropertyValue("startAngle", 0);
        _this.setPercentProperty("innerRadius", 0);
        _this.setPercentProperty("radius", 0);
        _this.setPropertyValue("arc", 0);
        _this.setPropertyValue("shiftRadius", 0);
        _this.strokeOpacity = 1;
        _this.setPropertyValue("layout", "none");
        // Create a slice wedge element
        _this.slice = _this.createChild(_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.slice.isMeasured = false;
        _this._disposers.push(_this.slice);
        //this.element.attr({ "stroke-linejoin": "round" });
        //this.element.attr({ "stroke-linecap": "round" });
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Slice.prototype.draw = function () {
        _super.prototype.draw.call(this);
        this.slice.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["arc"](this.startAngle, this.arc, this.radius, this.pixelInnerRadius, this.radiusY, this.cornerRadius, this.innerCornerRadius);
        this.slice.invalidate();
        this.shiftRadius = this.shiftRadius;
        if (this.realFill instanceof _rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_8__["RadialGradient"]) {
            this.updateGradient(this.realFill);
        }
        if (this.realStroke instanceof _rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_8__["RadialGradient"]) {
            this.updateGradient(this.realStroke);
        }
    };
    Slice.prototype.updateGradient = function (gradient) {
        gradient.element.attr({ "gradientUnits": "userSpaceOnUse" });
        gradient.element.attr({ "r": this.radius });
        gradient.cx = 0;
        gradient.cy = 0;
        gradient.element.attr({ radius: this.radius });
    };
    Object.defineProperty(Slice.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         * @type {IRectangle}
         */
        get: function () {
            if (this.definedBBox) {
                return this.definedBBox;
            }
            if (this.isMeasured) {
                var innerRect = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getArcRect"](this.startAngle, this.startAngle + this.arc, this.pixelInnerRadius);
                var outerRect = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getArcRect"](this.startAngle, this.startAngle + this.arc, this.radius);
                return _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getCommonRectangle"]([innerRect, outerRect]);
            }
            else {
                return { x: 0, y: 0, width: 0, height: 0 };
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "startAngle", {
        /**
         * @return {number} Angle (0-360)
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * The angle at which left edge of the slice is drawn. (0-360)
         *
         * 0 is to the right of the center.
         *
         * @param {number}  value  Angle (0-360)
         */
        set: function (value) {
            this.setPropertyValue("startAngle", _utils_Math__WEBPACK_IMPORTED_MODULE_4__["normalizeAngle"](value), true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "arc", {
        /**
         * @return {number} [description]
         */
        get: function () {
            return this.getPropertyValue("arc");
        },
        /**
         * [arc description]
         *
         * @todo Description
         * @param {number} value [description]
         */
        set: function (value) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](value)) {
                value = 0;
            }
            this.setPropertyValue("arc", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "radius", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            var radius = this.getPropertyValue("radius");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](radius)) {
                radius = 0;
            }
            return radius;
        },
        /**
         * Radius of the slice in pixels.
         *
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("radius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "radiusY", {
        /**
         * @return {number} Vertical radius (0-1)
         */
        get: function () {
            var value = this.getPropertyValue("radiusY");
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](value)) {
                value = this.radius;
            }
            return value;
        },
        /**
         * Vertical radius for creating skewed slices.
         *
         * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half
         * the `radius`.
         *
         * @param {number} value Vertical radius (0-1)
         */
        set: function (value) {
            this.setPropertyValue("radiusY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "innerRadius", {
        /**
         * @return {number | Percent} Radius (px or %)
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the slice for creating cut out (donut) slices.
         *
         * @default 0
         * @param {number | Percent}  value  Radius (px or %)
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "pixelInnerRadius", {
        /**
         * @return {number} Radius px
         */
        get: function () {
            return _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["relativeToValue"](this.innerRadius, this.radius);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "cornerRadius", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadius");
        },
        /**
         * Radius of slice's outer corners in pixels.
         *
         * @default 0
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "innerCornerRadius", {
        /**
         * @return {number} Radius (px)
         */
        get: function () {
            return this.getPropertyValue("innerCornerRadius");
        },
        /**
         * Radius of slice's inner corners in pixels.
         *
         * @default 0
         * @param {number}  value  Radius (px)
         */
        set: function (value) {
            this.setPropertyValue("innerCornerRadius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "shiftRadius", {
        /**
         * @return {number} [description]
         */
        get: function () {
            return this.getPropertyValue("shiftRadius");
        },
        /**
         * [shiftRadius description]
         *
         * 0-1
         *
         * @todo Description
         * @param {number} value [description]
         */
        set: function (value) {
            this.setPropertyValue("shiftRadius", value);
            this.dx = value * this.radius * this.ix;
            this.dy = value * this.radiusY * this.iy;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "ix", {
        /**
         * [ix description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @return {number} [description]
         */
        get: function () {
            return _utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](this.middleAngle);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "iy", {
        /**
         * [iy description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @return {number} [description]
         */
        get: function () {
            if (this.radius > 0) {
                return _utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](this.middleAngle);
            }
            else {
                return _utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](this.middleAngle);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "middleAngle", {
        /**
         * An angle of the slice's middle.
         *
         * @ignore Exclude from docs
         * @return {number} Angle
         */
        get: function () {
            return this.startAngle + this.arc / 2;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * X coordinate for the slice tooltip.
     *
     * @return {number} X
     */
    Slice.prototype.getTooltipX = function () {
        var value = this.getPropertyValue("tooltipX");
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](value)) {
            var innerRadius = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["relativeToValue"](this.innerRadius, this.radius);
            value = this.ix * (innerRadius + (this.radius - innerRadius) / 2);
        }
        return value;
    };
    /**
     * Y coordinate for the slice tooltip.
     *
     * @return {number} Y
     */
    Slice.prototype.getTooltipY = function () {
        var value = this.getPropertyValue("tooltipY");
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](value)) {
            var innerRadius = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["relativeToValue"](this.innerRadius, this.radius);
            value = this.iy * (innerRadius + (this.radius - innerRadius) / 2);
        }
        return value;
    };
    return Slice;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Slice"] = Slice;
//# sourceMappingURL=Slice.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Slider.js ***!
  \****************************************************************************/
/*! exports provided: Slider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Slider", function() { return Slider; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/elements/Scrollbar */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Slider is a scrollbar with just one selection grip.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a slider - a version of scrollbar with just one grip.
 *
 * @see {@link ISliderEvents} for a list of available events
 * @see {@link ISliderAdapters} for a list of available Adapters
 */
var Slider = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Slider, _super);
    /**
     * Constructor
     */
    function Slider() {
        var _this = _super.call(this) || this;
        _this.className = "Slider";
        _this.thumb.opacity = 0;
        _this.thumb.interactionsEnabled = false;
        _this.endGrip.opacity = 0;
        _this.endGrip.interactionsEnabled = false;
        _this.startGrip.events.on("drag", function () {
            _this.endGrip.x = _this.startGrip.x;
            _this.endGrip.y = _this.startGrip.y;
        });
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Slider.prototype, "__end", {
        /**
         * @return {number} [description]
         */
        get: function () {
            return this._start;
        },
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slider.prototype, "end", {
        /**
         * @return {number} [description]
         */
        get: function () {
            return this._start;
        },
        /**
         * Relative position (0-1) of the end grip.
         *
         * @param {number}  position  Position (0-1)
         */
        set: function (position) {
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slider.prototype, "start", {
        /**
         * @return {number} Position (0-1)
         */
        get: function () {
            return this._start;
        },
        /**
         * Relative position (0-1) of the start grip.
         *
         * @param {number}  position  Position (0-1)
         */
        set: function (position) {
            if (!this._isBusy) {
                this.__start = position;
            }
        },
        enumerable: true,
        configurable: true
    });
    return Slider;
}(_core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_1__["Scrollbar"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Slider"] = Slider;
//# sourceMappingURL=Slider.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js ***!
  \******************************************************************************/
/*! exports provided: TextLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextLink", function() { return TextLink; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * A module that defines Text element used to indicate links.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a text element with a link.
 *
 * @see {@link ITextLinkEvents} for a list of available events
 * @see {@link ITextLinkAdapters} for a list of available Adapters
 */
var TextLink = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TextLink, _super);
    /**
     * Constructor
     */
    function TextLink() {
        var _this = _super.call(this) || this;
        _this.className = "TextLink";
        _this.selectable = true;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
        _this.fill = interfaceColors.getFor("primaryButton").brighten(0.3);
        var hoverState = _this.states.create("hover");
        hoverState.properties.fill = interfaceColors.getFor("primaryButtonHover").brighten(0.3);
        var downState = _this.states.create("down");
        downState.properties.fill = interfaceColors.getFor("primaryButtonDown").brighten(0.3);
        _this.cursorOverStyle = _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_2__["MouseCursorStyle"].pointer;
        _this.applyTheme();
        return _this;
    }
    return TextLink;
}(_core_elements_Label__WEBPACK_IMPORTED_MODULE_1__["Label"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["TextLink"] = TextLink;
//# sourceMappingURL=TextLink.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js ***!
  \*****************************************************************************/
/*! exports provided: Tooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return Tooltip; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _PointedRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PointedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedRectangle.js");
/* harmony import */ var _elements_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _rendering_filters_DropShadowFilter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rendering/filters/DropShadowFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DropShadowFilter.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * Provides functionality used to creating and showing tooltips (balloons).
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Tooltip displays text and/or multimedia information in a balloon over chart
 * area.
 * @see {@link ITooltipEvents} for a list of available events
 * @see {@link ITooltipAdapters} for a list of available Adapters
 */
var Tooltip = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Tooltip, _super);
    /**
     * Constructor
     */
    function Tooltip() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Holds numeric boundary values. Calculated from the `boundingContainer`.
         *
         * @type {IRectangle}
         */
        _this._boundingRect = { x: -40000, y: -40000, width: 80000, height: 80000 };
        /**
         * Coordinates tooltip's pointer (stem) should point to.
         *
         * @type {IPoint}
         */
        _this._pointTo = { x: 0, y: 0 };
        /**
         * If set to `true` the pointer/stem of the Tooltip will not go outside
         * Tooltip's width or height depending on pointer's orientation.
         *
         * @default false
         * @type {boolean}
         */
        _this.fitPointerToBounds = false;
        /**
         * If tooltipOrientation is vertical, it can be drawn below or above point. We need to know this when solving overlapping
         *
         * @type "up" | "down"
         */
        _this._verticalOrientation = "up";
        _this.className = "Tooltip";
        _this.isMeasured = false;
        _this.getFillFromObject = true;
        _this.margin(5, 5, 5, 5);
        _this.defaultState.transitionDuration = 1;
        _this.hiddenState.transitionDuration = 1;
        // Create chrome/background
        var background = _this.background;
        background.interactionsEnabled = false;
        background.fillOpacity = 0.9;
        background.strokeWidth = 1;
        background.strokeOpacity = 1;
        background.stroke = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_5__["color"])("#ffffff");
        background.cornerRadius = 3;
        background.pointerLength = 6;
        background.pointerBaseWidth = 10;
        var dropShadow = new _rendering_filters_DropShadowFilter__WEBPACK_IMPORTED_MODULE_6__["DropShadowFilter"]();
        dropShadow.dy = 1;
        dropShadow.dx = 1;
        dropShadow.opacity = 0.5;
        background.filters.push(dropShadow);
        _this.autoTextColor = true;
        // Create text element
        var label = _this.createChild(_elements_Label__WEBPACK_IMPORTED_MODULE_3__["Label"]);
        label.shouldClone = false;
        _this.label = label;
        label.padding(7, 12, 6, 12);
        label.interactionsEnabled = false;
        label.horizontalCenter = "middle";
        label.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_5__["color"])("#ffffff");
        _this._disposers.push(label);
        _this.label.events.on("sizechanged", _this.drawBackground, _this);
        _this.label.zIndex = 1; // @todo remove this line when bg sorting is solved
        // Set defaults
        _this.pointerOrientation = "vertical";
        _this.animationDuration = 0;
        _this.animationEasing = _utils_Ease__WEBPACK_IMPORTED_MODULE_8__["cubicOut"];
        // Set accessibility options
        _this.role = "tooltip";
        _this.visible = false;
        _this.opacity = 0;
        _this.x = 0;
        _this.y = 0;
        _this.events.on("visibilitychanged", _this.handleVisibility, _this);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Tooltip.prototype.handleVisibility = function () {
        if (this.visible) {
            this.label.invalidate();
        }
    };
    Object.defineProperty(Tooltip.prototype, "getStrokeFromObject", {
        /**
         * Specifies if tooltip background should get stroke color from the sprite it is pointing to.
         *
         * @return {boolean}
         * @default false
         */
        get: function () {
            return this.getPropertyValue("getStrokeFromObject");
        },
        /**
         * Specifies if tooltip background should get stroke color from the sprite it is pointing to.
         *
         * @param {value} value boolean
         */
        set: function (value) {
            this.setPropertyValue("getStrokeFromObject", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "autoTextColor", {
        /**
         * @return {boolean}
         * @default true
         */
        get: function () {
            return this.getPropertyValue("autoTextColor");
        },
        /**
         * Specifies if text color should be chosen automatically for a better
         * readability.
         *
         * IMPORTANT: this feature is generally ignored, if `getFillFromObject = false`.
         *
         * If inheriting of `fill` color from object tooltip is displayed for is
         * disabled, this feature will not work. If you are explicitly setting a
         * color for tooltip background, you may set a color for its label as well
         * using `tooltip.label.fill` property.
         *
         *
         * @param {value} value boolean
         */
        set: function (value) {
            this.setPropertyValue("autoTextColor", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "getFillFromObject", {
        /**
         * Specifies if tooltip background should get fill color from the sprite it is pointing to.
         *
         * @return {boolean}
         * @default true
         */
        get: function () {
            return this.getPropertyValue("getFillFromObject");
        },
        /**
         * @param {value} value boolean
         */
        set: function (value) {
            this.setPropertyValue("getFillFromObject", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and returns a background element.
     *
     * @ignore Exclude from docs
     * @return {PointedRectangle} Background
     */
    Tooltip.prototype.createBackground = function () {
        return new _PointedRectangle__WEBPACK_IMPORTED_MODULE_2__["PointedRectangle"]();
    };
    Object.defineProperty(Tooltip.prototype, "pointerOrientation", {
        /**
         * @return {PointerOrientation} Orientation
         */
        get: function () {
            return this.getPropertyValue("pointerOrientation");
        },
        /**
         * Pointer orientation: "horizontal" or "vertical".
         *
         * @default "vertical"
         * @param {PointerOrientation}  value  Orientation
         */
        set: function (value) {
            this.setPropertyValue("pointerOrientation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "animationDuration", {
        /**
         * @return {PointerOrientation} Orientation
         */
        get: function () {
            return this.getPropertyValue("animationDuration");
        },
        /**
         * Duration in milliseconds for the animation to take place when the tooltip
         * is moving from one place to another.
         *
         * @default 0
         * @param {number}  value  number
         */
        set: function (value) {
            this.setPropertyValue("animationDuration", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "animationEasing", {
        /**
         * @return {Function}
         */
        get: function () {
            return this.getPropertyValue("animationEasing");
        },
        /**
         * Tooltip animation (moving from one place to another) easing function.
         *
         * @default $ease.cubicOut
         * @param {Function}  value (value: number) => number
         */
        set: function (value) {
            this.setPropertyValue("animationEasing", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "html", {
        /**
         * @return {string} HTML content
         */
        get: function () {
            return this.label.html;
        },
        /**
         * HTML content for the Tooltip.
         *
         * Provided value will be used as is, without applying any further
         * formatting to it.
         *
         * @param {string}  value  HTML content
         */
        set: function (value) {
            if (this.label.html != value) {
                this.label.html = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "text", {
        /**
         * @return {string} SVG text
         */
        get: function () {
            return this.label.text;
        },
        /**
         * SVG text content for the Tooltip.
         *
         * Text can have a number of formatting options supported by
         * [[TextFormatter]].
         *
         * @param {string}  value  SVG text
         */
        set: function (value) {
            if (this.label.text != value) {
                this.label.text = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates the Tooltip.
     *
     * @ignore Exclude from docs
     */
    Tooltip.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var label = this.label;
        if (label.invalid) {
            label.validate();
        }
        var x = this._pointTo.x;
        var y = this._pointTo.y;
        var boundingRect = this._boundingRect;
        var textW = label.measuredWidth;
        var textH = label.measuredHeight;
        var pointerLength = this.background.pointerLength;
        var textX;
        var textY;
        // try to handle if text is wider than br
        if (textW > boundingRect.width) {
            var p0 = _utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spritePointToDocument"]({ x: boundingRect.x, y: boundingRect.y }, this.parent);
            var p1 = _utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spritePointToDocument"]({ x: boundingRect.x + boundingRect.width, y: boundingRect.y + boundingRect.height }, this.parent);
            var documentWidth = document.body.offsetWidth;
            var documentHeight = document.body.offsetHeight;
            if (p1.x > documentWidth / 2) {
                boundingRect.x = boundingRect.width - textW;
            }
            else {
                boundingRect.width = boundingRect.x + textW;
            }
        }
        // horizontal
        if (this.pointerOrientation == "horizontal") {
            textY = -textH / 2;
            if (x > boundingRect.x + boundingRect.width / 2) {
                textX = -textW / 2 - pointerLength;
            }
            else {
                textX = textW / 2 + pointerLength;
            }
        }
        // vertical pointer
        else {
            textX = _utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](0, boundingRect.x - x + textW / 2, boundingRect.x - x + boundingRect.width - textW / 2);
            if (y > boundingRect.y + textH + pointerLength) {
                textY = -textH - pointerLength;
                this._verticalOrientation = "up";
            }
            else {
                textY = pointerLength;
                this._verticalOrientation = "down";
            }
        }
        textY = _utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](textY, boundingRect.y - y, boundingRect.y + boundingRect.height - textH - y);
        label.x = textX;
        label.y = textY;
        this.drawBackground();
    };
    /**
     * Overrides functionality from the superclass.
     *
     * @ignore Exclude from docs
     */
    Tooltip.prototype.updateBackground = function () {
        this.group.addToBack(this.background.group);
    };
    /**
     * Draws Tooltip background (chrome, background and pointer/stem).
     *
     * @ignore Exclude from docs
     */
    Tooltip.prototype.drawBackground = function () {
        var label = this.label;
        var background = this.background;
        var textWidth = label.measuredWidth;
        var textHeight = label.measuredHeight;
        var boundingRect = this._boundingRect;
        var bgWidth = textWidth;
        var bgX = label.pixelX - textWidth / 2;
        var bgHeight = textHeight;
        var bgY = label.pixelY;
        var x = this._pointTo.x;
        var y = this._pointTo.y;
        var boundX1 = boundingRect.x - x;
        var boundX2 = boundX1 + boundingRect.width;
        var boundY1 = boundingRect.y - y;
        var boundY2 = boundY1 + boundingRect.height;
        background.x = bgX;
        background.y = bgY;
        background.width = bgWidth;
        background.height = bgHeight;
        if (this.fitPointerToBounds) {
            background.pointerX = _utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](-background.x, boundX1 - background.x, boundX2 - background.x);
            background.pointerY = _utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](-background.y, boundY1 - background.y, boundY2 - background.y);
        }
        else {
            background.pointerX = -background.x;
            background.pointerY = -background.y;
        }
        background.validate();
    };
    /**
     * Set nes tooltip's anchor point and moves whole tooltip.
     *
     * @param {number}  x  X coordinate
     * @param {number}  y  Y coordinate
     */
    Tooltip.prototype.pointTo = function (point, instantly) {
        if (this._pointTo.x != point.x || this._pointTo.y != point.y) {
            this._pointTo = point;
            this.invalidate();
            // this helps to avoid strange animation from nowhere on initial show or when balloon was hidden already
            if (!this.visible || instantly) {
                this.moveTo(this._pointTo);
                if (this._animation) {
                    this._animation.kill();
                }
            }
            else {
                // helps to avoid flicker on top/left corner
                if (this.pixelX == 0 && this.pixelY == 0) {
                    this.moveTo(this._pointTo);
                }
                else {
                    if (this._animation) {
                        this._animation.kill();
                    }
                    this._animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_4__["Animation"](this, [{ property: "x", to: point.x, from: this.pixelX }, { property: "y", to: point.y, from: this.pixelY }], this.animationDuration, this.animationEasing).start();
                }
            }
        }
    };
    /**
     * Sets numeric boundaries Tooltip needs to obey (so it does not go outside
     * specific area).
     *
     * @ignore Exclude from docs
     * @param {IRectangle} rectangle Boundary rectangle
     */
    Tooltip.prototype.setBounds = function (rectangle) {
        var oldRect = this._boundingRect;
        if (oldRect.x != rectangle.x || oldRect.y != rectangle.y || oldRect.width != rectangle.width || oldRect.height != rectangle.height) {
            this._boundingRect = rectangle;
            this.invalidate();
        }
    };
    Object.defineProperty(Tooltip.prototype, "boundingContainer", {
        /**
         * Sets a [[Container]] instance to be used when calculating numeric
         * boundaries for the Tooltip.
         *
         * @ignore Exclude from docs
         * @param {Container}  container  Boundary container
         */
        set: function (container) {
            this._boundingContainer = container;
            // TODO remove closures ?
            container.events.on("sizechanged", this.updateBounds, this);
            container.events.on("positionchanged", this.updateBounds, this);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates numeric boundaries for the Tooltip, based on the
     * `boundingCountrainer`.
     */
    Tooltip.prototype.updateBounds = function () {
        var boundingContainer = this._boundingContainer;
        // to global
        var rect = _utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spriteRectToSvg"]({
            x: boundingContainer.pixelX,
            y: boundingContainer.pixelY,
            width: boundingContainer.maxWidth,
            height: boundingContainer.maxHeight
        }, boundingContainer);
        this.setBounds(rect);
    };
    Object.defineProperty(Tooltip.prototype, "verticalOrientation", {
        /**
         * If tooltipOrientation is vertical, it can be drawn below or above point.
         * We need to know this when solving overlapping.
         *
         * @ignore Exclude from docs
         * @return "up" | "down"
         */
        get: function () {
            return this._verticalOrientation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "tooltip", {
        /**
         * To avoid stackoverflow
         * @ignore
         */
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies properties and other attributes.
     *
     * @param {Tooltip}  source  Source
     */
    Tooltip.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.label.copyFrom(source.label);
    };
    return Tooltip;
}(_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

//# sourceMappingURL=Tooltip.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Trapezoid.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Trapezoid.js ***!
  \*******************************************************************************/
/*! exports provided: Trapezoid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Trapezoid", function() { return Trapezoid; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Functionality for drawing a trapezoid.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a Trapezoid.
 *
 * @see {@link ITrapezoidEvents} for a list of available events
 * @see {@link ITrapezoidAdapters} for a list of available Adapters
 */
var Trapezoid = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Trapezoid, _super);
    /**
     * Constructor
     */
    function Trapezoid() {
        var _this = _super.call(this) || this;
        _this.className = "Trapezoid";
        _this.element = _this.paper.add("path");
        _this.topSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.bottomSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.leftSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.rightSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.isMeasured = false; // todo: add measureElement
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Trapezoid.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var w = this.pixelWidth;
        var h = this.pixelHeight;
        var ts = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.topSide, w);
        var bs = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.bottomSide, w);
        var ls = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.leftSide, h);
        var rs = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.rightSide, h);
        // 1----2
        // |    |
        // 4----3
        var x0 = (w - ts) / 2;
        var y0 = (h - ls) / 2;
        var x1 = w - (w - ts) / 2;
        var y1 = (h - rs) / 2;
        var x2 = w - (w - bs) / 2;
        var y2 = h - (h - rs) / 2;
        var x3 = (w - bs) / 2;
        var y3 = h - (h - ls) / 2;
        var mt = "";
        var mr = "";
        var mb = "";
        var ml = "";
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](this.horizontalNeck)) {
            var hn = this.horizontalNeck.value;
            mt = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: w * hn, y: Math.max(y0, y1) });
            mb = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: w * hn, y: Math.min(y2, y3) });
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](this.verticalNeck)) {
            var vn = this.verticalNeck.value;
            mr = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: Math.min(x1, x2), y: h * vn });
            ml = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: Math.max(x0, x3), y: h * vn });
        }
        var path = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"]({ x: x0, y: y0 })
            + mt
            + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: x1, y: y1 })
            + mr
            + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: x2, y: y2 })
            + mb
            + _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: x3, y: y3 })
            + ml;
        this.path = path;
    };
    Object.defineProperty(Trapezoid.prototype, "topSide", {
        /**
         * @return {number} Width
         */
        get: function () {
            return this.getPropertyValue("topSide");
        },
        /**
         * Wdith of the top side. Absolute (px) or relative ([[Percent]]).
         *
         * @default Percent(100)
         * @param {number | Percent}  value  Width
         */
        set: function (value) {
            this.setPercentProperty("topSide", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trapezoid.prototype, "bottomSide", {
        /**
         * @return {number} Width
         */
        get: function () {
            return this.getPropertyValue("bottomSide");
        },
        /**
         * Wdith of the bottom side. Absolute (px) or relative ([[Percent]]).
         *
         * @default Percent(100)
         * @param {number | Percent}  value  Width
         */
        set: function (value) {
            this.setPercentProperty("bottomSide", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trapezoid.prototype, "leftSide", {
        /**
         * @return {number} Height
         */
        get: function () {
            return this.getPropertyValue("leftSide");
        },
        /**
         * Height of the left side. Absolute (px) or relative ([[Percent]]).
         *
         * @default Percent(100)
         * @param {number | Percent}  value  Height
         */
        set: function (value) {
            this.setPercentProperty("leftSide", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trapezoid.prototype, "rightSide", {
        /**
         * @return {number} Height
         */
        get: function () {
            return this.getPropertyValue("rightSide");
        },
        /**
         * Height of the right side. Absolute (px) or relative ([[Percent]]).
         *
         * @default Percent(100)
         * @param {number | Percent}  value  Height
         */
        set: function (value) {
            this.setPercentProperty("rightSide", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trapezoid.prototype, "horizontalNeck", {
        /**
         * @return {Percent} Horizontal neck position
         */
        get: function () {
            return this.getPropertyValue("horizontalNeck");
        },
        /**
         * A relative vertical position of the "neck". If the top and bottom sides
         * are of different width, and `horizontalNeck` is set, a choke point
         * will be created at that position, creating a funnel shape.
         *
         * @param {Percent}  value  Horizontal neck position
         */
        set: function (value) {
            this.setPropertyValue("horizontalNeck", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trapezoid.prototype, "verticalNeck", {
        /**
         * @return {Percent} Vertical neck position
         */
        get: function () {
            return this.getPropertyValue("verticalNeck");
        },
        /**
         * A relative horizontal position of the "neck". If the left and right sides
         * are of different height, and `verticalNeck` is set, a choke point
         * will be created at that position, creating a funnel shape.
         *
         * @param {Percent}  value  Vertical neck position
         */
        set: function (value) {
            this.setPropertyValue("verticalNeck", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Trapezoid;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Trapezoid"] = Trapezoid;
//# sourceMappingURL=Trapezoid.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js ***!
  \******************************************************************************/
/*! exports provided: Triangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Triangle", function() { return Triangle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Functionality for drawing triangles.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a triangle.
 *
 * @see {@link ITriangleEvents} for a list of available events
 * @see {@link ITriangleAdapters} for a list of available Adapters
 */
var Triangle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Triangle, _super);
    /**
     * Constructor
     */
    function Triangle() {
        var _this = _super.call(this) || this;
        _this.className = "Triangle";
        _this.element = _this.paper.add("path");
        _this.direction = "top";
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    Triangle.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var w = this.pixelWidth;
        var h = this.pixelHeight;
        var path;
        switch (this.direction) {
            case "right":
                path = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"]({ x: 0, y: 0 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w, y: h / 2 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: 0, y: h })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["closePath"]();
                break;
            case "left":
                path = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"]({ x: w, y: 0 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: 0, y: h / 2 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w, y: h })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["closePath"]();
                break;
            case "bottom":
                path = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"]({ x: 0, y: 0 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w, y: 0 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w / 2, y: h })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["closePath"]();
                break;
            case "top":
                path = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"]({ x: w / 2, y: 0 })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w, y: h })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: 0, y: h })
                    + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["closePath"]();
                break;
        }
        this.path = path;
    };
    Object.defineProperty(Triangle.prototype, "direction", {
        /**
         * Returns direction of a triangle
         *
         * @return {"left" | "right" | "top" | "bottom"} value
         */
        get: function () {
            return this.getPropertyValue("direction");
        },
        /**
         * Sets direction of a triangle
         *
         * @param {"left" | "right" | "top" | "bottom"} value
         */
        set: function (value) {
            this.setPropertyValue("direction", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Triangle;
}(_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Triangle"] = Triangle;
//# sourceMappingURL=Triangle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedCircle.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedCircle.js ***!
  \*********************************************************************************/
/*! exports provided: WavedCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WavedCircle", function() { return WavedCircle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/**
 * Functionality for drawing waved circles.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a waved circle.
 *
 * @see {@link IWavedCircleEvents} for a list of available events
 * @see {@link IWavedCircleAdapters} for a list of available Adapters
 */
var WavedCircle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WavedCircle, _super);
    /**
     * Constructor
     */
    function WavedCircle() {
        var _this = _super.call(this) || this;
        _this.className = "WavedCircle";
        _this.element = _this.paper.add("path");
        _this.waveLength = 16;
        _this.waveHeight = 4;
        _this.fill = undefined;
        _this.fillOpacity = 0;
        _this.tension = 0.8;
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the waved line.
     *
     * @ignore Exclude from docs
     */
    WavedCircle.prototype.draw = function () {
        var path = "";
        var radius = this.pixelRadius;
        if (radius > 0) {
            var points = this.getPoints(radius);
            path = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](points[0]) + new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__["Tension"](this.tension, this.tension).smooth(points);
        }
        var innerRadius = this.pixelInnerRadius;
        if (innerRadius > 0) {
            var points = this.getPoints(innerRadius);
            points.reverse();
            path += _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](points[0]) + new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__["Tension"](this.tension, this.tension).smooth(points);
        }
        this.path = path;
    };
    /**
     * Returns points that circle consists of.
     *
     * @param  {number}    radius  Radius (px)
     * @return {IPoint[]}          Points
     */
    WavedCircle.prototype.getPoints = function (radius) {
        var circleLength = radius * Math.PI * 2;
        var halfWaveHeight = this.waveHeight / 2;
        var waveLength = circleLength / Math.round(circleLength / this.waveLength);
        var halfWaveLength = waveLength / 2;
        var points = [];
        var count = circleLength / waveLength;
        for (var i = 0; i <= count; i++) {
            var angle1 = (i * waveLength) / circleLength * 360;
            var angle2 = (i * waveLength + halfWaveLength) / circleLength * 360;
            points.push({ x: (radius - halfWaveHeight) * _utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](angle1), y: (radius - halfWaveHeight) * _utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](angle1) });
            points.push({ x: (radius + halfWaveHeight) * _utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](angle2), y: (radius + halfWaveHeight) * _utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](angle2) });
        }
        points.pop();
        return points;
    };
    Object.defineProperty(WavedCircle.prototype, "innerRadius", {
        /**
         * @return {number} Inner radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the circle in pixels (absolute) or [[Percent]] (relative).
         *
         * @param {number | Percent}  value  Inner radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedCircle.prototype, "pixelInnerRadius", {
        /**
         * Calculated inner radius of the circle in pixels.
         *
         * @readonly
         * @return {number} Inner radius (px)
         */
        get: function () {
            return _utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.innerRadius, _utils_Math__WEBPACK_IMPORTED_MODULE_4__["min"](this.innerWidth / 2, this.innerHeight / 2));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedCircle.prototype, "waveLength", {
        /**
         * @return {number} Wave length (px)
         */
        get: function () {
            return this.getPropertyValue("waveLength");
        },
        /**
         * Wave length in pixels.
         *
         * @default 16
         * @param {number}  value  Wave length (px)
         */
        set: function (value) {
            this.setPropertyValue("waveLength", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedCircle.prototype, "waveHeight", {
        /**
         * @return {number} Wave height (px)
         */
        get: function () {
            return this.getPropertyValue("waveHeight");
        },
        /**
         * Wave height in pixels.
         *
         * @default 4
         * @param {number}  value  Wave height (px)
         */
        set: function (value) {
            this.setPropertyValue("waveHeight", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedCircle.prototype, "tension", {
        /**
         * @return {number} Tension
         */
        get: function () {
            return this.getPropertyValue("tension");
        },
        /**
         * Tension of the wave.
         *
         * @default 0.8
         * @param {number}  value  Tension
         */
        set: function (value) {
            this.setPropertyValue("tension", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    return WavedCircle;
}(_Circle__WEBPACK_IMPORTED_MODULE_1__["Circle"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["WavedCircle"] = WavedCircle;
//# sourceMappingURL=WavedCircle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js ***!
  \*******************************************************************************/
/*! exports provided: WavedLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WavedLine", function() { return WavedLine; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _rendering_Smoothing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Functionality for drawing waved lines.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a waved line.
 *
 * @see {@link IWavedLineEvents} for a list of available events
 * @see {@link IWavedLineAdapters} for a list of available Adapters
 */
var WavedLine = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WavedLine, _super);
    /**
     * Constructor
     */
    function WavedLine() {
        var _this = _super.call(this) || this;
        _this.className = "WavedLine";
        _this.element = _this.paper.add("path");
        _this.waveLength = 16;
        _this.waveHeight = 4;
        _this.tension = 0.8;
        _this.pixelPerfect = false;
        _this.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_2__["color"])();
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the waved line.
     *
     * @ignore Exclude from docs
     */
    WavedLine.prototype.draw = function () {
        //super.draw();
        var p1 = { x: this.x1, y: this.y1 };
        var p2 = { x: this.x2, y: this.y2 };
        this.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](p1) + Object(_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_3__["wavedLine"])(p1, p2, this.waveLength, this.waveHeight, this.tension, true);
    };
    Object.defineProperty(WavedLine.prototype, "waveLength", {
        /**
         * @return {number} Wave length (px)
         */
        get: function () {
            return this.getPropertyValue("waveLength");
        },
        /**
         * Wave length in pixels.
         *
         * @default 16
         * @param {number}  value  Wave length (px)
         */
        set: function (value) {
            this.setPropertyValue("waveLength", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedLine.prototype, "waveHeight", {
        /**
         * @return {number} Wave height (px)
         */
        get: function () {
            return this.getPropertyValue("waveHeight");
        },
        /**
         * Wave height in pixels.
         *
         * @default 4
         * @param {number}  value  Wave height (px)
         */
        set: function (value) {
            this.setPropertyValue("waveHeight", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedLine.prototype, "tension", {
        /**
         * @return {number} Tension
         */
        get: function () {
            return this.getPropertyValue("tension");
        },
        /**
         * Tension of the wave.
         *
         * @default 0.8
         * @param {number}  value  Tension
         */
        set: function (value) {
            this.setPropertyValue("tension", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    return WavedLine;
}(_Line__WEBPACK_IMPORTED_MODULE_1__["Line"]));

//# sourceMappingURL=WavedLine.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js ***!
  \************************************************************************************/
/*! exports provided: WavedRectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WavedRectangle", function() { return WavedRectangle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Rectangle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Rectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js");
/* harmony import */ var _rendering_Smoothing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Functionality for drawing rectangles with waved edges.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a rectangle with waved edges.
 *
 * @see {@link IWavedRectangleEvents} for a list of available events
 * @see {@link IWavedRectangleAdapters} for a list of available Adapters
 */
var WavedRectangle = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WavedRectangle, _super);
    /**
     * Constructor
     */
    function WavedRectangle() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Top waved?
         *
         * @type {boolean}
         */
        _this._twaved = true;
        /**
         * Right side waved?
         *
         * @type {boolean}
         */
        _this._rwaved = true;
        /**
         * Bottom waved?
         *
         * @type {boolean}
         */
        _this._bwaved = true;
        /**
         * Left side waved?
         *
         * @type {boolean}
         */
        _this._lwaved = true;
        _this.className = "WavedRectangle";
        // Add path element
        _this.element = _this.paper.add("path");
        // Set defaults
        _this.waveLength = 16;
        _this.waveHeight = 4;
        _this.tension = 0.8;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the waved rectangle.
     *
     * @ignore Exclude from docs
     */
    WavedRectangle.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var w = this.pixelWidth;
        var h = this._pixelHeight;
        if (w > 0 && h > 0) {
            var p1 = { x: 0, y: 0 };
            var p2 = { x: w, y: 0 };
            var p3 = { x: w, y: h };
            var p4 = { x: 0, y: h };
            var waveLength = this.waveLength;
            var waveHeight = this.waveHeight;
            var td = "";
            var rd = "";
            var bd = "";
            var ld = "";
            if (this._twaved) {
                td = Object(_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_2__["wavedLine"])(p1, p2, waveLength, waveHeight, this.tension, true);
            }
            if (this._rwaved) {
                ld = Object(_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_2__["wavedLine"])(p2, p3, waveLength, waveHeight, this.tension, true);
            }
            if (this._bwaved) {
                bd = Object(_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_2__["wavedLine"])(p3, p4, waveLength, waveHeight, this.tension, true);
            }
            if (this._rwaved) {
                rd = Object(_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_2__["wavedLine"])(p4, p1, waveLength, waveHeight, this.tension, true);
            }
            this.path = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](p1) + td + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](p2) + ld + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](p3) + bd + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](p4) + rd + "z";
        }
    };
    Object.defineProperty(WavedRectangle.prototype, "waveLength", {
        /**
         * @return {number} Wave length (px)
         */
        get: function () {
            return this.getPropertyValue("waveLength");
        },
        /**
         * Wave length in pixels.
         *
         * @default 16
         * @param {number}  value  Wave length (px)
         */
        set: function (value) {
            this.setPropertyValue("waveLength", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WavedRectangle.prototype, "waveHeight", {
        /**
         * @return {number} Wave height (px)
         */
        get: function () {
            return this.getPropertyValue("waveHeight");
        },
        /**
         * Wave height in pixels.
         *
         * @default 4
         * @param {number}  value  Wave height (px)
         */
        set: function (value) {
            this.setPropertyValue("waveHeight", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets which side should be waved or not. If particular side is set to
     * `false`, a straight line will be drawn on that side.
     *
     * @param {boolean}  top     Top waved?
     * @param {boolean}  right   Right side waved?
     * @param {boolean}  bottom  Bottom Waved?
     * @param {boolean}  left    Left side waved?
     */
    WavedRectangle.prototype.setWavedSides = function (top, right, bottom, left) {
        this._twaved = top;
        this._lwaved = right;
        this._bwaved = bottom;
        this._rwaved = left;
    };
    Object.defineProperty(WavedRectangle.prototype, "tension", {
        /**
         * @return {number} Tension
         */
        get: function () {
            return this.getPropertyValue("tension");
        },
        /**
         * Tension of the wave.
         *
         * @default 0.8
         * @param {number}  value  Tension
         */
        set: function (value) {
            this.setPropertyValue("tension", value);
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    return WavedRectangle;
}(_Rectangle__WEBPACK_IMPORTED_MODULE_1__["Rectangle"]));

//# sourceMappingURL=WavedRectangle.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/ZoomOutButton.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/ZoomOutButton.js ***!
  \***********************************************************************************/
/*! exports provided: ZoomOutButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomOutButton", function() { return ZoomOutButton; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Zoom out button functionality.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a zoom out button.
 *
 * @see {@link IZoomOutButtonEvents} for a list of available events
 * @see {@link IZoomOutButtonAdapters} for a list of available Adapters
 */
var ZoomOutButton = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZoomOutButton, _super);
    /**
     * Constructor
     */
    function ZoomOutButton() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "ZoomOutButton";
        _this.padding(9, 9, 9, 9);
        //this.dx = - 5;
        //this.dy = 5;
        _this.showSystemTooltip = true;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        var background = _this.background;
        background.cornerRadius(20, 20, 20, 20);
        background.fill = interfaceColors.getFor("primaryButton");
        background.stroke = interfaceColors.getFor("primaryButtonStroke");
        background.strokeOpacity = 0;
        background.states.getKey("hover").properties.fill = interfaceColors.getFor("primaryButtonHover");
        background.states.getKey("down").properties.fill = interfaceColors.getFor("primaryButtonActive");
        // Create an icon
        var icon = new _Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]();
        icon.element = _this.paper.add("path");
        var path = _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"]({ x: 0, y: 0 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"]({ x: 11, y: 0 });
        icon.path = path;
        icon.pixelPerfect = true;
        icon.padding(8, 3, 8, 3);
        icon.stroke = interfaceColors.getFor("primaryButtonText");
        _this.icon = icon;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    ZoomOutButton.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Zoom Out");
        }
    };
    return ZoomOutButton;
}(_Button__WEBPACK_IMPORTED_MODULE_1__["Button"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ZoomOutButton"] = ZoomOutButton;
//# sourceMappingURL=ZoomOutButton.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/export/Export.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/export/Export.js ***!
  \**************************************************************************/
/*! exports provided: Export */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Export", function() { return Export; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ExportMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExportMenu */ "./node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _elements_Modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/Modal */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Modal.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../formatters/DateFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js");
/* harmony import */ var _formatters_DurationFormatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../formatters/DurationFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DurationFormatter.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _utils_Validatable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Validatable */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _Options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Net__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils/Net */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Net.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * Export module.
 *
 * Parts of Export functionality rely on the following third party libraries:
 *
 * [canvg.js](https://github.com/canvg/canvg)
 * Copyright (c) Gabe Lerner
 * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)
 *
 * [pdfmake](http://pdfmake.org/)
 * Copyright (c) 2014 bpampuch
 * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)
 *
 * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)
 * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)
 *
 * [JSZip](http://stuartk.com/jszip)
 * Copyright (c) Stuart Knightley
 * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


















// TODO better parsing
var fontFamilySrcRegexp = /src: ([^;]+);/;
// TODO better checks
function supportsBlobUri() {
    return window.navigator.msSaveOrOpenBlob != null;
}
// TODO move into utils or something ?
function blobToDataUri(blob) {
    return new Promise(function (resolve, reject) {
        // TODO handle abort ?
        var f = new FileReader();
        f.onload = function (e) { resolve(f.result); };
        f.onerror = function (e) { reject(e); };
        f.readAsDataURL(blob);
    });
}
// This loads a stylesheet by URL and then calls the function with it
// TODO this should be moved into utils or something
function loadStylesheet(url, f) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
        var response, s;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, _utils_Net__WEBPACK_IMPORTED_MODULE_15__["load"](url)];
                case 1:
                    response = _a.sent();
                    s = document.createElement("style");
                    s.textContent = response.response;
                    document.head.appendChild(s);
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, , 4, 5]);
                    return [4 /*yield*/, f(s.sheet)];
                case 3: return [2 /*return*/, _a.sent()];
                case 4:
                    document.head.removeChild(s);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    });
}
// This calls a function for each CSSRule inside of a CSSStyleSheet.
// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.
// TODO this should be moved into utils or something
function eachStylesheet(topUrl, sheet, f) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
        var promises, _loop_1, i;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
            switch (_a.label) {
                case 0:
                    promises = [];
                    _loop_1 = function (i) {
                        var rule = sheet.cssRules[i];
                        if (rule.type === CSSRule.IMPORT_RULE) {
                            var url_1 = rule.href;
                            if (url_1) {
                                url_1 = _utils_Utils__WEBPACK_IMPORTED_MODULE_17__["joinUrl"](topUrl, url_1);
                                promises.push(loadStylesheet(url_1, function (sheet) { return eachStylesheet(url_1, sheet, f); }));
                            }
                        }
                        else {
                            f(topUrl, rule);
                        }
                    };
                    for (i = 0; i < sheet.cssRules.length; i++) {
                        _loop_1(i);
                    }
                    if (!promises.length) return [3 /*break*/, 2];
                    return [4 /*yield*/, Promise.all(promises)];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2: return [2 /*return*/];
            }
        });
    });
}
// This calls a function for each CSSRule for all of the stylesheets in the page.
// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.
// TODO this should be moved into utils or something
function eachStylesheets(f) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, Promise.all(_utils_Array__WEBPACK_IMPORTED_MODULE_18__["map"](document.styleSheets, function (sheet) {
                        var url = sheet.href;
                        if (url == null) {
                            return eachStylesheet(location.href, sheet, f);
                        }
                        else {
                            url = _utils_Utils__WEBPACK_IMPORTED_MODULE_17__["joinUrl"](location.href, url);
                            return loadStylesheet(url, function (sheet) { return eachStylesheet(url, sheet, f); });
                        }
                    }))];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * [[Export]] allows downloading of current snapshot of the chart as an
 * image, PDF, or its data in various formats.
 *
 * The export functionality is enabled by default in charts and is accessible
 * via API or optional export menu.
 *
 * To enable menu, simply access export's `menu` property. E.g.:
 *
 * ```TypeScript
 * chart.exporting.menu = new am4core.ExportMenu();
 * ```
 * ```JavaScript
 * chart.exporting.menu = new am4core.ExportMenu();
 * ```
 * ```JSON
 * {
 *   // ...
 *   "exporting": {
 *     "menu": {}
 *   }
 * }
 * ```
 *
 * To export via API, use `export()` method:
 *
 * ```TypeScript
 * chart.exporting.export(type, [options]);
 * ```
 * ```JavaScript
 * chart.exporting.export(type, [options]);
 * ```
 *
 * E.g.:
 *
 * ```TypeScript
 * chart.exporting.export("png");
 * ```
 * ```JavaScript
 * chart.exporting.export("png");
 * ```
 *
 * @todo Better loading indicator?
 * @todo Implement multiplier option
 * @todo Handling of hanged exports
 * @important
 */
var Export = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Export, _super);
    /**
     * Constructor
     */
    function Export(container) {
        var _this = _super.call(this) || this;
        /**
         * Adapter.
         *
         * @type {Adapter<Export, IExportAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        /**
         * Holds options for each format.
         *
         * @ignore Exclude from docs
         * @type {Dictionary<string, ExportOptions>}
         */
        _this._formatOptions = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["Dictionary"]();
        /**
         * Holds a list of objects that were temporarily removed from the DOM while
         * exporting. Those most probably are tainted images, or foreign objects that
         * would otherwise prevent SVG to be converted to canvas.
         *
         * @ignore Exclude from docs
         * @type {List<IExportRemovedObject>}
         */
        _this._removedObjects = new _utils_List__WEBPACK_IMPORTED_MODULE_4__["List"]();
        /**
         * Holds references to the objects that were temporarily hidden when export
         * started, so that we can reveal them back when export ends.
         *
         * @type {Sprite[]}
         */
        _this._hiddenObjects = [];
        /**
         * Exported files will be prefixed with whatever it is set here.
         *
         * @ignore Exclude from docs
         * @type {string}
         */
        _this._filePrefix = "amCharts";
        /**
         * If you are using web fonts (such as Google Fonts), your chart might be
         * using them as well.
         *
         * Normally, exporting to image will require to download these fonts so the
         * are carried over to exported image.
         *
         * This setting can be used to disable or enable this functionality.
         *
         * @default true
         * @type {boolean}
         */
        _this.useWebFonts = true;
        /**
         * Many modern displays have use more actual pixels per displayed pixel. This
         * results in sharper images on screen. Unfortunately, when exported to a
         * bitmap image of the sam width/height size it will lose those extra pixels,
         * resulting in somewhat blurry image.
         *
         * This is why we are going to export images larger than they are, so that we
         * don't lose any details.
         *
         * If you'd rather export images without change in size, set this to `false`.
         *
         * @default true
         * @type {boolean}
         */
        _this.useRetina = true;
        /**
         * If export operation takes longer than milliseconds in this second, we will
         * show a modal saying export operation took longer than expected.
         *
         * @type {number}
         */
        _this.timeoutDelay = 2000;
        _this._container = container;
        _this.className = "Export";
        // Set default options
        _this._formatOptions.setKey("png", {});
        _this._formatOptions.setKey("jpg", {
            quality: 0.8
        });
        _this._formatOptions.setKey("gif", {});
        _this._formatOptions.setKey("svg", {});
        _this._formatOptions.setKey("pdf", {
            fontSize: 14,
            imageFormat: "png",
            addURL: true
        });
        _this._formatOptions.setKey("json", {
            indent: 2,
            useLocale: true
        });
        _this._formatOptions.setKey("csv", {
            addColumnNames: true,
            emptyAs: ""
        });
        _this._formatOptions.setKey("xlsx", {
            addColumnNames: true,
            useLocale: true,
            emptyAs: ""
        });
        _this._formatOptions.setKey("print", {
            delay: 500,
            printMethod: "iframe"
        });
        // Add options adapter
        _this.adapter.add("options", function (arg) {
            var formatOptions = _this._formatOptions.getKey(arg.type);
            if (arg.options) {
                arg.options = _utils_Object__WEBPACK_IMPORTED_MODULE_14__["merge"](arg.options, formatOptions);
            }
            else {
                arg.options = formatOptions;
            }
            return arg;
        });
        _this.applyTheme();
        _this.dispatchImmediately("inited");
        return _this;
    }
    Object.defineProperty(Export.prototype, "menu", {
        /**
         * @return {Optional<ExportMenu>} ExportMenu instance
         */
        get: function () {
            return this._menu;
        },
        /**
         * An instance of [[ExportMenu]].
         *
         * To add an export menu to a chart, set this to a new instance of
         * [[ExportMenu]].
         *
         * ```TypeScript
         * chart.exporting.menu = new am4core.ExportMenu();
         * ```
         * ```JavaScript
         * chart.exporting.menu = new am4core.ExportMenu();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "exporting": {
         *     "menu": {}
         *   }
         * }
         * ```
         *
         * @param {Optional<ExportMenu>}  menu  ExportMenu instance
         */
        set: function (menu) {
            var _this = this;
            if (this._menu) {
                this.removeDispose(this._menu);
            }
            this._menu = menu;
            // Set container and language
            this._menu.container = this.container;
            this._menu.language = this._language;
            // Add adapter to check for browser support
            this._menu.adapter.add("branch", function (arg) {
                arg.branch.unsupported = !_this.typeSupported(arg.branch.type);
                return arg;
            });
            // Add click events
            this._menu.events.on("hit", function (ev) {
                _this.export(ev.branch.type, ev.branch.options);
                _this.menu.close();
            });
            this._menu.events.on("enter", function (ev) {
                _this.export(ev.branch.type, ev.branch.options);
                _this.menu.close();
            });
            this._menu.events.on("over", function (ev) {
                _this._disablePointers();
            });
            this._menu.events.on("out", function (ev) {
                _this._releasePointers();
            });
            // Dispatch event
            this.dispatchImmediately("menucreated");
            // Prefix with Sprite's class name
            this._menu.adapter.add("classPrefix", function (obj) {
                obj.classPrefix = _Options__WEBPACK_IMPORTED_MODULE_12__["options"].classNamePrefix + obj.classPrefix;
                return obj;
            });
            // Add menu to disposers so that it's destroyed when Export is disposed
            this._disposers.push(this._menu);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if this specific menu item type is supported by current system.
     *
     * @param  {string}   type  Menu item type
     * @return {boolean}        `false` if not supported
     */
    Export.prototype.typeSupported = function (type) {
        var supported = true;
        if (type === "pdf") {
            supported = this.downloadSupport();
        }
        else if (type === "xlsx") {
            supported = (this.downloadSupport() && this._hasData()) ? true : false;
        }
        else if (type == "print" && !window.print) {
            supported = false;
        }
        else if (["json", "csv"].indexOf(type) !== -1 && !this._hasData()) {
            supported = false;
        }
        return this.adapter.apply("supported", {
            supported: supported,
            type: type
        }).supported;
    };
    /**
     * Checks if data is available.
     *
     * @return {boolean} Has data?
     */
    Export.prototype._hasData = function () {
        return this.data && this.data.length;
    };
    /**
     * Get function to handle export for particular format.
     *
     * @ignore Exclude from docs
     * @type {this}
     */
    Export.prototype._getFunction = function (type) {
        switch (type) {
            case "png":
            case "gif":
            case "jpg":
                return this.getImage;
            case "svg":
                return this.getSVG;
            case "pdf":
                return this.getPDF;
            case "xlsx":
                return this.getExcel;
            case "csv":
                return this.getCSV;
            case "json":
                return this.getJSON;
            case "print":
                return this.getPrint;
            default:
                return this.unsupported;
        }
    };
    /**
     * Initiates export procedure.
     *
     * @param  {string}   type     Export type
     * @param  {Object}   options  Options
     * @return {boolean}           `true` if export was successful
     * @async
     */
    Export.prototype.export = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var _this = this;
            var event_1, func, data, event_2, event_3;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // Dispatch event
                        if (this.events.isEnabled("exportstarted")) {
                            event_1 = {
                                "type": "exportstarted",
                                "target": this,
                                "format": type,
                                "options": options
                            };
                            this.events.dispatchImmediately("exportstarted", event_1);
                        }
                        // Check if it's a custom item, and do nothing or execute custom callback
                        if (type == "custom") {
                            this.handleCustom(options);
                            return [2 /*return*/, true];
                        }
                        // Schedule a preloader
                        this.showPreloader();
                        // Schedule a timeout
                        if (this.timeoutDelay) {
                            this.hideTimeout();
                            this._timeoutTimeout = this.setTimeout(function () {
                                // Dispatch event
                                if (_this.events.isEnabled("exporttimedout")) {
                                    var event_4 = {
                                        "type": "exporttimedout",
                                        "target": _this,
                                        "format": type,
                                        "options": options
                                    };
                                    _this.events.dispatchImmediately("exporttimedout", event_4);
                                }
                                // Show modal
                                _this.showTimeout();
                            }, this.timeoutDelay);
                        }
                        // Hide items that should not be exported
                        this.hideNonExportableSprites();
                        func = this._getFunction(type);
                        // Give chance for plugins to override both function and options
                        options = this.adapter.apply("options", {
                            options: options,
                            type: type
                        }).options;
                        func = this.adapter.apply("exportFunction", {
                            func: func,
                            type: type,
                            options: options
                        }).func;
                        return [4 /*yield*/, func.call(this, type, options)];
                    case 1:
                        data = _a.sent();
                        // Restore temporarily hidden elements
                        this.restoreNonExportableSprites();
                        if (data) {
                            // Dispatch event
                            if (this.events.isEnabled("exportfinished")) {
                                event_2 = {
                                    "type": "exportfinished",
                                    "target": this,
                                    "format": type,
                                    "options": options
                                };
                                this.events.dispatchImmediately("exportfinished", event_2);
                            }
                            // Hide preloader and timeout modals
                            this.hidePreloader();
                            this.hideTimeout();
                            // Download or print
                            if (type === "print") {
                                return [2 /*return*/, this.print(data, options, this.adapter.apply("title", {
                                        title: this.title,
                                        options: options
                                    }).title)];
                            }
                            else {
                                return [2 /*return*/, this.download(data, this.filePrefix + "." + type)];
                            }
                        }
                        else {
                            // Throw exception?
                            // @todo
                            // Dispatch event
                            if (this.events.isEnabled("error")) {
                                event_3 = {
                                    "type": "error",
                                    "target": this,
                                    "format": type,
                                    "options": options
                                };
                                this.events.dispatchImmediately("error", event_3);
                            }
                            return [2 /*return*/, false];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * A function that should handle unsupported export types.
     *
     * @ignore Exclude from docs
     * @param  {string}              type     Export type
     * @param  {IExportImageOptions} options  Options
     * @return {Promise<string>}               Promise
     * @async
     */
    Export.prototype.unsupported = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                // TODO should this return `undefined`?
                return [2 /*return*/, ""];
            });
        });
    };
    /**
     * Handles click on a "custom" menu item.
     *
     * Basically, if it has "callback" enabled, it will be called. Nothing else.
     *
     * @ignore Exclude from docs
     * @param {IExportCustomOptions}  options  Options
     */
    Export.prototype.handleCustom = function (options) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](options.callback)) {
            options.callback.call(this, options);
        }
    };
    /**
     * Requests a Print of the chart.
     *
     * @param  {string}               type     Export type
     * @param  {IExportImageOptions}  options  Options
     * @return {Promise<string>}               Promise
     * @async
     */
    Export.prototype.getPrint = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                return [2 /*return*/, this.getImage("png", options)];
            });
        });
    };
    /**
     * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.
     *
     * @ignore Exclude from docs
     * @return {Promise<string>} String which can be embedded directly into a <style> element.
     * @async
     */
    Export.prototype.getFontFamilies = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var _this = this;
            var DOMURL, blobs, promises, a;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        DOMURL = this.getDOMURL();
                        blobs = [];
                        promises = [];
                        return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {
                                if (rule.type === CSSRule.FONT_FACE_RULE) {
                                    var cssText_1 = rule.cssText;
                                    // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue
                                    var src = fontFamilySrcRegexp.exec(cssText_1);
                                    if (src !== null) {
                                        // TODO make this faster (don't create Promises for non-url stuff)
                                        var urls = src[1].split(/ *, */).map(function (url) { return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](_this, void 0, void 0, function () {
                                            var a, after, fullUrl, response, url_2, e_1;
                                            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                                                switch (_a.label) {
                                                    case 0:
                                                        a = /^url\(["']?([^"'\)]+)["']?\)([^,]*)$/.exec(url);
                                                        if (!(a === null)) return [3 /*break*/, 1];
                                                        return [2 /*return*/, url];
                                                    case 1:
                                                        after = a[2];
                                                        fullUrl = _utils_Utils__WEBPACK_IMPORTED_MODULE_17__["joinUrl"](topUrl, a[1]);
                                                        _a.label = 2;
                                                    case 2:
                                                        _a.trys.push([2, 7, , 8]);
                                                        return [4 /*yield*/, _utils_Net__WEBPACK_IMPORTED_MODULE_15__["load"](fullUrl, undefined, { responseType: "blob" })];
                                                    case 3:
                                                        response = _a.sent();
                                                        if (!supportsBlobUri()) return [3 /*break*/, 4];
                                                        url_2 = DOMURL.createObjectURL(response.blob);
                                                        blobs.push(url_2);
                                                        return [3 /*break*/, 6];
                                                    case 4: return [4 /*yield*/, blobToDataUri(response.blob)];
                                                    case 5:
                                                        url_2 = _a.sent();
                                                        _a.label = 6;
                                                    case 6: 
                                                    // TODO should it should escape the URI ?
                                                    return [2 /*return*/, "url(\"" + url_2 + "\")" + after];
                                                    case 7:
                                                        e_1 = _a.sent();
                                                        console.error("Failed to load font", fullUrl, e_1);
                                                        return [2 /*return*/, null];
                                                    case 8: return [2 /*return*/];
                                                }
                                            });
                                        }); });
                                        promises.push(Promise.all(urls).then(function (a) {
                                            a = a.filter(function (x) { return x != null; });
                                            if (a.length === 0) {
                                                return "";
                                            }
                                            else {
                                                return cssText_1.replace(fontFamilySrcRegexp, "src: " + a.join(", ") + ";");
                                            }
                                        }));
                                    }
                                }
                            })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, Promise.all(promises)];
                    case 2:
                        a = _a.sent();
                        return [2 /*return*/, {
                                blobs: blobs,
                                cssText: a.filter(function (x) { return !!x; }).join("\n")
                            }];
                }
            });
        });
    };
    /**
     * Produces image output from the element.
     *
     * Converts to a `Canvas` first, then produces an image to download.
     *
     * This is an asynchronous function. Rather than returning a result, it
     * returns a Promise.
     *
     * You can use `await` notion from other async functions, or `then()`
     * anywhere else.
     *
     * ```TypeScript
     * // Async
     * let img = await chart.exporting.getImage( "PNG" );
     *
     * // Sync
     * let img;
     * chart.exporting.getImage( "PNG" ).then( ( data ) => {
     *   img = exporing;
     * } );
     * ```
     * ```JavaScript
     * var img;
     * chart.exporting.getImage( "PNG" ).then( ( data ) => {
     *   var = data;
     * } );
     * ```
     *
     * @param  {string}               type     Image format
     * @param  {IExportImageOptions}  options  Options
     * @return {Promise<string>}               Promise
     */
    Export.prototype.getImage = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var background, DOMURL_1, url, blobs_1, width, height, font, fontSize, canvas, pixelRatio, ctx, promises, a, data, svg, img, uri, e_2;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.simplifiedImageExport()];
                    case 1:
                        if (!_a.sent()) return [3 /*break*/, 9];
                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);
                        DOMURL_1 = this.getDOMURL();
                        url = null;
                        blobs_1 = null;
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 5, 7, 8]);
                        width = this.sprite.pixelWidth, height = this.sprite.pixelHeight, font = this.findFont(this.sprite.dom), fontSize = this.findFontSize(this.sprite.dom);
                        canvas = this.getDisposableCanvas();
                        pixelRatio = this.getPixelRatio();
                        canvas.style.width = width + 'px';
                        canvas.style.height = height + 'px';
                        canvas.width = width * pixelRatio;
                        canvas.height = height * pixelRatio;
                        ctx = canvas.getContext("2d");
                        if (pixelRatio != 1) {
                            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);
                        }
                        // Add background if necessary
                        if (background) {
                            ctx.fillStyle = background.toString();
                            ctx.fillRect(0, 0, width, height);
                        }
                        promises = [];
                        if (this.useWebFonts) {
                            // TODO what if one of the other things errors before it's been able to set `blobs` ?
                            promises.push(this.getFontFamilies().then(function (fonts) {
                                blobs_1 = fonts.blobs;
                                return fonts.cssText;
                            }));
                        }
                        promises.push(this.imagesToDataURI(this.sprite.dom, options));
                        promises.push(this.prepForeignObjects(this.sprite.dom, options));
                        return [4 /*yield*/, Promise.all(promises)];
                    case 3:
                        a = _a.sent();
                        data = this.normalizeSVG("<style>" + a[0] + "</style>" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, font, fontSize);
                        svg = new Blob([data], { type: "image/svg+xml" });
                        url = DOMURL_1.createObjectURL(svg);
                        return [4 /*yield*/, this.loadNewImage(url, width, height, "anonymous")];
                    case 4:
                        img = _a.sent();
                        // Draw image on canvas
                        ctx.drawImage(img, 0, 0);
                        // Options are set?
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](options)) {
                            options = {};
                        }
                        uri = canvas.toDataURL(this.getContentType(type), options.quality);
                        // Get rid of the canvas
                        this.disposeCanvas(canvas);
                        return [2 /*return*/, uri];
                    case 5:
                        e_2 = _a.sent();
                        return [4 /*yield*/, this.getImageAdvanced(type, options)];
                    case 6: 
                    // An error occurred, let's try advanced method
                    return [2 /*return*/, _a.sent()];
                    case 7:
                        if (url !== null) {
                            DOMURL_1.revokeObjectURL(url);
                        }
                        if (blobs_1 !== null) {
                            _utils_Array__WEBPACK_IMPORTED_MODULE_18__["each"](blobs_1, function (url) {
                                DOMURL_1.revokeObjectURL(url);
                            });
                        }
                        // Restore replaced tainted images in DOM
                        this.restoreRemovedObjects();
                        return [7 /*endfinally*/];
                    case 8: return [3 /*break*/, 11];
                    case 9: return [4 /*yield*/, this.getImageAdvanced(type, options)];
                    case 10: 
                    /**
                     * Going the hard way. Converting to canvas from each node
                     */
                    return [2 /*return*/, _a.sent()];
                    case 11: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and
     * export an image using its functions.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}               type     Image format
     * @param {IExportImageOptions}  options  Options
     * @return {Promise<string>}              Data uri
     */
    Export.prototype.getImageAdvanced = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var background, canvg, width, height, font, fontSize, data, canvas, pixelRatio, config, res, uri;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // Convert external images to data uris
                    return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];
                    case 1:
                        // Convert external images to data uris
                        _a.sent();
                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);
                        return [4 /*yield*/, this.canvg];
                    case 2:
                        canvg = _a.sent();
                        width = this.sprite.pixelWidth, height = this.sprite.pixelHeight, font = this.findFont(this.sprite.dom), fontSize = this.findFontSize(this.sprite.dom);
                        data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, font, fontSize, background);
                        canvas = this.getDisposableCanvas();
                        pixelRatio = this.getPixelRatio();
                        canvas.style.width = (width * pixelRatio) + 'px';
                        canvas.style.height = (height * pixelRatio) + 'px';
                        canvas.width = width * pixelRatio;
                        canvas.height = height * pixelRatio;
                        config = {
                            //ignoreDimensions: true,
                            useCORS: true
                        };
                        if (pixelRatio != 1) {
                            config.ignoreDimensions = true;
                            config.scaleWidth = width * pixelRatio;
                            config.scaleHeight = height * pixelRatio;
                        }
                        res = canvg(canvas, data, config);
                        // Options are set?
                        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](options)) {
                            options = {};
                        }
                        uri = canvas.toDataURL(this.getContentType(type), options.quality);
                        // Get rid of the canvas
                        this.disposeCanvas(canvas);
                        return [2 /*return*/, uri];
                }
            });
        });
    };
    /**
     * Creates a `<canvas>` element and returns it.
     *
     * @return {HTMLCanvasElement} Canvas element
     */
    Export.prototype.getDisposableCanvas = function () {
        var canvas = document.createElement("canvas");
        canvas.style.position = "fixed";
        canvas.style.top = "-10000px";
        document.body.appendChild(canvas);
        return canvas;
    };
    /**
     * Removes canvas.
     *
     * @param {HTMLCanvasElement}  canvas  Canvas element
     */
    Export.prototype.disposeCanvas = function (canvas) {
        document.body.removeChild(canvas);
    };
    /**
     * Returns pixel ratio for retina displays.
     *
     * @return {number} Pixel ratio
     */
    Export.prototype.getPixelRatio = function () {
        return this.useRetina ? _utils_Utils__WEBPACK_IMPORTED_MODULE_17__["getPixelRatio"]() : 1;
    };
    /**
     * Converts all `<image>` tags in SVG to use data uris instead of external
     * URLs
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @param  {SVGSVGElement}        el       SVG node
     * @param  {IExportImageOptions}  options  Options
     * @return {Promise<void>}                 Promise
     */
    Export.prototype.imagesToDataURI = function (el, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var images, promises, count, i, image, href;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        images = el.querySelectorAll("image");
                        if (!images.length) return [3 /*break*/, 2];
                        promises = [];
                        // There are images, process each of them
                        for (count = images.length, i = 0; i < count; i++) {
                            image = images[i];
                            href = image.getAttributeNS(Export.XLINK, "href");
                            // no href?
                            if (!href) {
                                continue;
                            }
                            if (href.indexOf("data:image") !== -1) {
                                // Ignore image if it's already in Data URI format
                            }
                            else {
                                // SVG or bitmap image?
                                if (href.indexOf(".svg") !== -1) {
                                    promises.push(this.svgToDataURI(image, options));
                                }
                                else {
                                    promises.push(this.imageToDataURI(image, options));
                                }
                            }
                        }
                        return [4 /*yield*/, Promise.all(promises)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * `foreignObject` elements cannot be exported. This function hides them
     * temprarily. In the future it might try to convert them to SVG to make them
     * exportable.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @param  {SVGSVGElement}        el       SVG node
     * @param  {IExportImageOptions}  options  Options
     * @return {Promise<void>}                 Promise
     */
    Export.prototype.prepForeignObjects = function (el, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var objects, count, i;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                objects = el.querySelectorAll("foreignObject");
                if (objects.length) {
                    // There are foreign objects, process each of them
                    for (count = objects.length, i = 0; i < count; i++) {
                        this.temporarilyRemoveObject(objects[i]);
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    /**
     * Converts an SVG `<image>` to use its data uri for `href` instead of
     * external file.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @param {SVGImageElement}     el       SVG element
     * @param {IExportImageOptions} options  Options
     */
    Export.prototype.imageToDataURI = function (el, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var img, canvas, uri, e_3;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, "href"), null, null, "anonymous")];
                    case 1:
                        // Create image
                        img = _a.sent();
                        canvas = document.createElement("canvas");
                        canvas.width = img.width;
                        canvas.height = img.height;
                        // Draw new image on it via `toDataURL`
                        canvas.getContext("2d").drawImage(img, 0, 0);
                        // Replace image `href` with data uri
                        // If we got to this point it means image has loaded, however we might
                        // still get an error with `toDataURL()`
                        try {
                            uri = canvas.toDataURL();
                            el.setAttribute("href", uri);
                            return [2 /*return*/, uri];
                        }
                        catch (e) {
                            // Give up and temporarily remove the element href temporarily
                            if (options.keepTainted !== false) {
                                /*this._removedObjects.push({
                                    "element": el,
                                    "originalHref": el.getAttributeNS(Export.XLINK, "href")
                                });
                                el.setAttributeNS(Export.XLINK, "href", "");*/
                                this.temporarilyRemoveObject(el);
                            }
                            return [2 /*return*/, undefined];
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        e_3 = _a.sent();
                        // Give up and temporarily remove the element's href
                        if (!options || options.keepTainted !== false) {
                            /*this._removedObjects.push({
                                "element": el,
                                "originalHref": el.getAttributeNS(Export.XLINK, "href")
                            });
                            el.setAttributeNS(Export.XLINK, "href", "");*/
                            this.temporarilyRemoveObject(el);
                        }
                        return [2 /*return*/, undefined];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Converts `<image>` with external SVG source to data uri. Loads external SVG
     * file, then converts it to data uri and replaces the `xlink:href` parameter.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @param {SVGImageElement}     el        An SVG element
     * @param {IExportImageOptions} options   Options
     */
    Export.prototype.svgToDataURI = function (el, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var href, data, charset, uri, e_4;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        href = el.getAttributeNS(Export.XLINK, "href");
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, _utils_Net__WEBPACK_IMPORTED_MODULE_15__["load"](href)];
                    case 2:
                        data = _a.sent();
                        charset = this.adapter.apply("charset", {
                            charset: "base64",
                            type: "svg",
                            options: options
                        }).charset;
                        uri = this.adapter.apply("svgToDataURI", {
                            data: "data:" + this.getContentType("svg") + ";" + charset + "," + btoa(data.response),
                            options: options
                        }).data;
                        el.setAttributeNS(Export.XLINK, "href", uri);
                        return [2 /*return*/, uri];
                    case 3:
                        e_4 = _a.sent();
                        // Disable temporarily
                        if (!options || options.keepTainted !== false) {
                            /*this._removedObjects.push({
                                "element": el,
                                "originalHref": href
                            });
                            el.setAttributeNS(Export.XLINK, "href", "");*/
                            this.temporarilyRemoveObject(el);
                        }
                        return [2 /*return*/, undefined];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Temporarily removes element from DOM, and replaces it with a dummy
     * placeholder, as well as stores it for later restoration.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @param {Node} el Node
     */
    Export.prototype.temporarilyRemoveObject = function (el, placeholder) {
        // Get parent
        var parent = el.parentElement || el.parentNode;
        // Create a placeholder group element if it has not been passed in
        if (!placeholder) {
            placeholder = this.sprite.paper.add("g").node;
        }
        parent.insertBefore(placeholder, el);
        // Check if we have a textContents we can replace with
        // @todo Perhaps we should explore alternatives to creating text nodes
        // i.e. creating a text version of the HTML-based Text, just for export
        // purposes. Converting HTML into SVG is very complicated
        if (el.textContent) {
            /*let text = this.sprite.paper.add("text").node;
            text.textContent = el.textContent;
            placeholder.appendChild(text);

            // Copy properties from the removing element to the placeholder
            $dom.copyAttributes(el, placeholder);*/
        }
        // Remove the old element
        parent.removeChild(el);
        // Log removed item
        this._removedObjects.push({
            "element": el,
            "placeholder": placeholder
        });
    };
    /**
     * Restores all (possibly tainted or unsupported) objects that were
     * temporarily removed when exporting.
     *
     * @ignore Exclude from docs
     */
    Export.prototype.restoreRemovedObjects = function () {
        var obj;
        while (obj = this._removedObjects.pop()) {
            //obj.element.setAttribute("href", obj.originalHref);
            var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;
            parent_1.insertBefore(obj.element, obj.placeholder);
            //parent.removeChild(obj.placeholder);
        }
    };
    /**
     * Checkes if simplified export can be used using `createObjectURL` and SVG
     * document does not contain any external images.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @return {boolean} `true` if simplified export can be used
     */
    Export.prototype.simplifiedImageExport = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var cache, canvas, ctx, DOMURL, svg, url, img, e_5;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        cache = _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].getCache("simplifiedImageExport");
                        if (cache === false || cache === true) {
                            return [2 /*return*/, cache];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        canvas = document.createElement("canvas");
                        canvas.width = 1;
                        canvas.height = 1;
                        ctx = canvas.getContext("2d");
                        DOMURL = this.getDOMURL();
                        svg = new Blob([this.normalizeSVG("<g></g>", {}, 1, 1)], { type: "image/svg+xml" });
                        url = DOMURL.createObjectURL(svg);
                        return [4 /*yield*/, this.loadNewImage(url, 1, 1)];
                    case 2:
                        img = _a.sent();
                        ctx.drawImage(img, 0, 0);
                        DOMURL.revokeObjectURL(url);
                        try {
                            //let uri = canvas.toDataURL("image/png");
                            _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].setCache("simplifiedImageExport", true);
                            return [2 /*return*/, true];
                        }
                        catch (e) {
                            _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].setCache("simplifiedImageExport", false);
                            return [2 /*return*/, false];
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        e_5 = _a.sent();
                        _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].setCache("simplifiedImageExport", false);
                        return [2 /*return*/, false];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Returns a new `<image>` element.
     *
     * @ignore Exclude from docs
     * @param  {string}                     url          URL of the image
     * @param  {number}                     width        Width (px)
     * @param  {number}                     height       Height (px)
     * @param  {string}                     crossOrigin  Cross-Origin setting
     * @return {Promise<HTMLImageElement>}               Promise
     */
    Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {
        return new Promise(function (success, error) {
            // New image
            var image;
            if (width && height) {
                image = new Image(width, height);
            }
            else {
                image = new Image();
            }
            // Set crossorigin
            if (crossOrigin) {
                image.setAttribute("crossOrigin", crossOrigin);
            }
            // Report success on load
            image.onload = function () {
                success(image);
            };
            function onerror() {
                // Error occurred. Just in case it's the crossOrigin issue, let's try
                // stripping off this attribute and trying again
                if (crossOrigin) {
                    // Retain old uri
                    var currentHref = image.src;
                    // Set up another `onerror` to handle situations where image is not
                    // loadable at all (i.e. protected by CORS)
                    image.onerror = function () {
                        // Nope, no luck
                        error(new Error("Loading image \"" + url + "\" failed"));
                    };
                    // remove the `crossOrigin` attribute
                    image.removeAttribute("crossorigin");
                    // retry
                    image.src = "";
                    image.src = currentHref;
                }
                else {
                    error(new Error("Loading image \"" + url + "\" failed"));
                }
            }
            // Set image error handlers
            image.onabort = onerror;
            image.onerror = onerror;
            // Trigger load
            image.src = url;
        });
    };
    /**
     * Returns current DOM URL.
     *
     * @ignore Exclude from docs
     * @return {any} URL
     */
    Export.prototype.getDOMURL = function () {
        return self.URL || self.webkitURL || self;
    };
    /**
     * Returns an SVG representation of the chart.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}             type     Type of the export
     * @param {IExportSVGOptions}  options  Options
     * @return {Promise<string>}            Promise
     */
    Export.prototype.getSVG = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var width, height, font, fontSize, svg, charset, uri;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                width = this.sprite.pixelWidth, height = this.sprite.pixelHeight, font = this.findFont(this.sprite.dom), fontSize = this.findFontSize(this.sprite.dom);
                svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, font, fontSize);
                charset = this.adapter.apply("charset", {
                    charset: "charset=utf-8",
                    type: "svg",
                    options: options
                }).charset;
                uri = this.adapter.apply("getSVG", {
                    data: "data:" + this.getContentType(type) + ";" + charset + "," + encodeURIComponent(svg),
                    options: options
                }).data;
                return [2 /*return*/, uri];
            });
        });
    };
    /**
     * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if
     * necessary.
     *
     * @ignore Exclude from docs
     * @param  {string}             svg       Input SVG
     * @param  {IExportSVGOptions}  options   Options
     * @param  {number}             width     Width of the SVG viewport
     * @param  {number}             height    Height of the SVG viewport
     * @param  {string}             font      Font family to use as a base
     * @param  {string}             fontSize  Font size to use as a base
     * @return {string}                       Output SVG
     * @todo Add style params to existing <svg>
     */
    Export.prototype.normalizeSVG = function (svg, options, width, height, font, fontSize, background) {
        // Construct width/height params
        var dimParams = "";
        if (width) {
            dimParams += "width=\"" + width + "px\" ";
        }
        if (height) {
            dimParams += "height=\"" + height + "px\" ";
        }
        // Apply font settings
        var styleParams = "";
        if (font) {
            styleParams += "font-family: " + font.replace(/"/g, "") + ";";
        }
        if (fontSize) {
            styleParams += "font-size: " + fontSize + ";";
        }
        // Add missing <svg> enclosure
        if (!svg.match(/<svg/)) {
            svg = "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg " + dimParams + " style=\"" + styleParams + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">" + svg + "</svg>";
        }
        else {
            if (dimParams !== "") {
                // Clear current params
                svg = svg.replace(/(<svg[^>]*)width="[^"]*"/, "$1");
                svg = svg.replace(/(<svg[^>]*)height="[^"]*"/, "$1");
                // Add new params
                svg = svg.replace(/(<svg)/, "$1" + dimParams);
            }
            /*if (styleParams !== "") {
                // Clear current params
                svg = svg.replace(/(<svg[^>]*)stylewidth="[^"]*"/, "$1");
                svg = svg.replace(/(<svg[^>]*)height="[^"]*"/, "$1");

                // Add new params
                svg = svg.replace(/(<svg)/, "$1" + dimParams);
            }*/
        }
        if (background) {
            svg = svg.replace(/(<svg[^>]*>)/, "$1<rect width=\"100%\" height=\"100%\" fill=\"" + background.rgba + "\"/>");
            //svg = svg.replace(/<\/svg>/, "<rect width=\"100%\" height=\"100%\" fill=\"" + background.rgba + "\"/></svg>");
        }
        svg = this.adapter.apply("normalizeSVG", {
            data: svg,
            options: options
        }).data;
        return svg;
    };
    /**
     * Serializes an element and returns its contents.
     *
     * @ignore Exclude from docs
     * @param  {HTMLElement | SVGSVGElement}  element  An element to serialize
     * @return {string}                                A serialized XML
     */
    Export.prototype.serializeElement = function (element) {
        return new XMLSerializer().serializeToString(element);
    };
    /**
     * Returns a PDF containing chart image.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}             type     Type of the export
     * @param {IExportPDFOptions}  options  Options
     * @return {Promise<string>}            Promise
     * @async
     * @todo Account for header when calculating vertical fit
     */
    Export.prototype.getPDF = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var image, pdfmake, defaultMargins, doc, title;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getImage(options.imageFormat || "png", options)];
                    case 1:
                        image = _a.sent();
                        return [4 /*yield*/, this.pdfmake];
                    case 2:
                        pdfmake = _a.sent();
                        defaultMargins = [30, 30, 30, 30];
                        doc = {
                            pageSize: options.pageSize || "A4",
                            pageOrientation: options.pageOrientation || "portrait",
                            pageMargins: options.pageMargins || defaultMargins,
                            //header: <any>[],
                            content: []
                        };
                        title = this.adapter.apply("title", {
                            title: this.title,
                            options: options
                        }).title;
                        if (title) {
                            doc.content.push({
                                text: title,
                                fontSize: options.fontSize,
                                bold: true,
                                margin: [0, 0, 0, 15]
                            });
                        }
                        // Add page URL?
                        if (options.addURL) {
                            doc.content.push({
                                text: this.language.translate("Saved from") + ": " + document.location.href,
                                fontSize: options.fontSize,
                                margin: [0, 0, 0, 15]
                            });
                        }
                        // Add image
                        doc.content.push({
                            image: image,
                            fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins)
                        });
                        // Apply adapters
                        doc = this.adapter.apply("pdfmakeDocument", {
                            doc: doc,
                            options: options
                        }).doc;
                        return [4 /*yield*/, new Promise(function (success, error) {
                                pdfmake.createPdf(doc).getDataUrl(function (uri) {
                                    success(uri);
                                });
                            })];
                    case 3: 
                    // Create PDF
                    return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Returns fit dimensions for available page sizes.
     *
     * @ignore Exclude from docs
     * @param  {pageSizes} pageSize Page size
     * @return {number[]}           `[width, height]` in pixels
     */
    Export.prototype.getPageSizeFit = function (pageSize, margins) {
        // Check margins
        var newMargins = [0, 0, 0, 0];
        if (typeof margins == "number") {
            newMargins = [margins, margins, margins, margins];
        }
        else if (margins.length == 2) {
            newMargins = [margins[0], margins[1], margins[0], margins[1]];
        }
        else if (margins.length == 4) {
            newMargins = margins;
        }
        // Define available page sizes
        var sizes = {
            "4A0": [4767.87, 6740.79],
            "2A0": [3370.39, 4767.87],
            A0: [2383.94, 3370.39],
            A1: [1683.78, 2383.94],
            A2: [1190.55, 1683.78],
            A3: [841.89, 1190.55],
            A4: [595.28, 841.89],
            A5: [419.53, 595.28],
            A6: [297.64, 419.53],
            A7: [209.76, 297.64],
            A8: [147.40, 209.76],
            A9: [104.88, 147.40],
            A10: [73.70, 104.88],
            B0: [2834.65, 4008.19],
            B1: [2004.09, 2834.65],
            B2: [1417.32, 2004.09],
            B3: [1000.63, 1417.32],
            B4: [708.66, 1000.63],
            B5: [498.90, 708.66],
            B6: [354.33, 498.90],
            B7: [249.45, 354.33],
            B8: [175.75, 249.45],
            B9: [124.72, 175.75],
            B10: [87.87, 124.72],
            C0: [2599.37, 3676.54],
            C1: [1836.85, 2599.37],
            C2: [1298.27, 1836.85],
            C3: [918.43, 1298.27],
            C4: [649.13, 918.43],
            C5: [459.21, 649.13],
            C6: [323.15, 459.21],
            C7: [229.61, 323.15],
            C8: [161.57, 229.61],
            C9: [113.39, 161.57],
            C10: [79.37, 113.39],
            RA0: [2437.80, 3458.27],
            RA1: [1729.13, 2437.80],
            RA2: [1218.90, 1729.13],
            RA3: [864.57, 1218.90],
            RA4: [609.45, 864.57],
            SRA0: [2551.18, 3628.35],
            SRA1: [1814.17, 2551.18],
            SRA2: [1275.59, 1814.17],
            SRA3: [907.09, 1275.59],
            SRA4: [637.80, 907.09],
            EXECUTIVE: [521.86, 756.00],
            FOLIO: [612.00, 936.00],
            LEGAL: [612.00, 1008.00],
            LETTER: [612.00, 792.00],
            TABLOID: [792.00, 1224.00]
        };
        // Calculate size
        var fitSize = sizes[pageSize];
        fitSize[0] -= newMargins[0] + newMargins[2];
        fitSize[1] -= newMargins[1] + newMargins[3];
        return fitSize;
    };
    /**
     * Returns an Excel file of chart's data.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}               type     Type of the export
     * @param {IExportExcelOptions}  options  Options
     * @return {Promise<string>}              Promise
     * @async
     * @todo Handle dates
     * @todo Support for multi-sheet
     */
    Export.prototype.getExcel = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var XLSX, wbOptions, sheetName, wb, data, dataFields, len, i, uri;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.xlsx];
                    case 1:
                        XLSX = _a.sent();
                        wbOptions = this.adapter.apply("xlsxWorkbookOptions", {
                            options: {
                                bookType: "xlsx",
                                bookSST: false,
                                type: "base64",
                            }
                        }).options;
                        sheetName = this.normalizeExcelSheetName(this.adapter.apply("xlsxSheetName", {
                            name: this.title || this.language.translate("Data")
                        }).name);
                        wb = {
                            SheetNames: [sheetName],
                            Sheets: {}
                        };
                        data = [];
                        dataFields = this.dataFields;
                        // Add column names?
                        if (options.addColumnNames) {
                            data.push(this.getExcelRow(dataFields, options));
                        }
                        // Add lines
                        for (len = this.data.length, i = 0; i < len; i++) {
                            data.push(this.getExcelRow(this.data[i], options, dataFields));
                        }
                        // Create sheet and add data
                        wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);
                        uri = this.adapter.apply("getExcel", {
                            data: "data:" + this.getContentType(type) + ";base64," + XLSX.write(wb, wbOptions),
                            options: options
                        }).data;
                        return [2 /*return*/, uri];
                }
            });
        });
    };
    /**
     * This is needed to work around Excel limitations.
     *
     * @param  {string}  name  Source name
     * @return {string}        Normalized name
     */
    Export.prototype.normalizeExcelSheetName = function (name) {
        name = name.replace(/([:\\\/?*\[\]]+)/g, " ");
        return _utils_Utils__WEBPACK_IMPORTED_MODULE_17__["truncateWithEllipsis"](name, 31, "...", true);
    };
    /**
     * Rertuns an array of values to be used as Excel row.
     *
     * @ignore Exclude from docs
     * @param  {any}                  row         Row data
     * @param  {IExportExcelOptions}  options     Options
     * @param  {any}                  dataFields  Data fields
     * @return {any[]}                            Array of values
     */
    Export.prototype.getExcelRow = function (row, options, dataFields) {
        var _this = this;
        // Init
        var items = [];
        // Data fields
        if (!dataFields) {
            dataFields = row;
        }
        // Process each row item
        _utils_Object__WEBPACK_IMPORTED_MODULE_14__["each"](dataFields, function (key, name) {
            // Get value
            var value = _this.convertEmptyValue(key, row[key], options);
            // Check if we need to skip
            /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {
                return;
            }*/
            items.push(_this.convertToDateOrDuration(key, value, options, true));
        });
        return items;
    };
    /**
     * Returns chart's data formatted as CSV.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}             type     Type of the export
     * @param {IExportCSVOptions}  options  Options
     * @return {Promise<string>}            Promise
     * @async
     */
    Export.prototype.getCSV = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var csv, dataFields, br, len, i, row, charset, uri;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                csv = "";
                dataFields = this.dataFields;
                br = "";
                for (len = this.data.length, i = 0; i < len; i++) {
                    row = this.getCSVRow(this.data[i], options, dataFields);
                    if (options.reverse) {
                        csv = row + br + csv;
                    }
                    else {
                        csv += br + row;
                    }
                    br = "\n";
                }
                // Add column names?
                if (options.addColumnNames) {
                    csv = this.getCSVRow(dataFields, options) + br + csv;
                }
                charset = this.adapter.apply("charset", {
                    charset: "charset=utf-8",
                    type: type,
                    options: options
                }).charset;
                uri = this.adapter.apply("getCSV", {
                    data: "data:" + this.getContentType(type) + ";" + charset + "," + encodeURIComponent(csv),
                    options: options
                }).data;
                return [2 /*return*/, uri];
            });
        });
    };
    /**
     * Formats a row of CSV data.
     *
     * @ignore Exclude from docs
     * @param  {any}                row         An object holding data for the row
     * @param  {IExportCSVOptions}  options     Options
     * @param  {any}                dataFields  Data fields
     * @return {string}                         Formated CSV line
     */
    Export.prototype.getCSVRow = function (row, options, dataFields) {
        var _this = this;
        // Init
        var separator = options.separator || ",";
        var items = [];
        // Data fields
        if (!dataFields) {
            dataFields = row;
        }
        // Process each row item
        _utils_Object__WEBPACK_IMPORTED_MODULE_14__["each"](dataFields, function (key, name) {
            // Get value
            var value = _this.convertEmptyValue(key, row[key], options);
            // Check if we need to skip
            // This is no longer required because we are iterating via dataFields anyway
            /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {
                return;
            }*/
            // Convert dates
            var item = _this.convertToDateOrDuration(key, value, options);
            // Cast and escape doublequotes
            item = "" + item;
            item = item.replace(/"/g, '""');
            // Enclose into double quotes
            if (options.forceQuotes || (item.search(new RegExp("\"|\n|" + separator, "g")) >= 0)) {
                item = "\"" + item + "\"";
            }
            // Add to item
            items.push(item);
        });
        return items.join(separator);
    };
    /**
     * Returns chart's data in JSON format.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}              type     Type of the export
     * @param {IExportJSONOptions}  options  Options
     * @return {Promise<string>}             Promise
     * @async
     */
    Export.prototype.getJSON = function (type, options) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var _this = this;
            var json, charset, uri;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                json = JSON.stringify(this.data, function (key, value) {
                    if (typeof value == "object") {
                        _utils_Object__WEBPACK_IMPORTED_MODULE_14__["each"](value, function (field, item) {
                            value[field] = _this.convertToDateOrDuration(field, item, options);
                        });
                    }
                    return value;
                }, options.indent);
                charset = this.adapter.apply("charset", {
                    charset: "charset=utf-8",
                    type: type,
                    options: options
                }).charset;
                uri = this.adapter.apply("getJSON", {
                    data: "data:" + this.getContentType(type) + ";" + charset + "," + encodeURIComponent(json),
                    options: options
                }).data;
                return [2 /*return*/, uri];
            });
        });
    };
    /**
     * Converts the value to proper date format.
     *
     * @ignore Exclude from docs
     * @param  {string}                                  field       Field name
     * @param  {any}                                     value       Value
     * @param  {IExportCSVOptions | IExportJSONOptions}  options     Options
     * @param  {boolean}                                 keepAsDate  Will ignore formatting and will keep as Date object if set
     * @return {any}                                                 Formatted date value or unmodified value
     */
    Export.prototype.convertToDateOrDuration = function (field, value, options, keepAsDate) {
        // Is this a timestamp or duration?
        if (typeof value == "number") {
            if (this.isDateField(field)) {
                value = new Date(value);
            }
            else if (this.isDurationField(field)) {
                return this.durationFormatter.format(value, this.durationFormat);
            }
        }
        if (value instanceof Date) {
            if (options.useTimestamps) {
                value = value.getTime();
            }
            else if (options.useLocale) {
                if (!keepAsDate) {
                    value = value.toLocaleString();
                }
            }
            else {
                value = this.dateFormatter.format(value, this.dateFormat);
            }
        }
        return value;
    };
    /**
     * Converts empty value based on `emptyAs` option.
     *
     * @ignore Exclude from docs
     * @type {string}
     */
    Export.prototype.convertEmptyValue = function (field, value, options) {
        return _utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](value) ? value : options.emptyAs;
    };
    /**
     * Triggers download of the file.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param  {string}            uri       Data URI with file content
     * @param  {string}            fileName  File name
     * @return {Promise<boolean>}            Promise
     * @async
     */
    Export.prototype.download = function (uri, fileName) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var link, parts, contentType, decoded, chars, i, charCode, blob, parts, contentType, iframe, idoc;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                //if (window.navigator.msSaveOrOpenBlob === undefined) {
                if (this.linkDownloadSupport() && !this.blobDownloadSupport()) {
                    link = document.createElement("a");
                    link.download = fileName;
                    //uri = uri.replace(/#/g, "%23");
                    link.href = uri;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                else if (_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](window.navigator.msSaveBlob)) {
                    parts = uri.split(";");
                    contentType = parts.shift().replace(/data:/, "");
                    uri = decodeURIComponent(parts.join(";").replace(/^[^,]*,/, ""));
                    // Check if we need to Base64-decode
                    if (["image/svg+xml", "application/json", "text/csv"].indexOf(contentType) == -1) {
                        try {
                            decoded = atob(uri);
                            uri = decoded;
                        }
                        catch (e) {
                            // Error occurred, meaning string was not Base64-encoded. Do nothing.
                            return [2 /*return*/, false];
                        }
                    }
                    chars = new Array(uri.length);
                    for (i = 0; i < uri.length; ++i) {
                        charCode = uri.charCodeAt(i);
                        chars[i] = charCode;
                    }
                    blob = new Blob([new Uint8Array(chars)], { type: contentType });
                    window.navigator.msSaveBlob(blob, fileName);
                }
                else if (this.legacyIE()) {
                    parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);
                    if (parts.length === 4) {
                        // Base64-encoded or text-based stuff?
                        if (parts[2] == "base64") {
                            // Base64-encoded - probably an image
                            if (parts[1].match(/^image\//)) {
                                // Yep, an image. Let's create a temporary image placeholder,
                                // so that user can use do Save As.
                                this.showModal("<img src=\"" + uri + "\" style=\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\" />" +
                                    "<p>" + this.language.translate("To save the image, right-click thumbnail on the left and choose \"Save picture as...\"") +
                                    "</p>" +
                                    "<p style=\"text-align: center;\"><small>" + this.language.translate("(Press ESC to close this message)") + "</small></p>", this.language.translate("Image Export Complete"));
                            }
                        }
                        else {
                            contentType = void 0;
                            if (fileName.match(/\.svg$/)) {
                                contentType = "image/svg+xml";
                            }
                            else {
                                contentType = "text/plain";
                                fileName += ".txt";
                            }
                            iframe = document.createElement("iframe");
                            iframe.width = "1px";
                            iframe.height = "1px";
                            iframe.style.display = "none";
                            document.body.appendChild(iframe);
                            idoc = iframe.contentDocument;
                            idoc.open(contentType, "replace");
                            // TODO test this with various encodings (e.g. UTF)
                            //idoc.charset = parts[2].replace(/charset=/, "");
                            idoc.write(decodeURIComponent(parts[3]));
                            idoc.close();
                            idoc.execCommand("SaveAs", true, fileName);
                            // Destroy the iframe
                            document.body.removeChild(iframe);
                        }
                    }
                }
                return [2 /*return*/, true];
            });
        });
    };
    /**
     * Returns `true` if browser has any supported methods to trigger download
     * of a binary file.
     *
     * @return {boolean} Supports downloads?
     */
    Export.prototype.downloadSupport = function () {
        return this.linkDownloadSupport() || this.blobDownloadSupport();
    };
    /**
     * Checks if the browser supports "download" attribute on links.
     *
     * @ignore Exclude from docs
     * @return {boolean} Browser supports triggering downloads?
     */
    Export.prototype.linkDownloadSupport = function () {
        // Do we have this cached?
        var cache = _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].getCache("linkDownloadSupport");
        if (cache === false || cache === true) {
            return cache;
        }
        var a = document.createElement("a");
        var res = typeof a.download !== "undefined";
        _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].setCache("linkDownloadSupport", res);
        return res;
    };
    /**
     * Checks if the browser supports download via `msBlob`.
     *
     * @ignore Exclude from docs
     * @return {boolean} Browser supports triggering downloads?
     */
    Export.prototype.blobDownloadSupport = function () {
        return _utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](window.navigator.msSaveOrOpenBlob);
    };
    /**
     * Checks if this is a legacy version of IE.
     *
     * @ignore Exclude from docs
     * @return {boolean} IE9 or less?
     */
    Export.prototype.legacyIE = function () {
        // Create a temporary <div> with conditional tags in it an an <i> tag.
        // Count <i>s. If there are some, we have IE9 or late on our hands.
        var div = document.createElement("div");
        div.innerHTML = "<!--[if lt IE 10]><i></i><![endif]-->";
        return div.getElementsByTagName("i").length == 1;
    };
    /**
     * Initiates print of the chart.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @param {string}               data     Data URI for the image
     * @param {IExportPrintOptions}  options  Options
     * @param {string}               title    Optional title to use (uses window's title by default)
     * @return {Promise<boolean>}             Promise
     * @async
     */
    Export.prototype.print = function (data, options, title) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                if (options.printMethod == "css") {
                    return [2 /*return*/, this.printViaCSS(data, options, title)];
                }
                else {
                    return [2 /*return*/, this.printViaIframe(data, options, title)];
                }
                return [2 /*return*/];
            });
        });
    };
    Export.prototype.printViaCSS = function (data, options, title) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var scroll, rule, originalTitle, img, isIOS;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                scroll = document.documentElement.scrollTop || document.body.scrollTop;
                rule = new _utils_DOM__WEBPACK_IMPORTED_MODULE_13__["StyleRule"]("body > *", {
                    "display": "none",
                    "position": "fixed",
                    "visibility": "hidden",
                    "opacity": "0",
                    "clipPath": "polygon(0px 0px,0px 0px,0px 0px,0px 0px);"
                });
                if (title && document && document.title) {
                    originalTitle = document.title;
                    document.title = title;
                }
                img = new Image();
                img.src = data;
                img.style.maxWidth = "100%";
                img.style.display = "block";
                img.style.position = "relative";
                img.style.visibility = "visible";
                img.style.opacity = "1";
                img.style.clipPath = "none";
                document.body.appendChild(img);
                // Print
                this.setTimeout(function () {
                    window.print();
                }, 50);
                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
                if (isIOS && (options.delay < 1000)) {
                    options.delay = 1000;
                }
                else if (options.delay < 100) {
                    options.delay = 100;
                }
                // Delay function that resets back the document the way ot was before
                this.setTimeout(function () {
                    // Remove image
                    document.body.removeChild(img);
                    // Reset back all elements
                    /*for (let len = items.length, i = 0; i < len; i++) {
                        let item = <HTMLElement>items[i];
                        if ($dom.isElement(item)) {
                            item.style.display = states[i];
                        }
                    }*/
                    rule.dispose();
                    // Restore title
                    if (originalTitle) {
                        document.title = document.title;
                    }
                    // Scroll back the document the way it was before
                    document.documentElement.scrollTop = document.body.scrollTop = scroll;
                }, options.delay || 500);
                return [2 /*return*/, true];
            });
        });
    };
    Export.prototype.printViaIframe = function (data, options, title) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var iframe, img, isIOS;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                iframe = document.createElement("iframe");
                iframe.style.visibility = "hidden";
                document.body.appendChild(iframe);
                // This is needed for FireFox
                iframe.contentWindow.document.open();
                iframe.contentWindow.document.close();
                img = new Image();
                img.src = data;
                img.style.maxWidth = "100%";
                if (title) {
                    iframe.contentWindow.document.title = title;
                }
                iframe.contentWindow.document.body.appendChild(img);
                iframe.load = function () {
                    iframe.contentWindow.document.body.appendChild(img);
                };
                // Print
                this.setTimeout(function () {
                    try {
                        if (!iframe.contentWindow.document.execCommand("print", false, null)) {
                            iframe.contentWindow.print();
                        }
                    }
                    catch (e) {
                        iframe.contentWindow.print();
                    }
                }, options.delay || 50);
                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
                if (isIOS && (options.delay < 1000)) {
                    options.delay = 1000;
                }
                else if (options.delay < 100) {
                    options.delay = 100;
                }
                // Delay function that resets back the document the way ot was before
                this.setTimeout(function () {
                    // Remove image
                    document.body.removeChild(iframe);
                }, options.delay + 50 || 100);
                return [2 /*return*/, true];
            });
        });
    };
    /**
     * Finds a background color for the element. If element is transparent it goes
     * up the DOM hierarchy to find a parent element that does.
     *
     * @ignore Exclude from docs
     * @param  {Element}  element Element
     * @return {Color}            Color code
     */
    Export.prototype.findBackgroundColor = function (element) {
        // Check if element has styles set
        var opacity = 1, currentColor = "";
        if (element.currentStyle) {
            currentColor = element.currentStyle["background-color"];
        }
        else if (window.getComputedStyle) {
            currentColor = document.defaultView.getComputedStyle(element, null).getPropertyValue("background-color");
        }
        // Check opacity
        if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == "transparent") {
            opacity = 0;
        }
        if (opacity == 0) {
            var parent_2 = element.parentElement; // || <Element>element.parentNode;
            // Completely transparent. Look for a parent
            if (parent_2) {
                return this.findBackgroundColor(parent_2);
            }
            else {
                return Object(_utils_Color__WEBPACK_IMPORTED_MODULE_10__["color"])("#fff");
            }
        }
        else {
            return Object(_utils_Color__WEBPACK_IMPORTED_MODULE_10__["color"])(currentColor, opacity);
        }
    };
    /**
     * Returns a font fmaily name for the element (directly set or
     * computed/inherited).
     *
     * @ignore Exclude from docs
     * @param  {Element}  element  Element
     * @return {string}            Font family
     */
    Export.prototype.findFont = function (element) {
        // Check if element has styles set
        var font = "";
        if (element.currentStyle) {
            font = element.currentStyle["font-family"];
        }
        else if (window.getComputedStyle) {
            font = document.defaultView.getComputedStyle(element, null).getPropertyValue("font-family");
        }
        if (!font) {
            // Completely transparent. Look for a parent
            var parent_3 = element.parentElement || element.parentNode;
            if (parent_3) {
                return this.findFont(parent_3);
            }
            else {
                return undefined;
            }
        }
        else {
            return font;
        }
    };
    /**
     * Returns a font fmaily name for the element (directly set or
     * computed/inherited).
     *
     * @ignore Exclude from docs
     * @param  {Element}  element  Element
     * @return {string}            Font family
     */
    Export.prototype.findFontSize = function (element) {
        // Check if element has styles set
        var font = "";
        if (element.currentStyle) {
            font = element.currentStyle["font-size"];
        }
        else if (window.getComputedStyle) {
            font = document.defaultView.getComputedStyle(element, null).getPropertyValue("font-size");
        }
        if (!font) {
            // Completely transparent. Look for a parent
            var parent_4 = element.parentElement || element.parentNode;
            if (parent_4) {
                return this.findFont(parent_4);
            }
            else {
                return undefined;
            }
        }
        else {
            return font;
        }
    };
    Object.defineProperty(Export.prototype, "container", {
        /**
         * @return {HTMLElement} Reference
         */
        get: function () {
            return this.adapter.apply("container", {
                container: this._container
            }).container;
        },
        /**
         * A reference to a container to be used to place [[ExportMenu]] in.
         *
         * @param {HTMLElement} value Reference
         */
        set: function (value) {
            this._container = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "sprite", {
        /**
         * @return {Sprite} Sprite
         */
        get: function () {
            return this.adapter.apply("sprite", {
                sprite: this._sprite
            }).sprite;
        },
        /**
         * A reference to [[Sprite]] to export. Can be any Sprite, including some
         * internal elements.
         *
         * @param {Sprite} value Sprite
         */
        set: function (value) {
            this._sprite = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "data", {
        /**
         * @return {any} Data
         */
        get: function () {
            return this.adapter.apply("data", {
                data: this._data
            }).data;
        },
        /**
         * Data to export.
         *
         * @param {any} value Data
         */
        set: function (value) {
            this._data = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "dataFields", {
        /**
         * @return {any} Field names `{ field: fieldName }`
         */
        get: function () {
            if (!this._dataFields) {
                this.generateDataFields();
            }
            return this.adapter.apply("dataFields", {
                dataFields: this._dataFields
            }).dataFields;
        },
        /**
         * Data fields in `{ field: fieldName }` format. Those are used for
         * exporting in data formats to name the columns.
         *
         * @param {any} value Field names
         */
        set: function (value) {
            this._dataFields = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "dateFormatter", {
        /**
         * @return {any} A DateFormatter instance
         */
        get: function () {
            if (!this._dateFormatter) {
                this._dateFormatter = new _formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_6__["DateFormatter"]();
            }
            return this.adapter.apply("dateFormatter", {
                dateFormatter: this._dateFormatter
            }).dateFormatter;
        },
        /**
         * A [[DateFormatter]] to use when formatting dates when exporting data.
         *
         * @param {any} value DateFormatter instance
         */
        set: function (value) {
            this._dateFormatter = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "dateFormat", {
        /**
         * @return {Optional<string>} Date format
         */
        get: function () {
            return this.adapter.apply("dateFormat", {
                dateFormat: this._dateFormat
            }).dateFormat;
        },
        /**
         * A date format to use for exporting dates. Will use [[DateFormatter]]
         * format if not set.
         *
         * @param {Optional<string>} value Date format
         */
        set: function (value) {
            this._dateFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "dateFields", {
        /**
         * @return {List<string>} Date field list
         */
        get: function () {
            if (!this._dateFields) {
                this._dateFields = new _utils_List__WEBPACK_IMPORTED_MODULE_4__["List"]();
            }
            return this.adapter.apply("dateFields", {
                dateFields: this._dateFields
            }).dateFields;
        },
        /**
         * A list of fields that hold date values.
         *
         * @param {List<string>} value Date field list
         */
        set: function (value) {
            this._dateFields = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "durationFormatter", {
        /**
         * @return {any} A DurationFormatter instance
         */
        get: function () {
            if (!this._durationFormatter) {
                this._durationFormatter = new _formatters_DurationFormatter__WEBPACK_IMPORTED_MODULE_7__["DurationFormatter"]();
            }
            return this.adapter.apply("durationFormatter", {
                durationFormatter: this._durationFormatter
            }).durationFormatter;
        },
        /**
         * A [[DurationFormatter]] to use when formatting duration values when
         * exporting data.
         *
         * @param {any}  value  DurationFormatter instance
         */
        set: function (value) {
            this._durationFormatter = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "durationFormat", {
        /**
         * @return {Optional<string>} Duration format
         */
        get: function () {
            return this.adapter.apply("durationFormat", {
                durationFormat: this._durationFormat
            }).durationFormat;
        },
        /**
         * A format to use when formatting values from `durationFields`.
         * Will use [[DurationFormatter]] format if not set.
         *
         * @param {Optional<string>} value Duration format
         */
        set: function (value) {
            this._durationFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "durationFields", {
        /**
         * @return {List<string>} Duration field list
         */
        get: function () {
            if (!this._durationFields) {
                this._durationFields = new _utils_List__WEBPACK_IMPORTED_MODULE_4__["List"]();
            }
            return this.adapter.apply("durationFields", {
                durationFields: this._durationFields
            }).durationFields;
        },
        /**
         * A list of fields that hold duration values.
         *
         * @param {List<string>} value Duration field list
         */
        set: function (value) {
            this._durationFields = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Generates data fields out of the first row of data.
     *
     * @ignore Exclude from docs
     */
    Export.prototype.generateDataFields = function () {
        var _this = this;
        this._dataFields = {};
        if (this.data.length) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_18__["each"](this.data, function (row) {
                _utils_Object__WEBPACK_IMPORTED_MODULE_14__["each"](row, function (key, value) {
                    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](_this._dataFields[key])) {
                        _this._dataFields[key] = _this.adapter.apply("dataFieldName", {
                            name: key,
                            field: key
                        }).name;
                    }
                });
            });
        }
    };
    /**
     * Cheks against `dateFields` property to determine if this field holds
     * dates.
     *
     * @ignore Exclude from docs
     * @param  {string}        field   Field name
     * @param  {IExportOptions} options Options
     * @return {boolean}               `true` if it's a date field
     */
    Export.prototype.isDateField = function (field) {
        return this.adapter.apply("isDateField", {
            isDateField: this.dateFields.contains(field),
            field: field
        }).isDateField;
    };
    /**
     * Cheks against `dateFields` property to determine if this field holds
     * dates.
     *
     * @ignore Exclude from docs
     * @param  {string}        field   Field name
     * @param  {IExportOptions} options Options
     * @return {boolean}               `true` if it's a date field
     */
    Export.prototype.isDurationField = function (field) {
        return this.adapter.apply("isDurationField", {
            isDurationField: this.durationFields.contains(field),
            field: field
        }).isDurationField;
    };
    /**
     * Returns proper content type for the export type.
     *
     * @param  {string}  type  Export format/type
     * @return {string}        Proper content type, i.e. "image/jpeg"
     */
    Export.prototype.getContentType = function (type) {
        var contentType = "";
        switch (type) {
            case "png":
            case "gif":
                contentType = "image/" + type;
                break;
            case "jpg":
                contentType = "image/jpeg";
                break;
            case "svg":
                contentType = "image/svg+xml";
                break;
            case "csv":
                contentType = "text/csv";
                break;
            case "json":
                contentType = "application/json";
                break;
            case "pdf":
                contentType = "application/pdf";
                break;
            case "xlsx":
                contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
                break;
        }
        return this.adapter.apply("contentType", {
            contentType: contentType,
            type: type
        }).contentType;
    };
    Object.defineProperty(Export.prototype, "filePrefix", {
        /**
         * @return {string} File prefix
         */
        get: function () {
            return this.adapter.apply("filePrefix", {
                filePrefix: this._filePrefix
            }).filePrefix;
        },
        /**
         * A file prefix to be used for all exported formats.
         *
         * Export will apply format-related extension to it. E.g. if this is set to
         * "myExport", the file name of the PNG exported image will be "myExport.png".
         *
         * @param {string} value File prefix
         */
        set: function (value) {
            this._filePrefix = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "backgroundColor", {
        /**
         * @return {Optional<Color>} Background color
         */
        get: function () {
            return this.adapter.apply("backgroundColor", {
                backgroundColor: this._backgroundColor
            }).backgroundColor;
        },
        /**
         * A background color to be used for exported images. If set, this will
         * override the automatically acquired background color.
         *
         * @param {Optional<Color>} value Color
         */
        set: function (value) {
            this._backgroundColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "title", {
        /**
         * @return {Optional<string>} Title
         */
        get: function () {
            return this.adapter.apply("title", {
                title: this._title
            }).title;
        },
        /**
         * A title to be used when printing.
         *
         * @param {Optional<string>} value Title
         */
        set: function (value) {
            this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Displays a preloader/exporting indicator.
     *
     * @ignore Exclude from docs
     * @todo Add ability to change text
     */
    Export.prototype.showPreloader = function () {
        var preloader = this.preloader;
        if (preloader) {
            preloader.progress = 0.5;
            preloader.label.text = "...";
        }
    };
    /**
     * Hides preloader/exporting indicator
     *
     * @ignore Exclude from docs
     */
    Export.prototype.hidePreloader = function () {
        var preloader = this.preloader;
        if (preloader) {
            preloader.progress = 1;
        }
    };
    Object.defineProperty(Export.prototype, "preloader", {
        /**
         * Returns a an instance of [[Preloader]] associated with the Sprite being
         * exported.
         *
         * @return {Preloader} Preloader
         */
        get: function () {
            return this._sprite && this._sprite.parent && this._sprite.parent.preloader ?
                this._sprite.parent.preloader :
                undefined;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Displays a modal saying export is taking longer than expected.
     *
     * @ignore Exclude from docs
     */
    Export.prototype.showTimeout = function () {
        this.showModal(this.adapter.apply("timeoutMessage", {
            message: this.language.translate("Export operation took longer than expected. Something might have gone wrong.")
        }).message);
    };
    /**
     * Hides preloader/exporting indicator.
     *
     * @ignore Exclude from docs
     */
    Export.prototype.hideTimeout = function () {
        if (this._timeoutTimeout) {
            this.removeDispose(this._timeoutTimeout);
            this._timeoutTimeout = null;
        }
        this.hideModal();
    };
    Object.defineProperty(Export.prototype, "language", {
        /**
         * @return {Language} A [[Language]] instance to be used
         */
        get: function () {
            if (!this._language) {
                this._language = new _utils_Language__WEBPACK_IMPORTED_MODULE_8__["Language"]();
            }
            return this._language;
        },
        /**
         * A [[Language]] instance to be used for translations.
         *
         * @param {Language} value An instance of [[Language]]
         */
        set: function (value) {
            this._language = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Export.prototype, "modal", {
        /**
         * Returns (and creates) [[Modal]].
         *
         * @ignore Exclude from docs
         * @return {Modal} Modal instance
         */
        get: function () {
            if (!this._modal) {
                this._modal = new _elements_Modal__WEBPACK_IMPORTED_MODULE_3__["Modal"]();
                // Prefix with Sprite's class name
                this._modal.adapter.add("classPrefix", function (value) {
                    value = _Options__WEBPACK_IMPORTED_MODULE_12__["options"].classNamePrefix + value;
                    return value;
                });
            }
            return this._modal;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows [[Modal]] with specific text.
     *
     * @ignore Exclude from docs
     * @param {string} text Modal contents
     */
    Export.prototype.showModal = function (text, title) {
        // Hide previous modal and preloader
        this.hideModal();
        this.hidePreloader();
        // Create modal
        var modal = this.modal;
        modal.container = this.sprite.svgContainer.SVGContainer;
        modal.content = text;
        modal.readerTitle = title;
        modal.open();
    };
    /**
     * Hides modal window if one's currently open.
     *
     * @ignore Exclude from docs
     */
    Export.prototype.hideModal = function () {
        if (this._modal) {
            this.modal.close();
        }
    };
    /**
     * Loads canvg dynamic module.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @return {Promise<any>} Instance of canvg
     * @async
     */
    Export.prototype._canvg = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() | canvg */ "canvg").then(__webpack_require__.t.bind(null, /*! canvg */ "./node_modules/canvg/dist/browser/canvg.min.js", 7))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Object.defineProperty(Export.prototype, "canvg", {
        /**
         * Returns canvg instance.
         *
         * @ignore Exclude from docs
         * @return {Promise<any>} Instance of canvg
         */
        get: function () {
            return this._canvg();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Loads pdfmake dynamic module
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @return {Promise<any>} Instance of pdfmake
     * @async
     */
    Export.prototype._pdfmake = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var a, pdfmake, vfs_fonts, global;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all([
                            __webpack_require__.e(/*! import() | pdfmake */ "pdfmake").then(__webpack_require__.t.bind(null, /*! pdfmake/build/pdfmake.js */ "./node_modules/pdfmake/build/pdfmake.js", 7)),
                            __webpack_require__.e(/*! import() | pdfmake */ "pdfmake").then(__webpack_require__.bind(null, /*! ../../pdfmake/vfs_fonts */ "./node_modules/@amcharts/amcharts4/.internal/pdfmake/vfs_fonts.js"))
                        ])];
                    case 1:
                        a = _a.sent();
                        pdfmake = a[0];
                        vfs_fonts = a[1];
                        global = window;
                        global.pdfMake = global.pdfMake || {};
                        global.pdfMake.vfs = vfs_fonts.default;
                        pdfmake.vfs = vfs_fonts.default;
                        return [2 /*return*/, pdfmake];
                }
            });
        });
    };
    Object.defineProperty(Export.prototype, "pdfmake", {
        /**
         * Returns pdfmake instance.
         *
         * @ignore Exclude from docs
         * @return {Promise<any>} Instance of pdfmake
         */
        get: function () {
            return this._pdfmake();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Loads xlsx dynamic module.
     *
     * This is an asynchronous function. Check the description of `getImage()`
     * for description and example usage.
     *
     * @ignore Exclude from docs
     * @return {Promise<any>} Instance of pdfmake
     * @async
     */
    Export.prototype._xlsx = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() | xlsx */ "xlsx").then(__webpack_require__.t.bind(null, /*! xlsx */ "./node_modules/xlsx/xlsx.js", 7))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Object.defineProperty(Export.prototype, "xlsx", {
        /**
         * Returns xlsx instance.
         *
         * @ignore Exclude from docs
         * @return {Promise<any>} Instance of pdfmake
         */
        get: function () {
            return this._xlsx();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets options for a format.
     *
     * @type {Key}
     */
    Export.prototype.setFormatOptions = function (type, options) {
        this._formatOptions.setKey(type, options);
    };
    /**
     * Returns current options for a format.
     */
    Export.prototype.getFormatOptions = function (type) {
        return this._formatOptions.getKey(type);
    };
    /**
     * Disables interactivity on parent chart.
     */
    Export.prototype._disablePointers = function () {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](this._spriteInteractionsEnabled)) {
            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;
        }
        this.sprite.interactionsEnabled = false;
    };
    /**
     * Releases temporarily disabled pointers on parent chart.
     */
    Export.prototype._releasePointers = function () {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](this._spriteInteractionsEnabled)) {
            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;
        }
    };
    /**
     * Hides all elements that should not be included in the exported image.
     */
    Export.prototype.hideNonExportableSprites = function () {
        var _this = this;
        var svgContainer = this.sprite.svgContainer;
        if (svgContainer) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_18__["each"](svgContainer.nonExportableSprites, function (item) {
                if (!item.isHidden && !item.isHiding) {
                    _this._hiddenObjects.push(item);
                }
                item.hide(0);
            });
        }
    };
    /**
     * Respores elements that were hidden before export.
     */
    Export.prototype.restoreNonExportableSprites = function () {
        _utils_Array__WEBPACK_IMPORTED_MODULE_18__["each"](this._hiddenObjects, function (item) {
            item.show(0);
        });
        this._hiddenObjects = [];
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    Export.prototype.processConfig = function (config) {
        _Registry__WEBPACK_IMPORTED_MODULE_11__["registry"].registeredClasses["ExportMenu"] = _ExportMenu__WEBPACK_IMPORTED_MODULE_1__["ExportMenu"];
        if (config) {
            // Set up menu
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](config.menu) && !_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](config.menu.type)) {
                config.menu.type = "ExportMenu";
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * XLINK namespace definition.
     *
     * @ignore Exclude from docs
     * @type {string}
     */
    Export.XLINK = "http://www.w3.org/1999/xlink";
    return Export;
}(_utils_Validatable__WEBPACK_IMPORTED_MODULE_9__["Validatable"]));

//# sourceMappingURL=Export.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/export/ExportCSS.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/export/ExportCSS.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");




var rules = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_2__["Dictionary"]();
/**
 * A dynamically-loadable CSS module for Export menu.
 *
 * @ignore Exclude from docs
 * @param  {string}     prefix  Prefix to addtach to class names
 * @return {IDisposer}          A MultiDisposer with style rules
 */
/* harmony default export */ __webpack_exports__["default"] = (function (prefix) {
    var newPrefix = (prefix ? prefix : "amexport");
    var colorSet = new _utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_1__["InterfaceColorSet"]();
    var counter = rules.insertKeyIfEmpty(newPrefix, function () {
        var disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MultiDisposer"]([
            /*new StyleRule(`.${newPrefix}-menu`, {
                "opacity": "0.3",
                "transition": "all 100ms ease-in-out",
            }),

            new StyleRule(`div:hover .${newPrefix}-menu, .${newPrefix}-menu.active`, {
                "opacity": "0.9",
            }),*/
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-menu-level-0", {
                "position": "absolute",
                "top": "5px",
                "right": "5px",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-menu-level-0." + newPrefix + "-left", {
                "right": "auto",
                "left": "5px",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-menu-level-0." + newPrefix + "-right", {
                "right": "5px",
                "left": "auto",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-menu-level-0." + newPrefix + "-top", {
                "top": "5px",
                "bottom": "auto",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-menu-level-0." + newPrefix + "-bottom", {
                "top": "auto",
                "bottom": "5px",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item." + newPrefix + "-item-level-0", {
                "opacity": "0.3",
                "width": "30px",
                "height": "30px",
                "transition": "all 100ms ease-in-out",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("div:hover ." + newPrefix + "-item." + newPrefix + "-item-level-0, ." + newPrefix + "-item." + newPrefix + "-item-level-0.active", {
                "opacity": "0.9",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item." + newPrefix + "-item-level-0 > a", {
                "padding": "0",
                "text-align": "center"
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item." + newPrefix + "-item-level-0:before", {
                "display": "block"
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item", {
                "position": "relative",
                "display": "block",
                "opacity": "0",
                "z-index": "1",
                "border-radius": "3px",
                "background-color": colorSet.getFor("secondaryButton").hex,
                "padding": "0",
                "margin": "1px 1px 0 0",
                "color": colorSet.getFor("secondaryButton").alternative.hex,
                "transition": "all 100ms ease-in-out, opacity 0.5s ease 0.5s",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-left ." + newPrefix + "-item", {
                "margin": "1px 0 0 1px",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item:hover, ." + newPrefix + "-item.active", {
                "background": colorSet.getFor("secondaryButtonHover").hex,
                "color": colorSet.getFor("secondaryButtonText").hex,
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item > ." + newPrefix + "-menu", {
                "position": "absolute",
                "top": "-1px",
                "right": "0",
                "margin-right": "100%",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-left ." + newPrefix + "-item > ." + newPrefix + "-menu", {
                "left": "0",
                "right": "auto",
                "margin-left": "100%",
                "margin-right": "auto",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-right ." + newPrefix + "-item > ." + newPrefix + "-menu", {
                "left": "auto",
                "right": "0",
                "margin-left": "auto",
                "margin-right": "100%",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-top ." + newPrefix + "-item > ." + newPrefix + "-menu", {
                "top": "-1px",
                "bottom": "auto",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-bottom ." + newPrefix + "-item > ." + newPrefix + "-menu", {
                "top": "auto",
                "bottom": "0",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item > ." + newPrefix + "-menu", {
                "display": "none",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item:hover > ." + newPrefix + "-menu, ." + newPrefix + "-item.active > ." + newPrefix + "-menu", {
                "display": "block",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-item:hover > ." + newPrefix + "-menu > ." + newPrefix + "-item, ." + newPrefix + "-item.active > ." + newPrefix + "-menu > ." + newPrefix + "-item", {
                "opacity": "1",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-menu", {
                "display": "block",
                "list-style": "none",
                "margin": "0",
                "padding": "0",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-label", {
                "display": "block",
                "cursor": "default",
                "padding": "0.5em 1em",
            }),
            new _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["StyleRule"]("." + newPrefix + "-clickable", {
                "cursor": "pointer",
            }),
        ]);
        return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["CounterDisposer"](function () {
            rules.removeKey(newPrefix);
            disposer.dispose();
        });
    });
    return counter.increment();
});
//# sourceMappingURL=ExportCSS.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js ***!
  \******************************************************************************/
/*! exports provided: ExportMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExportMenu", function() { return ExportMenu; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ExportCSS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExportCSS */ "./node_modules/@amcharts/amcharts4/.internal/core/export/ExportCSS.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _utils_Validatable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Validatable */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js");
/* harmony import */ var _utils_Keyboard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * ExportMenu provides functionality for building Export menu
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a menu for Export operations.
 *
 * To add an export menu to a chart, set this to a new instance of
 * [[ExportMenu]].
 *
 * ```TypeScript
 * chart.exporting.menu = new am4core.ExportMenu();
 * ```
 * ```JavaScript
 * chart.exporting.menu = new am4core.ExportMenu();
 * ```
 * ```JSON
 * {
 *   // ...
 *   "exporting": {
 *     "menu": {}
 *   }
 * }
 * ```
 * @important
 */
var ExportMenu = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExportMenu, _super);
    /**
     * Constructor
     */
    function ExportMenu() {
        var _this = _super.call(this) || this;
        /**
         * An [[Adapter]].
         *
         * @type {Adapter<ExportMenu, IExportMenuAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        /**
         * How many milliseconds to hold menu/sub-menu open after it loses focus or
         * hover, before auto-closing it.
         *
         * @type {number}
         */
        _this.closeDelay = 1000;
        /**
         * An instance of [[Language]].
         *
         * @ignore Exclude from docs
         * @type {MutableValueDisposer<Language>}
         */
        _this._language = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_5__["MutableValueDisposer"]();
        /**
         * What HTML tags to use to build menu.
         *
         * @ignore Exclude from docs
         * @type {string}
         */
        _this._menuTag = "ul";
        /**
         * Which tag to use to enclose individual menu items.
         *
         * @ignore Exclude from docs
         * @type {string}
         */
        _this._itemTag = "li";
        /**
         * Tag to wrap menu item labels in.
         *
         * @ignore Exclude from docs
         * @type {string}
         */
        _this._labelTag = "a";
        /**
         * Prefix for class names applied to menu elements.
         *
         * @ignore Exclude from docs
         * @type {string}
         */
        _this._classPrefix = "amexport";
        /**
         * If set to `true` [[ExportMenu]] will load it's own external CSS when
         * instantiated.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._defaultStyles = true;
        /**
         * Horizontal positioning.
         *
         * @ignore Exclude from docs
         * @type {Align}
         */
        _this._align = "right";
        /**
         * Vertical positioning.
         *
         * @ignore Exclude from docs
         * @type {VerticalAlign}
         */
        _this._verticalAlign = "top";
        /**
         * A tabindex to apply to Export Menu.
         *
         * @ignore Exclude from docs
         * @type {number}
         */
        _this._tabindex = 0;
        /**
         * Whether next menu close event should be ignored.
         *
         * @ignore Exclude from docs
         * @type {boolean}
         */
        _this._ignoreNextClose = false;
        /**
         * Default menu items.
         *
         * @ignore Exclude from docs
         * @type {Array<IExportMenuItem>}
         */
        _this._items = [
            {
                "label": "...",
                "menu": [
                    {
                        "label": "Image",
                        "menu": [
                            { "type": "png", "label": "PNG" },
                            { "type": "jpg", "label": "JPG" },
                            { "type": "gif", "label": "GIF" },
                            { "type": "svg", "label": "SVG" },
                            { "type": "pdf", "label": "PDF" }
                        ]
                    }, {
                        "label": "Data",
                        "menu": [
                            { "type": "json", "label": "JSON" },
                            { "type": "csv", "label": "CSV" },
                            { "type": "xlsx", "label": "XLSX" }
                        ]
                    }, {
                        "label": "Print", "type": "print"
                    }
                ]
            }
        ];
        _this.className = "ExportMenu";
        _this._disposers.push(_this._language);
        _this.invalidate();
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)draws the Export menu.
     *
     * @ignore Exclude from docs
     */
    ExportMenu.prototype.validate = function () {
        this.draw();
        _super.prototype.validate.call(this);
    };
    /**
     * Draws the menu based on current items.
     *
     * Normally, there's no need to call this explicitly. The chart, if it has
     * export menu enabled, will automatically draw the menu.
     */
    ExportMenu.prototype.draw = function () {
        var _this = this;
        // Create top-level menu item, or clear it
        if (!this._element) {
            this._element = this.createMenuElement(0);
        }
        else {
            this._element.innerHTML = "";
            this._element.className = this.getMenuItemClass(0);
        }
        // See if we're loading external CSS
        // Hide it until CSS is loaded
        if (this.defaultStyles) {
            this._element.style.display = "none";
        }
        // Append to container
        _utils_Type__WEBPACK_IMPORTED_MODULE_12__["getValue"](this._container).appendChild(this._element);
        // Apply adapter to menu items before processing
        this._items = this.adapter.apply("items", {
            items: this._items
        }).items;
        for (var len = this._items.length, i = 0; i < len; i++) {
            this.drawBranch(this._element, this._items[i], 0);
        }
        // Apply adapter to finalized menu element
        this._element = this.adapter.apply("menuElement", {
            menuElement: this._element
        }).menuElement;
        // Set up global "down" event
        this._disposers.push(Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().body.events.on("down", function (ev) {
            if (!ev.pointer.touch) {
                _this._ignoreNextClose = false;
            }
            _this.close();
        }));
        // Set up global event on ESC press to close the menu
        this._disposers.push(Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().body.events.on("keyup", function (ev) {
            var key = _utils_Keyboard__WEBPACK_IMPORTED_MODULE_8__["keyboard"].getEventKey(ev.event);
            switch (key) {
                case "esc":
                    _this.close();
                    break;
                case "up":
                case "down":
                case "left":
                case "right":
                    _this.moveSelection(key);
                    break;
            }
        }));
        if (this.defaultStyles) {
            this.loadDefaultCSS();
        }
    };
    /**
     * Creates a new branch in export menu. This function is recursive for
     * building multi-level menus.
     *
     * @ignore Exclude from docs
     * @param {HTMLElement}     container Container to put branch elements in
     * @param {IExportMenuItem} branch    Menu item
     * @param {number}          level     Current nesting level
     */
    ExportMenu.prototype.drawBranch = function (container, branch, level) {
        var _this = this;
        // Apply adapter
        branch = this.adapter.apply("branch", {
            branch: branch,
            level: level
        }).branch;
        // Unsupported?
        // ExportMenu does not check or know for specific browser/system
        // capabilities. It must happen in some other code and applied via Adapter.
        // Export itself will check compatibility, but there might be other plugins
        // that influence it or even add any specific export functionality.
        if (branch.unsupported === true) {
            return;
        }
        // Init ascendants
        if (!branch.ascendants) {
            branch.ascendants = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
        }
        // Get type
        var type = branch.type;
        // Create an item
        var element = this.createItemElement(level, type);
        // Create label
        var label = this.createLabelElement(level, type);
        label.innerHTML = (branch.label ? this.language.translate(branch.label) : "");
        // Apply reader text to label
        var readerLabel = this.getReaderLabel(branch, label.innerHTML);
        label.setAttribute("aria-label", readerLabel);
        // Add Label
        element.appendChild(label);
        // Create interaction object
        // TODO clean this up when it's disposed
        branch.interactions = Object(_interaction_Interaction__WEBPACK_IMPORTED_MODULE_4__["getInteraction"])().getInteraction(label);
        // Create interaction manager we can set event listeners to
        if (this.typeClickable(type)) {
            //branch.interactions.clickable = true;
            // TODO clean this up when it's disposed
            branch.interactions.events.on("hit", function (ev) {
                if (_this.events.isEnabled("hit")) {
                    var event_1 = {
                        "type": "hit",
                        "event": ev.event,
                        "target": _this,
                        "branch": branch
                    };
                    _this.events.dispatchImmediately("hit", event_1);
                }
            });
            // TODO clean this up when it's disposed
            branch.interactions.events.on("keyup", function (ev) {
                if (_utils_Keyboard__WEBPACK_IMPORTED_MODULE_8__["keyboard"].isKey(ev.event, "enter")) {
                    if (_this.events.isEnabled("enter")) {
                        var event_2 = {
                            "type": "enter",
                            "event": ev.event,
                            "target": _this,
                            "branch": branch
                        };
                        _this.events.dispatchImmediately("enter", event_2);
                    }
                }
            });
        }
        {
            var submenu_1 = this.getSubMenu(branch);
            // Add ENTER event to open sub-menus
            if (submenu_1 != null) {
                // TODO clean this up when it's disposed
                branch.interactions.events.on("keyup", function (ev) {
                    if (_utils_Keyboard__WEBPACK_IMPORTED_MODULE_8__["keyboard"].isKey(ev.event, "enter")) {
                        // This is item has sub-menu, activate the first child on ENTER
                        _this.selectBranch(submenu_1[0]);
                        // Attempt to set focus
                        _this.setFocus(submenu_1[0]);
                    }
                });
            }
        }
        // Add events
        // TODO clean this up when it's disposed
        branch.interactions.events.on("over", function (ev) {
            if (ev.pointer.touch) {
                // Cancel pending menu closure
                _this._ignoreNextClose = true;
            }
            _this.selectBranch(branch);
            if (_this.events.isEnabled("over")) {
                var event_3 = {
                    "type": "over",
                    "event": ev.event,
                    "target": _this,
                    "branch": branch
                };
                _this.events.dispatchImmediately("over", event_3);
            }
        });
        // TODO clean this up when it's disposed
        branch.interactions.events.on("out", function (ev) {
            if (!ev.pointer.touch) {
                _this.delayUnselectBranch(branch);
            }
            if (_this.events.isEnabled("out")) {
                var event_4 = {
                    "type": "out",
                    "event": ev.event,
                    "target": _this,
                    "branch": branch
                };
                _this.events.dispatchImmediately("out", event_4);
            }
        });
        // TODO clean this up when it's disposed
        branch.interactions.events.on("focus", function (ev) {
            _this.selectBranch(branch);
        });
        // TODO clean this up when it's disposed
        branch.interactions.events.on("blur", function (ev) {
            _this.delayUnselectBranch(branch);
        });
        // Increment level
        var local_level = level + 1;
        // Has sub-menu?
        if (branch.menu) {
            var submenu = this.createMenuElement(local_level);
            for (var len = branch.menu.length, i = 0; i < len; i++) {
                var ascendants = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                branch.menu[i].ascendants = ascendants;
                if (branch.ascendants.length) {
                    ascendants.copyFrom(branch.ascendants);
                }
                ascendants.push(branch);
                this.drawBranch(submenu, branch.menu[i], local_level);
            }
            // Sub-menu is empty (all items are not supported)
            // Do not draw this menu item at all
            if (submenu.innerHTML == "") {
                return;
            }
            element.appendChild(submenu);
        }
        // Append to container
        container.appendChild(element);
    };
    /**
     * Creates a menu element to hold its elements in. Usually it's an `<ul>`
     * tag.
     *
     * @ignore Exclude from docs
     * @param  {number}       level  Current nesting level
     * @return {HTMLElement}         HTML element reference
     */
    ExportMenu.prototype.createMenuElement = function (level) {
        var element = document.createElement(this.menuTag);
        element.className = this.getMenuItemClass(level);
        // Accessibility
        if (level === 0) {
            element.setAttribute("role", "menu");
        }
        return element;
    };
    /**
     * Generates a class name for the menu element based on its nesting level.
     *
     * @ignore Exclude from docs
     * @param  {number}  level  Current nesting level
     * @return {string}         Class name(s)
     */
    ExportMenu.prototype.getMenuItemClass = function (level) {
        var className = this.classPrefix + "-menu " + this.classPrefix + "-menu-level-" + level;
        if (level === 0) {
            className += " " + this.classPrefix + "-menu-root " +
                this.classPrefix + "-" + this.align + " " +
                this.classPrefix + "-" + this.verticalAlign;
        }
        return this.adapter.apply("menuClass", {
            className: className,
            level: level
        }).className;
    };
    /**
     * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go
     * into this element.
     *
     * @ignore Exclude from docs
     * @param  {number}       level  Current nesting level
     * @param  {string}       type   Type of the menu item
     * @return {HTMLElement}         HTML element reference
     */
    ExportMenu.prototype.createItemElement = function (level, type) {
        var element = document.createElement(this.itemTag);
        var className = this.classPrefix + "-item " + this.classPrefix
            + "-item-level-" + level
            + " " + this.classPrefix + "-item-" + (type || "blank");
        element.className = this.adapter.apply("itemClass", {
            className: className,
            level: level,
            type: type
        }).className;
        return element;
    };
    /**
     * Creates a "label" part of the menu item. It could be text or any HTML
     * content.
     *
     * @ignore Exclude from docs
     * @param  {number}       level  Current nesting level
     * @param  {string}       type   Type of the menu item
     * @return {HTMLElement}         An HTML Element
     */
    ExportMenu.prototype.createLabelElement = function (level, type) {
        var element = document.createElement(this.labelTag);
        var className = this.classPrefix + "-label " + this.classPrefix
            + "-label-level-" + level
            + " " + this.classPrefix + "-item-" + (type || "blank");
        if (this.typeClickable(type)) {
            className += " " + this.classPrefix + "-clickable";
        }
        element.className = this.adapter.apply("labelClass", {
            className: className,
            level: level,
            type: type
        }).className;
        // Accessible navigation
        element.setAttribute("tabindex", this.tabindex.toString());
        element.setAttribute("role", "menuitem");
        return element;
    };
    /**
     * Destroys the menu and all its elements.
     */
    ExportMenu.prototype.dispose = function () {
        if (!this._disposed) {
            _super.prototype.dispose.call(this);
            this._element
                && this._element.parentNode
                && this._element.parentNode.removeChild(this._element);
        }
    };
    /**
     * Checks whether menu item type is supposed to be clickable.
     *
     * @ignore Exclude from docs
     * @param  {string}   type  Menu item type
     * @return {boolean}        Is clickable?
     */
    ExportMenu.prototype.typeClickable = function (type) {
        return _utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](type);
    };
    /**
     * Checks whether menu item has any sub-items.
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}  branch  A menu item
     * @return {boolean}                  Has sub-items?
     */
    ExportMenu.prototype.hasSubMenu = function (branch) {
        return (branch.menu && branch.menu.length) ? true : false;
    };
    /**
     * Returns sub-items (if they exist).
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}                   branch  A menu item
     * @return {Optional<Array<IExportMenuItem>>}          Submenus
     */
    ExportMenu.prototype.getSubMenu = function (branch) {
        if (branch.menu && branch.menu.length) {
            return branch.menu;
        }
    };
    /**
     * Generates and returns an applicable label to be used for screen readers.
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}  item   A menu item instance
     * @param  {string}           label  Current label
     * @return {string}                  Reader text
     */
    ExportMenu.prototype.getReaderLabel = function (branch, label) {
        // Strip any HTML from the label
        label = _utils_Utils__WEBPACK_IMPORTED_MODULE_9__["stripTags"](label);
        // Add textual note if the branch is clickable
        if (this.hasSubMenu(branch)) {
            label += " [" + this.language.translate("Click, tap or press ENTER to open") + "]";
        }
        else if (branch.type == "print") {
            label = this.language.translate("Click, tap or press ENTER to print.");
        }
        else if (this.typeClickable(branch.type)) {
            label = this.language.translate("Click, tap or press ENTER to export as %1.", undefined, label);
        }
        return this.adapter.apply("rederLabel", {
            label: label,
            branch: branch
        }).label;
    };
    Object.defineProperty(ExportMenu.prototype, "container", {
        /**
         * @return {HTMLElement} Container
         */
        get: function () {
            return this._container;
        },
        /**
         * Getters and setters
         */
        /**
         * An HTML container to place the Menu in.
         *
         * A container must be an HTML element, because menu itself is HTML, and
         * cannot be placed into SVG.
         *
         * @param {Optional<HTMLElement>} container Reference to container element
         * @todo Check if menu is already build. If it is, just move it to a new container
         */
        set: function (container) {
            this._container = container;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "items", {
        /**
         * @return {Array<IExportMenuItem>} Menu items
         */
        get: function () {
            return this._items;
        },
        /**
         * A list of menu items. Can be nested.
         *
         * @param {Array<IExportMenuItem>}  items  Menu items
         */
        set: function (items) {
            this._items = items;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "tag", {
        /**
         * Sets main menu tag to place menu in.
         *
         * This also sets up how menu items are built.
         *
         * If you set this to "ul", menu items will be wrapped into `<li>` tags.
         *
         * If set to "div", menu items will be wrapped in `<div>` tags.
         *
         * @default "ul"
         * @param {"ul" | "div"} tag Tag to use for menu
         */
        set: function (tag) {
            this._menuTag = tag;
            this._itemTag = tag == "ul" ? "li" : "div";
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "menuTag", {
        /**
         * Returns current menu tag.
         *
         * @ignore Exclude from docs
         * @return {string} Menu tag (item that contains sub-items)
         */
        get: function () {
            return this.adapter.apply("menuTag", {
                tag: this._menuTag
            }).tag;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "itemTag", {
        /**
         * Returns tag to wrap items into.
         *
         * @ignore Exclude from docs
         * @return {string} Item tag
         */
        get: function () {
            return this.adapter.apply("itemTag", {
                tag: this._itemTag
            }).tag;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "labelTag", {
        /**
         * Returns menu label tag.
         *
         * @ignore Exclude from docs
         * @return {string} Label tag
         */
        get: function () {
            return this.adapter.apply("labelTag", {
                tag: this._labelTag
            }).tag;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "align", {
        /**
         * @return {Align} Horizontal alignment
         */
        get: function () {
            return this.adapter.apply("align", {
                align: this._align
            }).align;
        },
        /**
         * A horizontal alignment for the menu placement.
         *
         * @param {Align} value Horizontal alignment
         */
        set: function (value) {
            this._align = value;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "verticalAlign", {
        /**
         * @return {VerticalAlign} Vertical alignment
         */
        get: function () {
            return this.adapter.apply("verticalAlign", {
                verticalAlign: this._verticalAlign
            }).verticalAlign;
        },
        /**
         * A vertical alignment for the menu placement.
         *
         * @param {VerticalAlign} value Vertical alignment
         */
        set: function (value) {
            this._verticalAlign = value;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "classPrefix", {
        /**
         * @return {string} Class name prefix
         */
        get: function () {
            return this.adapter.apply("classPrefix", {
                classPrefix: this._classPrefix
            }).classPrefix;
        },
        /**
         * Class name prefix.
         *
         * @default "amexport"
         * @param {string} value Class name prefix
         */
        set: function (value) {
            this._classPrefix = value;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "defaultStyles", {
        /**
         * @return {boolean} Should ExportMenu load its own CSS?
         */
        get: function () {
            return this.adapter.apply("defaultStyles", {
                defaultStyles: this._defaultStyles
            }).defaultStyles;
        },
        /**
         * Indicates whether [[ExportMenu]] should load external CSS to style itself.
         *
         * If set to `false`, the menu will not be styled, and will rely on some
         * external CSS.
         *
         * @default true
         * @param {string} Should ExportMenu load its own CSS?
         */
        set: function (value) {
            if (this._defaultStyles != value) {
                this._defaultStyles = value;
                if (value) {
                    this.loadDefaultCSS();
                }
            }
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Loads the default CSS.
     *
     * @ignore Exclude from docs
     */
    ExportMenu.prototype.loadDefaultCSS = function () {
        this._disposers.push(Object(_ExportCSS__WEBPACK_IMPORTED_MODULE_1__["default"])(this.classPrefix));
        if (this._element) {
            this._element.style.display = "";
        }
    };
    Object.defineProperty(ExportMenu.prototype, "tabindex", {
        /**
         * @return {number} Tab index
         */
        get: function () {
            return this.adapter.apply("tabindex", {
                tabindex: this._tabindex
            }).tabindex;
        },
        /**
         * A tab index for the menu.
         *
         * Tab index will influence the order in which elements on the chart and
         * the whole page are selected when pressing TAB key.
         *
         * @param {number} value Tab index
         */
        set: function (value) {
            this._tabindex = value;
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExportMenu.prototype, "language", {
        /**
         * @return {Language} A [[Language]] instance to be used
         */
        get: function () {
            var _this = this;
            var language = this._language.get();
            if (language == null) {
                language = new _utils_Language__WEBPACK_IMPORTED_MODULE_6__["Language"]();
                // TODO code duplication with `set language()`
                this._language.set(language, language.events.on("localechanged", function (ev) {
                    _this.invalidate();
                }));
            }
            return language;
        },
        /**
         * A [[Language]] instance.
         *
         * @param {Language} value An instance of [[Language]]
         */
        set: function (value) {
            var _this = this;
            this._language.set(value, value.events.on("localechanged", function (ev) {
                _this.invalidate();
            }));
            this.invalidate();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Controlling the menu
     */
    /**
     * Removes all active classes from menu items. Useful on touch devices and
     * keyboard navigation where open menu can be closed instantly by clicking or
     * tapping outside it.
     *
     * @ignore Exclude from docs
     */
    ExportMenu.prototype.close = function () {
        if (this._ignoreNextClose) {
            this._ignoreNextClose = false;
            return;
        }
        if (this._currentSelection) {
            this.setBlur(this._currentSelection);
            this._currentSelection = undefined;
        }
        if (this._element) {
            var items = this._element.getElementsByClassName("active");
            for (var len = items.length, i = len - 1; i >= 0; i--) {
                if (items[i]) {
                    _utils_DOM__WEBPACK_IMPORTED_MODULE_11__["removeClass"](items[i], "active");
                }
            }
        }
        this.events.dispatchImmediately("closed", {
            type: "closed",
            target: this
        });
    };
    /**
     * Selects a branch in the menu.
     *
     * Handles closing of currently open branch.
     *
     * @ignore Exclude from docs
     * @param {IExportMenuItem} branch Branch to select
     */
    ExportMenu.prototype.selectBranch = function (branch) {
        var _this = this;
        // Cancel previous closure
        if (branch.closeTimeout) {
            this.removeDispose(branch.closeTimeout);
            branch.closeTimeout = undefined;
        }
        // Add active class
        _utils_DOM__WEBPACK_IMPORTED_MODULE_11__["addClass"](branch.interactions.element.parentElement, "active");
        // Remove current selection
        if (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["concat"](_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["fromArray"]([this._currentSelection]), this._currentSelection.ascendants.iterator()), function (ascendant) {
                if (!branch.ascendants.contains(ascendant) && branch !== ascendant) {
                    _this.unselectBranch(ascendant, true);
                }
            });
        }
        // Select and/or cancel timeout for current ascendants
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](branch.ascendants.iterator(), function (ascendant) {
            if (ascendant.closeTimeout) {
                _this.removeDispose(ascendant.closeTimeout);
                ascendant.closeTimeout = undefined;
            }
            _utils_DOM__WEBPACK_IMPORTED_MODULE_11__["addClass"](ascendant.interactions.element.parentElement, "active");
        });
        // Log current selection
        this._currentSelection = branch;
        // Invoke event
        if (this.events.isEnabled("branchselected")) {
            var event_5 = {
                type: "branchselected",
                target: this,
                branch: branch
            };
            this.events.dispatchImmediately("branchselected", event_5);
        }
    };
    /**
     * Unselects a branch. Also selects a branch one level up if necessary.
     *
     * @ignore Exclude from docs
     * @param {IExportMenuItem} branch Branch to unselect
     * @param {boolean}         simple If `true`, only the branch will be unselected without selecting parent branch
     */
    ExportMenu.prototype.unselectBranch = function (branch, simple) {
        // Remove active class
        _utils_DOM__WEBPACK_IMPORTED_MODULE_11__["removeClass"](branch.interactions.element.parentElement, "active");
        // Remove current selection
        if (this._currentSelection == branch) {
            this._currentSelection = undefined;
        }
        // Invoke event
        if (this.events.isEnabled("branchunselected")) {
            var event_6 = {
                type: "branchunselected",
                target: this,
                branch: branch
            };
            this.events.dispatchImmediately("branchunselected", event_6);
        }
    };
    /**
     * Delay unselection of a branch. This can still be cancelled in some other
     * place if the branch or its children regain focus.
     *
     * @ignore Exclude from docs
     * @param {IExportMenuItem} branch Branch to unselect
     * @param {boolean}         simple If `true`, only the branch will be unselected without selecting parent branch
     */
    ExportMenu.prototype.delayUnselectBranch = function (branch, simple) {
        var _this = this;
        // Schedule branch unselection
        if (branch.closeTimeout) {
            this.removeDispose(branch.closeTimeout);
            branch.closeTimeout = undefined;
        }
        branch.closeTimeout = this.setTimeout(function () {
            _this.unselectBranch(branch, simple);
        }, this.closeDelay);
        // Schedule unselection of all ascendants
        // In case focus went away from the export menu altogether, this will ensure
        // that all items will be closed.
        // In case we're jumping to other menu item, those delayed unselections will
        // be cancelled by `selectBranch`
        if (simple !== true && branch.ascendants) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](branch.ascendants.iterator(), function (ascendant) {
                _this.delayUnselectBranch(ascendant, true);
            });
        }
    };
    /**
     * Navigates the menu based on which direction kayboard key was pressed.
     *
     * @ignore Exclude from docs
     * @param {KeyboardKeys} key A key that was pressed
     */
    ExportMenu.prototype.moveSelection = function (key) {
        // Check if there's a current selection
        if (!this._currentSelection) {
            return;
        }
        var newSelection;
        if (key == "up") {
            // Try moving up in current menu list, or to the last item if already
            // at the top
            newSelection = this.getPrevSibling(this._currentSelection);
        }
        else if (key == "down") {
            // Try moving down in current menu list, or to the top item if already
            // at the bottom
            newSelection = this.getNextSibling(this._currentSelection);
        }
        else if ((key == "left" && this.align == "right") || (key == "right" && this.align == "left")) {
            var menu = this.getSubMenu(this._currentSelection);
            // Go one level-deeper
            if (menu != null) {
                newSelection = menu[0];
            }
        }
        else if ((key == "right" && this.align == "right") || (key == "left" && this.align == "left")) {
            // Go one level-deeper
            newSelection = this.getParentItem(this._currentSelection);
        }
        if (newSelection && newSelection !== this._currentSelection) {
            this.selectBranch(newSelection);
            this.setFocus(newSelection);
            this._currentSelection = newSelection;
        }
    };
    /**
     * Returns all siblings of a menu item, including this same menu item.
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}         branch  Menu item
     * @return {Array<IExportMenuItem>}          List of sibling menu items
     */
    ExportMenu.prototype.getSiblings = function (branch) {
        var parent = this.getParentItem(branch);
        if (parent && parent.menu) {
            return parent.menu;
        }
        else {
            return [];
        }
    };
    /**
     * Returns menu items parent item.
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}            branch  Menu item
     * @return {Optional<IExportMenuItem>}          Parent menu item
     */
    ExportMenu.prototype.getParentItem = function (branch) {
        if (branch.ascendants && branch.ascendants.length) {
            return branch.ascendants.getIndex(branch.ascendants.length - 1);
        }
        else {
            return undefined;
        }
    };
    /**
     * Returns next sibling in the same menu branch. If there is no next sibling,
     * the first one is returned. If there is just one item, that item is
     * returned. Unsupported menu items are skipped.
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}  branch  Menu item to search siblings for
     * @return {IExportMenuItem}          Menu item
     */
    ExportMenu.prototype.getNextSibling = function (branch) {
        var siblings = this.getSiblings(branch);
        if (siblings.length > 1) {
            var next = siblings.indexOf(branch) + 1;
            next = siblings.length == next ? 0 : next;
            return siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];
        }
        else {
            return branch;
        }
    };
    /**
     * Returns previous sibling in the same menu branch. If there is no next
     * sibling, the first one is returned. If there is just one item, that item is
     * returned. Unsupported menu items are skipped.
     *
     * @ignore Exclude from docs
     * @param  {IExportMenuItem}  branch  Menu item to search siblings for
     * @return {IExportMenuItem}          Menu item
     */
    ExportMenu.prototype.getPrevSibling = function (branch) {
        var siblings = this.getSiblings(branch);
        if (siblings.length > 1) {
            var prev = siblings.indexOf(branch) - 1;
            prev = prev == -1 ? siblings.length - 1 : prev;
            return siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];
        }
        else {
            return branch;
        }
    };
    /**
     * Attempts to set focus on particular menu element.
     *
     * @ignore Exclude from docs
     * @param {IExportMenuItem} branch Menu item
     */
    ExportMenu.prototype.setFocus = function (branch) {
        if (branch.interactions) {
            branch.interactions.element.focus();
        }
    };
    /**
     * Attempts to remove focus from the menu element.
     *
     * @ignore Exclude from docs
     * @param {IExportMenuItem} branch Menu item
     */
    ExportMenu.prototype.setBlur = function (branch) {
        if (branch.interactions) {
            branch.interactions.element.blur();
        }
    };
    return ExportMenu;
}(_utils_Validatable__WEBPACK_IMPORTED_MODULE_7__["Validatable"]));

//# sourceMappingURL=ExportMenu.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js ***!
  \*************************************************************************************/
/*! exports provided: DateFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateFormatter", function() { return DateFormatter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../formatters/TextFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Handles date and time formatting
 */








/**
 * Handles date and time formatting.
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting
 * @todo Better type casting of passed in date?
 * @todo Quarter support?
 * @todo When parsing named months make the search case-insensitive
 * @todo Escape a.m./p.m. properly when used in RegEx
 */
var DateFormatter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DateFormatter, _super);
    /**
     * Constructor
     */
    function DateFormatter() {
        var _this = _super.call(this) || this;
        /**
         * Date format.
         *
         * @type {string}
         */
        _this._dateFormat = "yyyy-MM-dd";
        /**
         * Input date format.
         *
         * @type {string}
         */
        _this._inputDateFormat = "yyyy-MM-dd";
        /**
         * Assume UTC time zone.
         *
         * @type {boolean}
         */
        _this._utc = false;
        /**
         * First day of week.
         *
         * 0 - Sunday
         * 1 - Monday
         *
         * Etc.
         *
         * @type {number}
         */
        _this._firstDayOfWeek = 1;
        /**
         * A list of month names.
         *
         * @type {Array<MonthNames>}
         */
        _this._months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        /**
         * A list of short month names.
         *
         * @param {Array<ShortMonthNames>}
         */
        _this._monthsShort = ["Jan", "Feb", "Mar", "Apr", "May(short)", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        /**
         * A list of weekday names.
         *
         * @type {Array<Weekdays>}
         */
        _this._weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        /**
         * A list of short weekday names.
         *
         * @type {Array<ShortWeekdays>}
         */
        _this._weekdaysShort = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        /**
         * Output format to produce. If the format calls for applying color to the
         * formatted value, this setting will determine what markup to use: SVG or
         * HTML.
         *
         * Available options: svg, html.
         *
         * @default "svg"
         * @type {string}
         */
        _this._outputFormat = "svg";
        /**
         * Should the first letter of the formatted date be capitalized?
         *
         * @default true
         * @type {boolean}
         */
        _this.capitalize = true;
        _this.className = "DateFormatter";
        _this.applyTheme();
        return _this;
    }
    /**
     * Formats the date value according to specified format.
     *
     * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting
     * @param  {any}     source  Date value
     * @param  {string}  format  Format
     * @return {string}          Formatted date string
     */
    DateFormatter.prototype.format = function (source, format) {
        // No language?
        if (!this.language) {
            if (this.sprite) {
                this.language = this.sprite.language;
            }
            else {
                this.language = new _utils_Language__WEBPACK_IMPORTED_MODULE_1__["Language"];
            }
        }
        // No format passed in or it's empty
        if (typeof format === "undefined" || format === "") {
            format = this._dateFormat;
        }
        // Clean format
        format = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["cleanFormat"](format);
        // get format info (it will also deal with parser caching)
        var info = this.parseFormat(format);
        // Do any casting if required
        // This will take care of timestamps as well as Date objects
        var date = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["anyToDate"](source);
        // Check if it's a valid date
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](date.getTime())) {
            return this.language.translate("Invalid date");
        }
        // Apply format
        var formatted = this.applyFormat(date, info, this.language);
        // Capitalize
        if (this.capitalize) {
            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());
        }
        // We're done
        return formatted;
    };
    /**
     * Parses format into structured infromation.
     *
     * @param {string} format Format template
     */
    DateFormatter.prototype.parseFormat = function (format) {
        // Check cache
        var cached = this.getCache(format);
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](cached)) {
            return cached;
        }
        // Init format parse info holder
        var info = {
            "template": "",
            "parts": []
        };
        // Let TextFormatter split into chunks
        var chunks = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().chunk(format, true);
        for (var i = 0; i < chunks.length; i++) {
            var chunk = chunks[i];
            if (chunk.type === "value") {
                // Just "Date"?
                if (chunk.text.match(/^date$/i)) {
                    chunk.text = this._dateFormat;
                }
                // Find all possible parts
                var matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);
                // Found?
                if (matches) {
                    // Populate template
                    for (var x = 0; x < matches.length; x++) {
                        info.parts.push(matches[x]);
                        chunk.text = chunk.text.replace(matches[x], _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"]);
                    }
                }
            }
            // Apply to template
            info.template += chunk.text;
        }
        // Apply style formatting
        //info.template = getTextFormatter().format(info.template, this.outputFormat);
        // Save cache
        this.setCache(format, info);
        return info;
    };
    /**
     * Applies format to Date.
     *
     * @param  {Date}            date      Date object
     * @param  {DateFormatInfo}  info      Parsed format information
     * @param  {Language}        language  Language
     * @return {string}                    Formatted date string
     */
    DateFormatter.prototype.applyFormat = function (date, info, language) {
        // Init return value
        var res = info.template;
        // Get values
        var fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, offset = date.getTimezoneOffset(), timestamp = date.getTime();
        if (this.utc) {
            fullYear = date.getUTCFullYear();
            month = date.getUTCMonth();
            weekday = date.getUTCDay();
            day = date.getUTCDate();
            hours = date.getUTCHours();
            minutes = date.getUTCMinutes();
            seconds = date.getUTCSeconds();
            milliseconds = date.getUTCMilliseconds();
        }
        else {
            fullYear = date.getFullYear();
            month = date.getMonth();
            weekday = date.getDay();
            day = date.getDate();
            hours = date.getHours();
            minutes = date.getMinutes();
            seconds = date.getSeconds();
            milliseconds = date.getMilliseconds();
        }
        // Go through each part and format/replace it in template
        for (var i = 0, len = info.parts.length; i < len; i++) {
            var value = "";
            switch (info.parts[i]) {
                case "G":
                    value = language.translate(fullYear < 0
                        ? "_era_bc"
                        : "_era_ad");
                    break;
                case "yyyy":
                    value = Math.abs(fullYear).toString();
                    if (fullYear < 0) {
                        value += language.translate("_era_bc");
                    }
                    break;
                case "yyy":
                case "yy":
                case "y":
                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);
                    if (fullYear < 0) {
                        value += language.translate("_era_bc");
                    }
                    break;
                case "YYYY":
                case "YYY":
                case "YY":
                case "Y":
                    var week = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getWeek"](date);
                    var year = fullYear;
                    if (week == 1 && (weekday > 1)) {
                        year--;
                    }
                    if (info.parts[i] == "YYYY") {
                        value = Math.abs(year).toString();
                    }
                    else {
                        value = Math.abs(year).toString().substr(-info.parts[i].length);
                    }
                    if (year < 0) {
                        value += language.translate("_era_bc");
                    }
                    break;
                case "u":
                    // @todo
                    break;
                case "MMMMM":
                    value = language.translate(this._months[month]).substr(0, 1);
                    break;
                case "MMMM":
                    value = language.translate(this._months[month]);
                    break;
                case "MMM":
                    value = language.translate(this._monthsShort[month]);
                    break;
                case "MM":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](month + 1, 2, "0");
                    break;
                case "M":
                    value = (month + 1).toString();
                    break;
                case "ww":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getWeek"](date, this.utc), 2, "0");
                    break;
                case "w":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getWeek"](date, this.utc).toString();
                    break;
                case "W":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getMonthWeek"](date, this.utc).toString();
                    break;
                case "dd":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](day, 2, "0");
                    break;
                case "d":
                    value = day.toString();
                    break;
                case "DD":
                case "DDD":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getYearDay"](date, this.utc).toString(), info.parts[i].length, "0");
                    break;
                case "D":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getYearDay"](date, this.utc).toString();
                    break;
                case "F":
                    // @todo
                    break;
                case "g":
                    // @todo
                    break;
                case "t":
                    value = language.translateFunc("_dateOrd").call(this, day);
                    break;
                case "E":
                    value = (weekday || 7).toString();
                    break;
                case "EE":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"]((weekday || 7).toString(), 2, "0");
                    break;
                case "EEE":
                case "eee":
                    value = language.translate(this._weekdaysShort[weekday]);
                    break;
                case "EEEE":
                case "eeee":
                    value = language.translate(this._weekdays[weekday]);
                    break;
                case "EEEEE":
                case "eeeee":
                    value = language.translate(this._weekdays[weekday]).substr(0, 1);
                    break;
                case "e":
                case "ee":
                    value = (weekday - this.firstDayOfWeek + 1).toString();
                    if (info.parts[i] == "ee") {
                        value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](value, 2, "0");
                    }
                    break;
                case "a":
                    if (hours >= 12) {
                        value = language.translate("PM");
                    }
                    else {
                        value = language.translate("AM");
                    }
                    break;
                case "aa":
                    if (hours >= 12) {
                        value = language.translate("P.M.");
                    }
                    else {
                        value = language.translate("A.M.");
                    }
                    break;
                case "aaa":
                    if (hours >= 12) {
                        value = language.translate("P");
                    }
                    else {
                        value = language.translate("A");
                    }
                    break;
                case "h":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["get12Hours"](hours).toString();
                    break;
                case "hh":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["get12Hours"](hours), 2, "0");
                    break;
                case "H":
                    value = hours.toString();
                    break;
                case "HH":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](hours, 2, "0");
                    break;
                case "K":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["get12Hours"](hours, 0).toString();
                    break;
                case "KK":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["get12Hours"](hours, 0), 2, "0");
                    break;
                case "k":
                    value = (hours + 1).toString();
                    break;
                case "kk":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](hours + 1, 2, "0");
                    break;
                case "m":
                    value = minutes.toString();
                    break;
                case "mm":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](minutes, 2, "0");
                    break;
                case "s":
                    value = seconds.toString();
                    break;
                case "ss":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](seconds, 2, "0");
                    break;
                case "S":
                case "SS":
                case "SSS":
                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();
                    break;
                case "x":
                    value = timestamp.toString();
                    break;
                case "n":
                case "nn":
                case "nnn":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](milliseconds, info.parts[i].length, "0");
                    break;
                case "z":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getTimeZone"](date, false, false, this.utc);
                    break;
                case "zz":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getTimeZone"](date, true, false, this.utc);
                    break;
                case "zzz":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getTimeZone"](date, false, true, this.utc);
                    break;
                case "zzzz":
                    value = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getTimeZone"](date, true, true, this.utc);
                    break;
                case "Z":
                case "ZZ":
                    var tz = Math.abs(offset) / 60;
                    var tzh = Math.floor(tz);
                    var tzm = tz * 60 - tzh * 60;
                    if (info.parts[i] == "Z") {
                        value = "GMT";
                        value += offset > 0 ? "-" : "+";
                        value += _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](tzh, 2) + ":" + _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](tzm, 2);
                    }
                    else {
                        value = offset > 0 ? "-" : "+";
                        value += _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](tzh, 2) + _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["padString"](tzm, 2);
                    }
                    break;
                case "i":
                    value = date.toISOString();
                    break;
                case "I":
                    value = date.toUTCString();
                    break;
            }
            res = res.replace(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"], value);
        }
        return res;
    };
    /**
     * Parses any input value into Date object.
     *
     * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date/time parsing
     * @param  {any}     source  Source value
     * @param  {string}  format  Source format
     * @return {Date}            Date object
     */
    DateFormatter.prototype.parse = function (source, format) {
        // Format set?
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](format)) {
            format = this.inputDateFormat;
        }
        // Is it already a Date
        if (source instanceof Date) {
            return source;
        }
        // Is it a numeric timestamp
        if (typeof source === "number") {
            return new Date(source);
        }
        // No? Let's check if it's string, and try converting to it if nec
        if (typeof source !== "string") {
            source = source.toString();
        }
        // no language?
        if (!this.language) {
            if (this.sprite) {
                this.language = this.sprite.language;
            }
            else {
                this.language = new _utils_Language__WEBPACK_IMPORTED_MODULE_1__["Language"];
            }
        }
        // Init return value
        var res = new Date(1970, 0, 1, 0, 0, 0);
        // Init RegEx for parsing
        var reg = "";
        // Clean format
        format = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["cleanFormat"](format);
        // Parse format
        var info = this.parseFormat(format);
        // Init parsed items holder
        var parsedIndexes = {
            "year": -1,
            "year3": -1,
            "year2": -1,
            "year1": -1,
            "month": -1,
            "monthShort": -1,
            "monthLong": -1,
            "weekdayShort": -1,
            "weekdayLong": -1,
            "day": -1,
            "yearDay": -1,
            "week": -1,
            "hourBase0": -1,
            "hour12Base0": -1,
            "hourBase1": -1,
            "hour12Base1": -1,
            "minute": -1,
            "second": -1,
            "millisecond": -1,
            "millisecondDigits": -1,
            "am": -1,
            "zone": -1,
            "timestamp": -1,
            "iso": -1
        };
        // Index adjuster
        var indexAdjust = 0, index = 0;
        // Iterate through all of the parts
        for (var i = 0; i < info.parts.length; i++) {
            // Set current match index
            index = i + indexAdjust + 1;
            switch (info.parts[i]) {
                case "yyyy":
                case "YYYY":
                    reg += "([0-9]{4,})";
                    parsedIndexes.year = index;
                    break;
                case "yyy":
                case "YYY":
                    reg += "([0-9]{3})";
                    parsedIndexes.year3 = index;
                    break;
                case "yy":
                case "YY":
                    reg += "([0-9]{2})";
                    parsedIndexes.year2 = index;
                    break;
                case "y":
                case "Y":
                    reg += "([0-9]{1})";
                    parsedIndexes.year1 = index;
                    break;
                case "MMMM":
                    reg += "(" + this.getStringList(this._months).join("|") + ")";
                    parsedIndexes.monthLong = index;
                    break;
                case "MMM":
                    reg += "(" + this.getStringList(this._monthsShort).join("|") + ")";
                    parsedIndexes.monthShort = index;
                    break;
                case "MM":
                case "M":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.month = index;
                    break;
                case "ww":
                case "w":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.week = index;
                    break;
                case "dd":
                case "d":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.day = index;
                    break;
                case "DDD":
                case "DD":
                case "D":
                    reg += "([0-9]{3}|[0-9]{2}|[0-9]{1})";
                    parsedIndexes.yearDay = index;
                    break;
                case "dddd":
                    reg += "(" + this.getStringList(this._weekdays).join("|") + ")";
                    parsedIndexes.weekdayLong = index;
                    break;
                case "ddd":
                    reg += "(" + this.getStringList(this._weekdaysShort).join("|") + ")";
                    parsedIndexes.weekdayShort = index;
                    break;
                case "aaa":
                case "aa":
                case "a":
                    // TODO: fix (escape regex)
                    reg += "(" + this.getStringList(["AM", "PM", "A\.M\.", "P\.M\.", "A", "P"]).join("|") + ")";
                    parsedIndexes.am = index;
                    break;
                case "hh":
                case "h":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.hour12Base1 = index;
                    break;
                case "HH":
                case "H":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.hourBase0 = index;
                    break;
                case "KK":
                case "K":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.hour12Base0 = index;
                    break;
                case "kk":
                case "k":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.hourBase1 = index;
                    break;
                case "mm":
                case "m":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.minute = index;
                    break;
                case "ss":
                case "s":
                    reg += "([0-9]{2}|[0-9]{1})";
                    parsedIndexes.second = index;
                    break;
                case "SSS":
                case "SS":
                case "S":
                    reg += "([0-9]{3}|[0-9]{2}|[0-9]{1})";
                    parsedIndexes.millisecond = index;
                    parsedIndexes.millisecondDigits = info.parts[i].length;
                    break;
                case "nnn":
                case "nn":
                case "n":
                    reg += "([0-9]{3}|[0-9]{2}|[0-9]{1})";
                    parsedIndexes.millisecond = index;
                    break;
                case "x":
                    reg += "([0-9]{1,})";
                    parsedIndexes.timestamp = index;
                    break;
                case "Z":
                    reg += "GMT([-+]+[0-9]{2}:[0-9]{2})";
                    parsedIndexes.zone = index;
                    break;
                case "ZZ":
                    reg += "([\\-+]+[0-9]{2}[0-9]{2})";
                    parsedIndexes.zone = index;
                    break;
                case "i":
                    reg += "([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})\.([0-9]{3})([Zz]?)";
                    parsedIndexes.iso = index;
                    indexAdjust += 7;
                    break;
                case "G":
                case "YYYY":
                case "YYY":
                case "YY":
                case "Y":
                case "MMMMM":
                case "W":
                case "EEEEE":
                case "EEEE":
                case "EEE":
                case "EE":
                case "E":
                case "eeeee":
                case "eeee":
                case "eee":
                case "ee":
                case "e":
                case "zzzz":
                case "zzz":
                case "zz":
                case "z":
                case "t":
                    // Ignore
                    indexAdjust--;
                    break;
            }
            reg += "[^0-9]*";
        }
        // Try matching
        var regex = new RegExp(reg);
        var matches;
        if (matches = source.match(regex)) {
            // Populate the date object
            // Full year
            if (parsedIndexes.year > -1) {
                var val = parseInt(matches[parsedIndexes.year]);
                if (this.utc) {
                    res.setUTCFullYear(val);
                }
                else {
                    res.setFullYear(val);
                }
            }
            // 3-digit year
            if (parsedIndexes.year3 > -1) {
                var val = parseInt(matches[parsedIndexes.year3]);
                val += 1000;
                if (this.utc) {
                    res.setUTCFullYear(val);
                }
                else {
                    res.setFullYear(val);
                }
            }
            // 2-digit year
            if (parsedIndexes.year2 > -1) {
                var val = parseInt(matches[parsedIndexes.year2]);
                if (val > 50) {
                    val += 1000;
                }
                else {
                    val += 2000;
                }
                if (this.utc) {
                    res.setUTCFullYear(val);
                }
                else {
                    res.setFullYear(val);
                }
            }
            // 1-digit year
            if (parsedIndexes.year1 > -1) {
                var val = parseInt(matches[parsedIndexes.year1]);
                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;
                if (this.utc) {
                    res.setUTCFullYear(val);
                }
                else {
                    res.setFullYear(val);
                }
            }
            // Full month
            if (parsedIndexes.monthLong > -1) {
                var val = this.resolveMonth(matches[parsedIndexes.monthLong]);
                if (this.utc) {
                    res.setUTCMonth(val);
                }
                else {
                    res.setMonth(val);
                }
            }
            // Short month
            if (parsedIndexes.monthShort > -1) {
                var val = this.resolveShortMonth(matches[parsedIndexes.monthShort]);
                if (this.utc) {
                    res.setUTCMonth(val);
                }
                else {
                    res.setMonth(val);
                }
            }
            // Numeric month
            if (parsedIndexes.month > -1) {
                var val = parseInt(matches[parsedIndexes.month]) - 1;
                if (this.utc) {
                    res.setUTCMonth(val);
                }
                else {
                    res.setMonth(val);
                }
            }
            // Weekday
            // @todo
            // Week
            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {
                // We parse weeks ONLY if day is not explicitly set
                // TODO: this needs work
                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)
                var val = _utils_Utils__WEBPACK_IMPORTED_MODULE_6__["getDayFromWeek"](parseInt(matches[parsedIndexes.week]), this.utc ? res.getUTCFullYear() : res.getFullYear(), 1, this.utc);
                if (this.utc) {
                    res.setUTCMonth(0);
                    res.setUTCDate(val);
                }
                else {
                    res.setMonth(0);
                    res.setDate(val);
                }
            }
            // Day
            if (parsedIndexes.day > -1) {
                var val = parseInt(matches[parsedIndexes.day]);
                if (this.utc) {
                    res.setUTCDate(val);
                }
                else {
                    res.setDate(val);
                }
            }
            // Year day
            if (parsedIndexes.yearDay > -1) {
                var val = parseInt(matches[parsedIndexes.yearDay]);
                if (this.utc) {
                    res.setUTCMonth(0);
                    res.setUTCDate(val);
                }
                else {
                    res.setMonth(0);
                    res.setDate(val);
                }
            }
            // 24 Hour (0-23)
            if (parsedIndexes.hourBase0 > -1) {
                var val = parseInt(matches[parsedIndexes.hourBase0]);
                if (this.utc) {
                    res.setUTCHours(val);
                }
                else {
                    res.setHours(val);
                }
            }
            // 24 Hour (1-24)
            if (parsedIndexes.hourBase1 > -1) {
                var val = parseInt(matches[parsedIndexes.hourBase1]) - 1;
                if (this.utc) {
                    res.setUTCHours(val);
                }
                else {
                    res.setHours(val);
                }
            }
            // 12 Hour (0-11)
            if (parsedIndexes.hour12Base0 > -1) {
                var val = parseInt(matches[parsedIndexes.hour12Base0]);
                if (val == 11) {
                    val = 0;
                }
                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {
                    val += 12;
                }
                if (this.utc) {
                    res.setUTCHours(val);
                }
                else {
                    res.setHours(val);
                }
            }
            // 12 Hour (1-12)
            if (parsedIndexes.hour12Base1 > -1) {
                var val = parseInt(matches[parsedIndexes.hour12Base1]);
                if (val == 12) {
                    val = 0;
                }
                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {
                    val += 12;
                }
                if (this.utc) {
                    res.setUTCHours(val);
                }
                else {
                    res.setHours(val);
                }
            }
            // Minute
            if (parsedIndexes.minute > -1) {
                var val = parseInt(matches[parsedIndexes.minute]);
                if (this.utc) {
                    res.setUTCMinutes(val);
                }
                else {
                    res.setMinutes(val);
                }
            }
            // Second
            if (parsedIndexes.second > -1) {
                var val = parseInt(matches[parsedIndexes.second]);
                if (this.utc) {
                    res.setUTCSeconds(val);
                }
                else {
                    res.setSeconds(val);
                }
            }
            // Millisecond
            if (parsedIndexes.millisecond > -1) {
                var val = parseInt(matches[parsedIndexes.millisecond]);
                if (parsedIndexes.millisecondDigits == 2) {
                    val *= 10;
                }
                else if (parsedIndexes.millisecondDigits == 1) {
                    val *= 100;
                }
                if (this.utc) {
                    res.setUTCMilliseconds(val);
                }
                else {
                    res.setMilliseconds(val);
                }
            }
            // Timestamp
            if (parsedIndexes.timestamp > -1) {
                res.setTime(parseInt(matches[parsedIndexes.timestamp]));
            }
            // Adjust time zone
            if (parsedIndexes.zone > -1) {
                var zone = matches[parsedIndexes.zone].replace(/:/, "");
                var match = _utils_Type__WEBPACK_IMPORTED_MODULE_7__["getValue"](zone.match(/([+\-]?)([0-9]{2})([0-9]{2})/));
                var dir = match[1];
                var hour = match[2];
                var minute = match[3];
                var offset = parseInt(hour) * 60 + parseInt(minute);
                // Adjust offset
                // Making it negative does not seem to make sense, but it's right
                // because of how JavaScript calculates GTM offsets
                if (dir == "+") {
                    offset *= -1;
                }
                // Check the difference in offset
                var originalOffset = res.getTimezoneOffset();
                var diff = offset - originalOffset;
                if (diff != 0) {
                    res.setMinutes(res.getMinutes() + diff);
                }
            }
            // ISO
            if (parsedIndexes.iso > -1) {
                if (matches[parsedIndexes.iso + 7] == "Z" || matches[parsedIndexes.iso + 7] == "z") {
                    res = new Date();
                    res.setUTCFullYear(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 0]));
                    res.setUTCMonth(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 1]) - 1);
                    res.setUTCDate(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 2]));
                    res.setUTCHours(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 3]));
                    res.setUTCMinutes(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 4]));
                    res.setUTCSeconds(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 5]));
                    res.setUTCMilliseconds(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 6]));
                }
                else {
                    res = new Date(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 0]), _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 1]) - 1, _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 2]), _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 3]), _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 4]), _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 5]), _utils_Type__WEBPACK_IMPORTED_MODULE_7__["toNumber"](matches[parsedIndexes.iso + 6]));
                }
            }
        }
        else {
            // Didn't match anything
            // Let's try dropping it into Date constructor and hope for the best
            res = new Date(source);
        }
        return res;
    };
    /**
     * Resolves month name (i.e. "December") into a month number (11).
     *
     * @param  {MonthNames}  value  Month name
     * @return {number}             Month number
     */
    DateFormatter.prototype.resolveMonth = function (value) {
        // Let's try English first
        var month = this._months.indexOf(value);
        if (month > -1) {
            return month;
        }
        // Try the translation
        if (this.language && !this.language.isDefault()) {
            month = this.language.translateAll(this._months).indexOf(value);
            if (month > -1) {
                return month;
            }
        }
        return 0;
    };
    /**
     * Resolves short month name (i.e. "Dec") into a month number.
     *
     * @param  {ShortMonthNames}  value  Short month name
     * @return {number}                  Month number
     */
    DateFormatter.prototype.resolveShortMonth = function (value) {
        // Let's try English first
        var month = this._monthsShort.indexOf(value);
        if (month > -1) {
            return month;
        }
        // Try the translation
        if (this.language && !this.language.isDefault()) {
            month = this.language.translateAll(this._monthsShort).indexOf(value);
            if (month > -1) {
                return month;
            }
        }
        return 0;
    };
    /**
     * Checks if passed in string represents AM/PM notation in many of its
     * versions.
     *
     * @param  {string}   value  Source string
     * @return {boolean}         Is it AM/PM?
     */
    DateFormatter.prototype.isAm = function (value) {
        var list = this.getStringList(["AM", "A.M.", "A"]);
        return list.indexOf(value.toUpperCase()) > -1;
    };
    /**
     * Invalidates related [[Sprite]] causing it to redraw.
     */
    DateFormatter.prototype.invalidateSprite = function () {
        if (this.sprite) {
            this.sprite.invalidate();
        }
    };
    /**
     * Translates list of strings.
     *
     * @param  {Array<keyof ILocaleProperties>}  list  Source strings
     * @return {Array<string>}                         Translated strings
     */
    DateFormatter.prototype.getStringList = function (list) {
        var res = [];
        for (var i = 0; i < list.length; i++) {
            res.push(_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["escapeForRgex"](list[i]));
            // translate?
            if (this.language && !this.language.isDefault()) {
                res.push(_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["escapeForRgex"](this.language.translate(list[i])));
            }
        }
        return res;
    };
    Object.defineProperty(DateFormatter.prototype, "dateFormat", {
        /**
         * @return {string} Date format
         */
        get: function () {
            return this._dateFormat;
        },
        /**
         * Date format to use.
         *
         * If format is not supplied in-line in the string, this setting will be
         * used.
         *
         * @default "yyyy-MM-dd"
         * @param {string} value Date format
         */
        set: function (value) {
            this._dateFormat = value;
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateFormatter.prototype, "inputDateFormat", {
        /**
         * @return {string} Date format
         */
        get: function () {
            return this._inputDateFormat;
        },
        /**
         * Date format to use when parsing dates.
         *
         * @default "yyyy-MM-dd"
         * @param {string} value Date format
         */
        set: function (value) {
            this._inputDateFormat = value;
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateFormatter.prototype, "utc", {
        /**
         * @return {boolean} Use UTC?
         */
        get: function () {
            return this._utc;
        },
        /**
         * Should formatter use UTC functions?
         *
         * If UTC is used, all date/time values will be independent on client's
         * time zone.
         *
         * @param {boolean} value Use UTC?
         */
        set: function (value) {
            this._utc = value;
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateFormatter.prototype, "firstDayOfWeek", {
        /**
         * @return {number} First day of week
         */
        get: function () {
            return this._firstDayOfWeek;
        },
        /**
         * Dirst day of the week:
         *
         * * 0 - Sunday
         * * 1 - Monday
         * * 2 - Tuesday
         *
         * Etc.
         *
         * @param {number} value First day of week
         */
        set: function (value) {
            this._firstDayOfWeek = value;
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateFormatter.prototype, "outputFormat", {
        /**
         * @ignore Exclude from docs
         * @return {string} Format
         */
        get: function () {
            return this._outputFormat;
        },
        /**
         * Output format for the formatted date.
         *
         * @ignore Exclude from docs
         * @param {string}  value  Format
         */
        set: function (value) {
            this._outputFormat = value.toLowerCase();
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    return DateFormatter;
}(_Base__WEBPACK_IMPORTED_MODULE_2__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["DateFormatter"] = DateFormatter;
//# sourceMappingURL=DateFormatter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DurationFormatter.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/formatters/DurationFormatter.js ***!
  \*****************************************************************************************/
/*! exports provided: DurationFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DurationFormatter", function() { return DurationFormatter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../formatters/TextFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Duration formatting functionality.
 */










/**
 * DurationFormatter class. Formats numbers as durations.
 *
 * `1000` as `16:40`
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting
 */
var DurationFormatter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DurationFormatter, _super);
    /**
     * Constructor
     */
    function DurationFormatter() {
        var _this = _super.call(this) || this;
        /**
         * A base value for negative numbers. Will treat all numbers below this value
         * as negative numbers.
         *
         * @type {number}
         */
        _this._negativeBase = 0;
        /**
         * A base unit to consider values are in.
         *
         * @default "s"
         * @type {TimeUnit}
         */
        _this._baseUnit = "second";
        /**
         * Output format to produce. If the format calls for applying color to the
         * formatted value, this setting will determine what markup to use: SVG or
         * HTML.
         *
         * Available options: svg, html.
         *
         * @default "svg"
         * @type {string}
         */
        _this._outputFormat = "svg";
        /**
         * How many milliseconds each unit represents.
         *
         * @type {Object}
         */
        _this._unitValues = {
            "millisecond": 1,
            "second": 1000,
            "minute": 60000,
            "hour": 3600000,
            "day": 86400000,
            "week": 604800000,
            "month": 2592000000,
            "year": 31536000000,
        };
        /**
         * Collection of aliases for units.
         *
         * @type {Object}
         */
        _this._unitAliases = {
            "Y": "y",
            "D": "d",
            "H": "h",
            "K": "h",
            "k": "h",
            "n": "S"
        };
        _this.className = "DurationFormatter";
        _this.applyTheme();
        return _this;
    }
    /**
     * Formats the number according as duration.
     *
     * For example `1000` (base unit seconds) would be converted to `16:40` as in
     * 16 minutes and 40 seconds.
     *
     * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting
     * @param  {number | string}  value   Value to format
     * @param  {string}           format  Format to apply
     * @param  {TimeUnit}         base    Override base unit
     * @return {string}                   Formatted number
     */
    DurationFormatter.prototype.format = function (value, format, base) {
        // no language?
        if (!this.language) {
            if (this.sprite) {
                this.language = this.sprite.language;
            }
            else {
                this.language = new _utils_Language__WEBPACK_IMPORTED_MODULE_1__["Language"];
            }
        }
        // no base unit?
        var baseUnit = base || this._baseUnit;
        // no format passed in or empty
        if (typeof format === "undefined" || format === "") {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.durationFormat)) {
                format = this.durationFormat;
            }
            else {
                format = this.getFormat(_utils_Type__WEBPACK_IMPORTED_MODULE_8__["toNumber"](value), null, baseUnit);
            }
        }
        // Clean format
        format = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["cleanFormat"](format);
        // get format info (it will also deal with parser caching)
        var info = this.parseFormat(format, baseUnit);
        // cast to number just in case
        // TODO: maybe use better casting
        var source = Number(value);
        // format and replace the number
        var details;
        if (source > this._negativeBase) {
            details = info.positive;
        }
        else if (source < this._negativeBase) {
            details = info.negative;
        }
        else {
            details = info.zero;
        }
        // Format
        var formatted = this.applyFormat(source, details);
        // Apply color?
        if (details.color !== "") {
            if (this._outputFormat === "svg") {
                formatted = "<tspan fill='" + details.color + "'>" + formatted + "</tspan>";
            }
            else if (this._outputFormat === "html") {
                formatted = "<span style='color: " + details.color + ";'>" + formatted + "</span>";
            }
        }
        return formatted;
    };
    /**
     * Parses supplied format into structured object which can be used to format
     * the number.
     *
     * @param  {string}    format  Format string, i.e. "#,###.00"
     * @param  {TimeUnit}  base    Override base unit
     * @return {any}               Parsed information
     */
    DurationFormatter.prototype.parseFormat = function (format, base) {
        var _this = this;
        // Check cache
        var cached = this.getCache(format);
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](cached)) {
            return cached;
        }
        // no base unit?
        var baseUnit = base || this._baseUnit;
        // Initialize duration parsing info
        var info = {
            "positive": {
                "color": "",
                "template": "",
                "parts": [],
                "source": "",
                "baseUnit": baseUnit,
                "parsed": false,
                "absolute": false
            },
            "negative": {
                "color": "",
                "template": "",
                "parts": [],
                "source": "",
                "baseUnit": baseUnit,
                "parsed": false,
                "absolute": false
            },
            "zero": {
                "color": "",
                "template": "",
                "parts": [],
                "source": "",
                "baseUnit": baseUnit,
                "parsed": false,
                "absolute": false
            }
        };
        // Escape double vertical bars (that mean display one vertical bar)
        format = format.replace("||", _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER2"]);
        // Split it up and deal with different formats
        var parts = format.split("|");
        info.positive.source = parts[0];
        if (typeof parts[2] === "undefined") {
            info.zero = info.positive;
        }
        else {
            info.zero.source = parts[2];
        }
        if (typeof parts[1] === "undefined") {
            info.negative = info.positive;
        }
        else {
            info.negative.source = parts[1];
        }
        // Parse each
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["each"](info, function (part, item) {
            // Already parsed
            if (item.parsed) {
                return;
            }
            // Check cached
            if (typeof _this.getCache(item.source) !== "undefined") {
                info[part] = _this.getCache(item.source);
                return;
            }
            // Begin parsing
            var partFormat = item.source;
            // Check for [] directives
            var dirs = [];
            dirs = item.source.match(/^\[([^\]]*)\]/);
            if (dirs && dirs.length && dirs[0] !== "") {
                partFormat = item.source.substr(dirs[0].length);
                item.color = dirs[1];
            }
            // Let TextFormatter split into chunks
            var chunks = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().chunk(partFormat, true);
            for (var i = 0; i < chunks.length; i++) {
                var chunk = chunks[i];
                // replace back double vertical bar
                chunk.text = chunk.text.replace(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER2"], "|");
                if (chunk.type === "value") {
                    // Just "Duration"?
                    // if (chunk.text.toLowerCase() === "duration") {
                    // 	chunk.text = durationFormat;
                    // }
                    // Check for "a" (absolute) modifier
                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {
                        item.absolute = true;
                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, "$1");
                    }
                    // Find all possible parts
                    var matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);
                    if (matches) {
                        // Populate template
                        for (var x = 0; x < matches.length; x++) {
                            // Is it an alias?
                            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](matches[x])) {
                                matches[x] = _this._unitAliases[matches[x]];
                            }
                            item.parts.push(matches[x]);
                            chunk.text = chunk.text.replace(matches[x], _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"]);
                        }
                    }
                }
                // Apply to template
                item.template += chunk.text;
            }
            // Apply style formatting
            //item.template = getTextFormatter().format(item.template, this.outputFormat);
            // Save cache
            _this.setCache(item.source, item);
            // Mark this as parsed
            item.parsed = true;
        });
        // Save cache (the whole thing)
        this.setCache(format, info);
        return info;
    };
    /**
     * Applies parsed format to a numeric value.
     *
     * @param  {number}  value    Value
     * @param  {any}     details  Parsed format as returned by {parseFormat}
     * @return {string}           Formatted duration
     */
    DurationFormatter.prototype.applyFormat = function (value, details) {
        // Use absolute values
        var negative = !details.absolute && (value < this._negativeBase);
        value = Math.abs(value);
        // Recalculate to milliseconds
        var tstamp = this.toTimeStamp(value, details.baseUnit);
        // Init return value
        var res = details.template;
        // Iterate through duration parts
        for (var i = 0, len = details.parts.length; i < len; i++) {
            // Gather the part
            var part = details.parts[i];
            var unit = this.toTimeUnit(part.substr(0, 1));
            var digits = part.length;
            // Calculate current unit value
            var ints = Math.floor(tstamp / this._unitValues[unit]);
            res = res.replace(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"], _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["padString"](ints, digits, "0"));
            // Reduce timestamp
            tstamp -= ints * this._unitValues[unit];
        }
        // Reapply negative sign
        if (negative) {
            res = "-" + res;
        }
        return res;
    };
    /**
     * Converts numeric value to timestamp in milliseconds.
     *
     * @param  {number}    value     A source value
     * @param  {TimeUnit}  baseUnit  Base unit the source value is in: "q", "s", "i", "h", "d", "w", "m", "y"
     * @return {number}              Value representation as a timestamp in milliseconds
     */
    DurationFormatter.prototype.toTimeStamp = function (value, baseUnit) {
        return value * this._unitValues[baseUnit];
    };
    DurationFormatter.prototype.toTimeUnit = function (code) {
        switch (code) {
            case "S":
                return "millisecond";
            case "s":
                return "second";
            case "m":
                return "minute";
            case "h":
                return "hour";
            case "d":
                return "day";
            case "w":
                return "week";
            case "M":
                return "month";
            case "y":
                return "year";
        }
        ;
    };
    /**
     * Invalidates the parent [[Sprite]] object.
     */
    DurationFormatter.prototype.invalidateSprite = function () {
        if (this.sprite) {
            this.sprite.invalidate();
        }
    };
    Object.defineProperty(DurationFormatter.prototype, "baseUnit", {
        /**
         * @return {string} Base unit
         */
        get: function () {
            return this._baseUnit;
        },
        /**
         * Base unit the values are in.
         *
         * A base unit will be used to recalculate the numeric value to millisecond
         * timestamps.
         *
         * Available options:
         *
         * * "millisecond"
         * * "second"
         * * "minute"
         * * "hour"
         * * "day"
         * * "week"
         * * "month"
         * * "year"
         *
         * @default "s"
         * @param {TimeUnit}  baseUnit  A base unit
         */
        set: function (baseUnit) {
            this._baseUnit = baseUnit;
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DurationFormatter.prototype, "outputFormat", {
        /**
         * Getter for output format.
         *
         * @ignore Exclude from docs
         * @return {string} Output format
         */
        get: function () {
            return this._outputFormat;
        },
        /**
         * Setter for output format: "svg" or "html.
         *
         * @ignore Exclude from docs
         * @param {string}  value  Output format
         */
        set: function (outputFormat) {
            this._outputFormat = outputFormat.toLowerCase();
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns appropriate default format for the value.
     *
     * If `maxValue` is sepcified, it will use that value to determine the time
     * unit for the format.
     *
     * For example if your `baseUnit` is `"second"` and you pass in `10`, you
     * will get `"10"`.
     *
     * However, you might want it to be formatted in the context of bigger scale,
     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all
     * values, including small ones will use format with minutes, e.g.:
     * `00:10`, `00:50`, `12: 30`, etc.
     *
     * @param  {number}    value     Value to format
     * @param  {number}    maxValue  Maximum value to be used to determine format
     * @param  {TimeUnit}  baseUnit  Base unit of the value
     * @return {string}              Format
     */
    DurationFormatter.prototype.getFormat = function (value, maxValue, baseUnit) {
        // Is format override set?
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.durationFormat)) {
            return this.durationFormat;
        }
        // Get base unit
        if (!baseUnit) {
            baseUnit = this.baseUnit;
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](maxValue) && value != maxValue) {
            value = Math.abs(value);
            maxValue = Math.abs(maxValue);
            var maxUnit = this.getValueUnit(_utils_Math__WEBPACK_IMPORTED_MODULE_9__["max"](value, maxValue), baseUnit);
            //let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);
            //console.log(maxUnit, diffUnit);
            return this.durationFormats[baseUnit][maxUnit];
        }
        else {
            var unit = this.getValueUnit(value, baseUnit);
            return this.durationFormats[baseUnit][unit];
        }
    };
    /**
     * Returns value's closest denominator time unit, e.g 100 seconds is
     * `"minute"`, while 59 seconds would still be `second`.
     *
     * @param  {number}    value     Source duration value
     * @param  {TimeUnit}  baseUnit  Base unit
     * @return {TimeUnit}            Denominator
     */
    DurationFormatter.prototype.getValueUnit = function (value, baseUnit) {
        // Get base unit
        if (!baseUnit) {
            baseUnit = this.baseUnit;
        }
        // Convert to milliseconds
        var currentUnit;
        var ms = this.getMilliseconds(value, baseUnit);
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["eachContinue"](this._unitValues, function (key, val) {
            if (key == baseUnit || currentUnit) {
                var num = ms / val;
                if (num <= 1) {
                    if (!currentUnit) {
                        currentUnit = key;
                    }
                    return false;
                }
                currentUnit = key;
            }
            return true;
        });
        return currentUnit;
    };
    /**
     * Converts value to milliseconds according to `baseUnit`.
     *
     * @param  {number}    value     Source duration value
     * @param  {TimeUnit}  baseUnit  Base unit
     * @return {number}              Value in milliseconds
     */
    DurationFormatter.prototype.getMilliseconds = function (value, baseUnit) {
        // Get base unit
        if (!baseUnit) {
            baseUnit = this.baseUnit;
        }
        return value * this._unitValues[baseUnit];
    };
    Object.defineProperty(DurationFormatter.prototype, "durationFormat", {
        /**
         * @return {Optional<string>} Format
         */
        get: function () {
            return this._durationFormat;
        },
        /**
         * If set, this format will be used instead of the one determined dynamically
         * based on the basedUnit and range of values.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Available fomatting codes
         * @param {string}  value  Format
         */
        set: function (value) {
            if (this._durationFormat != value) {
                this._durationFormat = value;
                this.invalidateSprite();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DurationFormatter.prototype, "durationFormats", {
        /**
         * @return {Partial} Formats
         */
        get: function () {
            if (!this._durationFormats) {
                this._durationFormats = {
                    "millisecond": {
                        "millisecond": this.language.translate("_duration_millisecond"),
                        "second": this.language.translate("_duration_millisecond_second"),
                        "minute": this.language.translate("_duration_millisecond_minute"),
                        "hour": this.language.translate("_duration_millisecond_hour"),
                        "day": this.language.translate("_duration_millisecond_day"),
                        "week": this.language.translate("_duration_millisecond_week"),
                        "month": this.language.translate("_duration_millisecond_month"),
                        "year": this.language.translate("_duration_millisecond_year")
                    },
                    "second": {
                        "second": this.language.translate("_duration_second"),
                        "minute": this.language.translate("_duration_second_minute"),
                        "hour": this.language.translate("_duration_second_hour"),
                        "day": this.language.translate("_duration_second_day"),
                        "week": this.language.translate("_duration_second_week"),
                        "month": this.language.translate("_duration_second_month"),
                        "year": this.language.translate("_duration_second_year")
                    },
                    "minute": {
                        "minute": this.language.translate("_duration_minute"),
                        "hour": this.language.translate("_duration_minute_hour"),
                        "day": this.language.translate("_duration_minute_day"),
                        "week": this.language.translate("_duration_minute_week"),
                        "month": this.language.translate("_duration_minute_month"),
                        "year": this.language.translate("_duration_minute_year")
                    },
                    "hour": {
                        "hour": this.language.translate("_duration_hour"),
                        "day": this.language.translate("_duration_hour_day"),
                        "week": this.language.translate("_duration_hour_week"),
                        "month": this.language.translate("_duration_hour_month"),
                        "year": this.language.translate("_duration_hour_year")
                    },
                    "day": {
                        "day": this.language.translate("_duration_day"),
                        "week": this.language.translate("_duration_day_week"),
                        "month": this.language.translate("_duration_day_month"),
                        "year": this.language.translate("_duration_day_year")
                    },
                    "week": {
                        "week": this.language.translate("_duration_week"),
                        "month": this.language.translate("_duration_week_month"),
                        "year": this.language.translate("_duration_week_year")
                    },
                    "month": {
                        "month": this.language.translate("_duration_month"),
                        "year": this.language.translate("_duration_month_year")
                    },
                    "year": {
                        "year": this.language.translate("_duration_year")
                    }
                };
            }
            return this._durationFormats;
        },
        /**
         * Duration formats for various combination of base units.
         *
         * @param {Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>}  value  Formats
         */
        set: function (value) {
            this._durationFormats = value;
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    return DurationFormatter;
}(_Base__WEBPACK_IMPORTED_MODULE_2__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["DurationFormatter"] = DurationFormatter;
//# sourceMappingURL=DurationFormatter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/NumberFormatter.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/formatters/NumberFormatter.js ***!
  \***************************************************************************************/
/*! exports provided: NumberFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberFormatter", function() { return NumberFormatter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_Language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../formatters/TextFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Number formatting-related functionality.
 */









/**
 * NumberFormatter class. Formats numbers according to specified formats.
 *
 * @todo Apply translations to suffixes/prefixes
 */
var NumberFormatter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](NumberFormatter, _super);
    /**
     * Constructor
     */
    function NumberFormatter() {
        var _this = _super.call(this) || this;
        /**
         * A base value for negative numbers. Will treat all numbers below this value
         * as negative numbers.
         *
         * @type {number}
         */
        _this._negativeBase = 0;
        /**
         * Holds number format.
         *
         * @type {string}
         * @default #,###.#####
         */
        _this._numberFormat = "#,###.#####";
        /**
         * Output format to produce. If the format calls for applying color to the
         * formatted value, this setting will determine what markup to use: SVG or
         * HTML.
         *
         * Available options: svg, html.
         *
         * @default "svg"
         * @type {string}
         */
        _this._outputFormat = "svg";
        _this.className = "NumberFormatter";
        _this.applyTheme();
        return _this;
    }
    NumberFormatter.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this.language) {
            this.language.dispose();
        }
    };
    Object.defineProperty(NumberFormatter.prototype, "language", {
        /**
         * @return {Language} Language
         */
        get: function () {
            if (!this._language) {
                if (this.sprite) {
                    this._language = this.sprite.language;
                }
                else {
                    this._language = new _utils_Language__WEBPACK_IMPORTED_MODULE_1__["Language"];
                }
            }
            return this._language;
        },
        /**
         * A reference to [[Language]] instance.
         *
         * Formatter will use language to translate various items, like number
         * suffixes, etc.
         *
         * @param {Language}  value  Language
         */
        set: function (value) {
            this._language = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Formats the number according to specific format.
     *
     * @param  {number | string}  value   Value to format
     * @param  {string}           format  Format to apply
     * @return {string}                   Formatted number
     */
    NumberFormatter.prototype.format = function (value, format) {
        // no format passed in or "Number"
        if (typeof format === "undefined" || format.toLowerCase() === "number") {
            format = this._numberFormat;
        }
        // Clean format
        format = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["cleanFormat"](format);
        // Get format info (it will also deal with parser caching)
        var info = this.parseFormat(format, this.language);
        // cast to number just in case
        // TODO: maybe use better casting
        var source = Number(value);
        // format and replace the number
        var details;
        if (source > this._negativeBase) {
            details = info.positive;
        }
        else if (source < this._negativeBase) {
            details = info.negative;
        }
        else {
            details = info.zero;
        }
        // Format
        var formatted = details.template.split(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"]).join(this.applyFormat(source, details));
        return formatted;
    };
    /**
     * Parses supplied format into structured object which can be used to format
     * the number.
     *
     * @param {string} format Format string, i.e. "#,###.00"
     * @param {Language} language Language
     */
    NumberFormatter.prototype.parseFormat = function (format, language) {
        var _this = this;
        // Check cache
        var cached = this.getCache(format);
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](cached)) {
            return cached;
        }
        // init format parse info holder
        var info = {
            "positive": {
                "thousands": {
                    "active": -1,
                    "passive": -1,
                    "interval": -1,
                    "separator": language.translateEmpty("_thousandSeparator")
                },
                "decimals": {
                    "active": -1,
                    "passive": -1,
                    "separator": language.translateEmpty("_decimalSeparator")
                },
                "template": "",
                "source": "",
                "parsed": false
            },
            "negative": {
                "thousands": {
                    "active": -1,
                    "passive": -1,
                    "interval": -1,
                    "separator": language.translateEmpty("_thousandSeparator")
                },
                "decimals": {
                    "active": -1,
                    "passive": -1,
                    "separator": language.translateEmpty("_decimalSeparator")
                },
                "template": "",
                "source": "",
                "parsed": false
            },
            "zero": {
                "thousands": {
                    "active": -1,
                    "passive": -1,
                    "interval": -1,
                    "separator": language.translateEmpty("_thousandSeparator")
                },
                "decimals": {
                    "active": -1,
                    "passive": -1,
                    "separator": language.translateEmpty("_decimalSeparator")
                },
                "template": "",
                "source": "",
                "parsed": false
            }
        };
        // Escape double vertical bars (that mean display one vertical bar)
        format = format.replace("||", _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER2"]);
        // Split it up and deal with different formats
        var parts = format.split("|");
        info.positive.source = parts[0];
        if (typeof parts[2] === "undefined") {
            info.zero = info.positive;
        }
        else {
            info.zero.source = parts[2];
        }
        if (typeof parts[1] === "undefined") {
            info.negative = info.positive;
        }
        else {
            info.negative.source = parts[1];
        }
        // Parse each
        _utils_Object__WEBPACK_IMPORTED_MODULE_6__["each"](info, function (part, item) {
            // Already parsed
            if (item.parsed) {
                return;
            }
            // Check cached
            if (typeof _this.getCache(item.source) !== "undefined") {
                info[part] = _this.getCache(item.source);
                return;
            }
            // Begin parsing
            var partFormat = item.source;
            // Just "Number"?
            if (partFormat.toLowerCase() === "number") {
                partFormat = _this._numberFormat;
            }
            // Let TextFormatter split into chunks
            var chunks = Object(_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_3__["getTextFormatter"])().chunk(partFormat, true);
            for (var i = 0; i < chunks.length; i++) {
                var chunk = chunks[i];
                // replace back double vertical bar
                chunk.text = chunk.text.replace(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER2"], "|");
                if (chunk.type === "value") {
                    // Parse format
                    // Look for codes
                    var matches = [];
                    if (matches = chunk.text.match(/[#0.,]+[ ]?[abesABES%]?[abesABES‰]?/)) {
                        if (matches === null || matches[0] === "") {
                            // no codes here - assume string
                            // nothing to do here
                            item.template += chunk.text;
                        }
                        else {
                            // look for the format modifiers at the end
                            var mods = [];
                            if (mods = matches[0].match(/[abesABES%‰]{2}|[abesABES%‰]{1}$/)) {
                                item.mod = mods[0].toLowerCase();
                                item.modSpacing = matches[0].match(/[ ]{1}[abesABES%‰]{1}$/) ? true : false;
                            }
                            // break the format up
                            var a = matches[0].split(".");
                            // Deal with thousands
                            if (a[0] === "") {
                                // No directives for thousands
                                // Leave default settings (no formatting)
                            }
                            else {
                                // Counts
                                item.thousands.active = (a[0].match(/0/g) || []).length;
                                item.thousands.passive = (a[0].match(/\#/g) || []).length + item.thousands.active;
                                // Separator interval
                                var b = a[0].split(",");
                                if (b.length === 1) {
                                    // No thousands separators
                                    // Do nothing
                                }
                                else {
                                    // Use length fo the last chunk as thousands length
                                    item.thousands.interval = _utils_Type__WEBPACK_IMPORTED_MODULE_8__["getValue"](b.pop()).length;
                                    if (item.thousands.interval === 0)
                                        item.thousands.interval = -1;
                                }
                            }
                            // Deal with decimals
                            if (typeof (a[1]) === "undefined") {
                                // No directives for decimals
                                // Leave at defaults (no formatting)
                            }
                            else {
                                // Counts
                                item.decimals.active = (a[1].match(/0/g) || []).length;
                                item.decimals.passive = (a[1].match(/\#/g) || []).length + item.decimals.active;
                            }
                            // Add special code to template
                            item.template += chunk.text.split(matches[0]).join(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"]);
                        }
                    }
                }
                else {
                    // Quoted string - take it as it is
                    item.template += chunk.text;
                }
            }
            // Apply style formatting
            //item.template = getTextFormatter().format(item.template, this.outputFormat);
            // Save cache
            _this.setCache(item.source, item);
            // Mark this as parsed
            item.parsed = true;
        });
        // Save cache (the whole thing)
        this.setCache(format, info);
        return info;
    };
    /**
     * Applies parsed format to a numeric value.
     *
     * @param  {number}  value    Value
     * @param  {any}     details  Parsed format as returned by {parseFormat}
     * @return {string}          Formatted number
     */
    NumberFormatter.prototype.applyFormat = function (value, details) {
        // Use absolute values
        var negative = value < 0;
        value = Math.abs(value);
        // Recalculate according to modifier
        var prefix = "", suffix = "";
        var mods = details.mod ? details.mod.split("") : [];
        if (mods.indexOf("b") !== -1) {
            var a_1 = this.applyPrefix(value, this.bytePrefixes);
            value = a_1[0];
            prefix = a_1[1];
            suffix = a_1[2];
            if (details.modSpacing) {
                suffix = " " + suffix;
            }
        }
        else if (mods.indexOf("a") !== -1) {
            var a_2 = this.applyPrefix(value, value < 1.00 ? this.smallNumberPrefixes : this.bigNumberPrefixes);
            value = a_2[0];
            prefix = a_2[1];
            suffix = a_2[2];
            if (details.modSpacing) {
                suffix = " " + suffix;
            }
        }
        else if (mods.indexOf("%") !== -1) {
            value *= 100;
            suffix = "%";
        }
        else if (mods.indexOf("‰") !== -1) {
            value *= 1000;
            suffix = "‰";
        }
        // Round to passive
        if (mods.indexOf("e") !== -1) {
            // convert the value to exponential
            var exp = void 0;
            if (details.decimals.passive >= 0) {
                exp = value.toExponential(details.decimals.passive).split("e");
            }
            else {
                exp = value.toExponential().split("e");
            }
            value = Number(exp[0]);
            suffix = "e" + exp[1];
            if (details.modSpacing) {
                suffix = " " + suffix;
            }
        }
        else if (details.decimals.passive === 0) {
            value = Math.round(value);
        }
        else if (details.decimals.passive > 0) {
            var d = Math.pow(10, details.decimals.passive);
            value = Math.round(value * d) / d;
        }
        // Init return value
        var res = "";
        // Calc integer and decimal parts
        var a = _utils_Utils__WEBPACK_IMPORTED_MODULE_7__["numberToString"](value).split(".");
        // Format integers
        var ints = a[0];
        // Pad integers to active length
        if (ints.length < details.thousands.active) {
            ints = Array(details.thousands.active - ints.length + 1).join("0") + ints;
        }
        // Insert thousands separators
        if (details.thousands.interval > 0) {
            var ip = [];
            var intsr = ints.split("").reverse().join("");
            for (var i = 0, len = ints.length; i <= len; i += details.thousands.interval) {
                var c = intsr.substr(i, details.thousands.interval).split("").reverse().join("");
                if (c !== "") {
                    ip.unshift(c);
                }
            }
            ints = ip.join(details.thousands.separator);
        }
        // Add integers
        res += ints;
        // Add decimals
        if (a.length === 1) {
            a.push("");
        }
        var decs = a[1];
        // Fill zeros?
        if (decs.length < details.decimals.active) {
            decs += Array(details.decimals.active - decs.length + 1).join("0");
        }
        if (decs !== "") {
            res += details.decimals.separator + decs;
        }
        // Can't have empty return value
        if (res === "") {
            res = "0";
        }
        // Add minus sign back
        if (value !== 0 && negative && (mods.indexOf("s") === -1)) {
            res = "-" + res;
        }
        // Add suffixes/prefixes
        if (prefix) {
            res = prefix + res;
        }
        if (suffix) {
            res += suffix;
        }
        return res;
    };
    /**
     * Chooses appropriate prefix and suffix based on the passed in rules.
     *
     * @param  {number}  value     Value
     * @param  {any[]}   prefixes  Prefix array
     * @return {any}               Result
     */
    NumberFormatter.prototype.applyPrefix = function (value, prefixes) {
        var newvalue = value, prefix = "", suffix = "";
        for (var i = 0, len = prefixes.length; i < len; i++) {
            if (prefixes[i].number <= value) {
                if (prefixes[i].number === 0) {
                    newvalue = 0;
                }
                else {
                    newvalue = value / prefixes[i].number;
                }
                prefix = prefixes[i].prefix;
                suffix = prefixes[i].suffix;
            }
        }
        return [newvalue, prefix, suffix];
    };
    /**
     * Invalidates the parent [[Sprite]] object.
     */
    NumberFormatter.prototype.invalidateSprite = function () {
        if (this.sprite) {
            this.sprite.invalidate();
        }
    };
    Object.defineProperty(NumberFormatter.prototype, "numberFormat", {
        /**
         * @return {string} A format to use for number formatting
         */
        get: function () {
            return this._numberFormat;
        },
        /**
         * Number format.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting
         * @param {string}  format  A format to use for number formatting
         */
        set: function (format) {
            this._numberFormat = format;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberFormatter.prototype, "bigNumberPrefixes", {
        /**
         * @return {INumberSuffix[]} Prefixes for big numbers
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this._bigNumberPrefixes)) {
                this._bigNumberPrefixes = [
                    { "number": 1e+3, "suffix": this.language.translate("_big_number_suffix_3") },
                    { "number": 1e+6, "suffix": this.language.translate("_big_number_suffix_6") },
                    { "number": 1e+9, "suffix": this.language.translate("_big_number_suffix_9") },
                    { "number": 1e+12, "suffix": this.language.translate("_big_number_suffix_12") },
                    { "number": 1e+15, "suffix": this.language.translate("_big_number_suffix_15") },
                    { "number": 1e+18, "suffix": this.language.translate("_big_number_suffix_18") },
                    { "number": 1e+21, "suffix": this.language.translate("_big_number_suffix_21") },
                    { "number": 1e+24, "suffix": this.language.translate("_big_number_suffix_24") }
                ];
            }
            return this._bigNumberPrefixes;
        },
        /**
         * Prefixes for big numbers.
         *
         * It's an array of objects of number/prefix pairs.
         *
         * ```JSON
         * [
         *   { "number": 1e+3, "suffix": "K" },
         *   { "number": 1e+6, "suffix": "M" },
         *   { "number": 1e+9, "suffix": "G" },
         *   { "number": 1e+12, "suffix": "T" },
         *   { "number": 1e+15, "suffix": "P" },
         *   { "number": 1e+18, "suffix": "E" },
         *   { "number": 1e+21, "suffix": "Z" },
         *   { "number": 1e+24, "suffix": "Y" }
         * ]
         * ```
         *
         * If the number is bigger than the `number` ir will be converted to the
         * appropriate bigger number with prefix.
         *
         * E.g. as per above `1500` will be converted to `1.5K`.
         *
         * Please note that for this transformation to be enabled, you need to
         * enable it specific modifier in your format setting.
         *
         * The modifier for big/small number modification is "a":
         *
         * ```Text
         * {myfield.formatNumber("#,###.00a")}
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting
         * @param {INumberSuffix[]}  prefixes  Prefixes for big numbers
         */
        set: function (prefixes) {
            this._bigNumberPrefixes = prefixes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberFormatter.prototype, "smallNumberPrefixes", {
        /**
         * @return {INumberSuffix[]} Prefixes for small numbers
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this._smallNumberPrefixes)) {
                this._smallNumberPrefixes = [
                    { "number": 1e-24, "suffix": this.language.translate("_small_number_suffix_24") },
                    { "number": 1e-21, "suffix": this.language.translate("_small_number_suffix_21") },
                    { "number": 1e-18, "suffix": this.language.translate("_small_number_suffix_18") },
                    { "number": 1e-15, "suffix": this.language.translate("_small_number_suffix_15") },
                    { "number": 1e-12, "suffix": this.language.translate("_small_number_suffix_12") },
                    { "number": 1e-9, "suffix": this.language.translate("_small_number_suffix_9") },
                    { "number": 1e-6, "suffix": this.language.translate("_small_number_suffix_6") },
                    { "number": 1e-3, "suffix": this.language.translate("_small_number_suffix_3") }
                ];
            }
            return this._smallNumberPrefixes;
        },
        /**
         * Prefixes for big numbers.
         *
         * It's an array of objects of number/prefix pairs.
         *
         * ```JSON
         * [
         *   { "number": 1e-24, "suffix": "y" },
         *   { "number": 1e-21, "suffix": "z" },
         *   { "number": 1e-18, "suffix": "a" },
         *   { "number": 1e-15, "suffix": "f" },
         *   { "number": 1e-12, "suffix": "p" },
         *   { "number": 1e-9, "suffix": "n" },
         *   { "number": 1e-6, "suffix": "μ" },
         *   { "number": 1e-3, "suffix": "m" }
         * ]
         * ```
         *
         * If the number is smaller than the `number` ir will be converted to the
         * appropriate smaller number with prefix.
         *
         * E.g. as per above `0.0015` will be converted to `1.5m`.
         *
         * Please note that for this transformation to be enabled, you need to
         * enable it specific modifier in your format setting.
         *
         * The modifier for big/small number modification is "a":
         *
         * ```Text
         * {myfield.formatNumber("#,###.00a")}
         * ```
         *
         * IMPORTANT: The order of the suffixes is important. The list must start
         * from the smallest number and work towards bigger ones.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting
         * @param {INumberSuffix[]}  prefixes  Prefixes for small numbers
         */
        set: function (prefixes) {
            this._smallNumberPrefixes = prefixes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberFormatter.prototype, "bytePrefixes", {
        /**
         * @return {INumberSuffix[]} Prefixes for byte-size formatting
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this._bytePrefixes)) {
                this._bytePrefixes = [
                    { "number": 0, suffix: this.language.translate("_byte_suffix_B") },
                    { "number": 1024, suffix: this.language.translate("_byte_suffix_KB") },
                    { "number": 1048576, suffix: this.language.translate("_byte_suffix_MB") },
                    { "number": 1073741824, suffix: this.language.translate("_byte_suffix_GB") },
                    { "number": 1099511627776, suffix: this.language.translate("_byte_suffix_TB") },
                    { "number": 1125899906842624, suffix: this.language.translate("_byte_suffix_PB") }
                ];
            }
            return this._bytePrefixes;
        },
        /**
         * Basically the same as `bigNumberPrefixes`, except base for calculation
         * is not thousand but byte (1024).
         *
         * The modifier is "b".
         *
         *  ```Text
         * {myfield.formatNumber("#,###.00b")}
         * ```
         *
         * The above `2048` will change to `2K`.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting
         * @param {INumberSuffix[]}  prefixes  Prefixes for byte-size formatting
         */
        set: function (prefixes) {
            this._bytePrefixes = prefixes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberFormatter.prototype, "outputFormat", {
        /**
         * @ignore Exclude from docs
         * @return {string} Output format
         */
        get: function () {
            return this._outputFormat;
        },
        /**
         * Ooutput format: "svg" or "html".
         *
         * @ignore Exclude from docs
         * @param {string}  value  Output format
         */
        set: function (outputFormat) {
            this._outputFormat = outputFormat.toLowerCase();
            this.invalidateSprite();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Replaces brackets with temporary placeholders.
     *
     * @ignore Exclude from docs
     * @param  {string}  text  Input text
     * @return {string}        Escaped text
     */
    NumberFormatter.prototype.escape = function (text) {
        return text.replace("||", _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER2"]);
    };
    /**
     * Replaces placeholders back to brackets.
     *
     * @ignore Exclude from docs
     * @param  {string}  text  Escaped text
     * @return {string}        Unescaped text
     */
    NumberFormatter.prototype.unescape = function (text) {
        return text.replace(_utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER2"], "|");
    };
    return NumberFormatter;
}(_Base__WEBPACK_IMPORTED_MODULE_2__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["NumberFormatter"] = NumberFormatter;
//# sourceMappingURL=NumberFormatter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js ***!
  \*************************************************************************************/
/*! exports provided: TextFormatter, getTextFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextFormatter", function() { return TextFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTextFormatter", function() { return getTextFormatter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _rendering_AMElement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rendering/AMElement */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Handles formatting of pseudo-markup in text.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * Handles formatting of pseudo-markdown in text.
 *
 * @todo Encode < > in output
 * @todo Add more adapters
 * @important
 */
var TextFormatter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TextFormatter, _super);
    /**
     * Constructor
     */
    function TextFormatter() {
        var _this = _super.call(this) || this;
        /**
         * Adapter.
         *
         * @type {Adapter<TextFormatter, ITextFormatterAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_3__["Adapter"](_this);
        _this.className = "TextFormatter";
        _this.applyTheme();
        return _this;
    }
    TextFormatter.prototype.debug = function () { };
    /**
     * Formats the text according to specifications passed in.
     *
     * @param  {string}  text    Text to format
     * @param  {string}  output  Output format (svg, html)
     * @return {string}          Formatted text
     */
    TextFormatter.prototype.format = function (text, output) {
        // Apply default
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["hasValue"](output)) {
            output = "svg";
        }
        // Init return value
        var formatted = "";
        // Replace double (escaped) square spaces with remporary codes
        text = this.escape(text);
        // Divvy up the string by style tags
        var styles = text.match(/\[([^\]]*?)\]/gm);
        if (!styles) {
            // Nothing to do here - no formatting elements
            return this.wrap(text, "", output);
        }
        // Get pure text - no style tags
        var texts = text.split(/\[[^\[\]]*\]/);
        // Go through each of the texts and wrap it in style tags
        for (var i = 0, len = texts.length; i < len; i++) {
            // Get text bit
            var t = texts[i];
            // Check if string is empty
            if (t === "") {
                continue;
            }
            // Run through an adapter
            t = this.adapter.apply("chunk", t);
            // Get related style
            var s = "";
            if (i > 0) {
                s = styles[i - 1].replace('[', '').replace(']', '');
            }
            // Wrap text in tag
            formatted += this.wrap(t, s, output);
        }
        // Replace placeholders back
        formatted = this.unescape(formatted);
        // Return result
        return this.cleanUp(formatted);
    };
    /**
     * Replaces brackets with temporary placeholders.
     *
     * @ignore Exclude from docs
     * @param  {string}  text  Input text
     * @return {string}        Escaped text
     */
    TextFormatter.prototype.escape = function (text) {
        return text.
            replace(/\[\[/g, _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("1")).
            replace(/([^\/]{1})\]\]/g, "$1" + _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("2")).
            replace(/\{\{/g, _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("3")).
            replace(/\}\}/g, _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("4")).
            replace(/\'\'/g, _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("5"));
    };
    /**
     * Replaces placeholders back to brackets.
     *
     * @ignore Exclude from docs
     * @param  {string}  text  Escaped text
     * @return {string}        Unescaped text
     */
    TextFormatter.prototype.unescape = function (text) {
        return text.
            replace(new RegExp(_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("1"), "g"), "[[").
            replace(new RegExp(_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("2"), "g"), "]]").
            replace(new RegExp(_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("3"), "g"), "{{").
            replace(new RegExp(_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("4"), "g"), "}}").
            replace(new RegExp(_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getPlaceholder("5"), "g"), "'");
    };
    /**
     * Cleans up the text text for leftover double square brackets.
     *
     * @ignore Exclude from docs
     * @param  {string}  text  Input text
     * @return {string}        Cleaned up text
     */
    TextFormatter.prototype.cleanUp = function (text) {
        return text.
            replace(/\[\[/g, "[").
            replace(/\]\]/g, "]").
            replace(/\{\{/g, "{").
            replace(/\}\}/g, "}").
            replace(/\'\'/g, "'");
    };
    /**
     * Wraps text into corresponding tags.
     *
     * @ignore Exclude from docs
     * @param  {string}  text   Text to wrap
     * @param  {string}  style  Styles
     * @param  {string}  output  Format to output in (svg, html)
     * @return {string}          Formatted string
     */
    TextFormatter.prototype.wrap = function (text, style, output) {
        if (style === "" || style === "/") {
            //return text;
            style = "";
        }
        switch (output) {
            case "html":
                return this.wrapHtml(text, this.translateStyleShortcuts(style));
            default:
                return this.wrapSvg(text, this.translateStyleShortcuts(style));
        }
    };
    /**
     * Wraps text in styled SVG tag.
     *
     * @ignore Exclude from docs
     * @param  {string}  text   Text to wrap
     * @param  {string}  style  Style property
     * @return {string}         Formatted tag
     */
    TextFormatter.prototype.wrapSvg = function (text, style) {
        if (style === "") {
            return "<tspan>" + text + "</tspan>";
        }
        else {
            return "<tspan style='" + style + "'>" + text + "</tspan>";
        }
    };
    /**
     * Returns an SVG `<tspan>` element.
     *
     * @ignore Exclude from docs
     * @param  {string}     text   Text
     * @param  {string}     style  Style
     * @return {AMElement}         Element
     */
    TextFormatter.prototype.getSvgElement = function (text, style) {
        var element = new _rendering_AMElement__WEBPACK_IMPORTED_MODULE_2__["AMElement"]("tspan");
        element.textContent = text;
        if (style) {
            element.node.setAttribute("style", style);
        }
        return element;
    };
    /**
     * Wraps text in HTML <span> tag.
     *
     * @ignore Exclude from docs
     * @param  {string}  text   Text to wrap
     * @param  {string}  style  Style property
     * @return {string}         Formatted tag
     * @todo Translate SVG styles into HTML ones
     */
    TextFormatter.prototype.wrapHtml = function (text, style) {
        if (style === "") {
            return "<span>" + text + "</span>";
        }
        else {
            return "<span style='" + this.styleSvgToHtml(style) + "'>" + text + "</span>";
        }
    };
    /**
     * Returns an HTML `<span>` element.
     *
     * @ignore Exclude from docs
     * @param  {string}       text   Text/HTML
     * @param  {string}       style  Style definition
     * @return {HTMLElement}         HTML element
     */
    TextFormatter.prototype.getHtmlElement = function (text, style) {
        var element = document.createElement("span");
        element.innerHTML = text;
        if (style) {
            element.setAttribute("style", style);
        }
        return element;
    };
    /**
     * Trabslates SVG CSS into HTML CSS.
     *
     * @ignore Exclude from docs
     * @param  {string}  style  SVG CSS
     * @return {string}         HTML CSS
     * @todo Implement actual translation
     */
    TextFormatter.prototype.styleSvgToHtml = function (style) {
        style = style.replace(/fill:/, "color:");
        return style;
    };
    /**
     * Translates style shortcuts into full styles, i.e.:
     * "bold" => "font-weight: bold"
     * "#f00" => "fill: #f00"
     *
     * @ignore Exclude from docs
     * @param  {string}  style  Untranslated style
     * @return {string}         Translated style
     * @todo Implement actual translation
     */
    TextFormatter.prototype.translateStyleShortcuts = function (style) {
        if (style == "" || style == "[ ]") {
            return "";
        }
        var cached = _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getCache("translateStyleShortcuts_" + style);
        if (cached) {
            return cached;
        }
        // Get style parts
        var b = style.match(/([\w\-]*:[\s]?[^;\s\]]*)|(\#[\w]{1,6})|([\w]+)|(\/)/gi);
        // Empty?
        if (!b) {
            return style;
        }
        // Check each part
        for (var i = 0; i < b.length; i++) {
            if (b[i].match(/^bold$/i)) {
                // Bold
                b[i] = "font-weight:" + b[i];
            }
            else if (b[i] == "/") {
                // Just closing tag
                // Do nothing
                b[i] = "";
            }
            else if (!b[i].match(/:/)) {
                // Color
                b[i] = "fill:" + b[i];
            }
        }
        var res = b.join(';');
        _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].setCache("translateStyleShortcuts_" + style, res);
        return res;
    };
    /**
     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)
     *
     * If the second parameter `quotedBlocks` is set to `true` this method will
     * also single out text blocks enclosed within single quotes that no
     * formatting should be applied to, and they should be displayed as is.
     *
     * Default for the above is `false`, so that you can use single quote in text
     * without escaping it.
     *
     * If enabled, single quotes can be escaped by doubling it - adding two
     * single quotes, which will be replaced by a one single quote in the final
     * output.
     *
     * @ignore Exclude from docs
     * @param  {string}    text          Text to chunk
     * @param  {boolean}   quotedBlocks  Use quoted blocks
     * @param  {boolean}   noFormatting  Formatting blocks will be treated as regular text
     * @return {string[]}                Array of string chunks
     */
    TextFormatter.prototype.chunk = function (text, quotedBlocks, noFormatting) {
        if (quotedBlocks === void 0) { quotedBlocks = false; }
        if (noFormatting === void 0) { noFormatting = false; }
        // Init result
        var res = [];
        // Replace double (escaped) square spaces and quotes with temporary codes
        text = this.escape(text);
        // Deal with style blocks
        var chunks = quotedBlocks ? text.split("'") : [text];
        for (var i = 0; i < chunks.length; i++) {
            var chunk = chunks[i];
            // Empty?
            if (chunk === "") {
                continue;
            }
            if ((i % 2) === 0) {
                // Text outside quotes
                // Parse for style blocks which are "text" chunks, the rest chunks are
                // "value"
                chunk = chunk.replace(/\]\[/g, "]" + _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"] + "[");
                chunk = chunk.replace(/\[\]/g, "[ ]");
                var chunks2 = chunk.split(/[\[\]]+/);
                for (var i2 = 0; i2 < chunks2.length; i2++) {
                    var chunk2 = this.cleanUp(this.unescape(chunks2[i2]));
                    // Placeholder?
                    if (chunk2 === _utils_Strings__WEBPACK_IMPORTED_MODULE_5__["PLACEHOLDER"]) {
                        continue;
                    }
                    // Empty?
                    if (chunk2 === "") {
                        continue;
                    }
                    // Block or value
                    if ((i2 % 2) === 0) {
                        res.push({
                            "type": "value",
                            "text": this.adapter.apply("chunk", chunk2)
                        });
                    }
                    else {
                        res.push({
                            "type": noFormatting ? "value" : "format",
                            "text": "[" + chunk2 + "]"
                        });
                    }
                }
            }
            else {
                // A text within doublequotes
                // All chunks are "text"
                var chunks2 = chunk.split(/[\[\]]+/);
                for (var i2 = 0; i2 < chunks2.length; i2++) {
                    var chunk2 = this.cleanUp(this.unescape(chunks2[i2]));
                    // Empty?
                    if (chunk2 === "") {
                        continue;
                    }
                    // Block or text
                    if ((i2 % 2) === 0) {
                        res.push({
                            "type": "text",
                            "text": chunk2
                        });
                    }
                    else if (this.isImage(chunk2)) {
                        res.push({
                            "type": "image",
                            "text": "[" + chunk2 + "]"
                        });
                    }
                    else {
                        res.push({
                            "type": "format",
                            "text": "[" + chunk2 + "]"
                        });
                    }
                }
            }
        }
        return res;
    };
    /**
     * Checks if supplied format contains image information and should be
     * formatted as such.
     * I.e.: `[img: myImage.png]`
     *
     * @ignore Exclude from docs
     * @param  {string}   text  Format
     * @return {boolean}        `true` if it is an image
     */
    TextFormatter.prototype.isImage = function (text) {
        return text.match(/img[ ]?:/) ? true : false;
    };
    return TextFormatter;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

var formatter;
/**
 * Returns the global instance of [[TextFormatter]].
 *
 * All classes and instances should reuse this universal text formatter,
 * rather than create their own instance of it.
 *
 * @type {TextFormatter}
 */
function getTextFormatter() {
    if (formatter == null) {
        formatter = new TextFormatter();
    }
    return formatter;
}
/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["TextFormatter"] = TextFormatter;
//# sourceMappingURL=TextFormatter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Inertia.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/interaction/Inertia.js ***!
  \********************************************************************************/
/*! exports provided: Inertia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Inertia", function() { return Inertia; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Interaction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Functionality related to inertia
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * A point of inertia is to simulate gradually drecreasing motion even after
 * actual interaction by user, that caused it, has already ended.
 *
 * [[Inertia]] object will continue triggering the same [[Sprite]] handlers
 * as if the interaction was still happening, gradually reducing
 * shift/angle/scale values until full stop.
 *
 * Basically, from the target element's point of view, while inertia is
 * playing, it is still being interacted with by user, albeit with a
 * decreasing speed.
 */
var Inertia = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Inertia, _super);
    /**
     * Constructor
     */
    function Inertia(interaction, type, point, startPoint) {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * List of animations currently playing.
         *
         * @type {List<Animation>}
         */
        _this.animations = [];
        _this.className = "Inertia";
        _this.interaction = interaction;
        _this.type = type;
        _this.point = point;
        _this.startPoint = startPoint;
        // Make animations disposable
        _this._disposers.push(new _utils_Animation__WEBPACK_IMPORTED_MODULE_3__["AnimationDisposer"](_this.animations));
        return _this;
    }
    Object.defineProperty(Inertia.prototype, "x", {
        /**
         * Returns current X coordinate.
         *
         * @return {number} X
         */
        get: function () {
            return this.point.x;
        },
        /**
         * Sets current X coordinate.
         *
         * Will trigger "drag" event for the target element.
         *
         * @param {number} value X
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](value)) {
                this.point.x = value;
                this.handleMove();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Inertia.prototype, "y", {
        /**
         * Returns current Y coordinate.
         *
         * @return {number} Y
         */
        get: function () {
            return this.point.y;
        },
        /**
         * Sets current Y coordinate.
         *
         * Will trigger "drag" event for the target element.
         *
         * @param {number} value Y
         */
        set: function (value) {
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](value)) {
                this.point.y = value;
                this.handleMove();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Simulates dragging of element.
     */
    Inertia.prototype.handleMove = function () {
        // Prepare {InteractionEvent} object
        if (this.interaction.events.isEnabled("drag")) {
            var imev = {
                type: "drag",
                target: this.interaction,
                shift: {
                    x: this.x - this.startPoint.x,
                    y: this.y - this.startPoint.y
                },
                startPoint: this.startPoint,
                point: {
                    x: this.x,
                    y: this.y
                }
            };
            // Call handler
            this.interaction.events.dispatchImmediately("drag", imev);
        }
    };
    /**
     * Finishes up the inertia animation. (removes reference to this animation
     * object)
     */
    Inertia.prototype.done = function () {
        // Remove inertia animation from the object
        this.interaction.inertias.removeKey(this.type);
        // Move ended
        if (this.type === "move") {
            Object(_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])().processDragStop(this.interaction);
        }
        // Destroy
        this.dispose();
    };
    return Inertia;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

//# sourceMappingURL=Inertia.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js ***!
  \************************************************************************************/
/*! exports provided: Interaction, getInteraction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Interaction", function() { return Interaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getInteraction", function() { return getInteraction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _InteractionObject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./InteractionObject */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObject.js");
/* harmony import */ var _InteractionKeyboardObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./InteractionKeyboardObject */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionKeyboardObject.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _Inertia__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Inertia */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Inertia.js");
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Keyboard__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _System__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Time__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../utils/Time */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js");
/**
 * Interaction manages all aspects of user interaction - mouse move,
 * click, hover, drag events, touch gestures.
 *
 * [[InteractionObject]] elements that want to use certain events, must attach event
 * listeners to Interaction instance.
 *
 * Interaction itself will not modify [[InteractionObject]] elements, it will be up to
 * those elements to handle interaction information received via event triggers.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

















/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
* Interaction manages all aspects of user interaction - mouse move,
* click, hover, drag events, touch gestures.
*
* [[InteractionObject]] elements that want to use certain events, must attach event
* listeners to Interaction instance.
*
* Interaction itself will not modify [[InteractionObject]] elements, it will be up to
* those elements to handle interaction information received via event triggers.
*
* @see {@link IInteractionEvents} for a list of available events
*/
var Interaction = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Interaction, _super);
    /**
     * Constructor. Sets up universal document-wide move events to handle stuff
     * outside particular chart container.
     */
    function Interaction() {
        var _this = 
        // Call super
        _super.call(this) || this;
        /**
         * An indicator of global events were already initialized.
         *
         * @type {boolean}
         */
        _this._globalEventsAdded = false;
        /**
         * Holds which mouse event listeners to use.
         *
         * @type {Object}
         */
        _this._pointerEvents = {
            "pointerdown": "mousedown",
            "pointerup": "mouseup",
            "pointermove": "mousemove",
            "pointercancel": "mouseup",
            "pointerover": "mouseover",
            "pointerout": "mouseout",
            "wheel": "wheel"
        };
        /**
         * Indicates if Interaction should use only "pointer" type events, like
         * "pointermove", available in all modern browsers, ignoring "legacy"
         * events, like "touchmove".
         *
         * @type {boolean}
         */
        _this._usePointerEventsOnly = false;
        /**
         * Use only touch events (for touch only devices such as tablets and phones)
         *
         * @type {boolean}
         */
        _this._useTouchEventsOnly = false;
        /**
         * Indicates if passive mode options is supported by this browser.
         *
         * @type {boolean}
         */
        _this._passiveSupported = false;
        /**
         * Holds list of delayed events
         *
         * @type {IDelayedEvent[]}
         */
        _this._delayedEvents = { out: [] };
        /**
         * List of objects that current have a pointer hovered over them.
         *
         * @type {List<InteractionObject>}
         */
        _this.overObjects = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * List of objects that currently has a pressed pointer.
         *
         * @type {List<InteractionObject>}
         */
        _this.downObjects = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * List of objects that need mouse position to be reported to them.
         *
         * @type {List<InteractionObject>}
         */
        _this.trackedObjects = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * List of objects that are currently being dragged.
         *
         * @type {List<InteractionObject>}
         */
        _this.transformedObjects = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * Holds all known pointers.
         *
         * @type {Dictionary<string, IPointer>}
         */
        _this.pointers = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_7__["Dictionary"]();
        /**
         * Inertia options that need to be applied to after element drag, if it's
         * `inert = true`.
         *
         * This is just a default, which can and probably will be overridden by
         * actual elements.
         *
         * @type {Dictionary}
         */
        _this.inertiaOptions = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_7__["Dictionary"]();
        /**
         * Default options for click events. These can be overridden in
         * [[InteractionObject]].
         *
         * @type {IHitOptions}
         */
        _this.hitOptions = {
            //"holdTime": 1000,
            "doubleHitTime": 300,
            //"delayFirstHit": false,
            "hitTolerance": 10,
            "noFocus": true
        };
        /**
         * Default options for hover events. These can be overridden in
         * [[InteractionObject]].
         *
         * @type {IHoverOptions}
         */
        _this.hoverOptions = {
            "touchOutBehavior": "leave",
            "touchOutDelay": 1000
        };
        /**
         * Default options for detecting a swipe gesture. These can be overridden in
         * [[InteractionObject]].
         *
         * @type {ISwipeOptions}
         */
        _this.swipeOptions = {
            "time": 500,
            "verticalThreshold": 75,
            "horizontalThreshold": 30
        };
        /**
         * Default options for keyboard operations. These can be overridden in
         * [[InteractionObject]].
         *
         * @type {IKeyboarOptions}
         */
        _this.keyboardOptions = {
            "speed": 0.1,
            "accelleration": 1.2,
            "accellerationDelay": 2000
        };
        // Set class name
        _this.className = "Interaction";
        // Create InteractionObject for <body>
        _this.body = _this.getInteraction(document.body);
        _this._disposers.push(_this.body);
        // Detect browser capabilities and determine what event listeners to use
        if (window.hasOwnProperty("PointerEvent")) {
            // IE10+/Edge without touch controls enabled
            _this._pointerEvents.pointerdown = "pointerdown";
            _this._pointerEvents.pointerup = "pointerup";
            _this._pointerEvents.pointermove = "pointermove";
            _this._pointerEvents.pointercancel = "pointercancel";
            _this._pointerEvents.pointerover = "pointerover";
            _this._pointerEvents.pointerout = "pointerout";
            //this._usePointerEventsOnly = true;
        }
        else if (window.hasOwnProperty("MSPointerEvent")) {
            // IE9
            _this._pointerEvents.pointerdown = "MSPointerDown";
            _this._pointerEvents.pointerup = "MSPointerUp";
            _this._pointerEvents.pointermove = "MSPointerMove";
            _this._pointerEvents.pointercancel = "MSPointerUp";
            _this._pointerEvents.pointerover = "MSPointerOver";
            _this._pointerEvents.pointerout = "MSPointerOut";
            //this._usePointerEventsOnly = true;
        }
        else if ((typeof matchMedia !== "undefined") && matchMedia('(pointer:fine)')) {
            // This is only for Safari as it does not support PointerEvent
            // Do nothing and let it use regular `mouse*` events
            // Hi Apple ;)
        }
        else {
            // Uses defaults for normal browsers
            // We also assume that this must be a touch device that does not have
            // any pointer events
            _this._useTouchEventsOnly = true;
        }
        // Detect if device has a mouse
        // This is turning out to be not reliable
        // @todo remove
        /*if (!window.navigator.msPointerEnabled && (typeof matchMedia !== "undefined") && !matchMedia('(pointer:fine)').matches && !this.fullFF()) {
            this._useTouchEventsOnly = true;
        }*/
        // Detect proper mouse wheel events
        if ("onwheel" in document.createElement("div")) {
            // Modern browsers
            _this._pointerEvents.wheel = "wheel";
        }
        else if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](document.onmousewheel)) {
            // Webkit and IE support at least "mousewheel"
            _this._pointerEvents.wheel = "mousewheel";
        }
        // Set up default inertia options
        _this.inertiaOptions.setKey("move", {
            "time": 100,
            "duration": 500,
            "factor": 1,
            "easing": _utils_Ease__WEBPACK_IMPORTED_MODULE_12__["polyOut3"]
        });
        _this.inertiaOptions.setKey("resize", {
            "time": 100,
            "duration": 500,
            "factor": 1,
            "easing": _utils_Ease__WEBPACK_IMPORTED_MODULE_12__["polyOut3"]
        });
        // Check for passive mode support
        try {
            var target_1 = _this;
            var options = Object.defineProperty({}, "passive", {
                get: function () {
                    target_1._passiveSupported = true;
                }
            });
            window.addEventListener("test", options, options);
            window.removeEventListener("test", options, options);
        }
        catch (err) {
            _this._passiveSupported = false;
        }
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * This is a nasty detection for Firefox. The reason why we have is that
     * Firefox ESR version does not support matchMedia correctly.
     *
     * On iOS, Firefox uses different userAgent, so we don't have to detect iOS.
     *
     * @return {boolean} Full Firefox?
     */
    Interaction.prototype.fullFF = function () {
        return (window.navigator.userAgent.match(/Firefox/)) && !(window.navigator.userAgent.match(/Android/));
    };
    Interaction.prototype.debug = function () { };
    /**
     * ==========================================================================
     * Processing
     * ==========================================================================
     * @hidden
     */
    /**
     * Sets up global events.
     *
     * We need this so that we can track drag movement beyond chart's container.
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.addGlobalEvents = function () {
        var _this = this;
        if (!this._globalEventsAdded) {
            if (!this._useTouchEventsOnly) {
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, this._pointerEvents.pointerdown, function (ev) { _this.handleGlobalPointerDown(ev); }));
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, this._pointerEvents.pointermove, function (ev) { _this.handleGlobalPointerMove(ev); }));
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, this._pointerEvents.pointerup, function (ev) { _this.handleGlobalPointerUp(ev); }));
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, this._pointerEvents.pointercancel, function (ev) { _this.handleGlobalPointerUp(ev, true); }));
            }
            // No need to duplicate events for hubrid systems that support both
            // pointer events and touch events. Touch events are need only for
            // some touch-only systems, like Mobile Safari.
            if (!this._usePointerEventsOnly) {
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, "touchstart", function (ev) { _this.handleGlobalTouchStart(ev); }));
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, "touchmove", function (ev) { _this.handleGlobalTouchMove(ev); }));
                this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, "touchend", function (ev) { _this.handleGlobalTouchEnd(ev); }));
            }
            this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, "keydown", function (ev) { _this.handleGlobalKeyDown(ev); }));
            this._disposers.push(Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(document, "keyup", function (ev) { _this.handleGlobalKeyUp(ev); }));
            this._globalEventsAdded = true;
        }
    };
    /**
     * Sets if [[InteractionObject]] is clickable.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject} io [[InteractionObject]] instance
     */
    Interaction.prototype.processClickable = function (io) {
        // Add or remove touch events
        this.processTouchable(io);
    };
    /**
     * Sets if [[InteractionObject]] is hoverable.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject} io [[InteractionObject]] instance
     */
    Interaction.prototype.processHoverable = function (io) {
        var _this = this;
        if (io.hoverable || io.trackable) {
            // Add global events
            this.addGlobalEvents();
            // Add hover styles
            this.applyCursorOverStyle(io);
            // Add local events
            if (!io.eventDisposers.hasKey("hoverable")) {
                io.eventDisposers.setKey("hoverable", new _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, this._pointerEvents.pointerout, function (e) { return _this.handlePointerOut(io, e); }),
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, this._pointerEvents.pointerover, function (e) { return _this.handlePointerOver(io, e); })
                ]));
            }
            if (io.trackable) {
                //sprite.addEventListener("touchmove", this.handleTouchMove, false, this);
            }
        }
        else {
            var disposer = io.eventDisposers.getKey("hoverable");
            if (disposer != null) {
                disposer.dispose();
                io.eventDisposers.removeKey("hoverable");
            }
        }
        // Add or remove touch events
        this.processTouchable(io);
    };
    /**
     * Sets up [[InteractionObject]] as movable. Movable can be any
     * transformation, e.g. drag, swipe, resize, track.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processMovable = function (io) {
        // Add unified events
        if (io.draggable || io.swipeable || io.trackable || io.resizable) {
            // Prep the element
            if (!this.isGlobalElement(io)) {
                this.prepElement(io);
            }
            // Add hover styles
            this.applyCursorOverStyle(io);
        }
        // Add or remove touch events
        this.processTouchable(io);
    };
    /**
     * Checks if [[InteractionObject]] is trackable and sets relative events.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processTrackable = function (io) {
        this.processHoverable(io);
        this.processMovable(io);
        if (io.trackable) {
            this.trackedObjects.moveValue(io);
        }
        else {
            this.trackedObjects.removeValue(io);
        }
    };
    /**
     * Checks if [[InteractionObject]] is draggable.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processDraggable = function (io) {
        this.processMovable(io);
    };
    /**
     * Checks if [[InteractionObject]] is swipeable and sets relative events.
     *
     * A swipe event is triggered when a horizontal drag of 75px or more (and
     * less than 30px vertically) occurs within 700 milliseconds. This can be
     * overridden in sprites [[swipeOptions]].
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processSwipeable = function (io) {
        this.processMovable(io);
    };
    /**
     * Checks if [[InteractionObject]] is resizable and attaches required events
     * to it.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processResizable = function (io) {
        this.processMovable(io);
    };
    /**
     * Checks if [[InteractionObject]] is supposed to capture mouse wheel events
     * and prepares it to catch those events.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processWheelable = function (io) {
        var _this = this;
        if (io.wheelable) {
            //io.hoverable = true;
            if (!io.eventDisposers.hasKey("wheelable")) {
                io.eventDisposers.setKey("wheelable", new _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, this._pointerEvents.wheel, function (e) { return _this.handleMouseWheel(io, e); }, this._passiveSupported ? { passive: false } : false),
                    io.events.on("out", function (e) {
                        if (io.wheelable) {
                            _this.unlockWheel();
                        }
                    }),
                    io.events.on("over", function (e) {
                        if (io.wheelable) {
                            _this.lockWheel();
                        }
                    })
                ]));
            }
        }
        else {
            var disposer = io.eventDisposers.getKey("wheelable");
            if (disposer != null) {
                disposer.dispose();
                io.eventDisposers.removeKey("wheelable");
            }
        }
    };
    /**
     * Checks if [[InteractionObject]] is focusable. A focusable element is an
     * element that will be highlighted when users presses TAB key. If the
     * element is focusable, this function will attach relative focus/blur
     * events to it.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processFocusable = function (io) {
        var _this = this;
        if (io.focusable === true && (io.tabindex > -1) && !this._useTouchEventsOnly) {
            if (!io.eventDisposers.hasKey("focusable")) {
                io.eventDisposers.setKey("focusable", new _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, "focus", function (e) { return _this.handleFocus(io, e); }),
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, "blur", function (e) { return _this.handleBlur(io, e); }),
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, this._pointerEvents.pointerdown, function (e) { return _this.handleFocusBlur(io, e); }),
                    Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, "touchstart", function (e) { return _this.handleFocusBlur(io, e); }, this._passiveSupported ? { passive: false } : false)
                ]));
            }
        }
        else {
            var disposer = io.eventDisposers.getKey("focusable");
            if (disposer != null) {
                disposer.dispose();
                io.eventDisposers.removeKey("focusable");
            }
        }
    };
    /**
     * Checks if [[InteractionObject]] is "touchable". It means any interaction
     * whatsoever: mouse click, touch screen tap, swipe, drag, resize, etc.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     */
    Interaction.prototype.processTouchable = function (io) {
        var _this = this;
        // Add unified events
        if (io.clickable || io.hoverable || io.trackable || io.draggable || io.swipeable || io.resizable) {
            // Add global events
            this.addGlobalEvents();
            // Add local events
            if (!io.eventDisposers.hasKey("touchable")) {
                if (!this._useTouchEventsOnly && !this._usePointerEventsOnly) {
                    io.eventDisposers.setKey("touchable", new _utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                        Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, this._pointerEvents.pointerdown, function (e) { return _this.handlePointerDown(io, e); }),
                        Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, "touchstart", function (e) { return _this.handleTouchDown(io, e); }, this._passiveSupported ? { passive: false } : false)
                    ]));
                }
                else if (!this._useTouchEventsOnly) {
                    io.eventDisposers.setKey("touchable", Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, this._pointerEvents.pointerdown, function (e) { return _this.handlePointerDown(io, e); }));
                }
                else if (!this._usePointerEventsOnly) {
                    io.eventDisposers.setKey("touchable", Object(_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["addEventListener"])(io.element, "touchstart", function (e) { return _this.handleTouchDown(io, e); }, this._passiveSupported ? { passive: false } : false));
                }
            }
        }
        else {
            var disposer = io.eventDisposers.getKey("touchable");
            if (disposer != null) {
                disposer.dispose();
                io.eventDisposers.removeKey("touchable");
            }
        }
    };
    /**
     * ==========================================================================
     * Non-pointer events
     * ==========================================================================
     * @hidden
     */
    /**
     * Dispatches "focus" event when element gains focus.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     * @param {FocusEvent}         ev  Original event
     */
    Interaction.prototype.handleFocus = function (io, ev) {
        if (!io.focusable) {
            ev.preventDefault();
            return;
        }
        io.isFocused = true;
        if (io.events.isEnabled("focus") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "focus",
                target: io,
                event: ev
            };
            io.events.dispatchImmediately("focus", imev);
        }
    };
    /**
     * Used by regular click events to prevent focus if "noFocus" is set.
     *
     * This should not be called by "focus" handlers.
     *
     * @param {InteractionObject}  io  Element
     * @param {MouseEvent | TouchEvent}         ev  Original event
     */
    Interaction.prototype.handleFocusBlur = function (io, ev) {
        if (io.focusable !== false && this.getHitOption(io, "noFocus")) {
            /*if (ev.cancelable) {
                ev.preventDefault();
            }*/
            //this.setTimeout($dom.blur, 1);
            io.events.once("focus", _utils_DOM__WEBPACK_IMPORTED_MODULE_9__["blur"]);
        }
    };
    /**
     * Dispatches "blur" event when element loses focus.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     * @param {FocusEvent}         ev  Original event
     */
    Interaction.prototype.handleBlur = function (io, ev) {
        if (!io.focusable) {
            ev.preventDefault();
            return;
        }
        io.isFocused = false;
        if (io.events.isEnabled("blur") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "blur",
                target: io,
                event: ev
            };
            io.events.dispatchImmediately("blur", imev);
        }
    };
    /**
     * ==========================================================================
     * Global keyboard-related even handlers
     * ==========================================================================
     * @hidden
     */
    /**
     * Checks if there is an item that has currently focus and that they key is
     * one of the directional keys. If both of the conditions are true, it
     * creates an object to simulate movement of dragable element with keyboard.
     *
     * @ignore Exclude from docs
     * @param {KeyboardEvent} ev An original keyboard event
     */
    Interaction.prototype.handleGlobalKeyDown = function (ev) {
        if (this.focusedObject) {
            if (_utils_Keyboard__WEBPACK_IMPORTED_MODULE_10__["keyboard"].isKey(ev, "esc")) {
                // ESC removes focus
                _utils_DOM__WEBPACK_IMPORTED_MODULE_9__["blur"]();
            }
            else if (this.focusedObject.draggable && _utils_Keyboard__WEBPACK_IMPORTED_MODULE_10__["keyboard"].isKey(ev, ["up", "down", "left", "right"])) {
                // Prevent scrolling of the document
                ev.preventDefault();
                // Get focused object
                var io = this.focusedObject;
                // Get particular key
                var disposerKey = "interactionKeyboardObject";
                // If such disposer already exists we know the event is going on so we
                // just move on
                if (io.eventDisposers.hasKey(disposerKey)) {
                    return;
                }
                // Create a keyboard mover
                var ko = new _InteractionKeyboardObject__WEBPACK_IMPORTED_MODULE_6__["InteractionKeyboardObject"](io, ev);
                io.eventDisposers.setKey(disposerKey, ko);
                switch (_utils_Keyboard__WEBPACK_IMPORTED_MODULE_10__["keyboard"].getEventKey(ev)) {
                    case "up":
                        ko.directionY = -1;
                        break;
                    case "down":
                        ko.directionY = 1;
                        break;
                    case "left":
                        ko.directionX = -1;
                        break;
                    case "right":
                        ko.directionX = 1;
                        break;
                }
            }
        }
    };
    /**
     * Dispatches related events when the keyboard key is realeasd.
     *
     * @ignore Exclude from docs
     * @param {KeyboardEvent} ev An original keyboard event
     */
    Interaction.prototype.handleGlobalKeyUp = function (ev) {
        var disposerKey = "interactionKeyboardObject";
        if (this.focusedObject) {
            var disposer = this.focusedObject.eventDisposers.getKey(disposerKey);
            if (disposer != null) {
                // Prevent scrolling of the document
                ev.preventDefault();
                // Dispose stuff
                disposer.dispose();
                this.focusedObject.eventDisposers.removeKey(disposerKey);
            }
        }
    };
    /**
     * ==========================================================================
     * Global pointer-related even handlers
     * ==========================================================================
     * @hidden
     */
    /**
     * Handler for a global "pointermove" event.
     *
     * @ignore Exclude from docs
     * @param {MouseEvent} ev Event object
     */
    Interaction.prototype.handleGlobalPointerMove = function (ev) {
        // Get pointer
        var pointer = this.getPointer(ev);
        // Update current point position
        pointer.point = this.getPointerPoint(ev);
        // Prepare and fire global event
        if (this.events.isEnabled("track") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "track",
                target: this,
                event: ev,
                pointer: pointer
            };
            this.events.dispatchImmediately("track", imev);
        }
        // Track
        this.addBreadCrumb(pointer, pointer.point);
        // Process further
        this.handleGlobalMove(pointer, ev);
    };
    /**
     * Handler for a global "pointerdown" event.
     *
     * @ignore Exclude from docs
     * @param {MouseEvent} ev Event object
     */
    Interaction.prototype.handleGlobalPointerDown = function (ev) {
        // Remove delayed hovers
        this.processDelayed();
        // Get pointer
        var pointer = this.getPointer(ev);
        // Prepare and fire global event
        if (this.events.isEnabled("down") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "down",
                target: this,
                event: ev,
                pointer: pointer
            };
            this.events.dispatchImmediately("down", imev);
        }
    };
    /**
     * Prevents touch action from firing.
     *
     * @ignore Exclude from docs
     * @param {MouseEvent} ev Event
     */
    Interaction.prototype.preventTouchAction = function (ev) {
        if (!ev.defaultPrevented) {
            ev.preventDefault();
        }
    };
    /**
     * Handler for a global "pointerup" event.
     *
     * @ignore Exclude from docs
     * @param {MouseEvent} ev Event object
     */
    Interaction.prototype.handleGlobalPointerUp = function (ev, cancelled) {
        if (cancelled === void 0) { cancelled = false; }
        // Get pointer
        var pointer = this.getPointer(ev);
        // Prepare and fire global event
        if (this.events.isEnabled("up") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "up",
                target: this,
                event: ev,
                pointer: pointer
            };
            this.events.dispatchImmediately("up", imev);
        }
        // Process further
        this.handleGlobalUp(pointer, ev, cancelled);
    };
    /**
 * ==========================================================================
 * Global touch-related even handlers
 * ==========================================================================
 */
    /**
     * Handler for a global "touchmove" event.
     *
     * @ignore Exclude from docs
     * @param {TouchEvent} ev Event object
     */
    Interaction.prototype.handleGlobalTouchMove = function (ev) {
        // Process each changed touch point
        for (var i = 0; i < ev.changedTouches.length; i++) {
            // Get pointer
            var pointer = this.getPointer(ev.changedTouches[i]);
            // Update current point position
            pointer.point = this.getPointerPoint(ev.changedTouches[i]);
            // Prepare and fire global event
            if (this.events.isEnabled("track") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "track",
                    target: this,
                    event: ev,
                    pointer: pointer
                };
                this.events.dispatchImmediately("track", imev);
            }
            // Track
            this.addBreadCrumb(pointer, pointer.point);
            // Process further
            this.handleGlobalMove(pointer, ev);
        }
    };
    /**
     * Handler for a global "touchstart" event.
     *
     * @ignore Exclude from docs
     * @param {TouchEvent} ev Event object
     */
    Interaction.prototype.handleGlobalTouchStart = function (ev) {
        // Remove delayed hovers
        this.processDelayed();
        // Process each changed touch point
        for (var i = 0; i < ev.changedTouches.length; i++) {
            // Get pointer
            var pointer = this.getPointer(ev.changedTouches[i]);
            // Prepare and fire global event
            if (!this._usePointerEventsOnly && this.events.isEnabled("down") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "down",
                    target: this,
                    event: ev,
                    pointer: pointer
                };
                this.events.dispatchImmediately("down", imev);
            }
        }
    };
    /**
     * Handler for a global "touchend" event.
     *
     * @ignore Exclude from docs
     * @param {TouchEvent} ev Event object
     */
    Interaction.prototype.handleGlobalTouchEnd = function (ev) {
        // Process each changed touch point
        for (var i = 0; i < ev.changedTouches.length; i++) {
            // Get pointer
            var pointer = this.getPointer(ev.changedTouches[i]);
            // Prepare and fire global event
            if (this.events.isEnabled("up") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "up",
                    target: this,
                    event: ev,
                    pointer: pointer
                };
                this.events.dispatchImmediately("up", imev);
            }
            // Handle element-related events
            this.handleGlobalUp(pointer, ev);
        }
    };
    /**
     * ==========================================================================
     * Element-specific pointer-related even handlers
     * ==========================================================================
     * @hidden
     */
    /**
     * Handles event when pointer is over [[InteractionObject]] and button is
     * pressed.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}          io  Element
     * @param {MouseEvent | PointerEvent}  ev  Original event
     */
    Interaction.prototype.handlePointerDown = function (io, ev) {
        // Stop further propagation so we don't get multiple triggers on hybrid
        // devices (both mouse and touch capabilities)
        //ev.preventDefault();
        //ev.stopPropagation();
        //if (ev.defaultPrevented) {
        //}
        // Get pointer
        var pointer = this.getPointer(ev);
        // Ignore if it's anything but mouse's primary button
        if (!pointer.touch && (ev.which > 1)) {
            return;
        }
        // Set mouse button
        pointer.button = ev.which;
        // Reset pointer
        this.resetPointer(pointer, ev);
        // Process down
        this.handleDown(io, pointer, ev);
    };
    /**
     * Handles event when [[InteractionObject]] is hovered by a mouse pointer.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     * @param {MouseEvent}         ev  Original event
     */
    Interaction.prototype.handlePointerOver = function (io, ev) {
        // Get pointer
        var pointer = this.getPointer(ev);
        // Process down
        this.handleOver(io, pointer, ev);
    };
    /**
     * Handles event when [[InteractionObject]] loses hover from a mouse pointer.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     * @param {MouseEvent}         ev  Original event
     */
    Interaction.prototype.handlePointerOut = function (io, ev) {
        // Get pointer
        var pointer = this.getPointer(ev);
        // Process down
        this.handleOut(io, pointer, ev);
    };
    /**
     * Handles event when mouse wheel is crolled over the [[InteractionObject]].
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io  Element
     * @param {WheelEvent}         ev  Original event
     * @todo Investigate more-cross browser stuff https://developer.mozilla.org/en-US/docs/Web/Events/wheel
     */
    Interaction.prototype.handleMouseWheel = function (io, ev) {
        // Get pointer
        var pointer = this.getPointer(ev);
        // Update current point position
        pointer.point = this.getPointerPoint(ev);
        // Init delta values
        var deltaX = 0, deltaY = 0;
        // Set up modifier
        // This is needed because FireFox reports wheel deltas in "lines" instead
        // of pixels so we have to approximate pixel value
        var mod = 1;
        if (ev.deltaMode == 1) {
            mod = 50;
        }
        // Calculate deltas
        if (ev instanceof WheelEvent) {
            deltaX = Math.round((-1 * ev.wheelDeltaX) || ev.deltaX) * mod;
            deltaY = Math.round((-1 * ev.wheelDeltaY) || ev.deltaY) * mod;
        }
        else {
            throw new Error("Invalid event type");
        }
        // Handle the event
        this.handleWheel(io, pointer, deltaX, deltaY, ev);
    };
    /**
     * ==========================================================================
     * Element-specific touch-related even handlers
     * ==========================================================================
     * @hidden
     */
    /**
      * Handles an event when an [[InteractionObject]] is touched on a touch
      * device.
      *
      * @ignore Exclude from docs
      * @param {InteractionObject}  io  Element
      * @param {TouchEvent}         ev  Original event
      */
    Interaction.prototype.handleTouchDown = function (io, ev) {
        // Stop further propagation so we don't get multiple triggers on hybrid
        // devices (both mouse and touch capabilities)
        this.maybePreventDefault(io, ev);
        //return;
        // Process each changed touch point
        for (var i = 0; i < ev.changedTouches.length; i++) {
            // Get pointer
            var pointer = this.getPointer(ev.changedTouches[i]);
            // Reset pointer
            this.resetPointer(pointer, ev.changedTouches[i]);
            // Process down
            this.handleDown(io, pointer, ev);
        }
    };
    /**
     * ==========================================================================
     * Universal handlers
     * ==========================================================================
     * @hidden
     */
    /**
     * Handles click/tap. Checks for doublehit.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Interaction object
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.handleHit = function (io, pointer, ev) {
        // Check if this is a double-hit
        var now = _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]();
        if (io.lastHit && (io.lastHit >= (now - this.getHitOption(io, "doubleHitTime")))) {
            // Yup - it's a double-hit
            // Cancel the hit
            //clearTimeout(io.lastHitPointer.hitTimeout);
            // If it happened too fast it probably means that hybrid device just
            // generated two events for the same tap
            if ((now - io.lastHit) < 100) {
                // Ignore
                return;
            }
            // Clear last hit
            io.lastHit = undefined;
            io.lastHitPointer = undefined;
            // Dispatch event
            if (io.events.isEnabled("doublehit") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "doublehit",
                    target: io,
                    point: pointer.point,
                    event: ev
                };
                io.events.dispatchImmediately("doublehit", imev);
            }
        }
        else {
            // Log last hit
            io.lastHit = now;
            io.lastHitPointer = pointer;
            if (pointer.button === 3) {
                // Execute HIT now
                if (io.events.isEnabled("rightclick") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                    var imev = {
                        type: "rightclick",
                        target: io,
                        event: ev
                    };
                    io.events.dispatchImmediately("rightclick", imev);
                }
            }
            else {
                if (io.events.isEnabled("hit") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                    var imev = {
                        type: "hit",
                        target: io,
                        event: ev,
                        point: pointer.point
                    };
                    io.events.dispatchImmediately("hit", imev);
                }
            }
        }
    };
    /**
     * Handles pointer hovering over [[InteractionObject]].
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Interaction object
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     * @param {boolean}                  soft     Invoked by helper function
     */
    Interaction.prototype.handleOver = function (io, pointer, ev, soft) {
        if (soft === void 0) { soft = false; }
        if (!io.hoverable) {
            return;
        }
        // Remove any delayed outs
        this.processDelayed();
        // Add pointer
        io.overPointers.moveValue(pointer);
        // Check if object is not yet hovered
        if (!io.isHover) {
            // Set element as hovered
            io.isHover = true;
            this.overObjects.moveValue(io);
            // Generate body track event. This is needed so that if element loads
            // under unmoved mouse cursor, we still need all the actions that are
            // required to happen to kick in.
            this.handleTrack(this.body, pointer, ev, true);
            // Event
            if (io.events.isEnabled("over") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "over",
                    target: io,
                    event: ev,
                    pointer: pointer
                };
                io.events.dispatchImmediately("over", imev);
            }
        }
    };
    /**
     * Handles when [[InteractionObject]] is no longer hovered.
     *
     * If `soft = true`, this means that method is being invoked by some other
     * code, not hard "out" function, like `handleUp` which implies we need to
     * run additional checks before unhovering the object.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Interaction object
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     * @param {boolean}                  soft     Invoked by helper function
     * @param {boolean}                  force    Force imediate out
     */
    Interaction.prototype.handleOut = function (io, pointer, ev, soft, force) {
        var _this = this;
        if (soft === void 0) { soft = false; }
        if (force === void 0) { force = false; }
        if (!io.hoverable) {
            return;
        }
        // Remove pointer
        io.overPointers.removeValue(pointer);
        // Check if element is still hovered
        if (io.isHover && (!io.hasDelayedOut || force)) {
            // Should we run additional checks?
            if (soft && io.overPointers.length) {
                // There are still pointers hovering - don't do anything else and
                // wait until either no over pointers are there or we get a hard out
                // event.
                return;
            }
            // Should we delay "out" if this is happening on a touch device?
            if (pointer.touch && !force && !this.old(pointer)) {
                // This is a touch pointer, and it hasn't moved, let's pretend
                // the object is still hovered, and act as per "behavior" setting
                var behavior = this.getHoverOption(io, "touchOutBehavior");
                if (behavior == "leave") {
                    // Set to "leave", so we do not execute any "out" event.
                    // It will be handled by any other interaction that happens
                    // afterwards.
                    this._delayedEvents.out.push({
                        type: "out",
                        io: io,
                        pointer: pointer,
                        event: ev,
                        keepUntil: _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]() + 500
                    });
                    io.hasDelayedOut = true;
                    return;
                }
                else if (behavior == "delay" && this.getHoverOption(io, "touchOutDelay")) {
                    this._delayedEvents.out.push({
                        type: "out",
                        io: io,
                        pointer: pointer,
                        event: ev,
                        keepUntil: _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]() + 500,
                        timeout: this.setTimeout(function () {
                            _this.handleOut(io, pointer, ev, true);
                        }, this.getHoverOption(io, "touchOutDelay"))
                    });
                    return;
                }
                else {
                    // Nothing for "remove" - that's how it works "out-of-the-box"
                }
            }
            // Set element as not hovered
            io.isHover = false;
            this.overObjects.removeValue(io);
            // Invoke event
            if (io.events.isEnabled("out") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "out",
                    target: io,
                    event: ev,
                    pointer: pointer
                };
                io.events.dispatchImmediately("out", imev);
            }
            // Reset object from lefover delayed outs, pointers
            io.overPointers.clear();
            io.hasDelayedOut = false;
            // @todo (clean delayed)
        }
    };
    /**
     * Processes dalyed events, such as "out" event that was initiated for
     * elements by touch.
     */
    Interaction.prototype.processDelayed = function () {
        var delayedEvent;
        while (delayedEvent = this._delayedEvents.out.pop()) {
            if (delayedEvent.timeout) {
                delayedEvent.timeout.dispose();
            }
            this.handleOut(delayedEvent.io, delayedEvent.pointer, delayedEvent.event, false, true);
        }
    };
    /**
     * Performs tasks on pointer down.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Element
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.handleDown = function (io, pointer, ev) {
        // Need to prevent default event from happening on transformable objects
        this.maybePreventDefault(io, ev);
        // Stop inertia animations if they're currently being played out
        if (io.inert) {
            this.stopInertia(io);
        }
        // Trigger hover because some touch devices won't trigger over events
        // on their own
        this.handleOver(io, pointer, ev, true);
        // Add pointer to list
        io.downPointers.moveValue(pointer);
        // Apply styles if necessary
        this.applyCursorDownStyle(io, pointer);
        // Check if object is already down
        if (!io.isDown) {
            // Lose focus if needed
            if (io.focusable !== false && this.getHitOption(io, "noFocus") && this.focusedObject) {
                _utils_DOM__WEBPACK_IMPORTED_MODULE_9__["blur"]();
            }
            // Set object as hovered
            io.isDown = true;
            this.downObjects.moveValue(io);
            // Prep object for dragging and/or resizing
            if (io.draggable) {
                this.processDragStart(io, pointer, ev);
            }
            if (io.resizable) {
                this.processResizeStart(io, pointer, ev);
            }
        }
        // Dispatch "down" event
        if (io.events.isEnabled("down") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "down",
                target: io,
                event: ev,
                pointer: pointer
            };
            io.events.dispatchImmediately("down", imev);
        }
    };
    /**
     * Performs tasks on pointer up.
     *
     * @ignore Exclude from docs
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.handleGlobalUp = function (pointer, ev, cancelled) {
        var _this = this;
        if (cancelled === void 0) { cancelled = false; }
        // Process all down objects
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.downObjects.backwards().iterator(), function (io) {
            // Check if this particular pointer is pressing down
            // on object
            if (io.downPointers.contains(pointer)) {
                _this.handleUp(io, pointer, ev, cancelled);
            }
        });
    };
    /**
     * Handles when [[InteractionObject]] is no longer hovered.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Interaction object
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.handleUp = function (io, pointer, ev, cancelled) {
        if (cancelled === void 0) { cancelled = false; }
        // Restore cursor style
        this.restoreCursorDownStyle(io, pointer);
        // Remove pointer from the list
        io.downPointers.removeValue(pointer);
        // Trigger out because some touch devices won't trigger out events
        // on their own
        if (pointer.touch || this._useTouchEventsOnly) {
            this.handleOut(io, pointer, ev, true);
        }
        // Check if object still down
        if (io.isDown) {
            // Check if there are no other pointers hovering this element
            if (io.downPointers.length == 0) {
                // Set element as no longer down
                io.isDown = false;
                this.downObjects.removeValue(io);
            }
            // Dispatch "up" event
            if (io.events.isEnabled("up") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "up",
                    target: io,
                    event: ev,
                    pointer: pointer
                };
                io.events.dispatchImmediately("up", imev);
            }
            // Check if this was not a cancelled event.
            // If event was canelled (which might happen if gesture resulted in
            // navigation or page scroll) there's no point in triggering hit and
            // other actions.
            if (!cancelled) {
                // Handle swiping-related stuff
                if (io.swipeable && this.swiped(io, pointer)) {
                    // Swiped - nothing else should happen
                    this.handleSwipe(io, pointer, ev);
                }
                else {
                    // Check if it maybe a click
                    if (io.clickable && !this.moved(pointer, this.getHitOption(io, "hitTolerance"))) {
                        this.handleHit(io, pointer, ev);
                    }
                    // Handle inertia
                    if (io.inert && this.moved(pointer, this.getHitOption(io, "hitTolerance"))) {
                        this.handleInertia(io, pointer);
                    }
                    else if (io.draggable) {
                        this.processDragStop(io, pointer, ev);
                    }
                    if (io.resizable) {
                        this.processResizeStop(io, pointer, ev);
                    }
                }
            }
        }
    };
    /**
     * Checks if event needs to be prevented on draggable and such items, so that
     * touch gestures like navigation and scroll do not kick in.
     *
     * @param {InteractionObject}        io  Object
     * @param {MouseEvent | TouchEvent}  ev  Event
     */
    Interaction.prototype.maybePreventDefault = function (io, ev) {
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev) && (io.draggable || io.swipeable || io.trackable || io.resizable) && !this.isGlobalElement(io)) {
            ev.preventDefault();
        }
    };
    /**
     * Handles pointer move.
     *
     * @ignore Exclude from docs
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.handleGlobalMove = function (pointer, ev) {
        var _this = this;
        // Process hovered elements
        // We check if the element became unhovered without reporting the mouseout
        // event. (it happens in some cases)
        if (!pointer.touch) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.overObjects.backwards().iterator(), function (io) {
                // Is this pointer relevant to element?
                if (io.overPointers.contains(pointer) && io.hoverable) {
                    // Check if the element is still hovered
                    var reset = false;
                    if (io.element && pointer.lastEvent) {
                        if (!_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["contains"](io.element, pointer.lastEvent.target)) {
                            reset = true;
                        }
                    }
                    else {
                        reset = true;
                    }
                    if (reset) {
                        _this.handleOut(io, pointer, ev, true);
                    }
                }
            });
        }
        // Process down elements
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.transformedObjects.backwards().iterator(), function (io) {
            // Is this pointer relevant to element?
            if (io.downPointers.contains(pointer) &&
                // Swipe still happening?
                !(io.swipeable && _this.swiping(io, pointer)) &&
                (io.draggable || io.resizable)) {
                _this.handleTransform(io, ev);
            }
        });
        // Process tracked elements
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.trackedObjects.backwards().iterator(), function (io) {
            // Is this pointer relevant to element?
            if (!io.overPointers.contains(pointer)) {
                _this.handleTrack(io, pointer, ev);
            }
        });
    };
    /**
     * Handles reporting of pointer movement.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io        Element
     * @param {IPointer}                 pointer    Pointer
     * @param {MouseEvent | TouchEvent}  ev         Original event
     * @param {boolean}                  skipCheck  Sould we skip check if cursor actually moved
     */
    Interaction.prototype.handleTrack = function (io, pointer, ev, skipCheck) {
        if (skipCheck === void 0) { skipCheck = false; }
        // Do nothing if the cursor did not actually move
        if (!skipCheck && !this.moved(pointer, 0)) {
            return;
        }
        // Initiate TRACK event
        if (io.events.isEnabled("track") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "track",
                target: io,
                event: ev,
                point: pointer.point,
                pointer: pointer
            };
            io.events.dispatchImmediately("track", imev);
        }
    };
    /**
     * Handles swipe action.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Element
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.handleSwipe = function (io, pointer, ev) {
        // We pass in InteractionEvent with shift in mouse coordinates
        // between when the drag started and ended
        if (io.events.isEnabled("swipe") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "swipe",
                target: io,
                event: ev
            };
            io.events.dispatchImmediately("swipe", imev);
        }
        if (pointer.startPoint.x < pointer.point.x) {
            if (io.events.isEnabled("swiperight") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "swiperight",
                    target: io,
                    event: ev
                };
                io.events.dispatchImmediately("swiperight", imev);
            }
        }
        else {
            if (io.events.isEnabled("swipeleft") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "swipeleft",
                    target: io,
                    event: ev
                };
                io.events.dispatchImmediately("swipeleft", imev);
            }
        }
    };
    /**
     * Handles event triggering for wheel rotation.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     * @param {number}             deltaX   Horizontal shift
     * @param {number}             deltaY   Vertical shift
     * @param {WheelEvent}         ev       Original event
     */
    Interaction.prototype.handleWheel = function (io, pointer, deltaX, deltaY, ev) {
        var shift = {
            x: deltaX,
            y: deltaY
        };
        // Trigger generic WHEEL event
        if (io.events.isEnabled("wheel") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            io.events.dispatchImmediately("wheel", {
                type: "wheel",
                target: io,
                event: ev,
                point: pointer.point,
                shift: shift
            });
        }
        // Trigger direction-specific events
        // Horizontal
        if (deltaX < 0) {
            if (io.events.isEnabled("wheelleft") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                io.events.dispatchImmediately("wheelleft", {
                    type: "wheelleft",
                    target: io,
                    event: ev,
                    point: pointer.point,
                    shift: shift
                });
            }
        }
        else if (deltaX > 0) {
            if (io.events.isEnabled("swiperight") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                io.events.dispatchImmediately("wheelright", {
                    type: "wheelright",
                    target: io,
                    event: ev,
                    point: pointer.point,
                    shift: shift
                });
            }
            // Vertical
        }
        else if (deltaY < 0) {
            if (io.events.isEnabled("wheelup") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                io.events.dispatchImmediately("wheelup", {
                    type: "wheelup",
                    target: io,
                    event: ev,
                    point: pointer.point,
                    shift: shift
                });
            }
        }
        else if (deltaY > 0) {
            if (io.events.isEnabled("wheeldown") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                io.events.dispatchImmediately("wheeldown", {
                    type: "wheeldown",
                    target: io,
                    event: ev,
                    point: pointer.point,
                    shift: shift
                });
            }
        }
    };
    /**
     * Initiates inertia checking sub-routines for different movement types:
     * drag, resize.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}   sprite
     * @param {IPointer}            pointer
     */
    Interaction.prototype.handleInertia = function (io, pointer) {
        if (io.draggable && io.downPointers.length === 0) {
            this.handleMoveInertia(io, pointer);
        }
        if (io.resizable && io.downPointers.length > 1) {
            this.handleResizeInertia(io, pointer);
        }
    };
    /**
     * Continues moving the element to simulate the effect of inertia. Happens
     * when `inert` and `draggable` object is dragged and then released.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     */
    Interaction.prototype.handleMoveInertia = function (io, pointer) {
        var interaction = io;
        var type = "move";
        var point = {
            "x": pointer.point.x,
            "y": pointer.point.y
        };
        var startPoint = {
            "x": pointer.startPoint.x,
            "y": pointer.startPoint.y
        };
        // Init inertia object
        var inertia = new _Inertia__WEBPACK_IMPORTED_MODULE_8__["Inertia"](interaction, type, point, startPoint);
        // Get inertia data
        var ref = this.getTrailPoint(pointer, _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]() - this.getInertiaOption(io, "move", "time"));
        if (typeof ref === "undefined") {
            this.processDragStop(io, pointer, pointer.lastUpEvent);
            return;
        }
        // Init animation options
        var factor = this.getInertiaOption(io, "move", "factor");
        var animationOptions = [{
                "to": pointer.point.x + (pointer.point.x - ref.point.x) * factor,
                "property": "x"
            }, {
                "to": pointer.point.y + (pointer.point.y - ref.point.y) * factor,
                "property": "y"
            }];
        // Start animation
        var animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_3__["Animation"](inertia, animationOptions, this.getInertiaOption(io, "move", "duration"), this.getInertiaOption(io, "move", "easing")).start();
        this._disposers.push(animation.events.on("animationended", function (ev) {
            inertia.done();
        }));
        // Add inertia object
        io.inertias.setKey("move", inertia);
    };
    /**
     * Continues resizing of a `resizable` element after it is resized and
     * released.
     *
     * **NOTE:** this is is just a placeholder function. No actual fucntionality
     * is implemented, yet.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     */
    Interaction.prototype.handleResizeInertia = function (io, pointer) {
        // Some day, folks. Some day...
    };
    /**
     * Recalculates element's position and size based on position of
     * all its related pointers.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io  Element
     * @param {MouseEvent | TouchEvent}  ev  Original event
     */
    Interaction.prototype.handleTransform = function (io, ev) {
        // Get primary pointer and its respective points
        var pointer1 = io.downPointers.getIndex(0);
        var point1 = null;
        var startPoint1 = null;
        if (pointer1) {
            point1 = pointer1.point;
            startPoint1 = pointer1.startPoint;
        }
        // Init secondary pointer
        var pointer2;
        var point2;
        var startPoint2;
        // Use center of the sprite to simulate "second" point of touch
        point2 = {
            "x": io.originalPosition.x,
            "y": io.originalPosition.y
        };
        startPoint2 = point2;
        // Determine if it's a sinngle pointer or multi
        var singlePoint = true;
        for (var i = 1; i < io.downPointers.length; i++) {
            // Get pointer
            var nextPointer = io.downPointers.getIndex(i);
            // Doublecheck if it's not the same pointer by comparing original position
            if (startPoint1.x != nextPointer.startPoint.x || startPoint1.y != nextPointer.startPoint.y) {
                // Several pointers down
                singlePoint = false;
                // Get second pointer
                pointer2 = nextPointer;
                point2 = pointer2.point;
                startPoint2 = pointer2.startPoint;
                // Stop looking
                break;
            }
        }
        // Primary touch point moved?
        var pointer1Moved = pointer1 && this.moved(pointer1, 0);
        // Report DRAG_START if necessary
        if (io.draggable && pointer1 && pointer1.dragStartEvents && pointer1.dragStartEvents.length && pointer1Moved) {
            if (io.events.isEnabled("dragstart") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                io.events.dispatchImmediately("dragstart", pointer1.dragStartEvents.shift());
            }
            //delete pointer1.dragStartEvents;
        }
        // Determine what we do in order of superiority
        if (singlePoint && io.draggable) {
            // We have only one pointer and the Sprite is draggable
            // There's nothing else to be done - just move it
            this.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved);
        }
        else {
            // Check if second touch point moved
            var pointer2Moved = pointer2 && this.moved(pointer2, 0);
            if (io.draggable && io.resizable) {
                //this.handleTransformAll(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);
                this.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved && pointer2Moved);
                this.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);
            }
            else {
                if (io.draggable) {
                    this.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved);
                }
                if (io.resizable) {
                    this.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);
                }
            }
        }
    };
    /**
     * Handles movement of the dragged element.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}                        io            Element
     * @param {IPoint}                                   point         Current point of the pointer
     * @param {IPoint}                                   startPoint    Starting point of the pointer
     * @param {MouseEvent | TouchEvent | KeyboardEvent}  ev            Original event
     * @param {boolean}                                  pointerMoved  Did pointer move?
     */
    Interaction.prototype.handleTransformMove = function (io, point, startPoint, ev, pointerMoved) {
        if (pointerMoved) {
            if (io.events.isEnabled("drag") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "drag",
                    target: io,
                    event: ev,
                    shift: {
                        "x": point.x - startPoint.x,
                        "y": point.y - startPoint.y
                    },
                    startPoint: startPoint,
                    point: point
                };
                io.events.dispatchImmediately("drag", imev);
            }
        }
    };
    /**
     * Handles resizing of the element.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io            Element
     * @param {IPoint}                   point1        Current position of reference point #1
     * @param {IPoint}                   startPoint1   Original position of reference point #1
     * @param {IPoint}                   point2        Current position of reference point #2
     * @param {IPoint}                   startPoint2   Original position of reference point #2
     * @param {MouseEvent | TouchEvent}  ev            Original event
     * @param {boolean}                  pointerMoved  Did pointer move?
     */
    Interaction.prototype.handleTransformResize = function (io, point1, startPoint1, point2, startPoint2, ev, pointerMoved) {
        if (io.events.isEnabled("resize") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
            var imev = {
                type: "resize",
                target: io,
                event: ev,
                scale: _utils_Math__WEBPACK_IMPORTED_MODULE_13__["getScale"](point1, startPoint1, point2, startPoint2),
                startPoint1: startPoint1,
                point1: point1,
                startPoint2: startPoint2,
                point2: point2
            };
            io.events.dispatchImmediately("resize", imev);
        }
    };
    /**
     * Handles all the preparations of the element when it starts to be dragged.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Element
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.processDragStart = function (io, pointer, ev) {
        // Add to draggedObjects
        this.transformedObjects.moveValue(io);
        // Report "dragstart"
        var imev = {
            type: "dragstart",
            target: io,
            event: ev
        };
        // Log object that we are starting to drag, so we can check against and
        // avoid hovers on other objects that might be in the path of movement.
        if (pointer) {
            pointer.dragTarget = io;
            //pointer.startPoint = pointer.point;
        }
        /**
         * If pointer is set we will not fire the event until the pointer has
         * actually moved. If it's not set we don't have to wait for anything, so we
         * just fire off the event right away.
         */
        if (pointer && pointer.dragStartEvents) {
            pointer.dragStartEvents.push(imev);
        }
        else {
            if (!_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                io.dispatchImmediately("dragstart", imev);
            }
        }
    };
    /**
     * Finishes up element drag operation.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Element
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.processDragStop = function (io, pointer, ev) {
        // Pointer set?
        if (!pointer) {
            pointer = this.getDragPointer(io);
        }
        // Unset drag object
        if (pointer) {
            pointer.dragTarget = undefined;
        }
        // Removed from transformedObjects
        this.transformedObjects.removeValue(io);
        // Unlock document
        //this.unlockDocument();
        // Report dragstop
        if (!pointer || this.moved(pointer, 0)) {
            if (io.events.isEnabled("dragstop") && !_System__WEBPACK_IMPORTED_MODULE_11__["system"].isPaused) {
                var imev = {
                    type: "dragstop",
                    target: io
                };
                io.events.dispatchImmediately("dragstop", imev);
            }
        }
    };
    /**
     * Handles all the preparations of the element when it starts to be resized.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Element
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.processResizeStart = function (io, pointer, ev) {
        // Add to draggedObjects
        this.transformedObjects.moveValue(io);
    };
    /**
     * Finishes up element drag operation.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}        io       Element
     * @param {IPointer}                 pointer  Pointer
     * @param {MouseEvent | TouchEvent}  ev       Original event
     */
    Interaction.prototype.processResizeStop = function (io, pointer, ev) {
        // Removed from transformedObjects
        this.transformedObjects.removeValue(io);
    };
    /**
     * ==========================================================================
     * Controls for InteractionObjects initiating directly
     * ==========================================================================
     * @hidden
     */
    /**
     * Manually triggers drag start on the element. Could be useful in cases
     * where tracking or dragging one element can also influence dragging another
     * element.
     *
     * Passing in `pointer` reference is advisable. If not passed in it will try
     * to determine which pointer to attach to. However, it's better to specify
     * it explicitly.
     *
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     */
    Interaction.prototype.dragStart = function (io, pointer) {
        if (pointer || (pointer = this.getDragPointer(io))) {
            this.handleDown(io, pointer, pointer.lastDownEvent);
        }
    };
    /**
     * Manually ends drag on the element.
     *
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     */
    Interaction.prototype.dragStop = function (io, pointer) {
        if (pointer || (pointer = this.getDragPointer(io))) {
            this.handleGlobalUp(pointer, pointer.lastUpEvent);
        }
    };
    /**
     * This method uses a fuzzy logic to find the pointer to be used for dragging.
     * Beware that this is not a rock-solid solution. If there are a few objects
     * being dragged at the same time, you may get unexepected results.
     *
     * @param  {InteractionObject}   io  InteractionObject to get pointers from
     * @return {Optional<IPointer>}      Pointer currently being used for dragging
     */
    Interaction.prototype.getDragPointer = function (io) {
        if (io) {
            // InteractionObject is supplied
            // Use it's first down pointer
            return io.downPointers.getIndex(0);
        }
        else if (this.transformedObjects.length) {
            // Use first dragged object
            return this.getDragPointer(this.transformedObjects.getIndex(0));
        }
        else {
            return undefined;
        }
    };
    /**
     * ==========================================================================
     * Utils
     * ==========================================================================
     * @hidden
     */
    /**
     * Returns pointer id for the given event object.
     *
     * @param  {any}     ev  Event
     * @return {string}      Pointer ID
     */
    Interaction.prototype.getPointerId = function (ev) {
        var id = "";
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev.identifier)) {
            id = "" + ev.identifier;
        }
        else if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev.pointerId)) {
            id = "" + ev.pointerId;
        }
        else {
            id = "m";
        }
        return id.replace("-", "");
    };
    /**
     * Returns a cursor position of the event.
     *
     * @param  {MouseEvent | Touch}  ev  Original event
     * @return {IPoint}                  Event point
     */
    Interaction.prototype.getPointerPoint = function (ev) {
        return {
            "x": ev.clientX,
            "y": ev.clientY
        };
    };
    /**
     * Returns [[Pointer]] object that is associated with the Event.
     *
     * If no such [[Pointer]] object exists, it is created.
     *
     * @param  {MouseEvent | Touch}  ev  Event
     * @return {IPointer}                Pointer
     */
    Interaction.prototype.getPointer = function (ev) {
        // Get pointer id
        var id = this.getPointerId(ev);
        // Get current coordinates
        var point = this.getPointerPoint(ev);
        // Look for the pointer in the Dictionary if it maybe already exists
        var pointer;
        if (this.pointers.hasKey(id)) {
            // We already have such pointer
            pointer = this.pointers.getKey(id);
            // We need this, because Edge reuses pointer ids across touch and mouse
            pointer.touch = this.isPointerTouch(ev);
            // Reset pointer
            //pointer.point = point;
        }
        else {
            // Init pointer
            pointer = {
                "id": id,
                //"touch": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != "pointer"),
                //"touch": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != "mouse"),
                "touch": this.isPointerTouch(ev),
                "startPoint": point,
                "startTime": _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"](),
                "point": point,
                "track": [],
                "swipeCanceled": false,
                "dragStartEvents": []
            };
            // Add first breadcrumb
            this.addBreadCrumb(pointer, point);
            // Add for re-use later
            this.pointers.setKey(id, pointer);
        }
        // Log last event
        pointer.lastEvent = ev;
        return pointer;
    };
    /**
     * Determines if pointer event originated from a touch pointer or mouse.
     *
     * @param  {MouseEvent | Touch}  ev  Original event
     * @return {boolean}                 Touch pointer?
     */
    Interaction.prototype.isPointerTouch = function (ev) {
        if (typeof Touch !== "undefined" && ev instanceof Touch) {
            return true;
        }
        else if (typeof PointerEvent !== "undefined" && ev instanceof PointerEvent && _utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev.pointerType)) {
            switch (ev.pointerType) {
                case "touch":
                case "pen":
                case 2:
                    return true;
                case "mouse":
                case 4:
                    return false;
                default:
                    return !(ev instanceof MouseEvent);
            }
        }
        else if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev.type)) {
            if (ev.type.match(/^mouse/)) {
                return false;
            }
        }
        return true;
    };
    /**
     * Resets the poiner to original state, i.e. cleans movement information,
     * starting point, etc.
     *
     * @param {IPointer} pointer Pointer
     */
    Interaction.prototype.resetPointer = function (pointer, ev) {
        // Get current coordinates
        var point = this.getPointerPoint(ev);
        ;
        pointer.startTime = _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]();
        pointer.startPoint = { x: point.x, y: point.y };
        pointer.point = { x: point.x, y: point.y };
        pointer.track = [];
        pointer.swipeCanceled = false;
        //clearTimeout(pointer.swipeTimeout);
        //clearTimeout(pointer.holdTimeout);
    };
    /**
     * Adds a "breadcrumb" point to the [[Pointer]] to log its movement path.
     *
     * @param {IPointer}  pointer  Pointer
     * @param {IPoint}    point    Point coordinates
     */
    Interaction.prototype.addBreadCrumb = function (pointer, point) {
        pointer.track.push({
            "timestamp": _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"](),
            "point": point
        });
    };
    /**
     * Prepares the document for various touch-related operations.
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.lockDocument = function () {
        this.prepElement(this.body);
    };
    /**
     * Restores document functionality.
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.unlockDocument = function () {
        if (this.transformedObjects.length == 0) {
            this.restoreAllStyles(this.body);
        }
    };
    /**
     * Lock element (disable all touch)
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.lockElement = function (io) {
        this.prepElement(io);
    };
    /**
     * Restores element's functionality.
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.unlockElement = function (io) {
        this.restoreAllStyles(io);
    };
    /**
     * Locks document's wheel scroll.
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.lockWheel = function () {
        window.addEventListener(this._pointerEvents.wheel, this.wheelLockEvent, this._passiveSupported ? { passive: false } : false);
    };
    /**
     * Unlocks document's wheel scroll.
     *
     * @ignore Exclude from docs
     */
    Interaction.prototype.unlockWheel = function () {
        window.removeEventListener(this._pointerEvents.wheel, this.wheelLockEvent);
    };
    /**
     * Checks if top element at pointer's position belongs to the SVG.
     *
     * @ignore Exlude from docs
     * @param  {IPointer}       pointer  Pointer
     * @param  {SVGSVGElement}  svg      The <svg> element
     * @param  {id}             id       A unique identifier of the object that is checking for locality
     * @return {boolean}                 Belongs to SVG
     */
    Interaction.prototype.isLocalElement = function (pointer, svg, id) {
        var cached = this.getCache("local_pointer_" + pointer.id);
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](cached)) {
            return cached;
        }
        var target = document.elementFromPoint(pointer.point.x, pointer.point.y);
        var local = target && (svg === target || _utils_DOM__WEBPACK_IMPORTED_MODULE_9__["contains"](svg, target));
        this.setCache("local_pointer_" + pointer.id + "_" + id, local, 100);
        return local;
    };
    /**
     * A function that cancels mouse wheel scroll.
     *
     * @ignore Exclude from docs
     * @param  {Event}  ev  Event object
     * @return {boolean}         Returns `false` to cancel
     */
    Interaction.prototype.wheelLockEvent = function (ev) {
        ev.preventDefault();
        return false;
    };
    /**
     * Applies a set of styles to an element. Stores the original styles so they
     * can be restored later.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}           io      Element
     * @param {Dictionary<string, string>}  styles  A Dictionary of style property and values
     */
    Interaction.prototype.prepElement = function (io, permanent) {
        var el = io.element;
        if (el) {
            // Define possible props
            var props = [
                "touchAction", "webkitTouchAction", "MozTouchAction", "MSTouchAction", "msTouchAction", "oTouchAction",
                "userSelect", "webkitUserSelect", "MozUserSelect", "MSUserSelect", "msUserSelect", "oUserSelect",
                "touchSelect", "webkitTouchSelect", "MozTouchSelect", "MSTouchSelect", "msTouchSelect", "oTouchSelect",
                "touchCallout", "webkitTouchCallout", "MozTouchCallout", "MSTouchCallout", "msTouchCallout", "oTouchCallout",
                "contentZooming", "webkitContentZooming", "MozContentZooming", "MSContentZooming", "msContentZooming", "oContentZooming",
                "userDrag", "webkitUserDrag", "MozUserDrag", "MSUserDrag", "msUserDrag", "oUserDrag"
            ];
            for (var i = 0; i < props.length; i++) {
                if (props[i] in el.style) {
                    this.setTemporaryStyle(io, props[i], "none");
                }
            }
            // Remove iOS-specific selection;
            this.setTemporaryStyle(io, "tapHighlightColor", "rgba(0, 0, 0, 0)");
            //this.setTemporaryStyle(io, "webkitOverflowScrolling", "none");
        }
    };
    /**
     * Returns an option associated with hit events.
     *
     * @ignore Exclude from docs
     * @param  {InteractionObject}  io      Element
     * @param  {string}             option  Option key
     * @return {any}                        Option value
     */
    Interaction.prototype.getHitOption = function (io, option) {
        var res = io.hitOptions[option];
        if (typeof res === "undefined") {
            res = this.hitOptions[option];
        }
        return res;
    };
    /**
     * Returns an option associated with hover events.
     *
     * @ignore Exclude from docs
     * @param  {InteractionObject}  io      Element
     * @param  {string}             option  Option key
     * @return {any}                        Option value
     */
    Interaction.prototype.getHoverOption = function (io, option) {
        var res = io.hoverOptions[option];
        if (typeof res === "undefined") {
            res = this.hoverOptions[option];
        }
        return res;
    };
    /**
     * Returns an option associated with swipe events.
     *
     * @ignore Exclude from docs
     * @param  {InteractionObject}  io      Element
     * @param  {string}             option  Option key
     * @return {any}                        Option value
     */
    Interaction.prototype.getSwipeOption = function (io, option) {
        var res = io.swipeOptions[option];
        if (typeof res === "undefined") {
            res = this.swipeOptions[option];
        }
        return res;
    };
    /**
     * Returns an option for keyboard.
     *
     * @ignore Exclude from docs
     * @param  {InteractionObject}  io      Element
     * @param  {string}             option  Option key
     * @return {any}                        Option value
     */
    Interaction.prototype.getKeyboardOption = function (io, option) {
        var res = io.keyboardOptions[option];
        if (typeof res === "undefined") {
            res = this.keyboardOptions[option];
        }
        return res;
    };
    /**
     * Returns an option associated with inertia.
     *
     * @ignore Exclude from docs
     * @param  {InteractionObject}  io      Element
     * @param  {InertiaTypes}       type    Inertia type
     * @param  {string}             option  Option key
     * @return {any}                        Option value
     */
    Interaction.prototype.getInertiaOption = function (io, type, option) {
        var options = io.inertiaOptions.getKey(type);
        var res;
        if (options && _utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](options[type])) {
            res = options[type];
        }
        else {
            res = this.inertiaOptions.getKey(type)[option];
        }
        return res;
    };
    /**
     * Stops currently going on inertia. Useful if inertia is currently being
     * animated and the object is being interacted with.
     *
     * @param {InteractionObject} io Element
     */
    Interaction.prototype.stopInertia = function (io) {
        var x;
        var inertias = ["move", "resize"];
        for (var i = 0; i < inertias.length; i++) {
            x = inertias[i];
            if (io.inertias.hasKey(x)) {
                var inertia = io.inertias.getKey(x);
                if (inertia) {
                    inertia.dispose();
                    //io.inertiaAnimations.removeKey(x);
                    //this.processDragStop(io);
                    continue;
                }
            }
        }
    };
    /**
     * Check if swiping is currently being performed on an object.
     *
     * @param  {InteractionObject}  io       Element
     * @param  {IPointer}           pointer  Pointer to check
     * @return {boolean}                     `true` if swiping
     */
    Interaction.prototype.swiping = function (io, pointer) {
        var now = _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]();
        if (pointer.swipeCanceled || !io.swipeable) {
            return false;
        }
        else if ((Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, "verticalThreshold")) &&
            (pointer.startTime > (now - this.getSwipeOption(io, "time")))) {
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Returns `true` if a successfull swipe action was performed on an element.
     *
     * @param  {InteractionObject}  io       Element
     * @param  {IPointer}           pointer  Pointer
     * @return {boolean}                     Swiped?
     */
    Interaction.prototype.swiped = function (io, pointer) {
        var now = _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]();
        if (pointer.swipeCanceled) {
            return false;
        }
        else if ((Math.abs(pointer.startPoint.x - pointer.point.x) > this.getSwipeOption(io, "horizontalThreshold")) &&
            (Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, "verticalThreshold")) &&
            (pointer.startTime > (now - this.getSwipeOption(io, "time")))) {
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Applies style to mouse cursor based on its stage in relation to
     * [[InteractionObject]].
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}   Element
     */
    Interaction.prototype.applyCursorOverStyle = function (io) {
        // Get sprite's cursor ooptions
        var options = io.cursorOptions;
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](options.overStyle)) {
            return;
        }
        // Apply cursor down styles
        for (var i = 0; i < options.overStyle.length; i++) {
            _utils_DOM__WEBPACK_IMPORTED_MODULE_9__["setStyle"](io.element, options.overStyle[i].property, options.overStyle[i].value);
        }
    };
    /**
     * Applies style to mouse cursor based on its stage in relation to
     * [[InteractionObject]].
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     */
    Interaction.prototype.applyCursorDownStyle = function (io, pointer) {
        // Not applicable for touch pointers since they don't display a cursor
        if (pointer.touch) {
            return;
        }
        var downStyle = io.cursorOptions.downStyle;
        // Is down?
        if (io.downPointers.contains(pointer) && _utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](downStyle)) {
            // Apply cursor down styles
            for (var i = 0; i < downStyle.length; i++) {
                this.setTemporaryStyle(this.body, downStyle[i].property, downStyle[i].value);
                this.setTemporaryStyle(io, downStyle[i].property, downStyle[i].value);
            }
        }
    };
    /**
     * Restores original cursor style for the element.
     *
     * @ignore Exclude from docs
     * @param {InteractionObject}  io       Element
     * @param {IPointer}           pointer  Pointer
     */
    Interaction.prototype.restoreCursorDownStyle = function (io, pointer) {
        // Not applicable for touch pointers since they don't display a cursor
        if (pointer.touch) {
            return;
        }
        var downStyle = io.cursorOptions.downStyle;
        // Is down?
        if (io.downPointers.contains(pointer) && _utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](downStyle)) {
            // Apply cursor down styles
            for (var i = 0; i < downStyle.length; i++) {
                this.restoreStyle(this.body, downStyle[i].property);
                this.restoreStyle(io, downStyle[i].property);
            }
        }
    };
    /**
     * Sets style on the body of the document.
     *
     * @ignore Exclude from docs
     * @param {Array<IStyleProperty> | IStyleProperty}  style  Style definitions
     */
    Interaction.prototype.setGlobalStyle = function (style) {
        var body = getInteraction().body;
        var styles = (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["isArray"](style) ? style : [style]);
        for (var i = 0; i < styles.length; i++) {
            this.setTemporaryStyle(body, styles[i].property, styles[i].value);
        }
    };
    /**
     * Restores style on the body of the document.
     *
     * @ignore Exclude from docs
     * @param {Array<IStyleProperty> | IStyleProperty}  style  Style definitions
     */
    Interaction.prototype.restoreGlobalStyle = function (style) {
        var body = getInteraction().body;
        var styles = (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["isArray"](style) ? style : [style]);
        for (var i = 0; i < styles.length; i++) {
            this.restoreStyle(body, styles[i].property);
        }
    };
    /**
     * Checks if element is a non-cahrt element.
     *
     * @param  {InteractionObject}  io  InteractionObject
     * @return {boolean}                Global element?
     */
    Interaction.prototype.isGlobalElement = function (io) {
        return document.body === io.element;
    };
    /**
     * Checks if pointer has moved since it was created.
     *
     * @param  {IPointer}  pointer    Pointer
     * @param  {number}    tolerance  Tolerance in pixels
     * @param  {number}    minTime    Minimum time required for the pointer to be down to be considered moved
     * @return {boolean}              `true` if the pointer has moved
     */
    Interaction.prototype.moved = function (pointer, tolerance, minTime) {
        /*// If there was more time, we don't care if cursor actually moved
        let duration = $time.getTime() - pointer.startTime;
        if ($type.hasValue(minTime) && (minTime > duration)) {
            return false;
        }*/
        if (minTime === void 0) { minTime = 300; }
        // That was quick measure shift
        var shift = this.getShift(pointer);
        return (Math.abs(shift.x) > tolerance) || (Math.abs(shift.y) > tolerance);
    };
    /**
     * Returns if pointer is "old", meaning it has been pressing for more than
     * X milliseconds.
     *
     * @ignore
     * @param  {IPointer}  pointer  Pointer
     * @param  {number}    minTime  Minimum time to consider pointer old
     * @return {boolean}
     */
    Interaction.prototype.old = function (pointer, minTime) {
        if (minTime === void 0) { minTime = 300; }
        return _utils_Time__WEBPACK_IMPORTED_MODULE_16__["getTime"]() - pointer.startTime > minTime;
    };
    /**
     * Returns total a shift in pointers coordinates between its original
     * position and now.
     *
     * @param  {IPointer}  pointer  Pointer
     * @return {IPoint}             Shift in coordinates (x/y)
     */
    Interaction.prototype.getShift = function (pointer) {
        return {
            "x": pointer.startPoint.x - pointer.point.x,
            "y": pointer.startPoint.y - pointer.point.y
        };
    };
    /**
     * Returns a point from [[Pointer]]'s move history at a certain timetamp.
     *
     * @param  {IPointer}               pointer    Pointer
     * @param  {number}                 timestamp  Timestamp
     * @return {Optional<IBreadcrumb>}             Point
     */
    Interaction.prototype.getTrailPoint = function (pointer, timestamp) {
        var res;
        for (var i = 0; i < pointer.track.length; i++) {
            if (pointer.track[i].timestamp >= timestamp) {
                res = pointer.track[i];
                break;
            }
        }
        return res;
    };
    /**
     * Checks if same pointer already exists in the list.
     *
     * @param  {List<IPointer>}  list     List to check agains
     * @param  {IPointer}        pointer  Pointer
     * @return {boolean}                  Exists?
     */
    Interaction.prototype.pointerExists = function (list, pointer) {
        var exists = false;
        list.each(function (item) {
            if (item == pointer) {
                return;
            }
            exists = item.point.x == pointer.point.x && item.point.y == pointer.point.y;
        });
        return exists;
    };
    /**
     * Returns an [[InteractionObject]] representation of a DOM element.
     *
     * You can use this on any HTML or SVG element, to add interactive features
     * to it.
     *
     * @param  {HTMLElement | SVGSVGElement}  element  Element
     * @return {InteractionObject}                     InteractionObject
     */
    Interaction.prototype.getInteraction = function (element) {
        return new _InteractionObject__WEBPACK_IMPORTED_MODULE_5__["InteractionObject"](element);
    };
    /**
     * Sets a style property on an element. Stores original value to be restored
     * later with [[restoreStyle]].
     *
     * @see {@link restoreStyle}
     * @param {InteractionObject}  io        Element
     * @param {string}             property  Property
     * @param {string}             value     Value
     */
    Interaction.prototype.setTemporaryStyle = function (io, property, value) {
        // Get element
        //let el = io.element.tagName == "g" ? <SVGSVGElement>io.element.parentNode : io.element;
        var el = io.element;
        // Save original property if it is set and hasn't been saved before already
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](el.style[property]) && !io.replacedStyles.hasKey(property)) {
            io.replacedStyles.setKey(property, el.style[property]);
        }
        // Replace with the new one
        _utils_DOM__WEBPACK_IMPORTED_MODULE_9__["setStyle"](el, property, value);
    };
    /**
     * Restores specific style on an element.
     *
     * @param {InteractionObject}  io        Element
     * @param {string}             property  Style property
     */
    Interaction.prototype.restoreStyle = function (io, property) {
        // Reset style
        if (io.replacedStyles.hasKey(property)) {
            io.element.style[property] = io.replacedStyles.getKey(property);
            io.replacedStyles.removeKey(property);
        }
        else {
            delete io.element.style[property];
        }
    };
    /**
     * Restore temporarily reset styles on an element.
     *
     * @param {InteractionObject} io Element
     */
    Interaction.prototype.restoreAllStyles = function (io) {
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](io.replacedStyles.iterator(), function (a) {
            var key = a[0];
            var value = a[1];
            io.element.style[key] = value;
            io.replacedStyles.removeKey(key);
        });
    };
    /**
     * Disposes this object and cleans up after itself.
     */
    Interaction.prototype.dispose = function () {
        if (!this.isDisposed) {
            _super.prototype.dispose.call(this);
            this.restoreAllStyles(this.body);
            this.unlockWheel();
        }
    };
    Interaction.prototype.log = function (text, ev, io) {
        var show = true;
        if (show) {
            // Touchlist?
            if (ev.changedTouches) {
                for (var i = 0; i < ev.changedTouches.length; i++) {
                    this.logTouch(text, ev.type, ev.changedTouches[i]);
                }
                return;
            }
            // Get type
            var type = "";
            if (ev.pointerType) {
                switch (ev.pointerType) {
                    case 2:
                        type = "touch";
                        break;
                    case 4:
                        type = "mouse";
                        break;
                    default:
                        type = ev.pointerType;
                        break;
                }
            }
            else if (typeof TouchEvent != "undefined" && ev instanceof TouchEvent) {
                type = "touch";
            }
            else if (ev.type.match(/^mouse/)) {
                type = "mouse";
            }
            else {
                type = "???";
            }
            // Get ID
            var id = "";
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev.identifier)) {
                id = ev.identifier;
            }
            else if (_utils_Type__WEBPACK_IMPORTED_MODULE_15__["hasValue"](ev.pointerId)) {
                id = ev.pointerId;
            }
            else {
                id = "???";
            }
            if (io) {
                console.log(text + " (" + io.uid + ")  " + ev.type + "  " + type + "  " + id);
            }
            else {
                console.log(text + "  " + ev.type + "  " + type + "  " + id);
            }
        }
    };
    Interaction.prototype.logTouch = function (text, type, ev) {
        console.log(text + "  " + type + "  " + "touch" + "  " + ev.identifier);
    };
    return Interaction;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]));

var interaction = null;
/**
 * Returns a single unified global instance of [[Interaction]].
 *
 * All code should use this function, rather than create their own instances
 * of [[Interaction]].
 */
function getInteraction() {
    if (interaction == null) {
        interaction = new Interaction();
    }
    return interaction;
}
//# sourceMappingURL=Interaction.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionKeyboardObject.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionKeyboardObject.js ***!
  \**************************************************************************************************/
/*! exports provided: InteractionKeyboardObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InteractionKeyboardObject", function() { return InteractionKeyboardObject; });
/* harmony import */ var _Interaction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * Functionality related simulating of dragging of elements using keyboard.
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * [[InteractionKeyboardObject]] is used to simulate dragging of the `draggable`
 * element using keyboard arrows.
 *
 * @ignore Exclude from docs
 */
var InteractionKeyboardObject = /** @class */ (function () {
    /**
     * Constructor.
     *
     * @param {InteractionObject} io An InteractionObject
     */
    function InteractionKeyboardObject(io, ev) {
        /**
         * Indicates if this object has already been deleted. Any
         * destruction/disposal code should take this into account when deciding
         * wheter to run potentially costly disposal operations if they already have
         * been run.
         *
         * @type {boolean}
         */
        this._disposed = false;
        /**
         * Indicates direction of current horizontal movement.
         *
         * 0 - not moving horizontally
         * 1 - moving right
         * -1 - moving left
         * @type {number}
         */
        this.directionX = 0;
        /**
         * Indicates direction of current vertical movement.
         *
         * 0 - not moving vertically
         * 1 - moving down
         * -1 - moving up
         * @type {number}
         */
        this.directionY = 0;
        this.interaction = io;
        this.keyboardEvent = ev;
        this._startedOn = new Date().getTime();
        Object(_Interaction__WEBPACK_IMPORTED_MODULE_0__["getInteraction"])().processDragStart(io);
        _utils_Animation__WEBPACK_IMPORTED_MODULE_1__["animations"].push(this);
        this.update();
    }
    /**
     * It's an update method which is called by the system if
     * [[InteractionObject]] is used as animation.
     *
     * This will update coordinates of the element based on the movement
     * directions.
     */
    InteractionKeyboardObject.prototype.update = function () {
        // Init and get settings
        var io = this.interaction;
        var speed = Object(_Interaction__WEBPACK_IMPORTED_MODULE_0__["getInteraction"])().getKeyboardOption(io, "speed"), accelleration = Object(_Interaction__WEBPACK_IMPORTED_MODULE_0__["getInteraction"])().getKeyboardOption(io, "accelleration"), accellerationDelay = Object(_Interaction__WEBPACK_IMPORTED_MODULE_0__["getInteraction"])().getKeyboardOption(io, "accellerationDelay"), shift = {
            x: 0,
            y: 0
        };
        // If SHIFT key is pressed we slash speed by half and disable accelleration
        if (this.keyboardEvent.shiftKey) {
            speed *= 0.5;
            accelleration = 1;
        }
        // If CTRL is pressed we increase speed by x2
        else if (this.keyboardEvent.ctrlKey) {
            speed *= 2;
        }
        // Get elapsed time
        var ms = new Date().getTime() - this._startedOn;
        var accelleratedMs = ms - accellerationDelay;
        // Add accellerated movement
        if ((accelleration > 0) && (accelleratedMs > 0)) {
            var accellerationFactor = ms / accellerationDelay;
            ms = accellerationDelay;
            shift.x += this.directionX * (speed * accelleration * accellerationFactor * accelleratedMs);
            shift.y += this.directionY * (speed * accelleration * accellerationFactor * accelleratedMs);
        }
        // Calculate position
        shift.x += this.directionX * (speed * ms);
        shift.y += this.directionY * (speed * ms);
        // Simulate move on Interaction
        Object(_Interaction__WEBPACK_IMPORTED_MODULE_0__["getInteraction"])().handleTransformMove(io, shift, { x: 0, y: 0 }, this.keyboardEvent, true);
    };
    /**
     * Returns if this object has been already been disposed.
     *
     * @return {boolean} Is disposed?
     */
    InteractionKeyboardObject.prototype.isDisposed = function () {
        return this._disposed;
    };
    /**
     * Disposes this object. Removes from system animations.
     */
    InteractionKeyboardObject.prototype.dispose = function () {
        if (!this._disposed) {
            Object(_Interaction__WEBPACK_IMPORTED_MODULE_0__["getInteraction"])().processDragStop(this.interaction);
            _utils_Array__WEBPACK_IMPORTED_MODULE_2__["remove"](_utils_Animation__WEBPACK_IMPORTED_MODULE_1__["animations"], this);
        }
    };
    return InteractionKeyboardObject;
}());

//# sourceMappingURL=InteractionKeyboardObject.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObject.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObject.js ***!
  \******************************************************************************************/
/*! exports provided: InteractionObjectEventDispatcher, InteractionObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InteractionObject", function() { return InteractionObject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _InteractionObjectEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InteractionObjectEvents */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InteractionObjectEventDispatcher", function() { return _InteractionObjectEvents__WEBPACK_IMPORTED_MODULE_1__["InteractionObjectEventDispatcher"]; });

/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _Interaction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Interaction Object module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * Re-exports
 */

/**
 * Interaction object represents an object that is subject for any kind of
 * interaction with it with any input devices: mouse, touch or keyboard.
 *
 * Any DOM element can be wrapped into an Internaction object which in turn
 * enables attaching various interaction events to it, such as: hit, drag,
 * swipe, etc.
 *
 * To create an [[InteractionObject]] out of a [[Sprite]], use:
 * `interaction.getInteractionFromSprite(sprite: Sprite)`
 *
 * To create an [[InteractionObject]] out of a a regular element:
 * `interaction.getInteraction(element: HTMLElement)`
 */
var InteractionObject = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InteractionObject, _super);
    /**
     * Constructor
     */
    function InteractionObject(element) {
        var _this = _super.call(this) || this;
        /**
         * An [[EventDispatcher]] instance which holds events for this object
         */
        _this.events = new _InteractionObjectEvents__WEBPACK_IMPORTED_MODULE_1__["InteractionObjectEventDispatcher"](_this);
        /**
         * Collection of Disposers for various events. (so that those get disposed
         * when the whole InteractionObject is disposed)
         *
         * @ignore Exclude from docs
         * @type {Dictionary<string, IDisposer>}
         */
        _this.eventDisposers = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * A [[Dictionary]] that holds temporarily replaced original style values for
         * HTML element, so that they can be restored when the functionality that
         * replaced them is done.
         *
         * @ignore Exclude from docs
         * @type {Dictionary<string, string>}
         */
        _this.replacedStyles = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        _this._clickable = false;
        _this._hoverable = false;
        _this._trackable = false;
        _this._draggable = false;
        _this._swipeable = false;
        _this._resizable = false;
        _this._wheelable = false;
        _this._inert = false;
        /**
         * Is element currently hovered?
         *
         * @type {boolean}
         */
        _this._isHover = false;
        /**
         * Is the element hovered by touch pointer?
         *
         * @type {boolean}
         */
        _this._isHoverByTouch = false;
        /**
         * Has element got any pointers currently pressing down on it?
         * @type {boolean}
         */
        _this._isDown = false;
        /**
         * Does element have focus?
         *
         * @type {boolean}
         */
        _this._isFocused = false;
        /**
         * Options used for inertia functionality.
         *
         * @type {Dictionary<InertiaTypes, IInertiaOptions>}
         */
        _this._inertiaOptions = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * A collection of different inertia types, currently playing out.
         *
         * @ignore Exclude from docs
         * @type {Dictionary<InertiaTypes, Inertia>}
         */
        _this.inertias = new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Click/tap options.
         *
         * @type {IHitOptions}
         */
        _this._hitOptions = {};
        /**
         * Hover options.
         *
         * @type {IHoverOptions}
         */
        _this._hoverOptions = {};
        /**
         * Swipe gesture options.
         *
         * @type {ISwipeOptions}
         */
        _this._swipeOptions = {};
        /**
         * Keyboard options.
         *
         * @type {IKeyboarOptions}
         */
        _this._keyboardOptions = {};
        /**
         * Cursor options.
         *
         * @type {ICursorOptions}
         */
        _this._cursorOptions = {
            "defaultStyle": [{
                    "property": "cursor",
                    "value": "default"
                }]
        };
        _this._element = element;
        _this.className = "InteractionObject";
        _this._disposers.push(new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["DictionaryDisposer"](_this.inertias));
        _this._disposers.push(new _utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["DictionaryDisposer"](_this.eventDisposers));
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(InteractionObject.prototype, "isHover", {
        /**
         * Returns if this element is currently hovered.
         *
         * @return {boolean} Hovered?
         */
        get: function () {
            return this._isHover;
        },
        /**
         * Sets if this element is currently hovered.
         *
         * @param {boolean} value Hovered?
         */
        set: function (value) {
            if (this.isHover != value) {
                this._isHover = value;
                if (value) {
                    Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().overObjects.moveValue(this);
                }
                else {
                    Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().overObjects.removeValue(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "isHoverByTouch", {
        /**
         * Returns if this element is currently hovered.
         *
         * @return {boolean} Hovered?
         */
        get: function () {
            return this._isHoverByTouch;
        },
        /**
         * Sets if this element is currently hovered.
         *
         * @param {boolean} value Hovered?
         */
        set: function (value) {
            if (this.isHoverByTouch != value) {
                this._isHoverByTouch = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "overPointers", {
        /**
         * Returns a list of pointers currently over the element.
         *
         * @see {@link Pointer}
         * @return {List<IPointer>} List if pointers currently hovering the element
         */
        get: function () {
            if (!this._overPointers) {
                this._overPointers = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
            }
            return this._overPointers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "isDown", {
        /**
         * Returns if this element has currently any pointers pressing on it.
         *
         * @return {boolean} Has down pointers?
         */
        get: function () {
            return this._isDown;
        },
        /**
         * Sets if this element has currently any pointers pressing on it.
         *
         * @param {boolean} value Has down pointers?
         */
        set: function (value) {
            if (this.isDown != value) {
                this._isDown = value;
                if (value) {
                    Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().downObjects.moveValue(this);
                }
                else {
                    Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().downObjects.removeValue(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "downPointers", {
        /**
         * Returns a list of pointers currently pressing down on this element.
         *
         * @see {@link Pointer}
         * @return {List<IPointer>} List of down pointers
         */
        get: function () {
            if (!this._downPointers) {
                this._downPointers = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
            }
            return this._downPointers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "isFocused", {
        /**
         * Returns if this element is currently focused.
         *
         * @return {boolean} Focused?
         */
        get: function () {
            return this._isFocused;
        },
        /**
         * Sets if this element is currently focused.
         *
         * @param {boolean} value Focused?
         */
        set: function (value) {
            if (this.isFocused != value) {
                this._isFocused = value;
                if (value) {
                    Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().focusedObject = this;
                }
                else {
                    Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().focusedObject = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "clickable", {
        /**
         * Returns if element is currently set as clickable.
         *
         * @return {boolean} Clickable?
         */
        get: function () {
            return this._clickable;
        },
        /**
         * Is element clickable? Clickable elements will generate "hit" events when
         * clicked or tapped.
         *
         * @param {boolean} value Clickable?
         */
        set: function (value) {
            if (this._clickable !== value) {
                this._clickable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processClickable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "hoverable", {
        /**
         * Returns if element is currently set to generate hover events.
         *
         * @return {boolean} Hoverable?
         */
        get: function () {
            return this._hoverable;
        },
        /**
         * Sets if element should generate hover events.
         *
         * @param {boolean} value Hoverable?
         */
        set: function (value) {
            if (this._hoverable !== value) {
                this._hoverable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processHoverable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "trackable", {
        /**
         * Returns if element is set to track pointer movement over it.
         *
         * @return {boolean} Track pointer?
         */
        get: function () {
            return this._trackable;
        },
        /**
         * Sets if pointer movement over element should be tracked.
         *
         * @param {boolean} value Track pointer?
         */
        set: function (value) {
            if (this._trackable !== value) {
                this._trackable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processTrackable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "draggable", {
        /**
         * Returns if element is currently set as draggable.
         *
         * @return {boolean} Draggable?
         */
        get: function () {
            return this._draggable;
        },
        /**
         * Sets if element can be dragged. (moved)
         *
         * @param {boolean} value Draggable?
         */
        set: function (value) {
            if (this._draggable !== value) {
                this._draggable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processDraggable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "swipeable", {
        /**
         * Returns if element is currently set to track swipe gesture.
         *
         * @return {boolean} Track swipe?
         */
        get: function () {
            return this._swipeable;
        },
        /**
         * Sets whether element should react to swipe gesture.
         *
         * @param {boolean} value Track swipe?
         */
        set: function (value) {
            if (this._swipeable !== value) {
                this._swipeable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processSwipeable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "resizable", {
        /**
         * Returns if element is currently set as resizeable.
         *
         * @return {boolean} Resizeble?
         */
        get: function () {
            return this._resizable;
        },
        /**
         * Sets if element can be resized.
         *
         * @param {boolean} value Resizeable?
         */
        set: function (value) {
            if (this._resizable !== value) {
                this._resizable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processResizable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "wheelable", {
        /**
         * @return {boolean} Track wheel?
         */
        get: function () {
            return this._wheelable;
        },
        /**
         * Indicates whether track moouse wheel rotation over element.
         *
         * @param {boolean} value Track wheel?
         */
        set: function (value) {
            if (this._wheelable !== value) {
                this._wheelable = value;
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processWheelable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "inert", {
        /**
         * Returns if element is currently set as inert.
         *
         * @return {boolean} Inert?
         */
        get: function () {
            return this._inert;
        },
        /**
         * Sets if element is inert, i.e. if it should carry movement momentum after
         * it is dragged and released.
         *
         * @param {boolean} value Inert?
         */
        set: function (value) {
            if (this._inert !== value) {
                this._inert = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "focusable", {
        /**
         * Returns if element is currently set as focusable.
         *
         * @return {Optional<boolean>} Focusable?
         */
        get: function () {
            return this._focusable;
        },
        /**
         * Sets if element can gain focus.
         *
         * @param {Optional<boolean>} value Focusable?
         */
        set: function (value) {
            if (this._focusable !== value) {
                this._focusable = value;
                if (this._focusable && this.tabindex == -1) {
                    this._tabindex = 1;
                }
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processFocusable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "tabindex", {
        /**
         * Returns element's current tab index.
         *
         * @return {number} Tab index
         */
        get: function () {
            return _utils_Type__WEBPACK_IMPORTED_MODULE_6__["getValueDefault"](this._tabindex, -1);
        },
        /**
         * Sets element's tab index.
         *
         * @param {number} value Tab index
         */
        set: function (value) {
            if (this._tabindex !== value) {
                this._tabindex = value;
                if (value > -1) {
                    this.focusable = true;
                }
                Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().processFocusable(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "element", {
        /**
         * Returns DOM element associated with this element
         * @return {HTMLElement | SVGSVGElement} Element
         */
        get: function () {
            return this._element;
        },
        /**
         * Sets DOM element associated with this element
         * @param {HTMLElement | SVGSVGElement} element Element
         */
        set: function (element) {
            this._element = element;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "originalPosition", {
        /**
         * Returns element's original position.
         *
         * @ignore Exclude from docs
         * @return {Optional<IPoint>} Position.
         */
        get: function () {
            return this._originalPosition || { x: 0, y: 0 };
        },
        /**
         * Sets element's original position.
         *
         * @ignore Exclude from docs
         * @param {Optional<IPoint>} value Position
         */
        set: function (value) {
            this._originalPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "originalScale", {
        /**
         * Returns element's original scale.
         *
         * @return {number} Scale
         */
        get: function () {
            return _utils_Type__WEBPACK_IMPORTED_MODULE_6__["getValueDefault"](this._originalScale, 1);
        },
        /**
         * Sets element's original scale.
         *
         * @ignore Exclude from docs
         * @param {number} value Scale
         */
        set: function (value) {
            if (this._originalScale !== value) {
                this._originalScale = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "originalAngle", {
        /**
         * Returns element's original angle.
         *
         * @return {number} Angle
         */
        get: function () {
            return _utils_Type__WEBPACK_IMPORTED_MODULE_6__["getValueDefault"](this._originalAngle, 0);
        },
        /**
         * Sets element's original angle.
         *
         * @ignore Exclude from docs
         * @param {number} value Angle
         */
        set: function (value) {
            if (this._originalAngle !== value) {
                this._originalAngle = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "inertiaOptions", {
        /**
         * @return {Dictionary<InertiaTypes, IInertiaOptions>} Options
         */
        get: function () {
            if (this.sprite) {
                return this.sprite.adapter.apply("inertiaOptions", this._inertiaOptions);
            }
            else {
                return this._inertiaOptions;
            }
        },
        /**
         * Inertia options.
         *
         * @param {Dictionary<InertiaTypes, IInertiaOptions>}  value  Options
         */
        set: function (value) {
            this._inertiaOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "hitOptions", {
        /**
         * @return {IHitOptions} Options
         */
        get: function () {
            if (this.sprite) {
                return this.sprite.adapter.apply("hitOptions", this._hitOptions);
            }
            else {
                return this._hitOptions;
            }
        },
        /**
         * Hit options.
         *
         * @param {IHitOptions}  value  Options
         */
        set: function (value) {
            this._hitOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "hoverOptions", {
        /**
         * @return {IHoverOptions} Options
         */
        get: function () {
            if (this.sprite) {
                return this.sprite.adapter.apply("hoverOptions", this._hoverOptions);
            }
            else {
                return this._hoverOptions;
            }
        },
        /**
         * Hover options.
         *
         * @param {IHoverOptions}  value  Options
         */
        set: function (value) {
            this._hoverOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "swipeOptions", {
        /**
         * @return {ISwipeOptions} Options
         */
        get: function () {
            if (this.sprite) {
                return this.sprite.adapter.apply("swipeOptions", this._swipeOptions);
            }
            else {
                return this._swipeOptions;
            }
        },
        /**
         * Swipe options.
         *
         * @param {ISwipeOptions}  value  Options
         */
        set: function (value) {
            this._swipeOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "keyboardOptions", {
        /**
         * @return {IKeyboardOptions} Options
         */
        get: function () {
            if (this.sprite) {
                return this.sprite.adapter.apply("keyboardOptions", this._keyboardOptions);
            }
            else {
                return this._keyboardOptions;
            }
        },
        /**
         * Keyboard options.
         *
         * @param {IKeyboardOptions}  value  Options
         */
        set: function (value) {
            this._keyboardOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InteractionObject.prototype, "cursorOptions", {
        /**
         * @return {ICursorOptions} Options
         */
        get: function () {
            if (this.sprite) {
                return this.sprite.adapter.apply("cursorOptions", this._cursorOptions);
            }
            else {
                return this._cursorOptions;
            }
        },
        /**
         * Cursor options.
         *
         * @param {ICursorOptions}  value  Options
         */
        set: function (value) {
            this._cursorOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all properties and related assets from another object of the same
     * type.
     *
     * @param {this} source Source object
     */
    InteractionObject.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.inertiaOptions = source.inertiaOptions;
        this.hitOptions = source.hitOptions;
        this.hoverOptions = source.hoverOptions;
        this.swipeOptions = source.swipeOptions;
        this.keyboardOptions = source.keyboardOptions;
        this.cursorOptions = source.cursorOptions;
        Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])().applyCursorOverStyle(this);
    };
    /**
     * @ignore Exclude from docs
     */
    InteractionObject.prototype.setEventDisposer = function (key, value, f) {
        var disposer = this.eventDisposers.getKey(key);
        if (value) {
            if (disposer == null) {
                this.eventDisposers.setKey(key, f());
            }
        }
        else {
            if (disposer != null) {
                disposer.dispose();
                this.eventDisposers.removeKey(key);
            }
        }
    };
    /**
     * Disposes object.
     */
    InteractionObject.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        // Remove from all interaction registries
        var interaction = Object(_Interaction__WEBPACK_IMPORTED_MODULE_5__["getInteraction"])();
        interaction.overObjects.removeValue(this);
        interaction.downObjects.removeValue(this);
        interaction.trackedObjects.removeValue(this);
        interaction.transformedObjects.removeValue(this);
        if (interaction.focusedObject === this) {
            interaction.focusedObject = undefined;
        }
    };
    return InteractionObject;
}(_Base__WEBPACK_IMPORTED_MODULE_2__["BaseObjectEvents"]));

//# sourceMappingURL=InteractionObject.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js ***!
  \************************************************************************************************/
/*! exports provided: InteractionObjectEventDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InteractionObjectEventDispatcher", function() { return InteractionObjectEventDispatcher; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");



/**
 * Represents an Event Dispatcher for [[InteractionObject]].
 *
 * Besides regular [[EventDispatcher]] functionality it adds new events with
 * direct application to DOM nodes. Primarily used to handle keyboard events,
 * but can turn into something else moving forward.
 */
var InteractionObjectEventDispatcher = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InteractionObjectEventDispatcher, _super);
    function InteractionObjectEventDispatcher() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Holds a list of Disposers for DOM events added.
         */
        _this._domEvents = {};
        return _this;
    }
    /**
     * Adds a DOM event and returns Disposer.
     *
     * @return {IDisposer} Disposer
     */
    InteractionObjectEventDispatcher.prototype._addDOMEvent = function (type, key, listener, context) {
        var _this = this;
        if (!this._domEvents[type]) {
            var callback_1 = function (e) {
                listener.call(context, key, e);
            };
            this.target.element.addEventListener(type, callback_1, false);
            this._domEvents[type] = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["CounterDisposer"](function () {
                delete _this._domEvents[type];
                _this.target.element.removeEventListener(type, callback_1, false);
            });
        }
        return this._domEvents[type].increment();
    };
    InteractionObjectEventDispatcher.prototype._dispatchKeyboardEvent = function (key, ev) {
        // TODO use this.dispatchImmediately ?
        if (this.target.events.isEnabled(key)) {
            this.target.events.dispatchImmediately(key, {
                type: key,
                target: this.target,
                event: ev
            });
        }
    };
    InteractionObjectEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {
        var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);
        var disposers = [info.disposer];
        switch (type) {
            case "hit":
            case "doublehit":
            case "rightclick":
            case "down":
            case "up":
                this.target.clickable = true;
                break;
            case "drag":
            case "dragstart":
            case "dragstop":
                this.target.draggable = true;
                break;
            case "track":
                this.target.trackable = true;
                break;
            case "resize":
                this.target.resizable = true;
                break;
            case "swipe":
            case "swipeleft":
            case "swiperight":
                this.target.swipeable = true;
                break;
            case "wheel":
            case "wheelup":
            case "wheeldown":
            case "wheelleft":
            case "wheelright":
                this.target.wheelable = true;
                break;
            case "over":
            case "out":
                this.target.hoverable = true;
                break;
            case "focus":
            case "blur":
            case "focusin":
            case "focusout":
                this.target.focusable = true;
                break;
            case "keydown":
                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));
                break;
            case "keyup":
                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));
                break;
            case "keypress":
                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));
                break;
            case "input":
                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));
                break;
        }
        info.disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MultiDisposer"](disposers);
        return info;
    };
    return InteractionObjectEventDispatcher;
}(_utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_1__["TargetedEventDispatcher"]));

//# sourceMappingURL=InteractionObjectEvents.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js ***!
  \******************************************************************************/
/*! exports provided: MouseCursorStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MouseCursorStyle", function() { return MouseCursorStyle; });
/**
 * Mouse-related functionality
 */
/**
 * Defines static methods that hold style list for various mouse cursor styles,
 * maintaining browser compatibility.
 */
var MouseCursorStyle = /** @class */ (function () {
    function MouseCursorStyle() {
    }
    /**
     * Styles for "grab" mouse cursor.
     *
     * @type {Array<IStyleProperty>}
     */
    MouseCursorStyle.grab = [{
            "property": "cursor",
            "value": "move"
        }, {
            "property": "cursor",
            "value": "grab"
        }, {
            "property": "cursor",
            "value": "-moz-grab"
        }, {
            "property": "cursor",
            "value": "-webkit-grab"
        }];
    /**
     * Styles for "grabbing" mouse cursor.
     *
     * @type {Array<IStyleProperty>}
     */
    MouseCursorStyle.grabbing = [{
            "property": "cursor",
            "value": "move"
        }, {
            "property": "cursor",
            "value": "grabbing"
        }, {
            "property": "cursor",
            "value": "-moz-grabbing"
        }, {
            "property": "cursor",
            "value": "-webkit-grabbing"
        }];
    /**
     * Styles for "pointer" mouse cursor. (usually used for links)
     *
     * @type {Array<IStyleProperty>}
     */
    MouseCursorStyle.pointer = [{
            "property": "cursor",
            "value": "pointer"
        }];
    /**
     * Styles for default mouse cursor. (browser determines style)
     *
     * @type {Array<IStyleProperty>}
     */
    MouseCursorStyle.default = [{
            "property": "cursor",
            "value": "default"
        }];
    /**
     * Styles for horizontal bi-directional resize mouse cursor.
     *
     * @type {Array<IStyleProperty>}
     */
    MouseCursorStyle.horizontalResize = [{
            "property": "cursor",
            "value": "ew-resize"
        }];
    /**
     * Styles for vertical bi-directional mouse cursor.
     *
     * @type {Array<IStyleProperty>}
     */
    MouseCursorStyle.verticalResize = [{
            "property": "cursor",
            "value": "ns-resize"
        }];
    return MouseCursorStyle;
}());

//# sourceMappingURL=Mouse.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js ***!
  \********************************************************************************/
/*! exports provided: AMElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AMElement", function() { return AMElement; });
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * [[AMElement]] represents any SVG element and related functionality.
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all SVG elements. Provides low-level DOM functionality.
 *
 * All visual elements extend this class.
 */
var AMElement = /** @class */ (function () {
    /**
     * Constructor creates a new element or uses the one that was passed in.
     *
     * @param {string | SVGSVGElement} element Element reference node type
     */
    function AMElement(element) {
        /**
         * Indicates if the element was already disposed.
         *
         * @type {boolean}
         */
        this._isDisposed = false;
        /**
         * Current X coordinate.
         *
         * @type {number}
         */
        this._x = 0;
        /**
         * Current Y coordinate.
         *
         * @type {number}
         */
        this._y = 0;
        /**
         * Current rotation.
         *
         * @type {number}
         */
        this._rotation = 0;
        /**
         * Current scale.
         *
         * @type {number}
         */
        this._scale = 1;
        if (typeof element === "string") {
            this.node = document.createElementNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_0__["SVGNS"], element);
        }
        else {
            this.node = element;
        }
    }
    /**
     * Removes element's node from DOM.
     */
    AMElement.prototype.removeNode = function () {
        if (this.node) {
            if (this.node.parentNode) {
                this.node.parentNode.removeChild(this.node);
            }
        }
    };
    Object.defineProperty(AMElement.prototype, "transformString", {
        /**
         * Returns `transform` attribute of the element.
         *
         * @ignore Exclude from docs
         * @return {Optional<string>} Transform attribute value
         */
        get: function () {
            if (this.node) {
                return this._transformString;
                /*
                const value = this.node.getAttribute("transform");
    
                if (value !== null) {
                    return value;
                }*/
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Appply position, rotation and scale properties via elemen's `transform`
     * property
     *
     * @ignore Exclude from docs
     */
    AMElement.prototype.transform = function () {
        var transfromString = "translate(" + this._x + "," + this._y + ")";
        if (this._scale != 1) {
            transfromString += ((transfromString ? " " : "") + "scale(" + this._scale + ")");
        }
        if (this._rotation != 0) {
            transfromString += ((transfromString ? " " : "") + "rotate(" + this._rotation + ")");
        }
        this._transformString = transfromString;
        this.node.setAttribute("transform", transfromString);
    };
    /**
     * Returns bounding box of the element.
     *
     * ATTENTION: Bounding box calculations are extremely costly so should be
     * used sparingly and cached whenever possible.
     *
     * @return {IRectangle} Bounding rectangle
     */
    AMElement.prototype.getBBox = function () {
        var bbox = {
            width: 0,
            height: 0,
            x: 0,
            y: 0
        };
        if (this.node) {
            // FF would fail if getBBox() is called without node added to parent
            if (this.node.parentNode) {
                try { // again for ff. TODO: check if this doesn't slow down
                    var svgbbox = this.node.getBBox();
                    bbox.x = svgbbox.x;
                    bbox.y = svgbbox.y;
                    bbox.width = svgbbox.width;
                    bbox.height = svgbbox.height;
                }
                catch (err) {
                }
            }
        }
        return bbox;
    };
    /**
     * Moves the element to new coordinates.
     *
     * @param {number}  x  Target X
     * @param {number}  y  Target Y
     */
    AMElement.prototype.moveTo = function (point) {
        if (point) {
            var x = point.x;
            var y = point.y;
            if (this._x != x || this._y != y) {
                this._x = x;
                this._y = y;
                this.transform();
            }
        }
    };
    Object.defineProperty(AMElement.prototype, "content", {
        /**
         * Returns element's contents as SVG markup.
         *
         * @return {string} Contents
         */
        get: function () {
            // @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers
            return this.node.innerHTML || "";
        },
        /**
         * Element's SVG contents.
         *
         * @param {string} value Contents
         */
        set: function (value) {
            // @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers
            this.node.innerHTML = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AMElement.prototype, "textContent", {
        /**
         * @return {string} Text contents
         */
        get: function () {
            return this.node.textContent || "";
        },
        /**
         * Text contents of the SVG element.
         *
         * @param {string} value Text contents
         */
        set: function (value) {
            this.node.textContent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AMElement.prototype, "x", {
        /**
         * @return {number} X coordinate (px)
         */
        get: function () {
            return this._x;
        },
        /**
         * Element's X position in pixels.
         *
         * @param {number}  value  X coordinate (px)
         */
        set: function (value) {
            if (this._x != value) {
                this._x = value;
                this.transform();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AMElement.prototype, "y", {
        /**
         * @return {number} Y coordinate (px)
         */
        get: function () {
            return this._y;
        },
        /**
         * Element's Y position in pixels.
         *
         * @param {number} value Y coordinate (px)
         */
        set: function (value) {
            if (this._y != value) {
                this._y = value;
                this.transform();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AMElement.prototype, "rotation", {
        /**
         * @return {number} Rotation
         */
        get: function () {
            return this._rotation;
        },
        /**
         * Element's rotation in degrees.
         *
         * @param {number} value Rotation
         */
        set: function (angle) {
            if (this._rotation != angle) {
                this._rotation = angle;
                this.transform();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AMElement.prototype, "scale", {
        /**
         * @return {number} Scale
         */
        get: function () {
            return this._scale;
        },
        /**
         * Element's scale where 1 is original size.
         *
         * Setting to 0.5 will reduce element's size by 50%, 2 will make element
         * twice as large, etc.
         *
         * @param {number} value Scale
         */
        set: function (value) {
            if (this._scale != value) {
                this._scale = value;
                this.transform();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Removes an attribute from element.
     *
     * @param {string}  attribute  Attribute to remove
     */
    AMElement.prototype.removeAttr = function (attribute) {
        this.node.removeAttribute(attribute);
    };
    /**
     * Sets a set of attributes on a element.
     *
     * @param  {ISVGAttribute}  attributes  An object with attribute names (key) and values
     * @return {AMElement}                  The same element
     */
    AMElement.prototype.attr = function (attributes) {
        var _this = this;
        _utils_Object__WEBPACK_IMPORTED_MODULE_1__["each"](attributes, function (attributeName, attributeValue) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](attributeValue)) {
                _this.node.removeAttribute(attributeName);
            }
            else {
                // this is for performance testing
                //if(attributeValue == this.node.getAttribute(attributeName)){
                //	console.log(attributeName, attributeValue)
                //}
                _this.node.setAttribute(attributeName, attributeValue);
            }
        });
        return this;
    };
    /**
     * Returns a value of a node attribute.
     *
     * @param  {string}         attribute  Attribute name
     * @return {string | null}             Attribute value
     */
    AMElement.prototype.getAttr = function (attribute) {
        return this.node.getAttribute(attribute);
    };
    /**
     * Sets a single attribute of the element's node using namesspace.
     *
     * @param  {string}     ns         Namespace
     * @param  {string}     attribute  Attribute
     * @param  {string}     value      Value
     * @return {AMElement}             The same element
     */
    AMElement.prototype.attrNS = function (ns, attribute, value) {
        this.node.setAttributeNS(ns, attribute, value);
        return this;
    };
    /**
     * Returns a namespaced attribute value from node.
     *
     * @param  {string}  ns         Namespace
     * @param  {string}  attribute  Attribute
     * @return {string}             Attribute value
     */
    AMElement.prototype.getAttrNS = function (ns, attribute) {
        return this.node.getAttributeNS(ns, attribute);
    };
    /**
     * Removes `style` attribute from node.
     *
     * @param {string}  attribute  Attribute to remove
     */
    AMElement.prototype.removeStyle = function (attribute) {
        // @todo Review because it's a bit messy and maybe not needed (pratically not used)
        delete this.node.style[attribute];
    };
    /**
     * Returns style attribute value.
     *
     * @param  {string}  attribute  Style attribute value
     * @return {string}             Attribute value
     */
    AMElement.prototype.getStyle = function (attribute) {
        // @todo Review because it's a bit messy and maybe not needed (pratically not used)
        return this.node.style[attribute];
    };
    /**
     * Adds style attributes to element's node.
     *
     * @param  {Object}     attributes  Object containing attribute: value pairs
     * @return {AMElement}              The same element
     */
    AMElement.prototype.addStyle = function (attributes) {
        var _this = this;
        // @todo Review because it's a bit messy and maybe not needed (pratically not used)
        _utils_Object__WEBPACK_IMPORTED_MODULE_1__["each"](attributes, function (attributeName, attributeValue) {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](attributeValue)) {
                _this.removeStyle(attributeName);
            }
            else {
                _this.node.style[attributeName] = attributeValue;
            }
        });
        return this;
    };
    /**
     * Adds a class to element.
     *
     * @param {string}  name  Class name
     */
    AMElement.prototype.addClass = function (name) {
        _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["addClass"](this.node, name);
    };
    /**
     * Removes a class from element.
     *
     * @param {string} name Class name
     */
    AMElement.prototype.removeClass = function (name) {
        _utils_DOM__WEBPACK_IMPORTED_MODULE_0__["removeClass"](this.node, name);
    };
    /**
     * Sets a class name on element.
     *
     * @param {string}  name  Class name
     */
    AMElement.prototype.setClass = function (name) {
        this.node.setAttribute("class", name);
    };
    /**
     * Removes all element's child nodes, basically leaving it empty.
     */
    AMElement.prototype.removeChildNodes = function () {
        // remove all children
        while (this.node.childNodes.length > 0) {
            this.node.removeChild(this.node.firstChild);
        }
    };
    /**
     * Was this element already been disposed?
     *
     * @return {boolean} Disposed?
     */
    AMElement.prototype.isDisposed = function () {
        return this._isDisposed;
    };
    /**
     * Disposes element.
     */
    AMElement.prototype.dispose = function () {
        this.removeNode();
    };
    return AMElement;
}());

//# sourceMappingURL=AMElement.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Group.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/Group.js ***!
  \****************************************************************************/
/*! exports provided: Group */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return Group; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AMElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AMElement */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates an SVG `<g>` element.
 *
 * SVG groups are used for elements that need more elements just one.
 *
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g} About `<g>` element
 */
var Group = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Group, _super);
    /**
     * Constructor.
     *
     * @param {string} elementName Element type (should be "g")
     */
    function Group(elementName) {
        return _super.call(this, elementName) || this;
    }
    /**
     * Adds an element to group.
     *
     * This will manipulate DOM. `element` will be physically moved into group.
     *
     * @param {AMElement}  element  Element
     */
    Group.prototype.add = function (element) {
        if (element) {
            this.node.appendChild(element.node);
        }
    };
    /**
     * Adds an element to group.
     *
     * This will manipulate DOM. `element` will be physically moved into group.
     *
     * @param {AMElement}  element  Element
     */
    Group.prototype.addToBack = function (element) {
        if (element) {
            var first = this.node.childNodes[0];
            if (first) {
                if (first != element.node) {
                    this.node.insertBefore(element.node, first);
                }
            }
            else {
                this.node.appendChild(element.node);
            }
        }
    };
    /**
     * Removes the `element` from group.
     *
     * Please note that this will not dispose the element itself, it will just
     * remove it from the group.
     *
     * @param {AMElement}  element  Element
     */
    Group.prototype.removeElement = function (element) {
        // todo: not sure about the speed, need to investigate, maybe it's faster to check if node is a child
        if (element) {
            try {
                if (element.node && element.node.parentNode == this.node) {
                    this.node.removeChild(element.node);
                }
            }
            catch (err) {
            }
        }
    };
    /**
     * Checks if this group already has the child element added
     *
     * @param {AMElement}  element
     * @return {boolean}
     */
    Group.prototype.hasChild = function (element) {
        for (var i = 0; i < this.node.childNodes.length; i++) {
            if (this.node.childNodes[i] == element.node) {
                return true;
            }
        }
        return false;
    };
    Object.defineProperty(Group.prototype, "content", {
        /**
         * @return {string} SVG markup
         */
        get: function () {
            return this.node.innerHTML;
        },
        /**
         * Content of the group element.
         *
         * Can be used to add a lot of proprietary SVG markup into group.
         *
         * @param {string}  value  SVG markup
         */
        set: function (value) {
            this.node.innerHTML = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Removes all children from the group.
     */
    Group.prototype.removeChildren = function () {
        if (this.node.childNodes) {
            while (this.node.childNodes.length > 0) {
                var childNode = this.node.firstChild;
                if (childNode && childNode.parentNode) {
                    childNode.parentNode.removeChild(childNode);
                }
            }
        }
    };
    return Group;
}(_AMElement__WEBPACK_IMPORTED_MODULE_1__["AMElement"]));

//# sourceMappingURL=Group.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js ***!
  \****************************************************************************/
/*! exports provided: Paper, getGhostPaper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Paper", function() { return Paper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGhostPaper", function() { return getGhostPaper; });
/* harmony import */ var _AMElement__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AMElement */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js");
/* harmony import */ var _Group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Group */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Group.js");
/* harmony import */ var _SVGContainer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SVGContainer */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/SVGContainer.js");
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/**
 * Paper class just like the white sheet of pressed fiber it draws its name
 * inspiration from is used as a starting point to start a drawing.
 *
 * Before we can start adding elements (drawing) we need to take out a new sheet
 * of paper, or in this instance create a blank SVG element.
 *
 * This class creates such element, as well as implements methods needed to
 * start adding elements to it.
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Paper class which when instantiated will create an SVG element as well as
 * some of the sub-elements like `<desc>`, `<defs>`.
 *
 * Use its methods like `addGroup` and `append` to add elements to the paper.
 */
var Paper = /** @class */ (function () {
    /**
     * Creates main `<svg>` container and related elements.
     *
     * @param {HTMLElement} container A reference to HTML element to create `<svg>` in
     */
    function Paper(container, id) {
        // Store container reference
        this.container = container;
        this.id = id;
        // Create SVG element
        var svg = document.createElementNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_3__["SVGNS"], "svg");
        svg.setAttribute("version", "1.1");
        svg.setAttributeNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_3__["XMLNS"], "xmlns", _utils_DOM__WEBPACK_IMPORTED_MODULE_3__["SVGNS"]);
        svg.setAttributeNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_3__["XMLNS"], "xmlns:xlink", _utils_DOM__WEBPACK_IMPORTED_MODULE_3__["XLINK"]);
        svg.setAttribute("role", "group");
        this.container.appendChild(svg);
        // Add description
        var desc = document.createElementNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_3__["SVGNS"], "desc");
        desc.appendChild(document.createTextNode("JavaScript chart by amCharts"));
        svg.appendChild(desc);
        // Add defs
        this.defs = document.createElementNS(_utils_DOM__WEBPACK_IMPORTED_MODULE_3__["SVGNS"], "defs");
        svg.appendChild(this.defs);
        // Set width and height to fit container
        svg.style.width = "100%";
        svg.style.height = "100%";
        svg.style.overflow = "visible";
        // Store variable
        this.svg = svg;
    }
    /**
     * Creates and returns a new element. Does not attach it to Paper yet.
     *
     * @param  {SVGElementNames}  elementName  Element name
     * @return {AMElement}                     New element
     */
    Paper.prototype.add = function (elementName) {
        return new _AMElement__WEBPACK_IMPORTED_MODULE_0__["AMElement"](elementName);
    };
    /**
     * Creates and returns a new Group element. Does not attach it to Paper.
     *
     * @param  {SVGElementNames}  groupName  Element name
     * @return {Group}                       New Group
     */
    Paper.prototype.addGroup = function (groupName) {
        return new _Group__WEBPACK_IMPORTED_MODULE_1__["Group"](groupName);
    };
    /**
     * Appends an element to Paper.
     *
     * @param {AMElement} element Element to append
     */
    Paper.prototype.append = function (element) {
        if (element) {
            this.svg.appendChild(element.node);
        }
    };
    /**
     * Appends an element to `<defs>` block of the Paper.
     *
     * @param {AMElement}  element  Element
     */
    Paper.prototype.appendDef = function (element) {
        if (element) {
            this.defs.appendChild(element.node);
        }
    };
    /**
     * Creates and returns new `<foreignObject>` element. Does not append it to
     * Paper.
     *
     * @return {AMElement} A foreignObject element
     */
    Paper.prototype.foreignObject = function () {
        var element = new _AMElement__WEBPACK_IMPORTED_MODULE_0__["AMElement"]("foreignObject");
        //this.append(element);
        return element;
    };
    /**
     * Checks if browser supports `<foreignObject>` elements.
     *
     * @return {boolean} Supports `foreignObject`?
     */
    Paper.prototype.supportsForeignObject = function () {
        return document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Extensibility", "1.1");
    };
    return Paper;
}());

var ghostPaper = null;
/**
 * A [[Paper]] instance to create elements, that are not yet ready to be
 * placed in visible DOM.
 *
 * @ignore Exclude from docs
 * @type {Paper}
 */
function getGhostPaper() {
    if (ghostPaper === null) {
        // ghost is used to draw elements while real paper is not yet created or Sprite doesn't know parent yet
        var ghostDiv = document.createElement("div");
        ghostDiv.hidden = true;
        document.body.appendChild(ghostDiv);
        var ghostSvgContainer = new _SVGContainer__WEBPACK_IMPORTED_MODULE_2__["SVGContainer"](ghostDiv);
        ghostPaper = new Paper(ghostSvgContainer.SVGContainer, "ghost");
    }
    return ghostPaper;
}
//# sourceMappingURL=Paper.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js ***!
  \***************************************************************************/
/*! exports provided: polyline, moveTo, lineTo, quadraticCurveTo, cubicCurveTo, closePath, arcTo, arc, arcToPoint, rectangle, rectToPath, pathToPoints */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyline", function() { return polyline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moveTo", function() { return moveTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineTo", function() { return lineTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadraticCurveTo", function() { return quadraticCurveTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicCurveTo", function() { return cubicCurveTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closePath", function() { return closePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcTo", function() { return arcTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return arc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcToPoint", function() { return arcToPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectangle", function() { return rectangle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectToPath", function() { return rectToPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathToPoints", function() { return pathToPoints; });
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _rendering_Paper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rendering/Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/**
 * A collection of functions that deals with path calculations.
 */



/**
 * ============================================================================
 * PATH FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Returns an SVG path from a number of points.
 *
 * @ignore Exclude from docs
 * @param  {IPoint[]}  points  An array of line elbow points
 * @return {string}            SVG path
 */
function polyline(points) {
    var path = lineTo(points[0]);
    var prevPoint = { x: 0, y: 0 };
    for (var i = 0, len = points.length; i < len; i++) {
        var point = points[i];
        if (_utils_Math__WEBPACK_IMPORTED_MODULE_0__["getDistance"](point, prevPoint) > 0.5) {
            path += lineTo(point);
            prevPoint = point;
        }
    }
    return path;
}
/**
 * Returns a starting point of an SVG path.
 *
 * @ignore Exclude from docs
 * @param  {IPoint}  point  Starting point
 * @return {string}         SVG path
 */
function moveTo(point) {
    return " M" + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.x, 4) + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.y, 4) + " ";
}
/**
 * Returns a line part of SVG path.
 *
 * @ignore Exclude from docs
 * @param  {IPoint}  point  SVG path
 * @return {string}         SVG path
 */
function lineTo(point) {
    return " L" + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.x, 4) + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.y, 4) + " ";
}
/**
 * Returns a quadratic curve part of an SVG path.
 *
 * @ignore Exclude from docs
 * @param  {IPoint}  point         End point of the curve
 * @param  {IPoint}  controlPoint  Control point
 * @return {string}                SVG path
 */
function quadraticCurveTo(point, controlPoint) {
    return " Q" + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](controlPoint.x, 4)
        + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](controlPoint.y, 4) + " " + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.x, 4)
        + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.y, 4);
}
/**
 * Returns a cubic curve part of an SVG path.
 *
 * @ignore Exclude from docs
 * @param  {IPoint}  point          End point of the curve
 * @param  {IPoint}  controlPointA  Control point A
 * @param  {IPoint}  controlPointB  Control point B
 * @return {string}                 SVG path
 */
function cubicCurveTo(point, controlPointA, controlPointB) {
    return " C" + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](controlPointA.x, 4)
        + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](controlPointA.y, 4) + " " + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](controlPointB.x, 4)
        + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](controlPointB.y, 4) + " " + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.x, 4)
        + "," + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.y, 4);
}
/**
 * Returns a terminator for an SVG path.
 *
 * @ignore Exclude from docs
 * @return {string} SVG path
 */
function closePath() {
    return " Z";
}
/**
 * Returns an arc part of an SVG path.
 *
 * @ignore Exclude from docs
 * @todo Better parameter descriptions
 * @param  {number}  startAngle  Starting angle
 * @param  {number}  arc         Arc
 * @param  {number}  radius      Radius
 * @param  {number}  radiusY     Vertical radius
 * @return {string}              SVG path
 */
function arcTo(startAngle, arc, radius, radiusY) {
    if (arc == 0) {
        return "";
    }
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](radiusY)) {
        radiusY = radius;
    }
    var path = "";
    var c = ",";
    var segments = Math.ceil(Math.abs(arc) / 180);
    var l = 1;
    if (arc < 0) {
        l = 0;
    }
    // previous, as we use a not A
    var pax = 0;
    var pay = 0;
    // center
    var cx = -_utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](startAngle) * radius;
    var cy = -_utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](startAngle) * radiusY;
    // foir very short angles and big radius, solves artefacts
    if (arc < 0.5 && radius > 3000) {
        var endAngle = startAngle + arc;
        var ax = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](endAngle) * radius, 4);
        var ay = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](endAngle) * radiusY, 4);
        return lineTo({ x: ax, y: ay });
    }
    for (var i = 0; i < segments; i++) {
        var endAngle = startAngle + arc / segments * (i + 1);
        var ax = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](endAngle) * radius + cx - pax, 4);
        var ay = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](endAngle) * radiusY + cy - pay, 4);
        path += " a" + radius + c + radiusY + c + 0 + c + 0 + c + l + c + ax + c + ay;
        pax = ax;
        pay = ay;
    }
    return path;
}
/**
 * Creates an arc path.
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number}  startAngle         [description]
 * @param  {number}  arc                [description]
 * @param  {number}  radius             [description]
 * @param  {number}  innerRadius        [description]
 * @param  {number}  radiusY            [description]
 * @param  {number}  cornerRadius       [description]
 * @param  {number}  innerCornerRadius  [description]
 * @return {string}                     SVG path
 */
function arc(startAngle, arc, radius, innerRadius, radiusY, cornerRadius, innerCornerRadius) {
    if (arc == 0) {
        return "";
    }
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](innerRadius)) {
        innerRadius = 0;
    }
    if (radius == 0 && innerRadius <= 0) {
        return "";
    }
    if (radius < innerRadius) {
        var temp = radius;
        radius = innerRadius;
        innerRadius = temp;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](radiusY)) {
            radiusY = radiusY / innerRadius * radius;
        }
    }
    arc = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["min"](arc, 360);
    if (arc == 360) {
        cornerRadius = 0;
        innerCornerRadius = 0;
    }
    var endAngle = startAngle + arc;
    var crSin = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["min"](arc, 45) / 2);
    radiusY = _utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](radiusY) ? radiusY : radius;
    cornerRadius = cornerRadius || 0;
    innerCornerRadius = _utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](innerCornerRadius) ? innerCornerRadius : cornerRadius;
    var innerRadiusY = (radiusY / radius) * innerRadius;
    var cornerRadiusY = (radiusY / radius) * cornerRadius;
    var innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;
    cornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](cornerRadius, 0, (radius - innerRadius) / 2);
    cornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);
    innerCornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](innerCornerRadius, 0, (radius - innerRadius) / 2);
    innerCornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);
    cornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](cornerRadius, 0, radius * crSin), 4);
    cornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](cornerRadiusY, 0, radiusY * crSin), 4);
    innerCornerRadius = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](innerCornerRadius, 0, innerRadius * crSin), 4);
    innerCornerRadiusY = _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](innerCornerRadiusY, 0, innerRadiusY * crSin), 4);
    var crAngle = Math.asin(cornerRadius / radius / 2) * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["DEGREES"] * 2;
    var crAngleY = Math.asin(cornerRadiusY / radiusY / 2) * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["DEGREES"] * 2;
    if (innerRadius < innerCornerRadius) {
        innerRadius = innerCornerRadius;
    }
    if (innerRadiusY < innerCornerRadiusY) {
        innerRadiusY = innerCornerRadiusY;
    }
    var crInnerAngle = Math.asin(innerCornerRadius / innerRadius / 2) * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["DEGREES"] * 2;
    var crInnerAngleY = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["DEGREES"] * 2;
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](crInnerAngle)) {
        crInnerAngle = 0;
    }
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](crInnerAngleY)) {
        crInnerAngleY = 0;
    }
    var middleAngle = startAngle + arc / 2;
    var mPoint = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](_utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](middleAngle) * innerRadius, 4), y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](middleAngle) * innerRadiusY };
    var a0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](startAngle) * (innerRadius + innerCornerRadius), y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](startAngle) * (innerRadiusY + innerCornerRadiusY) };
    var b0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](startAngle) * (radius - cornerRadius), y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](startAngle) * (radiusY - cornerRadiusY) };
    var c0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](endAngle) * (radius - cornerRadius), y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](endAngle) * (radiusY - cornerRadiusY) };
    var d0 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](endAngle) * (innerRadius + innerCornerRadius), y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](endAngle) * (innerRadiusY + innerCornerRadiusY) };
    var b1 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](startAngle + crAngle) * radius, y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](startAngle + crAngleY) * radiusY };
    var d1 = { x: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["cos"](endAngle - crInnerAngle) * innerRadius, y: _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](endAngle - crInnerAngleY) * innerRadiusY };
    // some magic math
    innerCornerRadius += innerCornerRadius * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](crInnerAngle / 2);
    innerCornerRadiusY += innerCornerRadiusY * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["sin"](crInnerAngleY / 2);
    if (crInnerAngle > (endAngle - startAngle) / 2) {
        d1 = mPoint;
    }
    var path = "";
    // start from b if this is full circle
    if (arc == 360) {
        path = moveTo(b0);
    }
    // otherwise start from a
    else {
        path = moveTo(a0);
        path += lineTo(b0);
        path += arcToPoint(b1, cornerRadius, cornerRadiusY, true);
    }
    // draw arc
    path += arcTo(startAngle + crAngle, arc - 2 * crAngle, radius, radiusY);
    // draw inner arc
    if (_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](innerRadius) && innerRadius != 0) {
        // move to B if this is full circle
        if (arc == 360 && cornerRadius == 0) {
            path += moveTo(d0);
        }
        // draw line otherwise
        else {
            path += arcToPoint(c0, cornerRadius, cornerRadiusY, true);
            path += lineTo(d0);
            path += arcToPoint(d1, innerCornerRadius, innerCornerRadiusY, true);
        }
        path += arcTo(endAngle - crInnerAngle, -(arc - 2 * crInnerAngle), innerRadius, innerRadiusY);
        if (arc < 360 || cornerRadius > 0) {
            path += arcToPoint(a0, innerCornerRadius, innerCornerRadiusY, true);
        }
        path += lineTo(a0);
    }
    else {
        path += arcToPoint(c0, cornerRadius, cornerRadiusY, true);
        if (arc < 360) {
            path += lineTo(a0);
        }
    }
    return path;
}
/**
 * Creates a path for an arc to specific coordinate.
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {IPoint}  point         Reference point
 * @param  {number}  radius        Radius
 * @param  {number}  radiusY       Vertical radius (for skewed arcs)
 * @param  {boolean} sweepFlag     [description]
 * @param  {boolean} largeArcFlag  [description]
 * @param  {number}  xAxisRotation [description]
 * @return {string}                Arc path
 */
function arcToPoint(point, radius, radiusY, sweepFlag, largeArcFlag, xAxisRotation) {
    if (radius == 0) {
        return "";
    }
    xAxisRotation = xAxisRotation || 0;
    largeArcFlag = Boolean(largeArcFlag);
    sweepFlag = Boolean(sweepFlag);
    var c = ",";
    var sweepFlagValue = +sweepFlag; // converts to 1 or 0
    var largeArcFlagValue = +largeArcFlag; // converts to 1 or 0
    return " A" + radius + c + radiusY + c + xAxisRotation + c + largeArcFlagValue + c + sweepFlagValue + c + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.x, 4) + c + _utils_Math__WEBPACK_IMPORTED_MODULE_0__["round"](point.y, 4);
}
/**
 * Creates a new rectangle.
 *
 * @ignore Exclude from docs
 * @param  {number}  width   Width (px)
 * @param  {number}  height  Height (px)
 * @param  {number}  x       X position
 * @param  {number}  y       Y position
 * @return {string}          Rectangle
 */
function rectangle(width, height, x, y) {
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](x)) {
        x = 0;
    }
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](y)) {
        y = 0;
    }
    return moveTo({ x: x, y: y }) + lineTo({ x: x + width, y: y }) + lineTo({ x: x + width, y: y + height }) + lineTo({ x: x, y: y + height }) + closePath();
}
/**
 * Converts a rectangle to an SVG path.
 *
 * @ignore Exclude from docs
 * @param  {IRectangle}  rect  Rectangle
 * @param  {boolean}     ccw   Counter-clockwise?
 * @return {string}            SVG path
 */
function rectToPath(rect, ccw) {
    var c = ",";
    var L = " L";
    if (ccw) {
        return "M" + rect.x
            + c + rect.y + L + rect.x
            + c + (rect.y + rect.height) + L + (rect.x + rect.width)
            + c + (rect.y + rect.height) + L + (rect.x + rect.width)
            + c + rect.y + L + rect.x
            + c + rect.y;
    }
    else {
        return "M" + rect.x
            + c + rect.y + L + (rect.x + rect.width)
            + c + rect.y + L + (rect.x + rect.width)
            + c + (rect.y + rect.height) + L + rect.x
            + c + (rect.y + rect.height) + L + rect.x
            + c + rect.y;
    }
}
/**
 * Converts SVG path to array of points.
 *
 * Note, this is experimental feature based on method which is deprecated
 * on some browsers and some browsers do not support it at all.
 *
 * You can save the output of this function, but not rely on it completely.
 */
function pathToPoints(path, pointCount) {
    var paper = Object(_rendering_Paper__WEBPACK_IMPORTED_MODULE_2__["getGhostPaper"])();
    var svgPath = paper.add("path").node;
    svgPath.setAttribute("d", path);
    if (svgPath.getPointAtLength && svgPath.getTotalLength) {
        var length_1 = svgPath.getTotalLength();
        var toPoints = [];
        for (var i = 0; i < pointCount; i++) {
            var point = svgPath.getPointAtLength(i / pointCount * length_1);
            toPoints.push({ x: point.x, y: point.y });
        }
        return toPoints;
    }
    svgPath.remove();
}
//# sourceMappingURL=Path.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/SVGContainer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/SVGContainer.js ***!
  \***********************************************************************************/
/*! exports provided: svgContainers, SVGContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svgContainers", function() { return svgContainers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SVGContainer", function() { return SVGContainer; });
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _elements_Popup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Popup */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Popup.js");
/* harmony import */ var _elements_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/Modal */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Modal.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_DOM__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var css_element_queries_src_ResizeSensor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! css-element-queries/src/ResizeSensor */ "./node_modules/css-element-queries/src/ResizeSensor.js");
/* harmony import */ var css_element_queries_src_ResizeSensor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(css_element_queries_src_ResizeSensor__WEBPACK_IMPORTED_MODULE_8__);
/**
 * This functionality is related to the HTML wrapper that houses `<svg>` tag.
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A array of all SVG Containers (one SVG container per chart instance).
 *
 * @ignore Exclude from docs
 * @type {Array<SVGContainer>}
 */
var svgContainers = [];
/**
 * A class used to create an HTML wrapper for the SVG contents.
 */
var SVGContainer = /** @class */ (function () {
    /**
     * Constructor
     *
     * * Creates an HTML wrapper for SVG
     */
    function SVGContainer(htmlElement) {
        var _this = this;
        /**
         * Indicates if this object has already been deleted. Any
         * destruction/disposal code should take this into account when deciding
         * wheter to run potentially costly disposal operations if they already have
         * been run.
         *
         * @type {boolean}
         */
        this._disposed = false;
        /**
         * If this component is in a separate HTML container, `autoResize` means the
         * module will constantly measure container's size and adopt contents to it.
         *
         * @type {Boolean}
         */
        this.autoResize = true;
        /**
         * Holds list of references to [[Sprite]] objects that should not be exported
         * when exporting chart to an image.
         *
         * @ignore
         * @type {Sprite[]}
         */
        this.nonExportableSprites = [];
        /**
         * List of objects that need to be disposed when this one is disposed.
         *
         * @type {Disposer[]}
         */
        this._disposers = [];
        this.cssScale = 1;
        // Log parent HTML element
        this.htmlElement = htmlElement;
        var callback = function () { _this.measure(); };
        this.resizeSensor = new css_element_queries_src_ResizeSensor__WEBPACK_IMPORTED_MODULE_8___default.a(htmlElement, callback);
        this._disposers.push(new _utils_Disposer__WEBPACK_IMPORTED_MODULE_0__["Disposer"](function () {
            _this.resizeSensor.detach(callback);
        }));
        // Adds to containers array
        svgContainers.push(this);
        /**
         * Create child div for the container - it will have svg node
         * It might seem that this container is not necessay, however having it solves
         * a problems with mouse position detection and some other.
         */
        var svgContainer = document.createElement("div");
        var style = svgContainer.style;
        style.width = "100%";
        style.height = "100%";
        style.position = "relative";
        htmlElement.appendChild(svgContainer);
        this.SVGContainer = svgContainer;
    }
    /**
     * Measures size of parent HTML element.
     *
     * @ignore Exclude from docs
     */
    SVGContainer.prototype.measure = function () {
        var width = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["width"](this.htmlElement);
        var height = _utils_Utils__WEBPACK_IMPORTED_MODULE_4__["height"](this.htmlElement);
        var container = this.container;
        if (container) {
            if (this.width != width || this.height != height) {
                this.width = width;
                this.height = height;
                if (width > 0) {
                    container.maxWidth = width;
                }
                if (height > 0) {
                    container.maxHeight = height;
                }
                _utils_DOM__WEBPACK_IMPORTED_MODULE_5__["fixPixelPerfect"](this.SVGContainer);
            }
            if (!container.maxWidth) {
                container.maxWidth = 0;
            }
            if (!container.maxHeight) {
                container.maxHeight = 0;
            }
            this.cssScale = 1;
            this.checkTransform(this.htmlElement);
        }
    };
    Object.defineProperty(SVGContainer.prototype, "container", {
        /**
         * @return {Optional<Container>} Container
         */
        get: function () {
            return this._container;
        },
        /**
         * A [[Container]] element which is placed into container.
         *
         * @param {Optional<Container>}  container  Container
         */
        set: function (container) {
            this._container = container;
            this.measure();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns if this object has been already been disposed.
     *
     * @return {boolean} Is disposed?
     */
    SVGContainer.prototype.isDisposed = function () {
        return this._disposed;
    };
    /**
     * Removes this container from SVG container list in system, which
     * effectively disables size change monitoring for it.
     */
    SVGContainer.prototype.dispose = function () {
        if (!this._disposed) {
            _utils_Array__WEBPACK_IMPORTED_MODULE_6__["remove"](svgContainers, this);
        }
        _utils_Array__WEBPACK_IMPORTED_MODULE_6__["each"](this._disposers, function (item) {
            item.dispose();
        });
    };
    Object.defineProperty(SVGContainer.prototype, "hideOverflow", {
        /**
         * Indicates if chart container should have its style set
         * to `overflow: hidden`.
         *
         * Normally, we don't want that, so that certain elements, such as tooltips,
         * would be able to go outside chart area.
         *
         * There is one issue though. Some browsers ignore SVG masks and would
         * display scrollbars if chart elements, that go outside chart area extend
         * outside window.
         *
         * This is especially true for [[MapChart]], which can have its elements
         * extend very widely when zoomed in. Even if those parts are not visible
         * because of SVG masks, some browsers might still display window scrollbars.
         *
         * This is why we set this setting to `true` in [[MapChart]].
         *
         * Other charts use default of `false`.
         */
        set: function (value) {
            if (value) {
                this.SVGContainer.style.overflow = "hidden";
            }
            else {
                this.SVGContainer.style.overflow = "";
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SVGContainer.prototype, "modal", {
        /**
         * ==========================================================================
         * MODAL/POPUP RELATED STUFF
         * ==========================================================================
         * @hidden
         */
        /**
         * Returns a [[Modal]] instance, associated with this chart.
         * (elements top parent)
         *
         * Accessing modal does not make it appear. To make a modal appear, use
         * `showModal()` method.
         *
         * @see {@link Modal} for more information about using Modal windows
         * @return {Modal} Modal instance
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this._modal)) {
                // Create new modal
                this._modal = new _elements_Modal__WEBPACK_IMPORTED_MODULE_2__["Modal"]();
                this._modal.container = this.SVGContainer;
                // Add to disposers
                this._disposers.push(this._modal);
            }
            return this._modal;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Opens a modal window with specific content (`text` parameter) and,
     * optionally, `title`.
     *
     * The `text` parameter can contain HTML content.
     *
     * @see {@link Modal} for more information about using Modal windows
     * @param {string}  text   Modal contents
     * @param {string}  title  Title for the modal window
     */
    SVGContainer.prototype.openModal = function (text, title) {
        // Hide previous modal
        this.closeModal();
        // Create modal
        var modal = this.modal;
        modal.content = text;
        modal.readerTitle = title;
        modal.open();
        return modal;
    };
    /**
     * Hides modal window if there is one currently open.
     */
    SVGContainer.prototype.closeModal = function () {
        if (this._modal) {
            this.modal.close();
        }
    };
    Object.defineProperty(SVGContainer.prototype, "popups", {
        /**
         * A list of popups for this chart.
         *
         * @return {ListTemplate<Popup>} Popups
         */
        get: function () {
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this._popups)) {
                // Create popup template
                var popupTemplate = new _elements_Popup__WEBPACK_IMPORTED_MODULE_1__["Popup"]();
                popupTemplate.container = this.SVGContainer;
                // Create the list
                this._popups = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](popupTemplate);
                // Add to disposers
                this._disposers.push(new _utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](this._popups));
                this._disposers.push(this._popups.template);
            }
            return this._popups;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates, opens, and returns a new [[Popup]] window.
     *
     * `text` can be any valid HTML.
     *
     * `title` is currently not supported.
     *
     * @param  {string}  text   Popup contents
     * @param  {string}  title  Popup title
     * @return {Popup}          Popup instance
     */
    SVGContainer.prototype.openPopup = function (text, title) {
        var popup = this.popups.create();
        popup.content = text;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](title)) {
            popup.title = title;
        }
        popup.open();
        return popup;
    };
    /**
     * Closes all currently open popup windows
     */
    SVGContainer.prototype.closeAllPopups = function () {
        this.popups.each(function (popup) {
            popup.close();
        });
    };
    SVGContainer.prototype.checkTransform = function (div) {
        if (window.getComputedStyle) {
            if (div && div.style) {
                var style = window.getComputedStyle(div, null);
                if (style) {
                    var matrix = style.getPropertyValue("-webkit-transform") ||
                        style.getPropertyValue("-moz-transform") ||
                        style.getPropertyValue("-ms-transform") ||
                        style.getPropertyValue("-o-transform") ||
                        style.getPropertyValue("transform");
                    if (matrix && matrix !== "none") {
                        var values = matrix.split('(')[1].split(')')[0].split(',');
                        var a = Number(values[0]);
                        var b = Number(values[1]);
                        var scale = Math.sqrt(a * a + b * b);
                        if (!isNaN(scale)) {
                            this.cssScale *= scale;
                        }
                    }
                }
            }
            if (div.parentNode && div.parentNode instanceof HTMLElement) {
                this.checkTransform(div.parentNode);
            }
        }
    };
    return SVGContainer;
}());

//# sourceMappingURL=SVGContainer.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js ***!
  \********************************************************************************/
/*! exports provided: Tension, wavedLine, Basis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tension", function() { return Tension; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wavedLine", function() { return wavedLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Basis", function() { return Basis; });
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _Path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * [sign description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @todo Move this someplace else
 * @param {number} x [description]
 */
function sign(x) {
    return x < 0 ? -1 : 1;
}
/**
 * [slope2 description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number} x0 [description]
 * @param  {number} x1 [description]
 * @param  {number} y0 [description]
 * @param  {number} y1 [description]
 * @param  {number} t  [description]
 * @return {number}    [description]
 */
function slope2(x0, x1, y0, y1, t) {
    var h = x1 - x0;
    return h ? (3 * (y1 - y0) / h - t) / 2 : t;
}
/**
 * [slope3 description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number} x0 [description]
 * @param  {number} x1 [description]
 * @param  {number} y0 [description]
 * @param  {number} y1 [description]
 * @param  {number} x2 [description]
 * @param  {number} y2 [description]
 * @return {number}    [description]
 */
function slope3(x0, x1, y0, y1, x2, y2) {
    var h0 = x1 - x0;
    var h1 = x2 - x1;
    var s0 = (y1 - y0) / (h0 || h1 < 0 && -0);
    var s1 = (y2 - y1) / (h1 || h0 < 0 && -0);
    var p = (s0 * h1 + s1 * h0) / (h0 + h1);
    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
var Tension = /** @class */ (function () {
    /**
     * Constructor.
     *
     * @param {number} tensionX [description]
     * @param {number} tensionY [description]
     */
    function Tension(tensionX, tensionY) {
        this._tensionX = tensionX;
        this._tensionY = tensionY;
    }
    /**
     * [smooth description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {Array<IPoint>}  points  [description]
     * @return {string}                 [description]
     */
    Tension.prototype.smooth = function (points) {
        var tensionX = this._tensionX;
        var tensionY = this._tensionY;
        if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {
            return _Path__WEBPACK_IMPORTED_MODULE_1__["polyline"](points);
        }
        var first = points[0];
        var last = points[points.length - 1];
        var closed = false;
        if (_utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](first.x, 3) == _utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](last.x) && _utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](first.y) == _utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](last.y)) {
            closed = true;
        }
        // Can't moveTo here, as it wont be possible to have fill then.
        var path = "";
        for (var i = 0, len = points.length - 1; i < len; i++) {
            var p0 = points[i - 1];
            var p1 = points[i];
            var p2 = points[i + 1];
            var p3 = points[i + 2];
            if (i === 0) {
                if (closed) {
                    p0 = points[points.length - 2];
                }
                else {
                    p0 = points[i];
                }
            }
            else if (i == points.length - 2) {
                if (closed) {
                    p3 = points[1];
                }
                else {
                    p3 = points[i + 1];
                }
            }
            var controlPointA = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getCubicControlPointA"](p0, p1, p2, p3, tensionX, tensionY);
            var controlPointB = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getCubicControlPointB"](p0, p1, p2, p3, tensionX, tensionY);
            path += _Path__WEBPACK_IMPORTED_MODULE_1__["cubicCurveTo"](p2, controlPointA, controlPointB);
        }
        return path;
    };
    return Tension;
}());

/**
 * Returns a waved line SVG path between two points.
 *
 * @ignore Exclude from docs
 * @param  {IPoint}   point1            Starting point
 * @param  {IPoint}   point2            Ending point
 * @param  {number}   waveLength        Wave length
 * @param  {number}   waveHeight        Wave height
 * @param  {boolean}  adjustWaveLength  Adjust wave length based on the actual line length
 * @return {string}                     SVG path
 */
function wavedLine(point1, point2, waveLength, waveHeight, tension, adjustWaveLength) {
    var x1 = point1.x;
    var y1 = point1.y;
    var x2 = point2.x;
    var y2 = point2.y;
    var distance = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getDistance"](point1, point2);
    if (adjustWaveLength) {
        waveLength = distance / Math.round(distance / waveLength);
    }
    var d = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].getCache(_utils_Utils__WEBPACK_IMPORTED_MODULE_3__["stringify"](["wavedLine", point1.x, point2.x, point1.y, point2.y, waveLength, waveHeight]));
    if (!d) {
        if (distance > 0) {
            var angle = Math.atan2(y2 - y1, x2 - x1);
            var cos = Math.cos(angle);
            var sin = Math.sin(angle);
            var waveLengthX = waveLength * cos;
            var waveLengthY = waveLength * sin;
            if (waveLength <= 1 || waveHeight <= 1) {
                d = _Path__WEBPACK_IMPORTED_MODULE_1__["lineTo"](point2);
            }
            else {
                var halfWaveCount = Math.round(2 * distance / waveLength);
                var points = [];
                var sign_1 = 1;
                if (x2 < x1) {
                    sign_1 *= -1;
                }
                if (y2 < y1) {
                    sign_1 *= -1;
                }
                for (var i = 0; i <= halfWaveCount; i++) {
                    sign_1 *= -1;
                    var x = x1 + i * waveLengthX / 2 + sign_1 * waveHeight / 2 * sin;
                    var y = y1 + i * waveLengthY / 2 - sign_1 * waveHeight / 2 * cos;
                    points.push({ x: x, y: y });
                }
                d = new Tension(tension, tension).smooth(points);
            }
        }
        else {
            d = "";
        }
        _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].setCache(_utils_Utils__WEBPACK_IMPORTED_MODULE_3__["stringify"](["wavedLine", point1.x, point2.x, point1.y, point2.y, waveLength, waveHeight]), d);
    }
    return d;
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
var Basis = /** @class */ (function () {
    /**
     * Constructor.
     *
     * @param {object}  info  [description]
     */
    function Basis(info) {
        this._closed = info.closed;
    }
    /**
     * [smooth description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {Array<IPoint>}  points  [description]
     * @return {string}                 [description]
     */
    Basis.prototype.smooth = function (points) {
        var _this = this;
        var x0 = NaN;
        var x1 = NaN;
        var x2 = NaN;
        var x3 = NaN;
        var x4 = NaN;
        var y0 = NaN;
        var y1 = NaN;
        var y2 = NaN;
        var y3 = NaN;
        var y4 = NaN;
        var point = 0;
        var output = "";
        var pushCurve = function (x, y) {
            output += _Path__WEBPACK_IMPORTED_MODULE_1__["cubicCurveTo"]({
                x: (x0 + 4 * x1 + x) / 6,
                y: (y0 + 4 * y1 + y) / 6
            }, {
                x: (2 * x0 + x1) / 3,
                y: (2 * y0 + y1) / 3
            }, {
                x: (x0 + 2 * x1) / 3,
                y: (y0 + 2 * y1) / 3
            });
        };
        var pushPoint = function (_a) {
            var x = _a.x, y = _a.y;
            switch (point) {
                case 0:
                    point = 1;
                    if (_this._closed) {
                        x2 = x;
                        y2 = y;
                    }
                    else {
                        output += _Path__WEBPACK_IMPORTED_MODULE_1__["lineTo"]({ x: x, y: y });
                    }
                    break;
                case 1:
                    point = 2;
                    if (_this._closed) {
                        x3 = x;
                        y3 = y;
                    }
                    break;
                case 2:
                    point = 3;
                    if (_this._closed) {
                        x4 = x;
                        y4 = y;
                        output += _Path__WEBPACK_IMPORTED_MODULE_1__["moveTo"]({ x: (x0 + 4 * x1 + x) / 6, y: (y0 + 4 * y1 + y) / 6 });
                        break;
                    }
                    else {
                        output += _Path__WEBPACK_IMPORTED_MODULE_1__["lineTo"]({ x: (5 * x0 + x1) / 6, y: (5 * y0 + y1) / 6 });
                        // fall-through
                    }
                default:
                    pushCurve(x, y);
                    break;
            }
            x0 = x1;
            x1 = x;
            y0 = y1;
            y1 = y;
        };
        _utils_Array__WEBPACK_IMPORTED_MODULE_2__["each"](points, pushPoint);
        if (this._closed) {
            switch (point) {
                case 1:
                    output += _Path__WEBPACK_IMPORTED_MODULE_1__["moveTo"]({ x: x2, y: y2 });
                    output += _Path__WEBPACK_IMPORTED_MODULE_1__["closePath"]();
                    break;
                case 2:
                    output += _Path__WEBPACK_IMPORTED_MODULE_1__["moveTo"]({ x: (x2 + 2 * x3) / 3, y: (y2 + 2 * y3) / 3 });
                    output += _Path__WEBPACK_IMPORTED_MODULE_1__["lineTo"]({ x: (x3 + 2 * x2) / 3, y: (y3 + 2 * y2) / 3 });
                    output += _Path__WEBPACK_IMPORTED_MODULE_1__["closePath"]();
                    break;
                case 3:
                    pushPoint({ x: x2, y: y2 });
                    pushPoint({ x: x3, y: y3 });
                    pushPoint({ x: x4, y: y4 });
                    break;
            }
        }
        else {
            switch (point) {
                case 3:
                    pushCurve(x1, y1);
                // fall-through
                case 2:
                    output += _Path__WEBPACK_IMPORTED_MODULE_1__["lineTo"]({ x: x1, y: y1 });
                    break;
            }
            output += _Path__WEBPACK_IMPORTED_MODULE_1__["closePath"]();
        }
        return output;
    };
    return Basis;
}());

//# sourceMappingURL=Smoothing.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/ColorModifier.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/ColorModifier.js ***!
  \******************************************************************************************/
/*! exports provided: ColorModifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorModifier", function() { return ColorModifier; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for color modifiers.
 *
 * @ignore Exclude from docs
 */
var ColorModifier = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ColorModifier, _super);
    /**
     * Constructor
     */
    function ColorModifier() {
        var _this = _super.call(this) || this;
        _this.className = "ColorModifier";
        _this.applyTheme();
        return _this;
    }
    /**
     * Modifies color value.
     *
     * @ignore Exclude from docs
     * @param  {Color}  value  Original color
     * @return {Color}         Modified
     */
    ColorModifier.prototype.modify = function (value) {
        return value;
    };
    return ColorModifier;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["ColorModifier"] = ColorModifier;
//# sourceMappingURL=ColorModifier.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/GradientModifier.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/GradientModifier.js ***!
  \*********************************************************************************************/
/*! exports provided: GradientModifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GradientModifier", function() { return GradientModifier; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ColorModifier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColorModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/ColorModifier.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class can be used to modify linear gradient steps, changing visual
 * properties like lightness, brightness, opacity of each set.
 *
 * It can also set offsets for each gradient step.
 *
 * E.g. if I want to fill a columns in a column series to be a solid fill from
 * top to 80% of height, then gradually fades out, I can use the following
 * gradient modifier as a `fillModifier`:
 *
 * ```TypeScript
 * let fillModifier = new am4core.GradientModifier();
 * fillModifier.opacities = [1, 1, 0];
 * fillModifier.offsets = [0, 0.8, 1];
 * columnSeries.columns.template.fillModifier = fillModifier;
 * ```
 * ```JavaScript
 * var fillModifier = new am4core.GradientModifier();
 * fillModifier.opacities = [1, 1, 0];
 * fillModifier.offsets = [0, 0.8, 1];
 * columnSeries.columns.template.fillModifier = fillModifier;
 * ```
 * ```JSON
 * "series": [{
 *   "type": "ColumnSeries",
 *   "columns": {
 *     "fillModifier": {
 *       "type": "GradientModifier",
 *       "opacities": [1, 1, 0],
 *       "offsets": [0, 0.8, 1]
 *     }
 *   }
 * }]
 * ```
 */
var GradientModifier = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GradientModifier, _super);
    /**
     * Constructor.
     */
    function GradientModifier() {
        var _this = _super.call(this) || this;
        _this.lightnesses = [];
        _this.brightnesses = [];
        _this.opacities = [];
        _this.offsets = [];
        _this.className = "GradientModifier";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(GradientModifier.prototype, "lightnesses", {
        /**
         * @return {number[]} Lightness values
         */
        get: function () {
            return this._lightnesses;
        },
        /**
         * An array of lightness values for each step.
         *
         * @param {number[]}  value  Lightness values
         */
        set: function (value) {
            this._lightnesses = value;
            this._brightnesses = [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GradientModifier.prototype, "brightnesses", {
        /**
         * @return {number[]} Brightness values
         */
        get: function () {
            return this._brightnesses;
        },
        /**
         * An array of brightness values for each step.
         *
         * @param {number[]}  value  Brightness values
         */
        set: function (value) {
            this._brightnesses = value;
            this._lightnesses = [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GradientModifier.prototype, "opacities", {
        /**
         * @return {number[]} Opacity values
         */
        get: function () {
            return this._opacities;
        },
        /**
         * An array of opacity values for each step.
         *
         * @param {number[]}  value  Opacity values
         */
        set: function (value) {
            this._opacities = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GradientModifier.prototype, "offsets", {
        /**
         * @return {number[]} Offsets
         */
        get: function () {
            return this._offsets;
        },
        /**
         * An array of relative position (0-1) for each step.
         *
         * If not set, all steps will be of equal relative length.
         *
         * @param {number[]}  value  Offsets
         */
        set: function (value) {
            this._offsets = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Modifies the color based on step setting.
     *
     * @ignore Exclude from docs
     * @param  {Color}  value  Source color
     * @return {Color}         A gradient that matches set modification rules
     */
    GradientModifier.prototype.modify = function (value) {
        // Clear current gradient
        this.gradient.clear();
        // Get step count
        var count = 0;
        if (this.opacities) {
            count = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["max"](count, this.opacities.length);
        }
        if (this.lightnesses) {
            count = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["max"](count, this.lightnesses.length);
        }
        if (this.brightnesses) {
            count = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["max"](count, this.brightnesses.length);
        }
        // Init step values
        var opacity = 1, lightness, brightness;
        // Apply steps
        for (var i = 0; i < count; i++) {
            // Take base color
            var color = value;
            // Check if there are any parameters for this step
            if (this.opacities && _utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.opacities[i])) {
                opacity = this.opacities[i];
            }
            if (this.lightnesses && _utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.lightnesses[i])) {
                lightness = this.lightnesses[i];
                brightness = undefined;
            }
            if (this.brightnesses && _utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.brightnesses[i])) {
                brightness = this.brightnesses[i];
                lightness = undefined;
            }
            // Check if we need to brighten/lighten color
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](brightness)) {
                color = value.brighten(this.brightnesses[i]);
            }
            else if (_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](lightness)) {
                color = value.lighten(this.lightnesses[i]);
            }
            // Get offset (it's OK if it's undefined)
            var offset = this.offsets[i];
            // Apply step
            this.gradient.addColor(color, opacity, offset);
        }
        return this.gradient;
    };
    GradientModifier.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this._offsets = source.offsets;
        this._brightnesses = source.brightnesses;
        this._lightnesses = source.lightnesses;
        this._opacities = source.opacities;
    };
    return GradientModifier;
}(_ColorModifier__WEBPACK_IMPORTED_MODULE_1__["ColorModifier"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["GradientModifier"] = GradientModifier;
//# sourceMappingURL=GradientModifier.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinePattern.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinePattern.js ***!
  \****************************************************************************************/
/*! exports provided: LinePattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinePattern", function() { return LinePattern; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Pattern__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Pattern */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Line pattern.
 */
var LinePattern = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LinePattern, _super);
    /**
     * Constructor
     */
    function LinePattern() {
        var _this = _super.call(this) || this;
        _this._line = _this.paper.add("line");
        _this.addElement(_this._line);
        return _this;
    }
    /**
     * Draws the pattern.
     */
    LinePattern.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this._line) {
            this._line.attr({ "x2": this.width * 2 }); // to solve rotation
        }
    };
    return LinePattern;
}(_Pattern__WEBPACK_IMPORTED_MODULE_1__["Pattern"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["LinePattern"] = LinePattern;
//# sourceMappingURL=LinePattern.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js ***!
  \*******************************************************************************************/
/*! exports provided: LinearGradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return LinearGradient; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _Paper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Contains code and logic for generating linear gradients.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Linear gradient class.
 */
var LinearGradient = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LinearGradient, _super);
    /**
     * Constructor.
     */
    function LinearGradient() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * List of colors switch definitions in a gradient.
         *
         * @type {List<IGradientStop>}
         */
        _this._stops = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * Gradient direction.
         *
         * @type {number}
         */
        _this._rotation = 0;
        _this.className = "LinearGradient";
        _this._stops.events.on("setIndex", _this.validate, _this);
        _this._stops.events.on("inserted", _this.validate, _this);
        // Create element
        _this.element = _this.paper.addGroup("linearGradient");
        _this.id = "gradient-" + _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getUniqueId();
        _this.element.attr({ "id": _this.id });
        _this._disposers.push(_this.element);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws gradient.
     *
     * @ignore Exclude from docs
     */
    LinearGradient.prototype.validate = function () {
        var _this = this;
        var rotation = (this._rotation + 90) * _utils_Math__WEBPACK_IMPORTED_MODULE_6__["RADIANS"];
        var x1 = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';
        var y1 = Math.round(50 + Math.cos(rotation) * 50) + '%';
        var x2 = Math.round(50 + Math.sin(rotation) * 50) + '%';
        var y2 = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';
        var gradientElement = this.element;
        gradientElement.removeChildNodes();
        gradientElement.attr({ "x1": x1, "x2": x2, "y1": y1, "y2": y2 });
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["indexed"](this._stops.iterator()), function (a) {
            var i = a[0];
            var stop = a[1];
            var offset = stop.offset;
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](offset)) {
                offset = i / (_this._stops.length - 1);
            }
            var gradientStop = _this.paper.add("stop");
            gradientStop.attr({ "stop-color": stop.color });
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](stop.opacity)) {
                gradientStop.attr({ "stop-opacity": stop.opacity });
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](offset)) {
                gradientStop.attr({ "offset": offset });
            }
            gradientElement.add(gradientStop);
        });
    };
    /**
     * Clears the gradient.
     *
     * @ignore Exclude from docs
     */
    LinearGradient.prototype.clear = function () {
        this._stops.clear();
    };
    /**
     * Adds a color step to the gradient.
     *
     * @param {Color}   color    Color (hex code or named color)
     * @param {number}  opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)
     * @param {number}  offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)
     */
    LinearGradient.prototype.addColor = function (color, opacity, offset) {
        this._stops.push({ color: color, opacity: opacity, offset: offset });
    };
    Object.defineProperty(LinearGradient.prototype, "stops", {
        /**
         * A list of color stops in the gradient.
         *
         * @return {List<IGradientStop>} Stops
         */
        get: function () {
            return this._stops;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LinearGradient.prototype, "paper", {
        /**
         * @ignore Exclude from docs
         * @return {Paper} Paper
         */
        get: function () {
            if (this._paper) {
                return this._paper;
            }
            return Object(_Paper__WEBPACK_IMPORTED_MODULE_3__["getGhostPaper"])();
        },
        /**
         * [[Paper]] instace to use for the gradient.
         *
         * @ignore Exclude from docs
         * @param {Paper}  paper  Paper
         */
        set: function (paper) {
            if (this._paper != paper) {
                this._paper = paper;
                this.validate();
                paper.appendDef(this.element);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LinearGradient.prototype, "rotation", {
        /**
         * @return {number} Rotation
         */
        get: function () {
            return this._rotation;
        },
        /**
         * Rotation (direction) of the gradient in degrees.
         *
         * @param {number}  value  Rotation
         */
        set: function (value) {
            //this.element.attr({ "gradientTransform": "rotate(" + value + " 10 100)" });
            this._rotation = value;
            this.validate();
        },
        enumerable: true,
        configurable: true
    });
    LinearGradient.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.stops.copyFrom(source.stops);
        this._rotation = source.rotation;
    };
    return LinearGradient;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["LinearGradient"] = LinearGradient;
//# sourceMappingURL=LinearGradient.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradientModifier.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradientModifier.js ***!
  \***************************************************************************************************/
/*! exports provided: LinearGradientModifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinearGradientModifier", function() { return LinearGradientModifier; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _LinearGradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _GradientModifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GradientModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/GradientModifier.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class can be used to modify linear gradient steps, changing visual
 * properties like lightness, brightness, opacity of each set.
 *
 * It can also set offsets for each gradient step.
 *
 * E.g. if I want to fill a columns in a column series to be a solid fill from
 * top to 80% of height, then gradually fades out, I can use the following
 * gradient modifier as a `fillModifier`:
 *
 * ```TypeScript
 * let fillModifier = new am4core.LinearGradientModifier();
 * fillModifier.opacities = [1, 1, 0];
 * fillModifier.offsets = [0, 0.8, 1];
 * columnSeries.columns.template.fillModifier = fillModifier;
 * ```
 * ```JavaScript
 * var fillModifier = new am4core.LinearGradientModifier();
 * fillModifier.opacities = [1, 1, 0];
 * fillModifier.offsets = [0, 0.8, 1];
 * columnSeries.columns.template.fillModifier = fillModifier;
 * ```
 * ```JSON
 * "series": [{
 *   "type": "ColumnSeries",
 *   "columns": {
 *     "fillModifier": {
 *       "type": "LinearGradientModifier",
 *       "opacities": [1, 1, 0],
 *       "offsets": [0, 0.8, 1]
 *     }
 *   }
 * }]
 * ```
 */
var LinearGradientModifier = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LinearGradientModifier, _super);
    /**
     * Constructor.
     */
    function LinearGradientModifier() {
        var _this = _super.call(this) || this;
        _this.className = "LinearGradientModifier";
        _this.gradient = new _LinearGradient__WEBPACK_IMPORTED_MODULE_1__["LinearGradient"]();
        _this.applyTheme();
        return _this;
    }
    LinearGradientModifier.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.gradient = source.gradient.clone();
    };
    return LinearGradientModifier;
}(_GradientModifier__WEBPACK_IMPORTED_MODULE_2__["GradientModifier"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["LinearGradientModifier"] = LinearGradientModifier;
//# sourceMappingURL=LinearGradientModifier.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js ***!
  \************************************************************************************/
/*! exports provided: Pattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pattern", function() { return Pattern; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Paper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Pattern module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class to define patterns.
 */
var Pattern = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Pattern, _super);
    //public propertyValues = new Dictionary<PatternProperties, any>();
    /**
     * Constructor
     */
    function Pattern() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * List of elements the pattern consists of.
         *
         * @type {List<AMElement>}
         */
        _this._elements = new _utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
        /**
         * A storage for Filter property/value pairs.
         *
         * @ignore Exclude from docs
         * @see {@link PatternProperties}
         * @type {PatternProperties}
         */
        _this.properties = {};
        _this.className = "Pattern";
        // Set defaults
        _this.width = 10;
        _this.height = 10;
        _this.x = 0;
        _this.y = 0;
        _this.patternUnits = "userSpaceOnUse";
        var interfaceColors = new _utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_6__["InterfaceColorSet"]();
        _this.backgroundFill = interfaceColors.getFor("background");
        _this.backgroundOpacity = 0;
        _this.fillOpacity = 1;
        _this.fill = interfaceColors.getFor("alternativeBackground");
        _this.stroke = interfaceColors.getFor("alternativeBackground");
        _this.strokeOpacity = 1;
        _this.strokeWidth = 1;
        _this.shapeRendering = "crispEdges";
        _this.rotation = 0;
        // Create main group to store pattern elements inelements
        _this.element = _this.paper.addGroup("pattern");
        _this.id = "pattern-" + _Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].getUniqueId();
        _this.element.attr({ "id": _this.id });
        _this._disposers.push(_this.element);
        // Make elements disposable
        _this._disposers.push(new _utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this._elements));
        // Request again to trigger getter/setter code
        _this.patternUnits = _this.patternUnits;
        _this.width = _this.width;
        _this.height = _this.height;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the pattern.
     */
    Pattern.prototype.draw = function () {
        var _this = this;
        var patternElement = this.element;
        if (patternElement) {
            patternElement.removeChildNodes();
            var background = this.paper.add("rect");
            background.attr({ "width": this.width, "height": this.height, "shape-rendering": "crispEdges", "fill": this.backgroundFill.hex, "fill-opacity": this.backgroundOpacity, "stroke": this.backgroundFill.hex, "stroke-opacity": this.backgroundOpacity });
            patternElement.add(background);
            patternElement.attr({ "x": this.x, "y": this.y, "width": this.width, "height": this.height, "stroke": this.stroke.hex, "fill": this.fill.hex, "fill-opacity": this.fillOpacity, "stroke-opacity": this.strokeOpacity, "stroke-width": this.strokeWidth, "shape-rendering": this.shapeRendering, "patternUnits": this.patternUnits });
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._elements.iterator(), function (element) {
                element.rotation = _this.rotation;
                _this.element.add(element);
            });
        }
    };
    /**
     * Animate pattern properties.
     *
     * @see {@link Animation}
     * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options
     * @param  {number}                                   duration          Duration (ms)
     * @param  {(number) => number}                       easing            Easing function
     * @return {Animation}                                                  Animation instance
     */
    Pattern.prototype.animate = function (animationOptions, duration, easing) {
        return new _utils_Animation__WEBPACK_IMPORTED_MODULE_4__["Animation"](this, animationOptions, duration, easing).start();
    };
    /**
     * Adds an element to the pattern.
     *
     * @param {AMElement}  element  Element
     */
    Pattern.prototype.addElement = function (element) {
        this._elements.push(element);
        this._disposers.push(element);
    };
    /**
     * Remove an element from the pattern.
     *
     * @param {AMElement}  element  Element
     */
    Pattern.prototype.removeElement = function (element) {
        this._elements.removeValue(element);
        this.removeDispose(element);
    };
    Object.defineProperty(Pattern.prototype, "elements", {
        /**
         * Returns the list of SVG elements comprising the pattern.
         *
         * @return {List<AMElement>} Pattern elements
         */
        get: function () {
            return this._elements;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "fillOpacity", {
        /**
         * @return {number} Opacity (0-1)
         */
        get: function () {
            return this.properties["fillOpacity"];
        },
        /**
         * Pattern fill opacity. (0-1)
         *
         * @param {number}  value  Opacity (0-1)
         */
        set: function (value) {
            this.properties["fillOpacity"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "fill", {
        /**
         * @return {Color} Fill color
         */
        get: function () {
            return this.properties["fill"];
        },
        /**
         * Fill color of the pattern.
         *
         * @param {Color}  value  Fill color
         */
        set: function (value) {
            this.properties["fill"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "backgroundFill", {
        /**
         * @return {Color} Background color
         */
        get: function () {
            return this.properties["backgroundFill"];
        },
        /**
         * Pattern background fill color.
         *
         * @param {Color}  value  Background color
         */
        set: function (value) {
            this.properties["backgroundFill"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "backgroundOpacity", {
        /**
         * @return {number} Background opacity (0-1)
         */
        get: function () {
            return this.properties["backgroundOpacity"];
        },
        /**
         * Pattern backgorund opacity. (0-1)
         *
         * @param {number}  value  Background opacity (0-1)
         */
        set: function (value) {
            this.properties["backgroundOpacity"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "stroke", {
        /**
         * @return {Color} Color
         */
        get: function () {
            return this.properties["stroke"];
        },
        /**
         * Pattern stroke (border) color.
         *
         * @param {Color}  value  Color
         */
        set: function (value) {
            this.properties["stroke"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "strokeOpacity", {
        /**
         * @return {number} Opacity (0-1)
         */
        get: function () {
            return this.properties["strokeOpacity"];
        },
        /**
         * Pattern stroke opacity. (0-1)
         *
         * @param {number}  value  Opacity (0-1)
         */
        set: function (value) {
            this.properties["strokeOpacity"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "strokeWidth", {
        /**
         * @return {number} Stroke thickness (px)
         */
        get: function () {
            return this.properties["strokeWidth"];
        },
        /**
         * Pattern stroke thickness in pixels.
         *
         * @param {number}  value  Stroke thickness (px)
         */
        set: function (value) {
            this.properties["strokeWidth"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "shapeRendering", {
        get: function () {
            return this.properties["shapeRendering"];
        },
        /**
         * Shape rendering
         * @param {ShapeRendering} value [description]
         */
        set: function (value) {
            this.properties["shapeRendering"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "rotation", {
        /**
         * @return {number} Rotation
         */
        get: function () {
            return this.properties["rotation"];
        },
        /**
         * Pattern rotation in degrees.
         *
         * @param {number}  value  Rotation
         */
        set: function (value) {
            this.properties["rotation"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "patternUnits", {
        /**
         * @return {"userSpaceOnUse" | "objectBoundingBox"} Units
         */
        get: function () {
            return this.properties["patternUnits"];
        },
        /**
         * Pattern measuring units.
         *
         * Available options: "userSpaceOnUse" | "objectBoundingBox".
         *
         * @param {"userSpaceOnUse" | "objectBoundingBox"}  value  Units
         */
        set: function (value) {
            this.properties["patternUnits"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "width", {
        /**
         * @return {number} Width (px)
         */
        get: function () {
            return this.properties["width"];
        },
        /**
         * Pattern width in pixels.
         *
         * @param {number}  value  Width (px)
         */
        set: function (value) {
            this.properties["width"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "height", {
        /**
         * @return {number} Height (px)
         */
        get: function () {
            return this.properties["height"];
        },
        /**
         * Pattern height in pixels.
         *
         * @param {number} value Height (px)
         */
        set: function (value) {
            this.properties["height"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "x", {
        /**
         * @return {number} X (px)
         */
        get: function () {
            return this.properties["x"];
        },
        /**
         * X position. (pixels)
         *
         * @param {number} value X (px)
         */
        set: function (value) {
            this.properties["x"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "y", {
        /**
         * @return {number} Y (px)
         */
        get: function () {
            return this.properties["y"];
        },
        /**
         * Y position (px).
         *
         * @param {number} value Y (px)
         */
        set: function (value) {
            this.properties["y"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Pattern.prototype, "paper", {
        /**
         * @ignore Exclude from docs
         * @return {Paper} Paper
         */
        get: function () {
            if (this._paper) {
                return this._paper;
            }
            return Object(_Paper__WEBPACK_IMPORTED_MODULE_2__["getGhostPaper"])();
        },
        /**
         * [[Paper]] instance to draw pattern in.
         *
         * @ignore Exclude from docs
         * @param {Paper}  paper  Paper
         */
        set: function (paper) {
            if (this._paper != paper) {
                this._paper = paper;
                this.draw();
                paper.appendDef(this.element);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies properties from another Pattern instance.
     *
     * @param {this}  source  Source pattern
     */
    Pattern.prototype.copyFrom = function (source) {
        var _this = this;
        _super.prototype.copyFrom.call(this, source);
        _utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](source.properties, function (key, value) {
            _this[key] = value;
        });
    };
    Object.defineProperty(Pattern.prototype, "animations", {
        /**
         * A list of animations currently running on the patter.
         *
         * @ignore Exclude from docs
         * @return {Array<Animation>} Animation list
         */
        get: function () {
            if (!this._animations) {
                this._animations = [];
                this._disposers.push(new _utils_Animation__WEBPACK_IMPORTED_MODULE_4__["AnimationDisposer"](this._animations));
            }
            return this._animations;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    Pattern.prototype.processConfig = function (config) {
        if (config) {
            // Set up series
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.elements) && _utils_Type__WEBPACK_IMPORTED_MODULE_9__["isArray"](config.elements)) {
                for (var i = 0, len = config.elements.length; i < len; i++) {
                    var element = config.elements[i];
                    if (_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](element["type"])) {
                        var sprite = this.createEntryInstance(element);
                        if (sprite instanceof _Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]) {
                            sprite.config = element;
                        }
                        this.addElement(_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](element["typeProperty"])
                            ? sprite[element["typeProperty"]]
                            : sprite.element);
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return Pattern;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["Pattern"] = Pattern;
//# sourceMappingURL=Pattern.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js ***!
  \*******************************************************************************************/
/*! exports provided: RadialGradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return RadialGradient; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _Paper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Contains code and logic for generating radial gradients.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Radial gradient class.
 */
var RadialGradient = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RadialGradient, _super);
    /**
     * Constructor
     */
    function RadialGradient() {
        var _this = _super.call(this) || this;
        /**
         * List of colors switch definitions in a gradient.
         *
         * @type {List<IGradientStop>}
         */
        _this._stops = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        _this.element = _this.paper.addGroup("radialGradient");
        _this.id = "gradient-" + _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getUniqueId();
        _this.element.attr({ "id": _this.id });
        _this._disposers.push(_this.element);
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws gradient.
     */
    RadialGradient.prototype.draw = function () {
        var _this = this;
        var gradientElement = this.element;
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](this.cx)) {
            var value = this.cx;
            if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"]) {
                value = value.percent + "%";
            }
            gradientElement.attr({ "cx": value });
        }
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](this.cy)) {
            var value = this.cy;
            if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"]) {
                value = value.percent + "%";
            }
            gradientElement.attr({ "cy": value });
        }
        if (this.fx) {
            var value = this.fx;
            if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"]) {
                value = value.percent + "%";
            }
            gradientElement.attr({ "fx": value });
        }
        if (this.fy) {
            var value = this.fy;
            if (value instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"]) {
                value = value.percent + "%";
            }
            gradientElement.attr({ "fy": value });
        }
        gradientElement.removeChildNodes();
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["indexed"](this._stops.iterator()), function (a) {
            var i = a[0];
            var stop = a[1];
            var offset = stop.offset;
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](offset)) {
                offset = i / (_this._stops.length - 1);
            }
            var gradientStop = _this.paper.add("stop");
            gradientStop.attr({ "stop-color": stop.color });
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](stop.opacity)) {
                gradientStop.attr({ "stop-opacity": stop.opacity });
            }
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](offset)) {
                gradientStop.attr({ "offset": offset });
            }
            gradientElement.add(gradientStop);
        });
    };
    /**
     * Adds a color step to the gradient.
     *
     * @param {Color}   color    Color (hex code or named color)
     * @param {number}  opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)
     * @param {number}  offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)
     */
    RadialGradient.prototype.addColor = function (color, opacity, offset) {
        this._stops.push({ color: color, opacity: opacity, offset: offset });
        this.draw();
    };
    Object.defineProperty(RadialGradient.prototype, "paper", {
        /**
         * @ignore Exclude from docs
         * @return {Paper} Paper
         */
        get: function () {
            if (this._paper) {
                return this._paper;
            }
            return Object(_Paper__WEBPACK_IMPORTED_MODULE_3__["getGhostPaper"])();
        },
        /**
         * A [[Paper]] instace to use for the gradient.
         *
         * @ignore Exclude from docs
         * @param {Paper}  paper  Paper
         */
        set: function (paper) {
            if (this._paper != paper) {
                this._paper = paper;
                this.draw();
                paper.appendDef(this.element);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadialGradient.prototype, "cx", {
        get: function () {
            return this._cx;
        },
        /**
         * Center x coordinate of the gradient, can be set as number or Percent
         *
         * @param {Optional<number | Percent>}  point  Center point
         */
        set: function (value) {
            this._cx = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadialGradient.prototype, "cy", {
        get: function () {
            return this._cy;
        },
        /**
         * Center y coordinate of the gradient, can be set as number or Percent
         *
         * @param {Optional<number | Percent>}  point  Center point
         */
        set: function (value) {
            this._cy = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadialGradient.prototype, "fx", {
        get: function () {
            return this._fx;
        },
        /**
         * y coordinate of the focal point of a gradient, can be set in pixels or as Percent
         *
         * @param {Optional<number | Percent>}  point  Center point
         */
        set: function (value) {
            this._fx = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadialGradient.prototype, "fy", {
        get: function () {
            return this._fy;
        },
        /**
         * y coordinate of the focal point of a gradient, can be set in pixels or as Percent
         *
         * @param {Optional<number | Percent>}  point  Center point
         */
        set: function (value) {
            this._fy = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    RadialGradient.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.stops.copyFrom(source.stops);
        this.cx = source.cx;
        this.cy = source.cy;
        this.fx = source.fx;
        this.fy = source.fy;
    };
    Object.defineProperty(RadialGradient.prototype, "stops", {
        /**
         * A list of color stops in the gradient.
         *
         * @return {List<IGradientStop>} Stops
         */
        get: function () {
            return this._stops;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Clears the gradient.
     *
     * @ignore Exclude from docs
     */
    RadialGradient.prototype.clear = function () {
        this._stops.clear();
    };
    return RadialGradient;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["RadialGradient"] = RadialGradient;
//# sourceMappingURL=RadialGradient.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradientModifier.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradientModifier.js ***!
  \***************************************************************************************************/
/*! exports provided: RadialGradientModifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadialGradientModifier", function() { return RadialGradientModifier; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _RadialGradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RadialGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js");
/* harmony import */ var _GradientModifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GradientModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/GradientModifier.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class can be used to modify radial gradient steps, changing visual
 * properties like lightness, brightness, opacity of each set.
 *
 * It can also set offsets for each gradient step.
 *
 * E.g. if I want to fill a columns in a column series to be a solid fill from
 * top to 80% of height, then gradually fades out, I can use the following
 * gradient modifier as a `fillModifier`:
 *
 * ```TypeScript
 * let fillModifier = new am4core.LinearGradientModifier();
 * fillModifier.opacities = [1, 1, 0];
 * fillModifier.offsets = [0, 0.8, 1];
 * columnSeries.columns.template.fillModifier = fillModifier;
 * ```
 * ```JavaScript
 * var fillModifier = new am4core.LinearGradientModifier();
 * fillModifier.opacities = [1, 1, 0];
 * fillModifier.offsets = [0, 0.8, 1];
 * columnSeries.columns.template.fillModifier = fillModifier;
 * ```
 * ```JSON
 * "series": [{
 *   "type": "ColumnSeries",
 *   "columns": {
 *     "fillModifier": {
 *       "type": "LinearGradientModifier",
 *       "opacities": [1, 1, 0],
 *       "offsets": [0, 0.8, 1]
 *     }
 *   }
 * }]
 * ```
 */
var RadialGradientModifier = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RadialGradientModifier, _super);
    /**
     * Constructor.
     */
    function RadialGradientModifier() {
        var _this = _super.call(this) || this;
        _this.className = "RadialGradientModifier";
        _this.gradient = new _RadialGradient__WEBPACK_IMPORTED_MODULE_1__["RadialGradient"]();
        _this.applyTheme();
        return _this;
    }
    RadialGradientModifier.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.gradient = source.gradient.clone();
    };
    return RadialGradientModifier;
}(_GradientModifier__WEBPACK_IMPORTED_MODULE_2__["GradientModifier"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["RadialGradientModifier"] = RadialGradientModifier;
//# sourceMappingURL=RadialGradientModifier.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js ***!
  \****************************************************************************************/
/*! exports provided: RectPattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectPattern", function() { return RectPattern; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Pattern__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Pattern */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Rectangular pattern module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Rectangular pattern
 */
var RectPattern = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RectPattern, _super);
    /**
     * Constructor
     */
    function RectPattern() {
        var _this = _super.call(this) || this;
        _this.rectHeight = 1;
        _this.rectWidth = 1;
        return _this;
    }
    /**
     * Draws the rectangular element.
     */
    RectPattern.prototype.draw = function () {
        if (this._rect) {
            this.removeElement(this._rect);
        }
        this._rect = this.paper.add("rect");
        this._rect.attr({ "width": this.rectWidth, "height": this.rectHeight });
        this.addElement(this._rect);
        _super.prototype.draw.call(this);
    };
    Object.defineProperty(RectPattern.prototype, "rectWidth", {
        /**
         * @return {number} Width (px)
         */
        get: function () {
            return this.properties["rectWidth"];
        },
        /**
         * Rectangle width in pixels.
         *
         * @param {number} value Width (px)
         */
        set: function (value) {
            this.properties["rectWidth"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RectPattern.prototype, "rectHeight", {
        /**
         * @return {number} Height (px)
         */
        get: function () {
            return this.properties["rectHeight"];
        },
        /**
         * Rectangle height in pixels.
         *
         * @param {number} value Height (px)
         */
        set: function (value) {
            this.properties["rectHeight"] = value;
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    return RectPattern;
}(_Pattern__WEBPACK_IMPORTED_MODULE_1__["Pattern"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["RectPattern"] = RectPattern;
//# sourceMappingURL=RectPattern.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/BlurFilter.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/BlurFilter.js ***!
  \*****************************************************************************************/
/*! exports provided: BlurFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlurFilter", function() { return BlurFilter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module for "Blur" filter.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a "Blur" filter.
 */
var BlurFilter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BlurFilter, _super);
    /**
     * Constructor
     */
    function BlurFilter() {
        var _this = _super.call(this) || this;
        _this.className = "BlurFilter";
        // Create elements
        // NOTE: we do not need to add each individual element to `_disposers`
        // because `filterPrimitives` has an event handler which automatically adds
        // anything added to it to `_disposers`
        _this.feGaussianBlur = _this.paper.add("feGaussianBlur");
        _this.feGaussianBlur.attr({ "result": "blurOut", "in": "SourceGraphic" });
        _this.filterPrimitives.push(_this.feGaussianBlur);
        // Set default properties
        _this.width = 200;
        _this.height = 200;
        _this.blur = 1.5;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(BlurFilter.prototype, "blur", {
        /**
         * @return {number} Blur
         */
        get: function () {
            return this.properties.blur;
        },
        /**
         * Blur value.
         *
         * The bigger the value, the blurrier the target element will become.
         *
         * @default 1.5
         * @param {number} value Blur
         */
        set: function (value) {
            this.properties.blur = value;
            this.feGaussianBlur.attr({ "stdDeviation": value / this.scale });
        },
        enumerable: true,
        configurable: true
    });
    return BlurFilter;
}(_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["BlurFilter"] = BlurFilter;
//# sourceMappingURL=BlurFilter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/ColorizeFilter.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/ColorizeFilter.js ***!
  \*********************************************************************************************/
/*! exports provided: ColorizeFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorizeFilter", function() { return ColorizeFilter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module for "Colorize" filter.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a "Colorize" filter.
 */
var ColorizeFilter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ColorizeFilter, _super);
    /**
     * Constructor
     */
    function ColorizeFilter() {
        var _this = _super.call(this) || this;
        _this.className = "ColorizeFilter";
        // Create elements
        // NOTE: we do not need to add each individual element to `_disposers`
        // because `filterPrimitives` has an event handler which automatically adds
        // anything added to it to `_disposers`
        _this.feColorMatrix = _this.paper.add("feColorMatrix");
        _this.feColorMatrix.attr({ "type": "matrix" });
        //this.feColorMatrix.setAttribute("in", "SourceAlpha");
        _this.filterPrimitives.push(_this.feColorMatrix);
        // Set default properties
        _this.intensity = 1;
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)applies colors to the already existing filter by modifying filyer's
     * color matrix element.
     *
     * @ignore Exclude from docs
     */
    ColorizeFilter.prototype.applyFilter = function () {
        var i = this.intensity;
        var ii = 1 - i;
        var r;
        var g;
        var b;
        var color = this.color;
        if (color && color.rgb) {
            r = color.rgb.r / 255 * i;
            g = color.rgb.g / 255 * i;
            b = color.rgb.b / 255 * i;
        }
        else {
            r = 0;
            g = 0;
            b = 0;
        }
        this.feColorMatrix.attr({ "values": ii + " 0 0 0 " + r + " 0 " + ii + " 0 0 " + g + " 0 0 " + ii + " 0 " + b + " 0 0 0 1 0" });
    };
    Object.defineProperty(ColorizeFilter.prototype, "color", {
        /**
         * @return {Color} Color
         */
        get: function () {
            return this.properties["color"];
        },
        /**
         * Target color to apply to the element.
         *
         * Depending on the `intensity`, all colors of the target element will steer
         * towards this color.
         *
         * E.g. setting to `am4core.color("greener")` will make all colors greener.
         *
         * @param {Color}  value  Color
         */
        set: function (value) {
            this.properties["color"] = value;
            this.applyFilter();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorizeFilter.prototype, "intensity", {
        /**
         * @return {number} Intensity (0-1)
         */
        get: function () {
            return this.properties.intensity;
        },
        /**
         * Intensity of the color (0-1).
         *
         * The bigger the number the more of a `color` target's colors will become.
         *
         * 0 means the colors will remain as they are.
         * 1 means all colors will become the target `color`.
         *
         * @default 1
         * @param {number}  value  Intensity (0-1)
         */
        set: function (value) {
            this.properties.intensity = value;
            this.applyFilter();
        },
        enumerable: true,
        configurable: true
    });
    return ColorizeFilter;
}(_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["ColorizeFilter"] = ColorizeFilter;
//# sourceMappingURL=ColorizeFilter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DesaturateFilter.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DesaturateFilter.js ***!
  \***********************************************************************************************/
/*! exports provided: DesaturateFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DesaturateFilter", function() { return DesaturateFilter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module for "Desaturate" filter.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creats a "Desaturate" filter
 */
var DesaturateFilter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DesaturateFilter, _super);
    /**
     * Constructor
     */
    function DesaturateFilter() {
        var _this = _super.call(this) || this;
        _this.className = "DesaturateFilter";
        // Create elements
        // NOTE: we do not need to add each individual element to `_disposers`
        // because `filterPrimitives` has an event handler which automatically adds
        // anything added to it to `_disposers`
        _this.feColorMatrix = _this.paper.add("feColorMatrix");
        _this.feColorMatrix.attr({ "type": "saturate" });
        _this.filterPrimitives.push(_this.feColorMatrix);
        // Set default properties
        _this.width = 120;
        _this.height = 120;
        _this.saturation = 0;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(DesaturateFilter.prototype, "saturation", {
        /**
         * @return {number} Saturation (0-1)
         */
        get: function () {
            return this.properties["saturation"];
        },
        /**
         * Saturation.
         *
         * 0 - completely desaturated.
         * 1 - fully saturated (gray).
         *
         * @param {number}  value  Saturation (0-1)
         */
        set: function (value) {
            this.properties["saturation"] = value;
            this.feColorMatrix.attr({ "values": value.toString() });
        },
        enumerable: true,
        configurable: true
    });
    return DesaturateFilter;
}(_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["DesaturateFilter"] = DesaturateFilter;
//# sourceMappingURL=DesaturateFilter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DropShadowFilter.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DropShadowFilter.js ***!
  \***********************************************************************************************/
/*! exports provided: DropShadowFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropShadowFilter", function() { return DropShadowFilter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module for "Drop Shadow" filter.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creats a "Drop Shadow" filter.
 */
var DropShadowFilter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DropShadowFilter, _super);
    /**
     * Constructor
     */
    function DropShadowFilter() {
        var _this = _super.call(this) || this;
        _this.className = "DropShadowFilter";
        // Create elements
        // NOTE: we do not need to add each individual element to `_disposers`
        // because `filterPrimitives` has an event handler which automatically adds
        // anything added to it to `_disposers`
        _this.color = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#000");
        _this.feGaussianBlur = _this.paper.add("feGaussianBlur");
        _this.feGaussianBlur.attr({ "result": "blurOut", "in": "SourceGraphic" });
        _this.filterPrimitives.push(_this.feGaussianBlur);
        _this.feOffset = _this.paper.add("feOffset");
        _this.feOffset.attr({ "result": "offsetBlur" });
        _this.filterPrimitives.push(_this.feOffset);
        _this.feFlood = _this.paper.add("feFlood");
        _this.feFlood.attr({ "flood-color": _this.color });
        _this.filterPrimitives.push(_this.feFlood);
        _this.feComposite = _this.paper.add("feComposite");
        _this.feComposite.attr({ "in2": "offsetBlur", operator: "in" });
        _this.filterPrimitives.push(_this.feComposite);
        _this.feMerge = _this.paper.addGroup("feMerge");
        _this.feMerge.add(_this.paper.add("feMergeNode"));
        _this.feMerge.add(_this.paper.add("feMergeNode").attr({ "in": "SourceGraphic" }));
        _this.filterPrimitives.push(_this.feMerge);
        // Set default properties
        _this.width = 200;
        _this.height = 200;
        _this.blur = 1.5;
        _this.dx = 3;
        _this.dy = 3;
        _this.opacity = 0.5;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(DropShadowFilter.prototype, "color", {
        /**
         * @return {Color} Color
         */
        get: function () {
            return this.properties.color;
        },
        /**
         * Shadow color.
         *
         * @param {Color}  value  Color
         */
        set: function (value) {
            this.properties.color = value;
            if (this.feFlood) {
                this.feFlood.attr({ "flood-color": value });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropShadowFilter.prototype, "opacity", {
        /**
         * @return {number} Opacity (0-1)
         */
        get: function () {
            return this.properties.opacity;
        },
        /**
         * Opacity of the shadow. (0-1)
         *
         * @param {number}  value  Opacity (0-1)
         */
        set: function (value) {
            this.properties.opacity = value;
            this.feFlood.attr({ "flood-opacity": value });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropShadowFilter.prototype, "dx", {
        /**
         * @return {number} Horizontal offset (px)
         */
        get: function () {
            return this.properties.dx;
        },
        /**
         * Horizontal offset in pixels.
         *
         * @param {number}  value  Horizontal offset (px)
         */
        set: function (value) {
            this.properties.dx = value;
            this.feOffset.attr({ "dx": value / this.scale });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropShadowFilter.prototype, "dy", {
        /**
         * @return {number} Vertical offset (px)
         */
        get: function () {
            return this.properties.dy;
        },
        /**
         * Vertical offset in pixels.
         *
         * @param {number} value Vertical offset (px)
         */
        set: function (value) {
            this.properties.dy = value;
            this.feOffset.attr({ "dy": value / this.scale });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropShadowFilter.prototype, "blur", {
        /**
         * @return {number} Blur
         */
        get: function () {
            return this.properties.blur;
        },
        /**
         * Blur.
         *
         * @param {number}  value  Blur
         */
        set: function (value) {
            this.properties.blur = value;
            this.feGaussianBlur.attr({ "stdDeviation": value / this.scale });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [updateScale description]
     *
     * @todo Description
     */
    DropShadowFilter.prototype.updateScale = function () {
        this.dx = this.dx;
        this.dy = this.dy;
        this.blur = this.blur;
    };
    return DropShadowFilter;
}(_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["DropShadowFilter"] = DropShadowFilter;
//# sourceMappingURL=DropShadowFilter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js ***!
  \*************************************************************************************/
/*! exports provided: Filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return Filter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Paper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/**
 * This module contains a base class for an SVG filter.
 *
 * Filters can be used to decorate, change and transform just about any DOM
 * element.
 *
 * A Filter works by applying one or more effects (primitives) to SVG element.
 *
 * For more information on how SVG filters work, refer to
 * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






;
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base filter class.
 *
 * This class while can be instantiated will not do anything. It is just a base
 * functionality for any other "real" filters to extend.
 *
 * Filters can be used to decorate, change and transform just about any DOM
 * element.
 *
 * A Filter works by applying one or more effects (primitives) to SVG element.
 *
 * For more information on how SVG filters work, refer to
 * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).
 *
 * @todo Example
 */
var Filter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Filter, _super);
    /**
     * Constructor
     */
    function Filter() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A storage for Filter property/value pairs.
         *
         * @ignore Exclude from docs
         * @see {@link FilterProperties}
         * @type {FilterProperties}
         */
        _this.properties = {};
        /**
         * Identifies if this object is a "template" and should not be treated as
         * real object that is drawn or actually used in the chart.
         *
         * @type {boolean}
         */
        _this.isTemplate = false;
        /**
         * [_scale description]
         *
         * @todo Description
         * @type {number}
         */
        _this._scale = 1;
        /**
         * [_nonScaling description]
         *
         * @todo Description
         * @type {boolean}
         */
        _this._nonScaling = true;
        _this.className = "Filter";
        // Create a list to hold primitives (effect elements)
        _this.filterPrimitives = new _utils_List__WEBPACK_IMPORTED_MODULE_4__["List"]();
        // Automatically add added primitives to `_disposers` so they are discarded
        // when Filter object is destroyed (disposed)
        _this.filterPrimitives.events.on("inserted", function (ev) {
            _this._disposers.push(ev.newValue);
        });
        // Set default dimensions
        _this.width = 120;
        _this.height = 120;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Appends actual filter elements to the filter group.
     *
     * @ignore Exclude from docs
     * @param {Group} filterElement An SVG `<group>` element to add filter element to
     */
    Filter.prototype.appendPrimitives = function (filterElement) {
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["each"](this.filterPrimitives.iterator(), function (filterPrimitive) {
            filterElement.add(filterPrimitive);
        });
    };
    /**
     * Uses Transitions filter's values from current to target. This is used to
     * smoothly appear filter, rather than it pop into effect.
     *
     * @ignore Exclude from docs
     * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options
     * @param  {number}                                   duration          Duration in milliseconds
     * @param  {(number) => number}                       easing            Easing function
     * @return {Animation}                                                  Animation instance
     */
    Filter.prototype.animate = function (animationOptions, duration, easing) {
        var animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_3__["Animation"](this, animationOptions, duration, easing).start();
        return animation;
    };
    Object.defineProperty(Filter.prototype, "width", {
        /**
         * @return {number} Width (%)
         */
        get: function () {
            return this.properties["width"];
        },
        /**
         * Width of the filter element in percent.
         *
         * If the filter is designed to "bleed out" of the original target element,
         * like for example a shadow, you need this bigger than 100, or the
         * non-fitting parts will be clipped.
         *
         * @default 120
         * @param {number} value Width (px)
         */
        set: function (value) {
            this.properties["width"] = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Filter.prototype, "height", {
        /**
         * @return {number} Height
         */
        get: function () {
            return this.properties["height"];
        },
        /**
         * Height of the filter element in percent.
         *
         * If the filter is designed to "bleed out" of the original target element,
         * like for example a shadow, you need this bigger than 100, or the
         * non-fitting parts will be clipped.
         *
         * @default 120
         * @param {number} value Height (%)
         */
        set: function (value) {
            this.properties["height"] = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies properties from another [[Filter]] object.
     *
     * @param {Filter} filter Source [[Filter]] object
     */
    Filter.prototype.copyFrom = function (filter) {
        var _this = this;
        _super.prototype.copyFrom.call(this, filter);
        _utils_Object__WEBPACK_IMPORTED_MODULE_5__["each"](filter.properties, function (key, value) {
            _this[key] = value;
        });
    };
    Object.defineProperty(Filter.prototype, "paper", {
        /**
         * @return {Paper} Paper
         */
        get: function () {
            if (this._paper) {
                return this._paper;
            }
            return Object(_Paper__WEBPACK_IMPORTED_MODULE_2__["getGhostPaper"])();
        },
        /**
         * Sets [[Paper]] instance to create filter's elements in.
         *
         * @ignore Exclude from docs
         * @param {Paper}  paper  Paper
         */
        set: function (paper) {
            if (this._paper != paper) {
                this._paper = paper;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Filter.prototype, "animations", {
        /**
         * All animations currently in play.
         *
         * @ignore Exclude from docs
         * @return {Array<Animation>} List of animations
         */
        get: function () {
            if (!this._animations) {
                this._animations = [];
                this._disposers.push(new _utils_Animation__WEBPACK_IMPORTED_MODULE_3__["AnimationDisposer"](this._animations));
            }
            return this._animations;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Filter.prototype, "scale", {
        /**
         * @ignore Exclude from docs
         */
        get: function () {
            return this._scale;
        },
        /**
         * [[Sprite]] uses this method to inform filter about it's scale.
         *
         * @ignore Exclude from docs
         */
        set: function (value) {
            this._scale = value;
            this.updateScale();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates filter properties which depend on scale.
     *
     * @ignore Exclude from docs
     */
    Filter.prototype.updateScale = function () {
        // Dummy method for extending classes to override.
    };
    Object.defineProperty(Filter.prototype, "nonScaling", {
        /**
         * @return {boolean} Non scaling?
         */
        get: function () {
            return this._nonScaling;
        },
        /**
         * If a filter is non scaling, it will look the same even if the sprite is
         * scaled, otherwise filter will scale together with a [[Sprite]].
         *
         * @default false
         * @param {boolean}  value  Non scaling?
         */
        set: function (value) {
            this._nonScaling = value;
            if (!value) {
                this._scale = 1;
            }
            this.updateScale();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Filter.prototype, "sprite", {
        /**
         * A target element this filter is currently attached to.
         *
         * We need to keep track of it because one filter can be used for just one
         * element, so we have to remove it from the old "parent" when attaching to
         * the new one.
         *
         * @ignore Exclude from docs
         * @param {Sprite}  value  Target element
         */
        set: function (value) {
            this.setSprite(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets filter's target element.
     *
     * @ignore Exclude from docs
     * @param {Sprite}  value  Element filter is being attached to
     */
    Filter.prototype.setSprite = function (value) {
        if (this._sprite && this._sprite != value) {
            this._sprite.filters.removeValue(this);
        }
        this._sprite = value;
    };
    return Filter;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

//# sourceMappingURL=Filter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/FocusFilter.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/FocusFilter.js ***!
  \******************************************************************************************/
/*! exports provided: FocusFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusFilter", function() { return FocusFilter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony import */ var _utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Module for "Focus" filter.
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a "Focus" filter.
 */
var FocusFilter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FocusFilter, _super);
    /**
     * Constructor
     */
    function FocusFilter() {
        var _this = _super.call(this) || this;
        _this.className = "FocusFilter";
        // Create elements
        // NOTE: we do not need to add each individual element to `_disposers`
        // because `filterPrimitives` has an event handler which automatically adds
        // anything added to it to `_disposers`
        _this.feFlood = _this.paper.add("feFlood");
        _this.feFlood.attr({ "flood-color": new _utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_2__["InterfaceColorSet"]().getFor("primaryButtonHover"), "result": "base" });
        _this.filterPrimitives.push(_this.feFlood);
        _this.feMorphology = _this.paper.add("feMorphology");
        _this.feMorphology.attr({ "result": "bigger", "in": "SourceGraphic", "operator": "dilate", "radius": "2" });
        _this.filterPrimitives.push(_this.feMorphology);
        _this.feColorMatrix = _this.paper.add("feColorMatrix");
        _this.feColorMatrix.attr({ "result": "mask", "in": "bigger", "type": "matrix", "values": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" });
        _this.filterPrimitives.push(_this.feColorMatrix);
        _this.feComposite = _this.paper.add("feComposite");
        _this.feComposite.attr({ "result": "drop", "in": "base", "in2": "mask", "operator": "in" });
        _this.filterPrimitives.push(_this.feComposite);
        _this.feBlend = _this.paper.add("feBlend");
        _this.feBlend.attr({ "in": "SourceGraphic", "in2": "drop", "mode": "normal" });
        _this.filterPrimitives.push(_this.feBlend);
        // Set default properties
        _this.width = 130;
        _this.height = 130;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(FocusFilter.prototype, "stroke", {
        /**
         * @return {Optional<Color>} Color
         */
        get: function () {
            return this.properties["stroke"];
        },
        /**
         * Stroke (outline) color.
         *
         * @param {Color}  value  Color
         */
        set: function (value) {
            this.properties["stroke"] = value;
            this.feFlood.attr({ "flood-color": value });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FocusFilter.prototype, "strokeWidth", {
        /**
         * @return {number} Outline thickness (px)
         */
        get: function () {
            return this.properties["strokeWidth"];
        },
        /**
         * Stroke (outline) thickness in pixels.
         *
         * @param {number}  value  Outline thickness (px)
         */
        set: function (value) {
            this.properties["strokeWidth"] = value;
            this.feMorphology.attr({ "radius": value });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FocusFilter.prototype, "opacity", {
        /**
         * @return {number} Outline opacity (0-1)
         */
        get: function () {
            return this.properties["opacity"];
        },
        /**
         * Opacity of the outline. (0-1)
         *
         * @param {number}  value  Outline opacity (0-1)
         */
        set: function (value) {
            this.properties["opacity"] = value;
            this.feColorMatrix.attr({ "values": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 " + value + " 0" });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets filter's target element.
     *
     * In addition it also disables built-in focus outline on element this
     * filter is applied to.
     *
     * @ignore Exclude from docs
     * @param {Sprite}  value  Element filter is being attached to
     */
    FocusFilter.prototype.setSprite = function (value) {
        if (this._sprite && this._sprite != value) {
            this._sprite.group.removeStyle("outline");
        }
        value.group.addStyle({
            "outline": "none"
        });
        _super.prototype.setSprite.call(this, value);
    };
    return FocusFilter;
}(_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]));

//# sourceMappingURL=FocusFilter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/LightenFilter.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/LightenFilter.js ***!
  \********************************************************************************************/
/*! exports provided: LightenFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LightenFilter", function() { return LightenFilter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module for "Lighten" filter.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a "Lighten" filter.
 */
var LightenFilter = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LightenFilter, _super);
    /**
     * Constructor
     */
    function LightenFilter() {
        var _this = _super.call(this) || this;
        _this.className = "LightenFilter";
        // Create elements
        // NOTE: we do not need to add each individual element to `_disposers`
        // because `filterPrimitives` has an event handler which automatically adds
        // anything added to it to `_disposers`
        _this.feColorMatrix = _this.paper.add("feColorMatrix");
        _this.feColorMatrix.attr({ "type": "matrix" });
        _this.filterPrimitives.push(_this.feColorMatrix);
        // Set default properties
        _this.lightness = 0;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(LightenFilter.prototype, "lightness", {
        /**
         * @return {number} Lightness
         */
        get: function () {
            return this.properties["lightness"];
        },
        /**
         * Lightness of the target colors.
         *
         * If `lightness` is a positive number, the filter will make all colors
         * lighter.
         *
         * If `lightness` is negative, colors will be darkened.
         *
         * @param {number}  value  Lightness
         */
        set: function (value) {
            this.properties["lightness"] = value;
            var v = value + 1;
            this.feColorMatrix.attr({ "values": v + " 0 0 0 0 0 " + v + " 0 0 0 0 0 " + v + " 0 0 0 0 0 1 0" });
        },
        enumerable: true,
        configurable: true
    });
    return LightenFilter;
}(_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["LightenFilter"] = LightenFilter;
//# sourceMappingURL=LightenFilter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/responsive/Responsive.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/responsive/Responsive.js ***!
  \**********************************************************************************/
/*! exports provided: Responsive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Responsive", function() { return Responsive; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _utils_Adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Responsive functionality module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Responsive is responsible for overriding certain properties when conditions
 * are met.
 *
 * This class is used to dynamically apply and change certain chart properties
 * based on the current values of properties.
 *
 * Mainly, this is used with [[Sprite]]'s dimensional properties, like
 * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically
 * change any property, based on any other property's value.
 *
 * A default responsive rules are disabled.
 *
 * To enable, set `enabled = false`. E.g.:
 *
 * ```TypeScript
 * chart.responsive.enabled = true;
 * ```
 * ```JavaScript
 * chart.responsive.enabled = true;
 * ```
 *
 * @see {@link IResponsiveEvents} for a list of available events
 * @see {@link IResponsiveAdapters} for a list of available Adapters
 * @todo Add default rules
 * @todo Watch for rule modification
 * @important
 */
var Responsive = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Responsive, _super);
    /**
     * Constructor
     */
    function Responsive() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Holds a list of responsive rules organized by object type.
         *
         * @type {List<IResponsiveRule>}
         */
        _this._rules = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * Holds the list of the default responsive rules.
         *
         * @type {List<IResponsiveRule>}
         */
        _this._defaultRules = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * Holds the list of currently applied rules.
         *
         * @type {object}
         */
        _this._appliedRules = {};
        /**
         * Use default rules in addition to the user-defined ones?
         *
         * @type {Boolean}
         */
        _this._useDefault = true;
        /**
         * Adapter.
         *
         * @type {Adapter<Responsive, IResponsiveAdapters>}
         */
        _this.adapter = new _utils_Adapter__WEBPACK_IMPORTED_MODULE_3__["Adapter"](_this);
        /**
         * Indicates of responsive rules application is enabled.
         *
         * @type {Boolean}
         */
        _this._enabled = false;
        /**
         * Collection of objects and state ids that do not have any properties set.
         *
         * @type {string[]}
         */
        _this._noStates = [];
        _this.className = "Responsive";
        // Set up rules list events
        _this.rules.events.on("inserted", _this.checkRules, true);
        _this.rules.events.on("removed", _this.checkRules, true);
        _this._disposers.push(_this.rules.events);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Responsive.prototype, "component", {
        /**
         * @return {Optional<Component>} Target object
         */
        get: function () {
            return this._component;
        },
        /**
         * A target object that responsive rules will need to be applied to.
         *
         * @param {Optional<Component>}  value  Target object
         */
        set: function (value) {
            // Check if it's the same
            if (value == this._component) {
                return;
            }
            // Check if we already have a set up component and remove its events
            if (this._sizeEventDisposer) {
                this.removeDispose(this._sizeEventDisposer);
            }
            // Set
            this._component = value;
            // Set up resize monitoring events
            this._sizeEventDisposer = _utils_Type__WEBPACK_IMPORTED_MODULE_7__["getValue"](this.component).events.on("sizechanged", this.checkRules, this);
            this._disposers.push(this._sizeEventDisposer);
            // Enable resoponsive
            this.enabled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Responsive.prototype, "enabled", {
        /**
         * @return {boolean} Apply responsive rules?
         */
        get: function () {
            return this.adapter.apply("enabled", this._enabled);
        },
        /**
         * Should responsive rules be checked against and applied?
         *
         * @default false
         * @param {boolean}  value  Apply responsive rules?
         */
        set: function (value) {
            if (this._enabled != value) {
                this._enabled = value;
                // Run `applyRules` so that any currently applied rules can be reset
                this.applyRules();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Responsive.prototype, "useDefault", {
        /**
         * @return {boolean} Use default rules?
         */
        get: function () {
            return this.adapter.apply("useDefault", this._useDefault);
        },
        /**
         * Should default responsive rules be applied in addition to user-defined
         * ones.
         *
         * User-defined rules will take precedence over default rules whenever they
         * produce conflicting settings.
         *
         * @default true
         * @param {boolean}  value  Use default rules?
         */
        set: function (value) {
            if (this._useDefault != value) {
                this._useDefault = true;
                // Run `applyRules` so that any currently applied rules can be reset
                this.applyRules();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Responsive.prototype, "rules", {
        /**
         * @return {List<IResponsiveRule>} User-defined rules
         */
        get: function () {
            return this.adapter.apply("rules", this._rules);
        },
        /**
         * User-defined responsive rules.
         *
         * User-defined rules will take precedence over default rules whenever they
         * produce conflicting settings.
         *
         * Use `allRules` to get all applicable rules including default and
         * user-defined ones.
         *
         * @param {List<IResponsiveRule>}  value  User-defined rules
         */
        set: function (value) {
            this._rules = value;
            this._enabled = true;
            this.applyRules();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Responsive.prototype, "defaultRules", {
        /**
         * Default responsive rules.
         *
         * @readonly
         * @return {List<IResponsiveRule>} List of responsive rules
         */
        get: function () {
            return this.adapter.apply("defaultRules", this._defaultRules);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Responsive.prototype, "allRules", {
        /**
         * Returns all rules: default rules (if not disabled) combined with
         * user-defined ones.
         *
         * @readonly
         * @return {List<IResponsiveRule>} List of all applicable rules
         */
        get: function () {
            // Create empty list
            var rules = new _utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
            // Add default rules if not disabled
            // A code, requesting `allRules` must ensure loading of default rules
            // by calling `loadDefaultRules()`
            if (this.useDefault) {
                rules.copyFrom(this.defaultRules);
            }
            // Add user-defined ones
            rules.copyFrom(this.rules);
            return this.adapter.apply("allRules", rules);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if rule by the particular id currently applied.
     *
     * @param  {string}   ruleId  Rule ID
     * @return {boolean}          Is currently applied?
     */
    Responsive.prototype.isApplied = function (ruleId) {
        var rule = this._appliedRules[ruleId];
        return _utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](rule) ? rule : false;
    };
    /**
     * Checks which responsive rules currently satisfy their conditions and
     * should be applied, or unapplied.
     *
     * @ignore Exclude from docs
     */
    Responsive.prototype.checkRules = function () {
        var _this = this;
        // Check if default rules need to be loaded
        // If needed, we wait until it's loaded and then call `checkRules` again
        if (this.useDefault && this.defaultRules.length == 0) {
            this.loadDefaultRules().then(function (res) {
                _this._defaultRules.setAll(res.default);
                _this.checkRules();
            });
            return;
        }
        // Check if there are any rules
        var rules = this.allRules;
        if (!rules || rules.length == 0) {
            return;
        }
        // Init a list of rules to be applied
        var rulesChanged = false;
        var component = _utils_Type__WEBPACK_IMPORTED_MODULE_7__["getValue"](this.component);
        // Check which rules match
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](rules.iterator(), function (rule) {
            // Check if rule has an id
            if (!rule.id) {
                rule.id = _Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].getUniqueId();
            }
            // Init indicator if this rule should be applied
            var apply = rule.relevant(component);
            // Let's check if this rule needs to be applied
            if ((apply && !_this.isApplied(rule.id)) || (!apply && _this.isApplied(rule.id))) {
                rulesChanged = true;
            }
            _this._appliedRules[rule.id] = apply;
        });
        // Check if we need to re-apply the rules
        if (rulesChanged) {
            this.applyRules();
        }
    };
    /**
     * Applies current rules to the object.
     *
     * @ignore Exclude from docs
     * @param {any} target Target object
     * @todo Better type check
     */
    Responsive.prototype.applyRules = function (target) {
        var _this = this;
        // If no target supplied, we assume the top-level element
        var newTarget = (_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](target)
            ? target
            : _utils_Type__WEBPACK_IMPORTED_MODULE_7__["getValue"](this.component));
        // Check each rule
        var defaultStateApplied = false;
        if (this.enabled) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](this.allRules.iterator(), function (rule) {
                // Get relevant state
                var state = _this.getState(rule, newTarget);
                // If there's a state, it means it needs to be applied
                if (state) {
                    // Check if default state was already applied to this element.
                    // We don't want to go resetting default states to ALL element,
                    // if they don't have responsive states.
                    if (!defaultStateApplied) {
                        // Nope, reset states (instantly).
                        //console.log("Applying default state to " + newTarget.className + " (" + newTarget.uid + "): " + JSON.stringify(newTarget.defaultState.properties));
                        newTarget.applyCurrentState(0);
                        defaultStateApplied = true;
                    }
                    // Is this rule currently applied?
                    if (_this.isApplied(_utils_Type__WEBPACK_IMPORTED_MODULE_7__["getValue"](rule.id))) {
                        // Yes. Apply the responsive state
                        //console.log("Applying state to " + newTarget.className + " (" + newTarget.uid + "): " + JSON.stringify(state.properties));
                        newTarget.setState(state);
                    }
                }
            });
        }
        // Apply rules to the children
        if (newTarget.children) {
            _utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](newTarget.children.iterator(), function (child) {
                _this.applyRules(child);
            });
        }
    };
    /**
     * Applies specific oresponsive overrides to the element.
     *
     * @ignore Exclude from docs
     * @param {IResponsiveRule}  rule    Responsive rule
     * @param {any}              target  Target element
     * @deprecated
     * @hidden
     */
    /*	public applyRule(rule: IResponsiveRule, target: any): void {

            // Construct state id
            //let stateId = "responsive-" + rule.id;

            // Check if we need to create a state for the element
            let state = this.getState(rule, target);

            // Apply the state
            if (state) {
                //if (target.className == "Container" && target.parent.className == "ZoomControl") {
                console.log("Applying state to " + target.className + " (" + target.uid + "): " + JSON.stringify(state.properties));
                //}
                target.setState(state);
            }

        }*/
    /**
     * Returns a relative state for the rule/target, or `undefined` if no state is
     * needed.
     *
     * @param  {IResponsiveRule}  rule    [description]
     * @param  {any}              target  [description]
     * @return {Optional}                 [description]
     */
    Responsive.prototype.getState = function (rule, target) {
        var stateId = "responsive-" + rule.id;
        var tmpId = target.uid + "_" + stateId;
        if (_utils_Array__WEBPACK_IMPORTED_MODULE_6__["indexOf"](this._noStates, tmpId) !== -1) {
            return;
        }
        else if (!target.states.hasKey(stateId)) {
            var state = rule.state(target, stateId);
            if (!state) {
                this._noStates.push(tmpId);
            }
            return state;
        }
        else {
            return target.states.getKey(stateId);
        }
    };
    /**
     * Gets a value from an element.
     *
     * @ignore Exclude from docs
     * @param  {any}     target    Target object
     * @param  {string}  property  Property
     * @return {any}               Property value
     */
    Responsive.prototype.getValue = function (target, property) {
        // This is a bit hacky, first we check if the property exist.
        // If it doesn't we try accessing target's property directly
        var value = target.getPropertyValue(property);
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](value) && _utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](target[property])) {
            value = target[property];
        }
        return value;
    };
    /**
     * Loads default responsive rules.
     *
     * @ignore Exclude from docs
     * @return {Promise<any>} Responsive rules
     */
    Responsive.prototype.loadDefaultRules = function () {
        return __webpack_require__.e(/*! import() | responsivedefaults */ "responsivedefaults").then(__webpack_require__.bind(null, /*! ./ResponsiveDefaults */ "./node_modules/@amcharts/amcharts4/.internal/core/responsive/ResponsiveDefaults.js"));
    };
    return Responsive;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]));

//# sourceMappingURL=Responsive.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js ***!
  \**************************************************************************/
/*! exports provided: GlobalAdapter, globalAdapter, Adapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalAdapter", function() { return GlobalAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "globalAdapter", function() { return globalAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Adapter", function() { return Adapter; });
/* harmony import */ var _SortedList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SortedList */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js");
/* harmony import */ var _Number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony import */ var _Order__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Order */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js");
/* harmony import */ var _utils_Iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * An Adapter can be used to apply chained synchronous transformations to any
 * value at runtime.
 *
 * Each type class using Adapters must have `adapters` property and adapter
 * interface defined.
 *
 * Adapters can be used to allow external code to apply transformations to any
 * value at any time.
 *
 * For example we have a Weather class which has a method `now()` which returns
 * current temperature.
 *
 * ```
 * function now() {
 *   // ... calculate temperature
 *   let temp = "Temperature now is " + degrees + "F";
 *   return temp;
 * }
 * ```
 *
 * Now, supposed we want to let other classes to modify the output of the
 * `now()`? We just apply an adapter to the `temp` before it is returned:
 *
 * ```
 * temp = this.adapters.apply("now", {
 *   temp: temp,
 *   degrees: degrees
 * }).temp;
 * ```
 *
 * Some other class might tap onto it by defining an Adapter that calculates
 * the temperature in Celsius:
 *
 * weather.adapters.add("now", (arg) => {
 *   arg.temp += "(" + farenheitToCelsius(arg.degrees) + "C)";
 *   return arh;
 * });
 *
 * Furthermore some time-related class could add time:
 *
 * weather.adapters.add("now", (arg) => {
 *   arg.temp += "; the time now is " + (new Date().toLocaleString());
 *   return arh;
 * });
 *
 * So without adapters we would get output like this:
 *
 * ```
 * Temperature now is 90F
 * ```
 *
 * With adapters applied we now have:
 *
 * ```
 * Temperature now is 90F (32C); the time now is 12/11/2012, 7:00:00 PM
 * ```
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * GLOBAL ADAPTER
 * ============================================================================
 * @hidden
 */
/**
 * A global adapter is an adpater that is attached to a class type rather than
 * specific object instance.
 *
 * @ignore Exclude from docs
 */
var GlobalAdapter = /** @class */ (function () {
    function GlobalAdapter() {
        /**
         * Callback id iterator.
         *
         * @type {number}
         */
        this._callbackId = 0;
        /**
         * A list of if callbacks (adapters).
         *
         */
        this._callbacks = new _SortedList__WEBPACK_IMPORTED_MODULE_0__["SortedList"](function (left, right) {
            return _Order__WEBPACK_IMPORTED_MODULE_2__["or"](_Number__WEBPACK_IMPORTED_MODULE_1__["order"](left.priority, right.priority), _Number__WEBPACK_IMPORTED_MODULE_1__["order"](left.id, right.id));
        });
    }
    /**
     * Adds a global callback which is not specific to any particular object.
     * Whenever an adapter in any object of the specific class type is invoked
     * global adapters will kick in.
     *
     * @param {any}         type      Class type
     * @param {any}         key       Adapter key
     * @param {any}         callback  Callback function
     * @param {number = 0}  priority  Priority (higher priority meaning adapter will be applied later)
     * @param {any}         scope     Callback function scaope
     */
    GlobalAdapter.prototype.addAll = function (type, key, callback, priority, scope) {
        if (priority === void 0) { priority = 0; }
        this._callbacks.insert({
            id: ++this._callbackId,
            key: key,
            callback: callback,
            priority: priority,
            scope: scope,
            type: type
        });
    };
    /**
     * Returns if there are adapters for specific type available.
     *
     * @param  {Target}   type  Adapter type
     * @param  {Key}      key   Adapter key
     * @return {boolean}
     */
    GlobalAdapter.prototype.isEnabled = function (type, key) {
        // TODO check the type and key
        return this._callbacks.length > 0;
    };
    /**
     * Applies global adapters for the object of the specific type.
     *
     * @param {any}  type   Class type
     * @param {any}  key    Adapter key
     * @param {any}  value  Value
     */
    GlobalAdapter.prototype.applyAll = function (type, key, value) {
        // This is needed to improve the performance and reduce garbage collection
        var callbacks = this._callbacks.values;
        var length = callbacks.length;
        if (length == 0) {
            return value;
        }
        // Cycle through all callbacks and find the ones we need to use
        for (var i = 0; i < length; ++i) {
            var item = callbacks[i];
            if (item.key === key && type instanceof item.type) {
                value = item.callback.call(item.scope, value, type, key);
            }
        }
        return value;
    };
    return GlobalAdapter;
}());

/**
 * A global Adapter for plugins that want to add specific
 * functionality for any chart, not just specific instance.
 *
 * If you want to add an adapter which applies to all instances of the same
 * object type, like, for instance all slices in PieSeries, you can use
 * global adapter.
 *
 * Global adapter is a system-wide instance, accessible via `globalAdapter`.
 *
 * ```TypeScript
 * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, "fill">(am4charts.PieSeries, "fill", (value, target, key) => {
 *   return am4core.color("#005500");
 * });
 * ```
 * ```JavaScript
 * am4core.globalAdapter.addAll(am4charts.PieSeries, "fill", (value, target, key) => {
 *   return am4core.color("#005500");
 * });
 * ```
 *
 * @todo Description (improve)
 */
var globalAdapter = new GlobalAdapter();
/**
 * ============================================================================
 * REGULAR ADAPTER
 * ============================================================================
 * @hidden
 */
/**
 * Adapter allows adding ordered callback functions and associating them with a
 * string-based key. An Adapter user can then easily invoke those callbacks to
 * apply custom functions on its input, output or intermediate values.
 *
 * Custom code and plugins can add their own callbacks to modify and enhance
 * core functionality.
 *
 * See the description of `add()` for an example.
 *
 * Almost any object in amCharts4 has own adapter, accessible with `adapter`
 * property.
 *
 * Any adapters added to it will be applied to that object only.
 *
 * ### Global Adapters
 *
 * If you want to add an adapter which applies to all instances of the same
 * object type, like, for instance all slices in PieSeries, you can use
 * global adapter.
 *
 * Global adapter is a system-wide instance, accessible via `globalAdapter`.
 *
 * ```TypeScript
 * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, "fill">(am4charts.PieSeries. "fill", (value, target, key) => {
 *   return am4core.color("#005500");
 * });
 * ```
 * ```JavaScript
 * am4core.globalAdapter.addAll(am4charts.PieSeries. "fill", (value, target, key) => {
 *   return am4core.color("#005500");
 * });
 * ```
 *
 * {@link https://www.amcharts.com/docs/v4/reference/adapter_module/#globalAdapter_property More info}.
 *
 * @important
 */
var Adapter = /** @class */ (function () {
    /**
     * Constructor, sets the object referece this Adapter should be used for.
     *
     * @param {T} c Object
     */
    function Adapter(c) {
        /**
         * Internal counter for callback ids.
         *
         * @type {number}
         */
        this._callbackId = 0;
        /**
         * A list of adapter callbacks.
         *
         * @param {[type]} $number.order(left.priority, right.priority) [description]
         * @param {[type]} $number.order(left.id,       right.id));	}  [description]
         */
        this._callbacks = new _SortedList__WEBPACK_IMPORTED_MODULE_0__["SortedList"](function (left, right) {
            return _Order__WEBPACK_IMPORTED_MODULE_2__["or"](_Number__WEBPACK_IMPORTED_MODULE_1__["order"](left.priority, right.priority), _Number__WEBPACK_IMPORTED_MODULE_1__["order"](left.id, right.id));
        });
        this.object = c;
        // TODO this exposes the internal events
        this.events = this._callbacks.events;
    }
    /**
     * Adds a callback for a specific key.
     *
     * ```TypeScript
     * // Override fill color value and make all slices green
     * chart.series.template.adapter.add("fill", (value, target, key) => {
     *   return am4core.color("#005500");
     * });
     * ```
     * ```JavaScript
     * // Override fill color value and make all slices green
     * chart.series.template.adapter.add("fill", function(value, target, key) {
     *   return am4core.color("#005500");
     * });
     * ```
     * ```JSON
     * {
     *   // ...
     *   "series": [{
     *     // ...
     *     "adapter": {
     *     	// Override fill color value and make all slices green
     *     	"fill": function(value, target, key) {
     *     	  return am4core.color("#005500");
     *     	}
     *     }
     *   }]
     * }
     * ```
     *
     * The above will call user-defined function (adapter) whenever `fill` value
     * is requested from the Pie series, allowing it to override the default
     * using custom code and any fuzzy logic.
     *
     * There can be any number of adapters set on one property key.
     *
     * In this case adapters will be applied in daisy-chain fashion. The first
     * adapter in queue will make its transformation. The next one will have
     * the output of the first adapter as a starting value, etc.
     *
     * The order of the adapters are determined either by the order they were
     * added in, or their `priority` value.
     *
     * The heigher the `priority`, the later in the game adapter will be applied.
     *
     * @param {string}         key       Key
     * @param {any[]) => any}  callback  A callback function
     * @param {number}         priority  The higher priority, the more chance the adapter will be applied last
     * @param {any}            scope     Scope for the callback function
     */
    Adapter.prototype.add = function (key, callback, priority, scope) {
        if (priority === void 0) { priority = 0; }
        this._callbacks.insert({
            id: ++this._callbackId,
            key: key,
            callback: callback,
            priority: priority,
            scope: scope
        });
    };
    /**
     * Checks whether specific adapter is already set.
     *
     * @param   {string}         key       Key
     * @param   {any[]) => any}  callback  A callback function
     * @param   {number}         priority  The higher priority, the more chance the adapter will be applied last
     * @param   {any}            scope     Scope for the callback function
     * @returns                            Adapter set?
     */
    Adapter.prototype.has = function (key, callback, priority, scope) {
        if (priority === void 0) { priority = 0; }
        // @todo Implement actual check
        return false;
    };
    /**
     * Removes adapter callbacks for the specific `key`.
     *
     * If `priority` is specified, only callbacks for that priority are removed.
     *
     * @param {string} key      Key
     * @param {number} priority Priority
     * @todo Implement
     */
    Adapter.prototype.remove = function (key, priority) {
        var _this = this;
        // It has to make a copy because it removes the elements while iterating
        // TODO inefficient
        _utils_Array__WEBPACK_IMPORTED_MODULE_4__["each"](_utils_Iterator__WEBPACK_IMPORTED_MODULE_3__["toArray"](this._callbacks.iterator()), function (item) {
            // TODO test this
            if (item.key === key && (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](priority) || priority === item.priority)) {
                _this._callbacks.remove(item);
            }
        });
    };
    /**
     * Returns if there are any adapters set for the specific `key`.
     *
     * @returns {boolean} Are there any adapters for the key?
     */
    Adapter.prototype.isEnabled = function (key) {
        // TODO check the key
        return this._callbacks.length > 0 || globalAdapter.isEnabled(this.object, key);
    };
    /**
     * Passes the input value through all the callbacks for the defined `key`.
     *
     * @param  {string}  key      Key
     * @param  {any}     value    Input value
     * @param  {any[]}   ...rest  Rest of the parameters to be passed into callback
     * @return {any}              Output value
     */
    Adapter.prototype.apply = function (key, value) {
        // This is needed to improve the performance and reduce garbage collection
        var callbacks = this._callbacks.values;
        var length = callbacks.length;
        if (length > 0) {
            for (var i = 0; i < length; ++i) {
                var item = callbacks[i];
                if (item.key === key) {
                    value = item.callback.call(item.scope, value, this.object, key);
                }
            }
        }
        // Apply global adapters
        value = globalAdapter.applyAll(this.object, key, value);
        return value;
    };
    /**
     * Returns all adapter keys that are currently in effect.
     *
     * @return {string[]} Adapter keys
     */
    Adapter.prototype.keys = function () {
        // TODO inefficient
        return _utils_Iterator__WEBPACK_IMPORTED_MODULE_3__["toArray"](_utils_Iterator__WEBPACK_IMPORTED_MODULE_3__["map"](this._callbacks.iterator(), function (x) { return x.key; }));
    };
    /**
     * Copies all the adapter callbacks from `source`.
     *
     * @param {Adapter<Target, T>}  source  An Adapter to copy items from
     */
    Adapter.prototype.copyFrom = function (source) {
        var _this = this;
        _utils_Iterator__WEBPACK_IMPORTED_MODULE_3__["each"](source._callbacks.iterator(), function (x) {
            _this.add(x.key, x.callback, x.priority, x.scope);
        });
    };
    /**
     * Clears all callbacks from this Adapter.
     */
    Adapter.prototype.clear = function () {
        this._callbacks.clear();
    };
    return Adapter;
}());

//# sourceMappingURL=Adapter.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js ***!
  \****************************************************************************/
/*! exports provided: animate, animations, AnimationDisposer, Animation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return animate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animations", function() { return animations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationDisposer", function() { return AnimationDisposer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return Animation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _defs_SVGDefaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../defs/SVGDefaults */ "./node_modules/@amcharts/amcharts4/.internal/core/defs/SVGDefaults.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _utils_AsyncPending__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/AsyncPending */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Colors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _System__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/**
 * Animation module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * Calls a `callback` function for the `duration` of milliseconds.
 *
 * @todo Needed?
 * @deprecated Not used anywhere
 * @ignore Exclude from docs
 * @param  {number}     duration  Duration (ms)
 * @param  {function}   callback  Callback function
 * @return {IDisposer}            Disposer
 */
function animate(duration, callback) {
    var disposed = false;
    // TODO use performance.now() ?
    var startTime = Date.now();
    function loop(now) {
        if (!disposed) {
            var diff = now - startTime;
            if (diff >= duration) {
                callback(1);
            }
            else {
                _utils_AsyncPending__WEBPACK_IMPORTED_MODULE_6__["nextFrame"](loop);
                callback(diff / duration);
            }
        }
    }
    _utils_AsyncPending__WEBPACK_IMPORTED_MODULE_6__["nextFrame"](loop);
    return new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["Disposer"](function () {
        disposed = true;
    });
}
/**
 * Holds the list of currently playing animations.
 *
 * @ignore Exclude from docs
 * @type {Array<IAnimationObject>}
 */
var animations = [];
/**
 * Returns numeric value accoring to progress between start and end values.
 *
 * @param  {number}  progress  Progress (0-1)
 * @param  {number}  from
 * @param  {number}  to
 * @return {number}            Value according to progress
 */
function getProgressNumber(progress, from, to) {
    return from + ((to - from) * progress);
}
/**
 * Returns [[Percent]] value accoring to progress between start and end
 * values.
 *
 * @param  {number}   progress  Progress (0-1)
 * @param  {Percent}  from
 * @param  {Percent}  to
 * @return {number}             Value according to progress
 */
function getProgressPercent(progress, from, to) {
    return new _utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"](getProgressNumber(progress, from.percent, to.percent));
}
/**
 * Returns color value accoring to progress between start and end values.
 *
 * @param  {number}  progress  Progress (0-1)
 * @param  {Color}   from
 * @param  {Color}   to
 * @return {string}            Color according to progress
 */
function getProgressColor(progress, from, to) {
    return new _utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"](_utils_Colors__WEBPACK_IMPORTED_MODULE_8__["interpolate"](from.rgb, to.rgb, progress));
}
/**
 * [getHybridProperty description]
 *
 * @todo Description
 * @param  {string}     property [description]
 * @param  {"pixel" |        "relative"}  type [description]
 * @return {string}              [description]
 */
function getHybridProperty(property, type) {
    return type + property.charAt(0).toUpperCase() + property.substr(1);
}
function processAnimationOptions(object, animationOptions) {
    var processed = [];
    _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](_utils_Array__WEBPACK_IMPORTED_MODULE_10__["toArray"](animationOptions), function (options) {
        var childObject = (options.childObject ? options.childObject : object);
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](options.from)) {
            options.from = childObject[options.property];
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](options.from)) {
                options.from = _defs_SVGDefaults__WEBPACK_IMPORTED_MODULE_2__["SVGDefaults"][options.property];
            }
            /*if (!$type.hasValue(options.from)) {
                throw Error("Could not get initial transition value.");
            }*/
        }
        if (options.from !== options.to) { // || options.to == (<any>object)[options.property]){ this is not good, as dataItem.value is set to final at once, and we animate workingValue
            // Use different update methods for different value types
            if (_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](options.to)) {
                // Check if initial value is not Percent
                if (options.from instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"]) {
                    // It is. Let's convert it to pixel value
                    // @todo Check if we can do this in a less hacky way
                    var convertedFrom = childObject[getHybridProperty(options.property, "pixel")];
                    // TODO better check
                    if (!isNaN(convertedFrom)) {
                        options.from = convertedFrom;
                    }
                }
                processed.push({
                    childObject: childObject,
                    property: options.property,
                    update: function (time) {
                        childObject[options.property] = getProgressNumber(time, options.from, options.to);
                    }
                });
                // Check if maybe we have a color or percent value
            }
            else if (options.to instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                // Yup - set resolved named color
                //options.from = $colors.stringToColor(<string>options.from);
                if (options.from) {
                    processed.push({
                        childObject: childObject,
                        property: options.property,
                        update: function (time) {
                            childObject[options.property] = getProgressColor(time, options.from, options.to);
                        }
                    });
                }
                else {
                    processed.push({
                        childObject: childObject,
                        property: options.property,
                        update: function (time) {
                            childObject[options.property] = (time < 0.5 ? options.from : options.to);
                        }
                    });
                }
            }
            else if (options.to instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"]) {
                // Check if the initial value is maybe in pixels
                // TODO better check
                if (!isNaN(options.from)) {
                    // It is. Let's convert it
                    // @todo Check if we can do this in a less hacky way
                    var convertedFrom = childObject[getHybridProperty(options.property, "relative")];
                    // TODO better check
                    if (!isNaN(convertedFrom)) {
                        options.from = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(convertedFrom * 100);
                    }
                }
                processed.push({
                    childObject: childObject,
                    property: options.property,
                    update: function (time) {
                        childObject[options.property] = getProgressPercent(time, options.from, options.to);
                    }
                });
            }
            else {
                processed.push({
                    childObject: childObject,
                    property: options.property,
                    update: function (time) {
                        childObject[options.property] = (time < 0.5 ? options.from : options.to);
                    }
                });
            }
        }
    });
    return processed;
}
var AnimationDisposer = /** @class */ (function () {
    function AnimationDisposer(array) {
        this._disposer = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["Disposer"](function () {
            while (array.length !== 0) {
                array[0].dispose();
            }
        });
    }
    AnimationDisposer.prototype.isDisposed = function () {
        return this._disposer.isDisposed();
    };
    AnimationDisposer.prototype.dispose = function () {
        this._disposer.dispose();
    };
    return AnimationDisposer;
}());

/**
 * Animation can be used to transition certain properties on an object that
 * implements [[IAnimatable]] interface.
 *
 * @see {@link IAnimationEvents} for a list of available events
 */
var Animation = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Animation, _super);
    /**
     * Constructor
     *
     * @param {IAnimatable}                              object            An object animation should run on
     * @param {IAnimationOptions[] | IAnimationOptions}  animationOptions  One or several (array) of animation options
     * @param {number}                                   duration          Duration (ms)
     * @param {(number) => number}                       easing            Easing function
     */
    function Animation(object, animationOptions, duration, easing) {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Duration of the animation in milliseconds.
         *
         * @type {number}
         */
        _this.duration = 0;
        /**
         * Easing function to use.
         *
         * @see {@link Ease}
         * @type {(value: number) => number}
         */
        _this.easing = _utils_Ease__WEBPACK_IMPORTED_MODULE_7__["linear"];
        /**
         * Contains progress of the current animation: 0 (start) to 1 (end).
         *
         * @type {number}
         */
        _this.progress = 0;
        /**
         * Indicated how many times animation should loop.
         *
         * @type {number}
         */
        _this._loop = 0;
        /**
         * Animation is paused.
         *
         * @type {boolean}
         */
        _this._pause = false;
        /**
         * Holds reference to timeout for delayed play.
         *
         * @type {IDisposer}
         */
        _this._delayTimeout = null;
        /**
         * Elapsed time in currently playing animation.
         *
         * @type {number}
         */
        _this._time = 0;
        _this._isFinished = false;
        _this.className = "Animation";
        // Set parameters
        _this.object = object;
        _this.animationOptions = _utils_Array__WEBPACK_IMPORTED_MODULE_10__["toArray"](animationOptions);
        _this.duration = duration;
        if (easing) {
            _this.easing = easing;
        }
        // Run check if there are already animations playing on the same properties
        // and stop them - the last animation takes precedence
        //this.stopSameAnimations();
        /*if ($type.hasValue(callback)) {
            // TODO don't use .call
            this.events.on("animationended", callback, object);
        }*/
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    // TODO verify that this is correct
    Animation.prototype.debug = function () { };
    /**
     * Disposes this object, clears up after itself.
     */
    Animation.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.pause();
    };
    /**
     * Delays animation start by X milliseconds.
     *
     * @param  {number}     delay  Delay (ms)
     * @return {Animation}         Animation
     */
    Animation.prototype.delay = function (delay) {
        var _this = this;
        //@todo Maybe not use `bind()`
        if (delay > 0) {
            this.pause();
            // This is so that it will get disposed if `this.object` is disposed
            // TODO hacky, figure out a better way
            _utils_Array__WEBPACK_IMPORTED_MODULE_10__["move"](this.object.animations, this);
            var id_1 = setTimeout(function () {
                _this._delayTimeout = null;
                _this.start();
            }, delay);
            this._delayTimeout = new _utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["Disposer"](function () {
                clearTimeout(id_1);
            });
        }
        return this;
    };
    Animation.prototype._start = function () {
        this._isFinished = false;
        // Clear delay timeout if there was one
        if (this._delayTimeout) {
            this.removeDispose(this._delayTimeout);
            this._delayTimeout = null;
        }
        // Run check if there are already animations playing on the same properties
        // and stop them - the last animation takes precedence
        this.stopSameAnimations();
        // Reset counters
        this._pause = false;
        // Register animation
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["move"](animations, this);
        // Register this animation in object's `animations` list
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["move"](this.object.animations, this);
        _System__WEBPACK_IMPORTED_MODULE_12__["system"].requestFrame();
    };
    /**
     * Starts animation.
     *
     * @return {Animation} Animation
     */
    Animation.prototype.start = function () {
        this._start();
        this._startTime = Date.now();
        this._time = 0;
        this.staticOptions = [];
        // Process initial property values
        for (var i = this.animationOptions.length - 1; i >= 0; i--) {
            var options = this.animationOptions[i];
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](options.from)) {
                if (options.childObject) {
                    options.from = options.childObject[options.property];
                }
                else {
                    options.from = this.object[options.property];
                    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](options.from)) {
                        options.from = _defs_SVGDefaults__WEBPACK_IMPORTED_MODULE_2__["SVGDefaults"][options.property];
                    }
                }
                /*if (!$type.hasValue(options.from)) {
                    throw Error("Could not get initial transition value.");
                }*/
            }
            if (options.from == options.to) { // || options.to == (<any>this.object)[options.property]){ this is not good, as dataItem.value is set to final at once, and we animate workingValue
                _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](this.animationOptions, options);
            }
            else if (!_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](options.from)) {
                // Initial value is undefined, treat it as static
                this.staticOptions.push(options);
                _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](this.animationOptions, options);
            }
            else {
                // Use different update methods for different value types
                if (_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](options.to)) {
                    // Numeric value
                    options.updateMethod = getProgressNumber;
                    // Check if initial value is not Percent
                    if (options.from instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"]) {
                        // It is. Let's convert it to pixel value
                        // @todo Check if we can do this in a less hacky way
                        var convertedFrom = this.object[getHybridProperty(options.property, "pixel")];
                        if (!isNaN(convertedFrom)) {
                            options.from = convertedFrom;
                        }
                    }
                }
                else {
                    // Check if maybe we have a color or percent value
                    if (options.to instanceof _utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                        // Yup - set resolved named color
                        //options.from = $colors.stringToColor(<string>options.from);
                        if (options.from) {
                            options.updateMethod = getProgressColor;
                        }
                        else {
                            // Static value
                            this.staticOptions.push(options);
                            _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](this.animationOptions, options);
                        }
                    }
                    else if (options.to instanceof _utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"]) {
                        // Percent
                        options.updateMethod = getProgressPercent;
                        // Check if the initial value is maybe in pixels
                        if (!isNaN(options.from)) {
                            // It is. Let's convert it
                            // @todo Check if we can do this in a less hacky way
                            var convertedFrom = this.object[getHybridProperty(options.property, "relative")];
                            if (!isNaN(convertedFrom)) {
                                options.from = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(convertedFrom * 100);
                            }
                        }
                    }
                    else {
                        // Static value
                        this.staticOptions.push(options);
                        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](this.animationOptions, options);
                    }
                }
            }
        }
        // Apply static options (just in case they were reset by previous
        // animation loop)
        this.applyStaticOptions();
        if (this.events.isEnabled("animationstarted")) {
            var event_1 = {
                type: "animationstarted",
                target: this,
                progress: this.progress
            };
            this.events.dispatchImmediately("animationstarted", event_1);
        }
        this.update();
        // If duration is 0, just end animation
        if (this.duration === 0) {
            this.end();
        }
        return this;
    };
    /**
     * Sets loop count for the animation. If parameter is not a valid number the
     * animation will keep on looping indefinitely.
     *
     * @param  {number}     count  Number of times to loop animation
     * @return {Animation}         Animation
     */
    Animation.prototype.loop = function (count) {
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](count)) {
            count = Infinity;
        }
        this._loop = count;
        return this;
    };
    /**
     * Pauses animation.
     *
     * @return {Animation} Animation
     */
    Animation.prototype.pause = function () {
        this._pause = true;
        if (this._delayTimeout) {
            this.removeDispose(this._delayTimeout);
            this._delayTimeout = null;
        }
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](animations, this);
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](this.object.animations, this);
        return this;
    };
    /**
     * Resumes paused animation.
     *
     * @return {Animation} Animation
     */
    Animation.prototype.resume = function () {
        this._start();
        this._startTime = Date.now() - this._time;
        return this;
    };
    /**
     * Jumps to animation end. If animation is set to loop, this will start
     * another round of animation from start.
     *
     * @return {Animation} Animation
     */
    Animation.prototype.end = function () {
        // Pause and complete the progress
        if (this._loop == 0) {
            this.pause();
        }
        this.setProgress(1);
        // Apply static options
        this.applyStaticOptions();
        if (this.events.isEnabled("animationended")) {
            var event_2 = {
                type: "animationended",
                target: this,
                progress: this.progress
            };
            this.events.dispatchImmediately("animationended", event_2);
        }
        // Check if we should loop
        if (this._loop > 0) {
            this._loop--;
            this.start();
        }
        else {
            this.stop();
            this._isFinished = true;
        }
        return this;
    };
    Animation.prototype.kill = function () {
        this.pause();
        this._isFinished = true;
    };
    /**
     * Returns indicator if this animation is finished or not
     *
     * @return {boolean} Is finished?
     */
    Animation.prototype.isFinished = function () {
        return this._isFinished;
    };
    /**
     * Applies static options that can't be animated.
     */
    Animation.prototype.applyStaticOptions = function () {
        var _this = this;
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](this.staticOptions, function (options) {
            if (options.childObject) {
                options.childObject[options.property] = _this.progress == 1 ? options.to : options.from;
            }
            else {
                _this.object[options.property] = _this.progress == 1 ? options.to : options.from;
            }
        });
    };
    /**
     * Stops animation.
     *
     * When animation is stopped, the properties of the target object will remain
     * where they were at the moment when `stop()` was called.
     *
     * @param  {boolean}    skipEvent  Do not trigger `animationstopped` event
     * @return {Animation}             Animation
     */
    Animation.prototype.stop = function (skipEvent) {
        this.pause();
        if (!skipEvent) {
            if (this.events.isEnabled("animationstopped")) {
                var event_3 = {
                    type: "animationstopped",
                    target: this,
                    progress: this.progress
                };
                this.events.dispatchImmediately("animationstopped", event_3);
            }
        }
        return this;
    };
    /**
     * Sets current progress and updates object's numeric and color values.
     *
     * @param {number} progress Progress (0-1)
     */
    Animation.prototype.setProgress = function (progress) {
        var _this = this;
        this._time = this.duration * progress; // just in case we call this from outside
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](this.animationOptions, function (options) {
            if (options.updateMethod && _utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](options.from)) {
                var value = options.updateMethod(progress, options.from, options.to);
                if (options.childObject) {
                    options.childObject[options.property] = value;
                }
                else {
                    _this.object[options.property] = value;
                }
            }
        });
        this.progress = progress;
        if (this.events.isEnabled("animationprogress")) {
            var event_4 = {
                type: "animationprogress",
                target: this,
                progress: this.progress
            };
            this.events.dispatchImmediately("animationprogress", event_4);
        }
        _System__WEBPACK_IMPORTED_MODULE_12__["system"].requestFrame();
    };
    /**
     * Tracks and sets progress according to time or frames.
     *
     * @ignore Exclude from docs
     * @return {Animation} Animation
     */
    Animation.prototype.update = function () {
        if (!this._pause) {
            var progress = void 0;
            this._time = _utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](Date.now() - this._startTime, 0, this.duration);
            var timeProgress = this._time / this.duration;
            progress = this.easing(timeProgress);
            if (this.duration == 0 || !_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](progress) || timeProgress >= 1) {
                progress = 1;
            }
            this.setProgress(progress);
            if (_utils_Math__WEBPACK_IMPORTED_MODULE_9__["round"](this._time / this.duration, 6) == 1) {
                this.end();
            }
        }
        return this;
    };
    Object.defineProperty(Animation.prototype, "delayed", {
        /**
         * Returns `true` if this animation is delayed.
         *
         * @readonly
         * @return {boolean} [description]
         */
        get: function () {
            return this._delayTimeout ? true : false;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks other animations currently running on the same object and removes
     * overlapping options from those other animations that are contained in
     * this animation.
     *
     * This is needed to ensure that no two confurent animations step on each
     * other's toes by trying to animate the same property.
     */
    Animation.prototype.stopSameAnimations = function () {
        var _this = this;
        // stop animation of the same property
        // TODO make this more efficient
        // TODO don't copy the array
        _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](_utils_Array__WEBPACK_IMPORTED_MODULE_10__["copy"](this.object.animations), function (animation) {
            if (animation !== _this && !animation.delayed) {
                var killed_1 = [];
                _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](_this.animationOptions, function (newOptions) {
                    _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](animation.animationOptions, function (oldOptions) {
                        if (newOptions.property == oldOptions.property && newOptions.childObject == oldOptions.childObject) {
                            killed_1.push(oldOptions);
                            if (animation.animationOptions.length == 0) {
                                animation.kill();
                            }
                        }
                    });
                });
                _utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](killed_1, function (oldOptions) {
                    _utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](animation.animationOptions, oldOptions);
                });
            }
        });
    };
    return Animation;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]));

//# sourceMappingURL=Animation.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js ***!
  \************************************************************************/
/*! exports provided: indexOf, any, map, each, eachReverse, eachContinue, shiftLeft, last, first, insert, setIndex, pushAll, remove, move, add, replace, toArray, has, copy, slice, insertIndex, removeIndex, getSortedIndex, findIndex, find */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexOf", function() { return indexOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "any", function() { return any; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "each", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eachReverse", function() { return eachReverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eachContinue", function() { return eachContinue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shiftLeft", function() { return shiftLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insert", function() { return insert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIndex", function() { return setIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushAll", function() { return pushAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "move", function() { return move; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return replace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertIndex", function() { return insertIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeIndex", function() { return removeIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSortedIndex", function() { return getSortedIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony import */ var _Math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");


/**
 * ============================================================================
 * UTILITY FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Searches `array` for `value`.
 *
 * Returns -1 if not found.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @param   {A}             value  Value to search
 * @returns {number}               Index
 */
function indexOf(array, value) {
    var length = array.length;
    for (var i = 0; i < length; ++i) {
        // TODO handle NaN
        if (array[i] === value) {
            return i;
        }
    }
    return -1;
}
/**
 * Calls `test` for each element in `array`.
 *
 * If `test` returns `true` then it immediately returns `true`.
 *
 * If `test` returns `false` for all of the elements in `array` then it returns `false`.
 *
 * @param   {ArrayLike<A>}           array  Source array
 * @param   {(value: A) => boolean}  test   Function which is called on each element
 * @returns {boolean}                Whether `test` returned true or not
 */
function any(array, test) {
    var length = array.length;
    for (var i = 0; i < length; ++i) {
        if (test(array[i])) {
            return true;
        }
    }
    return false;
}
/**
 * Calls `fn` function for every member of array and returns a new array out
 * of all outputs.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @param   {function}      fn     Callback function
 * @returns {number}               New array
 */
function map(array, fn) {
    var length = array.length;
    var output = new Array(length);
    for (var i = 0; i < length; ++i) {
        output[i] = fn(array[i], i);
    }
    return output;
}
/**
 * Iterates through all items in array and calls `fn` function for each of
 * them.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @param   {function}      fn     Callback function
 */
function each(array, fn) {
    var length = array.length;
    for (var i = 0; i < length; ++i) {
        fn(array[i], i);
    }
}
/**
 * Iterates through all items in array in reverse order and calls `fn` function for each of
 * them.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @param   {function}      fn     Callback function
 */
function eachReverse(array, fn) {
    var i = array.length;
    while (i--) {
        fn(array[i], i);
    }
}
/**
 * Iterates through all items in array and calls `fn` function for each of
 * them.
 *
 * If `fn` call evaluates to `false`, further iteration is cancelled.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @param   {function}      fn     Callback function
 */
function eachContinue(array, fn) {
    var length = array.length;
    for (var i = 0; i < length; ++i) {
        if (!fn(array[i], i)) {
            break;
        }
    }
}
/**
 * Shifts an item at `index` towards beginning of the array.
 *
 * @param {ArrayLike<A>}  array  Source array
 * @param {number}        index  Target element index
 */
function shiftLeft(array, index) {
    var length = array.length;
    for (var i = index; i < length; ++i) {
        array[i - index] = array[i];
    }
    array.length = length - index;
}
/**
 * Returns the last item of the array.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @returns {A}                    Last item
 */
function last(array) {
    var length = array.length;
    return length ? array[length - 1] : undefined;
}
/**
 * Returns the first item of the array.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @returns {A}                    Last item
 */
function first(array) {
    return array[0];
}
/**
 * Inserts `element` into `array` at `index`.
 *
 * Caps `index` to be between `0` and `array.length`
 *
 * @param {ArrayLike<A>}  array    Source array
 * @param {ArrayLike<A>}  element  Item to insert
 * @param {ArrayLike<A>}  array    Index to insert item at
 */
function insert(array, element, index) {
    //if (array) {
    index = _Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](index, 0, array.length);
    array.splice(index, 0, element);
    //}
}
/**
 * Removes all copies of `element` from `array` (if they exist) and then
 * inserts `element` at `index`.
 *
 * @param {ArrayLike<A>}  array    Source array
 * @param {ArrayLike<A>}  element  Item
 * @param {ArrayLike<A>}  array    Index to move item to
 */
function setIndex(array, element, index) {
    remove(array, element);
    insert(array, element, index);
}
/**
 * Pushes all of the elements from `input` into `array`.
 *
 * @param {ArrayLike<A>}  array  Output array
 * @param {ArrayLike<A>}  input  Input array
 */
function pushAll(array, input) {
    var length = input.length;
    for (var i = 0; i < length; ++i) {
        array.push(input[i]);
    }
}
/**
 * Removes `element` from `array`.
 *
 * If there are multiple copies of `element`, they are all removed.
 *
 * @param {ArrayLike<A>}  array    Source array
 * @param {ArrayLike<A>}  element  Item to remove
 */
function remove(array, element) {
    var found = false;
    var index = array.indexOf(element);
    if (index !== -1) {
        found = true;
        array.splice(index, 1);
        var length_1 = array.length;
        while (index < length_1) {
            // TODO handle NaN
            if (array[index] === element) {
                array.splice(index, 1);
                --length_1;
            }
            else {
                ++index;
            }
        }
    }
    return found;
}
/**
 * Adds an `element` to `array`.
 *
 * If array already contains and item like this, it is removed before adding
 * it again.
 *
 * Optionally `toIndex` can be specified to add element at specific index.
 *
 * @param {ArrayLike<A>}  array    Source array
 * @param {ArrayLike<A>}  element  Item to add
 * @param {ArrayLike<A>}  array    Index to move item to
 */
function move(array, element, toIndex) {
    // @todo this implementation must be the same as the List.moveValue method
    // @todo don't do anything if the desired index is the same as the current index
    var index = indexOf(array, element);
    // @todo remove all old values rather than only the first ?
    if (index !== -1) {
        removeIndex(array, index);
    }
    if (toIndex == null) {
        array.push(element);
    }
    else {
        insertIndex(array, toIndex, element);
    }
}
/**
 * Inserts `element` into `array` at `index`.
 *
 * If `index` is not provided, it will insert `element` at the end of `array`.
 *
 * @param {ArrayLike<A>}  array    Source array
 * @param {ArrayLike<A>}  element  Item to add
 * @param {ArrayLike<A>}  array    Index to add item at
 */
function add(array, element, index) {
    // Append to the end if index is not set
    if (!_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](index)) {
        array.push(element);
    }
    // Add to the beginning of array if index is 0
    else if (index === 0) {
        array.unshift(element);
    }
    // Add to indicated place if index is set
    else {
        array.splice(index, 0, element);
    }
}
/**
 * Removes `element` from `array` (if it exists) and then inserts `element` at
 * `index`.
 *
 * If `index` is not provided, it will insert `element` at the end of `array`.
 *
 * @param {ArrayLike<A>}  array    Source array
 * @param {ArrayLike<A>}  element  Item to remove
 * @param {ArrayLike<A>}  array    Index to move item to
 */
function replace(array, element, index) {
    // check if exists
    var ind = array.indexOf(element);
    // remove if exists
    if (ind !== -1) {
        array.splice(ind, 1);
    }
    // add to end if index is not set
    if (!_Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](index)) {
        array.push(element);
    }
    // add to indicated place if index is set
    else {
        array.splice(index, 0, element);
    }
}
/**
 * Wraps `input` in an array, if it isn't already an array.
 *
 * @param {Array<A> | A}  input  Source value
 * @return {Array<A>} An array
 */
function toArray(input) {
    if (Array.isArray(input)) {
        return input;
    }
    else {
        return [input];
    }
}
/**
 * Returns `true` if `element` exists in `array`.
 *
 * @param   {ArrayLike<A>}  array    Source array
 * @param   {ArrayLike<A>}  element  Item to search for
 * @returns {boolean}                Item in array?
 */
function has(array, element) {
    return indexOf(array, element) !== -1;
}
/**
 * Returns a shallow copy of `array`.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @returns {boolean}              Copy of the array
 */
function copy(array) {
    var length = array.length;
    // It's faster to create the array with a pre-defined length
    var output = new Array(length);
    for (var i = 0; i < length; ++i) {
        // Because the array has a pre-defined length, we have to assign rather than push
        // This is also faster than pushing
        output[i] = array[i];
    }
    return output;
}
/**
 * Returns a copy of `array` which contains all the elements between `start`
 * and `end`. (including `start` and excluding `end`)
 *
 * If `end` is not provided, it defaults to `array.length`.
 *
 * @param   {ArrayLike<A>}  array  Source array
 * @param   {number}        start  Start index
 * @param   {number}        end    End index
 * @returns {Array<A>}             Part of the array
 */
function slice(array, start, end) {
    if (end === void 0) { end = array.length; }
    var output = new Array(end - start);
    for (var i = start; i < end; ++i) {
        output[i - start] = array[i];
    }
    return output;
}
/**
 * Inserts a value into array at specific index.
 *
 * @param {Array<A>}  array  Source array
 * @param {number}    index  Index
 * @param {A}         value  Value to insert
 */
function insertIndex(array, index, value) {
    array.splice(index, 0, value);
}
/**
 * Removes a value from array at specific index.
 *
 * @param {Array<A>}  array  Source array
 * @param {number}    index  Index
 */
function removeIndex(array, index) {
    array.splice(index, 1);
}
/**
 * Orders an array using specific `ordering` function and returns index of
 * the `value`.
 *
 * @ignore Exclude from docs
 * @param   {ArrayLike<A>}  array     Source array
 * @param   {function}      ordering  An ordering function
 * @param   {ArrayLike<A>}  value     Value to search for
 * @returns {SortResult}              Result of the search
 */
function getSortedIndex(array, ordering, value) {
    var start = 0;
    var end = array.length;
    var found = false;
    while (start < end) {
        // TODO is this faster/slower than using Math.floor ?
        var pivot = (start + end) >> 1;
        var order = ordering(value, array[pivot]);
        // less
        if (order < 0) {
            end = pivot;
            // equal
        }
        else if (order === 0) {
            found = true;
            start = pivot + 1;
            // more
        }
        else {
            start = pivot + 1;
        }
    }
    return {
        found: found,
        index: (found ? start - 1 : start)
    };
}
/**
 * Searches the array using custom function and returns index of the item if
 * found.
 *
 * Will call `matches` function on all items of the array. If return value
 * evaluates to `true`, index is returned.
 *
 * Otherwise returns -1.
 *
 * @param   {ArrayLike<A>}  array    Source array
 * @param   {function}      matches  Search function
 * @returns {number}                 Index of the item if found
 */
function findIndex(array, matches) {
    var length = array.length;
    for (var i = 0; i < length; ++i) {
        if (matches(array[i], i)) {
            return i;
        }
    }
    return -1;
}
/**
 * Searches the array using custom function and returns item if found.
 *
 * Will call `matches` function on all items of the array. If return value
 * evaluates to `true`, index is returned.
 *
 * Otherwise returns `undefined`.
 *
 * @param   {ArrayLike<A>}  array    Source array
 * @param   {function}      matches  Search function
 * @returns {number}                 Item if found
 */
function find(array, matches) {
    var index = findIndex(array, matches);
    if (index !== -1) {
        return array[index];
    }
}
//# sourceMappingURL=Array.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js ***!
  \*******************************************************************************/
/*! exports provided: raf, nextFrame, readFrame, writeFrame, whenIdle, triggerIdle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raf", function() { return raf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nextFrame", function() { return nextFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readFrame", function() { return readFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writeFrame", function() { return writeFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenIdle", function() { return whenIdle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "triggerIdle", function() { return triggerIdle; });
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * A collection of low-level async operation stuff.
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

var pendingFrame = false;
var nextQueue = [];
var readQueue = [];
var writeQueue = [];
var idleQueue = [];
var fps = 1000 / 60;
/**
 * [raf description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {[type]}
 */
var raf = (typeof requestAnimationFrame === "function"
    ? function (fn) {
        requestAnimationFrame(fn);
    }
    : function (fn) {
        setTimeout(fn, fps);
    });
/**
 * [frameLoop description]
 *
 * @ignore Exclude from docs
 * @todo Description
 */
function frameLoop() {
    var now = Date.now();
    var length = nextQueue.length;
    for (var i = 0; i < length; ++i) {
        nextQueue[i](now);
    }
    _Array__WEBPACK_IMPORTED_MODULE_0__["shiftLeft"](nextQueue, length);
    for (var i = 0; i < readQueue.length; ++i) {
        readQueue[i](now);
    }
    readQueue.length = 0;
    for (var i = 0; i < writeQueue.length; ++i) {
        writeQueue[i](now);
    }
    writeQueue.length = 0;
    if (nextQueue.length === 0 && readQueue.length === 0) {
        pendingFrame = false;
    }
    else {
        raf(frameLoop);
    }
}
/**
 * [pendFrame description]
 *
 * @ignore Exclude from docs
 * @todo Description
 */
function pendFrame() {
    if (!pendingFrame) {
        pendingFrame = true;
        raf(frameLoop);
    }
}
/**
 * [nextFrame description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param {Listener} fn [description]
 */
function nextFrame(fn) {
    nextQueue.push(fn);
    pendFrame();
}
/**
 * [readFrame description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param {Listener} fn [description]
 */
function readFrame(fn) {
    readQueue.push(fn);
    pendFrame();
}
/**
 * [writeFrame description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param {Listener} fn [description]
 */
function writeFrame(fn) {
    writeQueue.push(fn);
    pendFrame();
}
/**
 * [whenIdle description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param {Listener} fn [description]
 */
function whenIdle(fn) {
    idleQueue.push(fn);
}
/**
 * [triggerIdle description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @todo Maybe don't trigger a callback which was added while in the middle of triggering?
 */
function triggerIdle() {
    var now = Date.now();
    var length = idleQueue.length;
    for (var i = 0; i < length; ++i) {
        idleQueue.shift()(now);
    }
}
//# sourceMappingURL=AsyncPending.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js ***!
  \************************************************************************/
/*! exports provided: Cache, cache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cache", function() { return Cache; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cache", function() { return cache; });
/* harmony import */ var _Dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Represents object cache.
 *
 * @ignore Exclude from docs
 * @todo Better storage
 * @todo TTL logging
 * @todo Garbage collector
 */
var Cache = /** @class */ (function () {
    function Cache() {
        /**
         * Storage for cache items.
         *
         * @type {Object}
         */
        this._storage = new _Dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
        /**
         * Default TTL in milliseconds.
         *
         * @type {number}
         */
        this.ttl = 1000;
    }
    /**
     * Caches or updates cached value, resets TTL.
     *
     * If `ttl` is set to zero, item will never expire.
     *
     * @param {string}  owner  An id of the object that owns this cache
     * @param {string}  key    Index key
     * @param {A}       value  Value
     * @param {number}  ttl    TTL of the cache to live in milliseconds
     */
    Cache.prototype.set = function (owner, key, value, ttl) {
        // Create if storage does not exist for this owner
        var ownerStorage = this._storage.insertKeyIfEmpty(owner, function () { return new _Dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"](); });
        // Create cache item
        var item = {
            "touched": new Date().getTime(),
            "ttl": _Type__WEBPACK_IMPORTED_MODULE_1__["isNumber"](ttl) ? ttl : this.ttl,
            "value": value
        };
        // Set
        ownerStorage.setKey(key, item);
    };
    /**
     * Rerturns cached item, respecting TTL.
     *
     * @param  {string}  owner  An id of the object that owns this cache
     * @param  {string}  key    Index key
     * @param  {string}  value  Value to return if cache not available
     * @return {A}              Value, or `undefined` if not set
     */
    Cache.prototype.get = function (owner, key, value) {
        if (value === void 0) { value = undefined; }
        // 		 || ypeof this._storage[owner][key] === "undefined" || this._storage[owner][key].expired === true) {
        if (this._storage.hasKey(owner)) {
            var ownerStorage = this._storage.getKey(owner);
            if (ownerStorage.hasKey(key)) {
                var cacheItem = ownerStorage.getKey(key);
                if (cacheItem.ttl && ((cacheItem.touched + cacheItem.ttl) < new Date().getTime())) {
                    cacheItem.expired = true;
                }
                if (cacheItem.expired) {
                    ownerStorage.removeKey(key);
                    return value;
                }
                return cacheItem.value;
            }
            else {
                return value;
            }
        }
        else {
            return value;
        }
    };
    /**
     * Clears cache for specific owner or everything.
     *
     * @param {string} owner Owner to clear cache for
     */
    Cache.prototype.clear = function (owner) {
        if (owner) {
            this._storage.removeKey(owner);
        }
        else {
            this._storage.clear();
        }
    };
    return Cache;
}());

/**
 * ============================================================================
 * GLOBAL INSTANCE
 * ============================================================================
 * @hidden
 */
/**
 * A global instance of cache. Use this instance to cache any values.
 *
 * @ignore Exclude from docs
 */
var cache = new Cache();
//# sourceMappingURL=Cache.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js ***!
  \************************************************************************/
/*! exports provided: Color, color, isColor, castColor, toColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "color", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isColor", function() { return isColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "castColor", function() { return castColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toColor", function() { return toColor; });
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _Colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * This module contains Color object definition
 */



/**
 * Represents a color.
 *
 * `Color` accepts value only in [[iRGB]] object format. To create `Color`
 * object by parsing it from any supported string-based formats, use helper
 * [[color]] function:
 *
 * ```TypeScript
 * am4core.color("#ff0000");
 * am4core.color("#f00");
 * am4core.color("rgb(255, 0, 0)");
 * am4core.color("rgba(255, 0, 0, 0.5)");
 * am4core.color({ r: 255, g: 0, b: 0 });
 * am4core.color("red");
 * ```
 * ```JavaScript
 * am4core.color("#ff0000");
 * am4core.color("#f00");
 * am4core.color("rgb(255, 0, 0)");
 * am4core.color("rgba(255, 0, 0, 0.5)");
 * am4core.color({ r: 255, g: 0, b: 0 });
 * am4core.color("red");
 * ```
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info
 */
var Color = /** @class */ (function () {
    /**
     * Constructor
     *
     * @param {iRGB} color Source color
     */
    function Color(color) {
        this._value = color;
    }
    Object.defineProperty(Color.prototype, "rgb", {
        /**
         * Returns [[iRGB]] representation of the color.
         *
         * @return {iRGB} RGB object
         */
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "hex", {
        /**
         * Returns color hex value string, e.g. "#FF0000".
         *
         * @return {string} Hex color code
         */
        get: function () {
            return this._value ? _Colors__WEBPACK_IMPORTED_MODULE_1__["rgbToHex"](this._value) : "none";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "rgba", {
        /**
         * Returns an `rgba()` representation of the color, e.g.:
         * `rgba(255, 0, 0, 0.5)`.
         *
         * @return {string} rgba color string
         */
        get: function () {
            return this._value ? _Colors__WEBPACK_IMPORTED_MODULE_1__["rgbToRGBA"](this._value) : "none";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "alpha", {
        /**
         * Returns current transparency.
         *
         * @return {number} Alpha (0-1)
         */
        get: function () {
            if (this._value != null && this._value.a != null) {
                return this._value.a;
            }
            else {
                return 1;
            }
        },
        /**
         * Set alpha (transparency) of the color.
         *
         * @param {number} value Alpha (0-1)
         */
        set: function (value) {
            if (this._value) {
                this._value.a = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "lightColor", {
        /**
         * Returns current light color setting.
         *
         * @return {Color} Color
         */
        get: function () {
            if (!this._lightColor) {
                this._lightColor = new Color({ r: 255, g: 255, b: 255 });
            }
            return this._lightColor;
        },
        /**
         * Sets "light" color. Used when determining contrasting color.
         *
         * @param {Color} color Color
         */
        set: function (color) {
            this._lightColor = color;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "darkColor", {
        /**
         * Returns current dark color setting.
         *
         * @return {Color} Color
         */
        get: function () {
            if (!this._darkColor) {
                this._darkColor = new Color({ r: 0, g: 0, b: 0 });
            }
            return this._darkColor;
        },
        /**
         * Sets "dark" color. Used when determining contrasting color.
         *
         * @param {Color} color Color
         */
        set: function (color) {
            this._darkColor = color;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Overrides `toString` method so that [[Color]] object can be used as
     * string.
     *
     * @ignore Exclude from docs
     * @return {string} String represantion of color (usable in CSS)
     */
    Color.prototype.toString = function () {
        return this.alpha < 1 ? this.rgba : this.hex;
    };
    /**
     * Returns a new [[Color]] which is percent lighter (positive value),
     * or darker (negative value).
     *
     * Parameter is in the scale of -1 to 1.
     *
     * @param  {number}  percent  Increase/decrease lightness by X
     * @return {Color}            New Color
     */
    Color.prototype.lighten = function (percent) {
        return new Color(_Colors__WEBPACK_IMPORTED_MODULE_1__["lighten"](this.rgb, percent));
    };
    /**
     * Returns a new [[Color]] which is percent brighter (positive value),
     * or darker (negative value).
     *
     * Parameter is in the scale of -1 to 1.
     *
     * @param  {number}  percent  Increase/decrease brightness by X
     * @return {Color}            New Color
     */
    Color.prototype.brighten = function (percent) {
        return new Color(_Colors__WEBPACK_IMPORTED_MODULE_1__["brighten"](this.rgb, percent));
    };
    /**
     * Returns a new [[Color]] based on current color with specific saturation
     * applied.
     *
     * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully
     * saturated).
     *
     * @param  {number}  saturation  Saturation (0-1)
     * @return {Color}               New (saturated) color
     */
    Color.prototype.saturate = function (saturation) {
        return new Color(_Colors__WEBPACK_IMPORTED_MODULE_1__["saturate"](this.rgb, saturation));
    };
    Object.defineProperty(Color.prototype, "alternative", {
        /**
         * Returns a either light or dark color that contrasts specifically with
         * this color.
         *
         * Uses properties `darkColor` (default black) and `lightColor` (default
         * white).
         *
         * Useful when determining which color label should be on a colored
         * background, so that it stands out.
         *
         * @return {Color} Contrasting color
         */
        get: function () {
            if (this.rgb != null) {
                return _Colors__WEBPACK_IMPORTED_MODULE_1__["isLight"](this.rgb) ? this.darkColor : this.lightColor;
            }
            else {
                throw new Error("Color does not exist");
            }
        },
        enumerable: true,
        configurable: true
    });
    return Color;
}());

/**
 * Resolves an input variable to a normal [[iRGB]] color and creates [[Color]]
 * object for it.
 *
 * @param  {string | iRGB | Color}  value  Input value
 * @param  {number}                 alpha  Alpha (0-1)
 * @return {Color}                         Color object
 */
function color(value, alpha) {
    if (!_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](value)) {
        return new Color(undefined);
    }
    if (typeof value == "string") {
        var cacheId = "_color_" + value + "_" + (alpha || "1");
        var cached = _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].getCache(cacheId);
        if (cached) {
            return new Color({
                r: cached.r,
                g: cached.g,
                b: cached.b,
                a: cached.a
            });
        }
        var rgb = _Colors__WEBPACK_IMPORTED_MODULE_1__["rgb"](value, alpha);
        _Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].setCache(cacheId, rgb);
        return new Color(rgb);
    }
    // Check if it's already a Color object
    if (value instanceof Color) {
        if (_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](alpha)) {
            value.alpha = alpha;
        }
        return value;
    }
    // Not a string or Color instance, it's the iRGB object then
    return new Color(value);
}
/**
 * Checks if supplied argument is instance of [[Color]].
 *
 * @param  {any}      value  Input value
 * @return {boolean}         Is Color?
 */
function isColor(value) {
    return value instanceof Color;
}
/**
 * Converts any value to [[Color]].
 *
 * @param  {any}    value  Input value
 * @return {Color}         Color
 */
function castColor(value) {
    return color(value);
}
/**
 * Converts any value into a [[Color]].
 *
 * @param  {any}    value  Source value
 * @return {Color}         Color object
 */
function toColor(value) {
    if (_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](value) && !isColor(value)) {
        return castColor(value);
    }
    return value;
}
//# sourceMappingURL=Color.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js ***!
  \***************************************************************************/
/*! exports provided: ColorSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorSet", function() { return ColorSet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _Colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * This module contains ColorSet object definition
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Represents a set of colors. Can also generate colors according to set rules.
 *
 * @important
 * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info
 */
var ColorSet = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ColorSet, _super);
    /**
     * Constructor
     */
    function ColorSet() {
        var _this = _super.call(this) || this;
        /**
         * Holds the list of the colors in this set. (preset or auto-generated)
         *
         * @type {Color[]}
         */
        _this._list = [];
        /**
         * Current step in a color generator's cycle.
         *
         * @type {number}
         */
        _this._currentStep = 0;
        /**
         * Current pass in the color generator's cycle. Normally a generator would
         * cycle through all available hue range, then repeat it, alternating other
         * color properties, to generate distinctive colors.
         *
         * @type {number}
         */
        _this._currentPass = 0;
        /**
         * A base color. If there are no colors pre-set in the color list, ColorSet
         * will use this color as a base when generating new ones, applying
         * `stepOptions` and `passOptions` to this base color.
         *
         * @type {Color}
         */
        _this.baseColor = new _Color__WEBPACK_IMPORTED_MODULE_2__["Color"]({
            r: 103,
            g: 183,
            b: 220
        });
        /**
         * Modifications to apply with each new generated color.
         *
         * @type {Partial<IColorSetStepOptions>}
         */
        _this.stepOptions = {};
        /**
         * Modifications to apply on top of `stepOptions` for each "pass" of the
         * color generation.
         *
         * A "pass" is when ColorSet generates `minColors` number of colors.
         *
         * @type {Partial<IColorSetStepOptions>}
         */
        _this.passOptions = {
            brighten: -0.2
        };
        /**
         * An index increment to use when iterating through color list.
         *
         * Default is 1, which means returning each and every color.
         *
         * Setting it to a bigger number will make ColorSet `next()` iterator skip
         * some colors.
         *
         * E.g. setting to 2, will return every second color in the list.
         *
         * This is useful, when the color list has colors that are too close each
         * other for contrast.
         *
         * However, having bigger number will mean that `next()` iterator will go
         * through the list quicker, and the generator will kick sooner.
         *
         * @type {number}
         */
        _this.step = 1;
        /**
         * A number of colors to generate in one "pass".
         *
         * This setting can be automatically overridden, if ColorSet has a list of
         * pre-set colors. In such case ColorSet will generate exactly the same
         * number of colors with each pass as there were colors in original set.
         *
         * @type {number}
         */
        _this.minColors = 20;
        /**
         * Do not let the "lightness" of generated color to fall below this
         * threshold.
         *
         * @type {number}
         */
        _this.minLightness = 0.2;
        /**
         * Do not let the "lightness" of generated color to get above this threshold.
         *
         * @type {number}
         */
        _this.maxLightness = 0.9;
        /**
         * Randomly shuffle generated colors.
         *
         * @type {boolean}
         */
        _this.shuffle = false;
        /**
         * When colors are generated, based on `stepOptions`, each generated color
         * gets either lighter or darker.
         *
         * If this is set to `true`, color generator will switch to opposing spectrum
         * when reaching `minLightness` or `maxLightness`.
         *
         * E.g. if we start off with a red color, then gradually generate lighter
         * colors through rose shades, then switch back to dark red and gradually
         * increase the lightness of it until it reaches the starting red.
         *
         * If set to `false` it will stop there and cap lightness at whatever level
         * we hit `minLightness` or `maxLightness`, which may result in a number of
         * the same colors.
         *
         * @type {boolean}
         */
        _this.wrap = true;
        /**
         * Re-use same colors in the pre-set list, when ColorSet runs out of colors,
         * rather than start generating new ones.
         *
         * @type {boolean}
         */
        _this.reuse = false;
        /**
         * Saturation of colors. This will change saturation of all colors of color
         * set.
         *
         * It is recommended to set this in theme, as changing it at run time won't
         * make the items to redraw and change color.
         *
         * @type {boolean}
         */
        _this.saturation = 1;
        _this.className = "ColorSet";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ColorSet.prototype, "list", {
        /**
         * Returns current list of colors.
         *
         * If there are none, a new list of colors is generated, based on various
         * ColorSet settings.
         *
         * @return {Color[]} Color list
         */
        get: function () {
            if (!this._list) {
                this.generate(this.minColors);
            }
            return this._list;
        },
        /**
         * Sets a list of pre-defined colors to use for the iterator.
         *
         * @param {Color[]} value Color list
         */
        set: function (value) {
            this._list = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns next color in the list using internal iterator counter.
     *
     * If `step` is set to something other than 1, it may return other color than
     * exact next one in the list.
     *
     * @return {Color} Color
     */
    ColorSet.prototype.next = function () {
        if (this.list.length <= this._currentStep) {
            if (this.reuse && this._currentPass == 0 && this._list.length) {
                this.minColors = this._list.length;
            }
            this.generate(this.minColors);
        }
        var color = this.list[this._currentStep];
        this._currentStep += this.step;
        return color.saturate(this.saturation);
    };
    /**
     * Returns a color at specific index in the list.
     *
     * @param  {number}  i  Index
     * @return {Color}      Color
     */
    ColorSet.prototype.getIndex = function (i) {
        if (this.list.length <= i) {
            if (this.reuse && this._currentPass == 0 && this._list.length) {
                this.minColors = this._list.length;
            }
            this.generate(this.minColors);
            return this.getIndex(i);
        }
        return this.list[i].saturate(this.saturation);
    };
    /**
     * Resets internal iterator.
     *
     * Calling `next()` after this will return the very first color in the color
     * list, even if it was already returned before.
     */
    ColorSet.prototype.reset = function () {
        this._currentStep = 0;
    };
    Object.defineProperty(ColorSet.prototype, "currentStep", {
        /**
         * @return {number} Step
         */
        get: function () {
            return this._currentStep;
        },
        /**
         * Sets current color iteration. You can use this property to skip some
         * colors from iteration. E.g. setting it to `10` will skip first ten
         * colors.
         *
         * Please note that the number is zero-based.
         *
         * @param {number}  value  Step
         */
        set: function (value) {
            this._currentStep = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Generates colors based on the various ColorSet settings.
     *
     * @param {number} count Number of colors to generate
     */
    ColorSet.prototype.generate = function (count) {
        // Init
        var curColor = this.currentColor;
        var hsl = _Colors__WEBPACK_IMPORTED_MODULE_3__["rgbToHsl"](_Type__WEBPACK_IMPORTED_MODULE_4__["getValue"](curColor.rgb));
        var hueStep = _Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](this.stepOptions.hue) ? this.stepOptions.hue : 1 / count;
        var mods = {
            brighten: 0,
            lighten: 0,
            hue: hsl.h,
            lightness: hsl.l,
            saturation: hsl.s
        };
        // Generate list of hues, and shuffle them
        var hues = [];
        if (this.reuse) {
            for (var i = 0; i < count; i++) {
                hues.push(_Colors__WEBPACK_IMPORTED_MODULE_3__["rgbToHsl"](_Type__WEBPACK_IMPORTED_MODULE_4__["getValue"](this._list[i].rgb)).h);
            }
        }
        else {
            for (var i = 0; i < count; i++) {
                var h = hsl.h + hueStep * i;
                if (this.wrap && (h > 1)) {
                    h -= 1;
                }
                hues.push(h);
            }
        }
        // Shuffle colors randomly
        if (this.shuffle) {
            hues.sort(function (a, b) {
                return Math.random() - 0.5;
            });
        }
        // Generate colors by rotating hue
        for (var i = 0; i < count; i++) {
            // Update hue
            if (this.reuse) {
                hsl = _Colors__WEBPACK_IMPORTED_MODULE_3__["rgbToHsl"](_Type__WEBPACK_IMPORTED_MODULE_4__["getValue"](this._list[i].rgb));
            }
            else {
                hsl.h = hues.shift();
            }
            // Apply HSL mods
            this.applyStepOptions(hsl, mods, i + 1, this._currentPass);
            // Convert back to Color
            var c = Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])(_Colors__WEBPACK_IMPORTED_MODULE_3__["hslToRgb"](hsl));
            // Apply regular color mods
            var brighten = (this.stepOptions.brighten || 0) * (i + 1) + (this.passOptions.brighten || 0) * this._currentPass;
            if (brighten != 0) {
                if (this.wrap) {
                    brighten = _Utils__WEBPACK_IMPORTED_MODULE_5__["fitNumberRelative"](brighten, this.minLightness, this.maxLightness);
                }
                else {
                    brighten = _Utils__WEBPACK_IMPORTED_MODULE_5__["fitNumber"](brighten, this.minLightness, this.maxLightness);
                }
                c = c.brighten(brighten);
            }
            var lighten = (this.stepOptions.lighten || 0) * (i + 1) + (this.passOptions.lighten || 0) * this._currentPass;
            if (lighten != 0) {
                if (this.wrap) {
                    lighten = _Utils__WEBPACK_IMPORTED_MODULE_5__["fitNumberRelative"](lighten, this.minLightness, this.maxLightness);
                }
                else {
                    lighten = _Utils__WEBPACK_IMPORTED_MODULE_5__["fitNumber"](lighten, this.minLightness, this.maxLightness);
                }
                c = c.lighten(lighten);
            }
            this._list.push(c);
        }
        this._currentPass++;
    };
    Object.defineProperty(ColorSet.prototype, "currentColor", {
        /**
         * Returns current last color. It's either the last color in the list of
         * colors, or `baseColor` if list is empty.
         *
         * @return {Color} Color
         */
        get: function () {
            if (this._list.length == 0) {
                return this.baseColor.saturate(this.saturation);
            }
            else {
                return this._list[this._list.length - 1].saturate(this.saturation);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Generates modifiers for color, based on what step and pass.
     *
     * @param {iHSL}                  hsl   Curren HSL value of the color to modify
     * @param {IColorSetStepOptions}  base  The modifiers that were before modification to use as a base
     * @param {number}                step  Current step
     * @param {number}                pass  Current pass
     */
    ColorSet.prototype.applyStepOptions = function (hsl, base, step, pass) {
        // Process lightness
        hsl.l = base.lightness + (this.stepOptions.lightness || 0) * step + (this.passOptions.lightness || 0) * pass;
        if (this.wrap) {
            if (hsl.l > 1) {
                hsl.l = hsl.l - Math.floor(hsl.l);
            }
            else if (hsl.l < 0) {
                hsl.l = -(hsl.l - Math.floor(hsl.l));
            }
            hsl.l = _Utils__WEBPACK_IMPORTED_MODULE_5__["fitNumberRelative"](hsl.l, this.minLightness, this.maxLightness);
        }
        else {
            if (hsl.l > 1) {
                hsl.l = 1;
            }
            else if (hsl.l < 0) {
                hsl.l = 0;
            }
            hsl.l = _Utils__WEBPACK_IMPORTED_MODULE_5__["fitNumber"](hsl.l, this.minLightness, this.maxLightness);
        }
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param {object}  config  Config
     */
    ColorSet.prototype.processConfig = function (config) {
        if (config) {
            // Set up axis ranges
            if (_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](config.list) && _Type__WEBPACK_IMPORTED_MODULE_4__["isArray"](config.list)) {
                for (var i = 0, len = config.list.length; i < len; i++) {
                    if (!(config.list[i] instanceof _Color__WEBPACK_IMPORTED_MODULE_2__["Color"])) {
                        config.list[i] = Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])(config.list[i]);
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return ColorSet;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

//# sourceMappingURL=ColorSet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js ***!
  \*************************************************************************/
/*! exports provided: rgb, hexToRgb, rgbaToRgb, rgbToHex, rgbToRGBA, pad2, interpolate, lighten, getLightnessStep, brighten, getBrightnessStep, saturate, hslToRgb, rgbToHsl, rgbToHsv, hsvToRgb, isLight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hexToRgb", function() { return hexToRgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbaToRgb", function() { return rgbaToRgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbToHex", function() { return rgbToHex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbToRGBA", function() { return rgbToRGBA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pad2", function() { return pad2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return interpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lighten", function() { return lighten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLightnessStep", function() { return getLightnessStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brighten", function() { return brighten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBrightnessStep", function() { return getBrightnessStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturate", function() { return saturate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslToRgb", function() { return hslToRgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbToHsl", function() { return rgbToHsl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbToHsv", function() { return rgbToHsv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsvToRgb", function() { return hsvToRgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLight", function() { return isLight; });
/* harmony import */ var _Math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A collection of color-related functions
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * Define named colors for easy resolution to RGB.
 *
 * @type {Object}
 */
var namedColors = {
    aliceblue: { r: 240, g: 248, b: 255 },
    antiquewhite: { r: 250, g: 235, b: 215 },
    aqua: { r: 0, g: 255, b: 255 },
    aquamarine: { r: 127, g: 255, b: 212 },
    azure: { r: 240, g: 255, b: 255 },
    beige: { r: 245, g: 245, b: 220 },
    bisque: { r: 255, g: 228, b: 196 },
    black: { r: 0, g: 0, b: 0 },
    blanchedalmond: { r: 255, g: 235, b: 205 },
    blue: { r: 0, g: 0, b: 255 },
    blueviolet: { r: 138, g: 43, b: 226 },
    brown: { r: 165, g: 42, b: 42 },
    burlywood: { r: 222, g: 184, b: 135 },
    cadetblue: { r: 95, g: 158, b: 160 },
    chartreuse: { r: 127, g: 255, b: 0 },
    chocolate: { r: 210, g: 105, b: 30 },
    coral: { r: 255, g: 127, b: 80 },
    cornflowerblue: { r: 100, g: 149, b: 237 },
    cornsilk: { r: 255, g: 248, b: 220 },
    crimson: { r: 220, g: 20, b: 60 },
    cyan: { r: 0, g: 255, b: 255 },
    darkblue: { r: 0, g: 0, b: 139 },
    darkcyan: { r: 0, g: 139, b: 139 },
    darkgoldenrod: { r: 184, g: 134, b: 11 },
    darkgray: { r: 169, g: 169, b: 169 },
    darkgrey: { r: 169, g: 169, b: 169 },
    darkgreen: { r: 0, g: 100, b: 0 },
    darkkhaki: { r: 189, g: 183, b: 107 },
    darkmagenta: { r: 139, g: 0, b: 139 },
    darkolivegreen: { r: 85, g: 107, b: 47 },
    darkorange: { r: 255, g: 140, b: 0 },
    darkorchid: { r: 153, g: 50, b: 204 },
    darkred: { r: 139, g: 0, b: 0 },
    darksalmon: { r: 233, g: 150, b: 122 },
    darkseagreen: { r: 143, g: 188, b: 143 },
    darkslateblue: { r: 72, g: 61, b: 139 },
    darkslategray: { r: 47, g: 79, b: 79 },
    darkslategrey: { r: 47, g: 79, b: 79 },
    darkturquoise: { r: 0, g: 206, b: 209 },
    darkviolet: { r: 148, g: 0, b: 211 },
    deeppink: { r: 255, g: 20, b: 147 },
    deepskyblue: { r: 0, g: 191, b: 255 },
    dimgray: { r: 105, g: 105, b: 105 },
    dimgrey: { r: 105, g: 105, b: 105 },
    dodgerblue: { r: 30, g: 144, b: 255 },
    firebrick: { r: 178, g: 34, b: 34 },
    floralwhite: { r: 255, g: 250, b: 240 },
    forestgreen: { r: 34, g: 139, b: 34 },
    fuchsia: { r: 255, g: 0, b: 255 },
    gainsboro: { r: 220, g: 220, b: 220 },
    ghostwhite: { r: 248, g: 248, b: 255 },
    gold: { r: 255, g: 215, b: 0 },
    goldenrod: { r: 218, g: 165, b: 32 },
    gray: { r: 128, g: 128, b: 128 },
    grey: { r: 128, g: 128, b: 128 },
    green: { r: 0, g: 128, b: 0 },
    greenyellow: { r: 173, g: 255, b: 47 },
    honeydew: { r: 240, g: 255, b: 240 },
    hotpink: { r: 255, g: 105, b: 180 },
    indianred: { r: 205, g: 92, b: 92 },
    indigo: { r: 75, g: 0, b: 130 },
    ivory: { r: 255, g: 255, b: 240 },
    khaki: { r: 240, g: 230, b: 140 },
    lavender: { r: 230, g: 230, b: 250 },
    lavenderblush: { r: 255, g: 240, b: 245 },
    lawngreen: { r: 124, g: 252, b: 0 },
    lemonchiffon: { r: 255, g: 250, b: 205 },
    lightblue: { r: 173, g: 216, b: 230 },
    lightcoral: { r: 240, g: 128, b: 128 },
    lightcyan: { r: 224, g: 255, b: 255 },
    lightgoldenrodyellow: { r: 250, g: 250, b: 210 },
    lightgray: { r: 211, g: 211, b: 211 },
    lightgrey: { r: 211, g: 211, b: 211 },
    lightgreen: { r: 144, g: 238, b: 144 },
    lightpink: { r: 255, g: 182, b: 193 },
    lightsalmon: { r: 255, g: 160, b: 122 },
    lightseagreen: { r: 32, g: 178, b: 170 },
    lightskyblue: { r: 135, g: 206, b: 250 },
    lightslategray: { r: 119, g: 136, b: 153 },
    lightslategrey: { r: 119, g: 136, b: 153 },
    lightsteelblue: { r: 176, g: 196, b: 222 },
    lightyellow: { r: 255, g: 255, b: 224 },
    lime: { r: 0, g: 255, b: 0 },
    limegreen: { r: 50, g: 205, b: 50 },
    linen: { r: 250, g: 240, b: 230 },
    magenta: { r: 255, g: 0, b: 255 },
    maroon: { r: 128, g: 0, b: 0 },
    mediumaquamarine: { r: 102, g: 205, b: 170 },
    mediumblue: { r: 0, g: 0, b: 205 },
    mediumorchid: { r: 186, g: 85, b: 211 },
    mediumpurple: { r: 147, g: 112, b: 219 },
    mediumseagreen: { r: 60, g: 179, b: 113 },
    mediumslateblue: { r: 123, g: 104, b: 238 },
    mediumspringgreen: { r: 0, g: 250, b: 154 },
    mediumturquoise: { r: 72, g: 209, b: 204 },
    mediumvioletred: { r: 199, g: 21, b: 133 },
    midnightblue: { r: 25, g: 25, b: 112 },
    mintcream: { r: 245, g: 255, b: 250 },
    mistyrose: { r: 255, g: 228, b: 225 },
    moccasin: { r: 255, g: 228, b: 181 },
    navajowhite: { r: 255, g: 222, b: 173 },
    navy: { r: 0, g: 0, b: 128 },
    oldlace: { r: 253, g: 245, b: 230 },
    olive: { r: 128, g: 128, b: 0 },
    olivedrab: { r: 107, g: 142, b: 35 },
    orange: { r: 255, g: 165, b: 0 },
    orangered: { r: 255, g: 69, b: 0 },
    orchid: { r: 218, g: 112, b: 214 },
    palegoldenrod: { r: 238, g: 232, b: 170 },
    palegreen: { r: 152, g: 251, b: 152 },
    paleturquoise: { r: 175, g: 238, b: 238 },
    palevioletred: { r: 219, g: 112, b: 147 },
    papayawhip: { r: 255, g: 239, b: 213 },
    peachpuff: { r: 255, g: 218, b: 185 },
    peru: { r: 205, g: 133, b: 63 },
    pink: { r: 255, g: 192, b: 203 },
    plum: { r: 221, g: 160, b: 221 },
    powderblue: { r: 176, g: 224, b: 230 },
    purple: { r: 128, g: 0, b: 128 },
    rebeccapurple: { r: 102, g: 51, b: 153 },
    red: { r: 255, g: 0, b: 0 },
    rosybrown: { r: 188, g: 143, b: 143 },
    royalblue: { r: 65, g: 105, b: 225 },
    saddlebrown: { r: 139, g: 69, b: 19 },
    salmon: { r: 250, g: 128, b: 114 },
    sandybrown: { r: 244, g: 164, b: 96 },
    seagreen: { r: 46, g: 139, b: 87 },
    seashell: { r: 255, g: 245, b: 238 },
    sienna: { r: 160, g: 82, b: 45 },
    silver: { r: 192, g: 192, b: 192 },
    skyblue: { r: 135, g: 206, b: 235 },
    slateblue: { r: 106, g: 90, b: 205 },
    slategray: { r: 112, g: 128, b: 144 },
    slategrey: { r: 112, g: 128, b: 144 },
    snow: { r: 255, g: 250, b: 250 },
    springgreen: { r: 0, g: 255, b: 127 },
    steelblue: { r: 70, g: 130, b: 180 },
    tan: { r: 210, g: 180, b: 140 },
    teal: { r: 0, g: 128, b: 128 },
    thistle: { r: 216, g: 191, b: 216 },
    tomato: { r: 255, g: 99, b: 71 },
    turquoise: { r: 64, g: 224, b: 208 },
    violet: { r: 238, g: 130, b: 238 },
    wheat: { r: 245, g: 222, b: 179 },
    white: { r: 255, g: 255, b: 255 },
    whitesmoke: { r: 245, g: 245, b: 245 },
    yellow: { r: 255, g: 255, b: 0 },
    yellowgreen: { r: 154, g: 205, b: 50 }
};
/**
 * Tries to resolve a named color into a hex color representation.
 *
 * @ignore Exclude from docs
 * @param  {string}  value  Color name
 * @return {string}         Color
 * @deprecated
 * @hidden
 */
/*export function resolveNamedColor(value: string): Color {
    return (<any>namedColors)[value] ? (<any>namedColors)[value] : undefined;
}*/
/**
 * Converts a proper color hex code (i.e. "#FF5500") or named color (i.e. "red")
 * into an {iRGB} object. If the code is not correctly formatted, an RGB of
 * black is returned.
 *
 * @ignore Exclude from docs
 * @param  {string}  color  Color code
 * @param  {number}  alpha  Alpha (0-1)
 * @return {iRGB}           RGB
 */
function rgb(color, alpha) {
    // Init return value
    var rgb;
    // Try resolving color format
    // Named color?
    if (namedColors[color]) {
        rgb = namedColors[color];
    }
    // Hex code?
    else if (color.charAt(0) === "#") {
        rgb = hexToRgb(color);
    }
    // rgb() format?
    else if (color.match(/^rgba?\(/)) {
        rgb = rgbaToRgb(color);
    }
    // Was not able to resolve?
    if (!rgb) {
        rgb = { r: 0, g: 0, b: 0, a: 1 };
    }
    // Set alpha
    if (_Type__WEBPACK_IMPORTED_MODULE_1__["hasValue"](alpha)) {
        rgb.a = alpha;
    }
    return rgb;
}
/**
 * Converts a hex color code (i.e. "#FF5500") to an [[iRGB]] object.
 *
 * @ignore Exclude from docs
 * @param  {string}  hex  Hex color code
 * @return {iRGB}         RGB
 */
function hexToRgb(hex) {
    // Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")
    var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    hex = hex.replace(shorthandRegex, function (m, r, g, b) {
        return r + r + g + g + b + b;
    });
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : undefined;
}
/**
 * Converts color strings in format like `rgb()` and `rgba()` to [[iRGB]].
 *
 * @ignore Exclude from docs
 * @param  {string}  color  Color code
 * @return {iRGB}           RGB
 */
function rgbaToRgb(color) {
    // Init
    var matches;
    color = color.replace(/[ ]/g, "");
    // Try rgb() format
    if (matches = color.match(/^rgb\(([0-9]*),([0-9]*),([0-9]*)\)/i)) {
        matches.push("1");
    }
    else if (matches = color.match(/^rgba\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\)/i)) {
        // nothing
    }
    else {
        return undefined;
    }
    return {
        r: parseInt(matches[1]),
        g: parseInt(matches[2]),
        b: parseInt(matches[3]),
        a: parseFloat(matches[4])
    };
}
/**
 * Converts an [[iRGB]] object into a hex color code.
 *
 * @ignore Exclude from docs
 * @param  {iRGB}    rgb  RGB
 * @return {string}       Hex color code
 */
function rgbToHex(rgb) {
    return "#" + pad2(rgb.r.toString(16)) + pad2(rgb.g.toString(16)) + pad2(rgb.b.toString(16));
}
/**
 * Converts an [[iRGB]] object into its `rgb()` or `rgba()` representation.
 *
 * @ignore Exclude from docs
 * @param  {iRGB}    rgb  RGB
 * @return {string}       `rgba()` syntax
 */
function rgbToRGBA(rgb) {
    if (_Type__WEBPACK_IMPORTED_MODULE_1__["hasValue"](rgb.a) && rgb.a !== 1) {
        return "rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + "," + rgb.a + ")";
    }
    else {
        return "rgb(" + rgb.r + "," + rgb.g + "," + rgb.b + ")";
    }
}
/**
 * Pads a 1-digit string with a zero.
 *
 * @ignore Exclude from docs
 * @param  {string}  c  Input string
 * @return {string}     Padded string
 */
function pad2(c) {
    return c.length == 1 ? "0" + c : "" + c;
}
/**
 * Returns an intermediate color between two colors based on the relative
 * position. Position needs to be in range between 0 and 1. Zero meaning the
 * resulting color will be closest to the first reference color.
 *
 * @ignore Exclude from docs
 * @param  {Optional<iRGB>}    color1   First reference color
 * @param  {Optional<iRGB>}    color2   Second reference color
 * @param  {number}            percent  Relative position (0-1)
 * @return {Optional<iRGB>}             Interpolated color
 */
function interpolate(rgb1, rgb2, percent) {
    percent = _Math__WEBPACK_IMPORTED_MODULE_0__["fitToRange"](percent, 0, 1);
    if (rgb1) {
        if (rgb2) {
            return {
                r: rgb1.r + Math.round((rgb2.r - rgb1.r) * percent),
                g: rgb1.g + Math.round((rgb2.g - rgb1.g) * percent),
                b: rgb1.b + Math.round((rgb2.b - rgb1.b) * percent),
                a: (rgb1.a || 1) + Math.round(((rgb2.a || 1) - (rgb1.a || 1)) * percent)
            };
        }
        else {
            return rgb1;
        }
    }
    else if (rgb2) {
        return rgb2;
    }
    else {
        return rgb1;
    }
}
/**
 * Returns a color that is `percent` brighter than the reference color.
 *
 * @ignore Exclude from docs
 * @param  {iRGB}    color    Reference color
 * @param  {number}  percent  Brightness percent
 * @return {iRGB}             Hex code of the new color
 */
function lighten(rgb, percent) {
    if (rgb) {
        return {
            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),
            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),
            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),
            a: rgb.a
        };
    }
    else {
        // TODO is this correct ?
        return rgb;
    }
}
;
/**
 * Gets lightness step.
 *
 * @ignore Exclude from docs
 * @param  {number}  value    Value
 * @param  {number}  percent  Percent
 * @return {number}           Step
 */
function getLightnessStep(value, percent) {
    var base = percent > 0 ? 255 - value : value;
    return Math.round(base * percent);
}
/**
 * Returns a color that is `percent` brighter than the source `color`.
 *
 * @ignore Exclude from docs
 * @param  {iRGB}    color    Source color
 * @param  {number}  percent  Brightness percent
 * @return {iRGB}             New color
 */
function brighten(rgb, percent) {
    if (rgb) {
        var base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);
        //let base = Math.max(rgb.r, rgb.g, rgb.b);
        var step = getLightnessStep(base, percent);
        return {
            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),
            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),
            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),
            a: rgb.a
        };
    }
    else {
        // TODO is this correct ?
        return rgb;
    }
}
;
/**
 * Returns brightness step.
 *
 * @ignore Exclude from docs
 * @param  {number}  value    Value
 * @param  {number}  percent  Percent
 * @return {number}           Step
 */
function getBrightnessStep(value, percent) {
    var base = 255; //percent > 0 ? 255 - value : value;
    return Math.round(base * percent);
}
/**
 * Returns a new [[iRGB]] object based on `rgb` parameter with specific
 * saturation applied.
 *
 * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully
 * saturated).
 *
 * @ignore Exclude from docs
 * @param  {iRGB}    color       Base color
 * @param  {number}  saturation  Saturation (0-1)
 * @return {iRGB}                New color
 */
function saturate(rgb, saturation) {
    if (rgb == null || saturation == 1) {
        return rgb;
    }
    var hsl = rgbToHsl(rgb);
    hsl.s = saturation;
    return hslToRgb(hsl);
}
/*
// not used
export function rgbToMatrix(rgb: iRGB): string {
    let r = $type.toText($math.round((rgb.r || 0) / 255, 10));
    let g = $type.toText($math.round((rgb.g || 0) / 255, 10));
    let b = $type.toText($math.round((rgb.b || 0) / 255, 10));
    let a = $type.toText(rgb.a || 1);
    return	      r + " 0 0 0 0" +
                    " 0 " + g + " 0 0 0" +
                    " 0 0 " + b + " 0 0" +
                    " 0 0 0 " + a + " 0";
}
*/
/**
 * The functions below are taken and adapted from Garry Tan's blog post:
 * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c
 *
 * The further attributions go mjijackson.com, which now seems to be defunct.
 */
/**
 * Converts an HSL color value to RGB. Conversion formula
 * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
 * Assumes h, s, and l are contained in the set [0, 1] and
 * returns r, g, and b in the set [0, 255].
 *
 * Function adapted from:
 * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c
 *
 * @ignore Exclude from docs
 * @param   {number}  h       The hue
 * @param   {number}  s       The saturation
 * @param   {number}  l       The lightness
 * @return  {Array}           The RGB representation
 */
function hslToRgb(color) {
    var r, g, b;
    var h = color.h;
    var s = color.s;
    var l = color.l;
    if (s == 0) {
        r = g = b = l; // achromatic
    }
    else {
        var hue2rgb = function hue2rgb(p, q, t) {
            if (t < 0)
                t += 1;
            if (t > 1)
                t -= 1;
            if (t < 1 / 6)
                return p + (q - p) * 6 * t;
            if (t < 1 / 2)
                return q;
            if (t < 2 / 3)
                return p + (q - p) * (2 / 3 - t) * 6;
            return p;
        };
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
    }
    return {
        r: Math.round(r * 255),
        g: Math.round(g * 255),
        b: Math.round(b * 255)
    };
}
/**
 * Converts an RGB color value to HSL. Conversion formula
 * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
 * Assumes r, g, and b are contained in the set [0, 255] and
 * returns h, s, and l in the set [0, 1].
 *
 * Function adapted from:
 * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c
 *
 * @ignore Exclude from docs
 * @param   {number}  r       The red color value
 * @param   {number}  g       The green color value
 * @param   {number}  b       The blue color value
 * @return  {Array}           The HSL representation
 */
function rgbToHsl(color) {
    var r = color.r / 255;
    var g = color.g / 255;
    var b = color.b / 255;
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var s = 0;
    var l = (max + min) / 2;
    if (max === min) {
        h = s = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
        }
        h /= 6;
    }
    return {
        h: h,
        s: s,
        l: l
    };
}
/**
 * Converts an RGB color value to HSV. Conversion formula
 * adapted from http://en.wikipedia.org/wiki/HSV_color_space.
 * Assumes r, g, and b are contained in the set [0, 255] and
 * returns h, s, and v in the set [0, 1].
 *
 * @ignore Exclude from docs
 * @param   Number  r       The red color value
 * @param   Number  g       The green color value
 * @param   Number  b       The blue color value
 * @return  Array           The HSV representation
 */
function rgbToHsv(color) {
    var r = color.r / 255;
    var g = color.g / 255;
    var b = color.b / 255;
    var max = Math.max(r, g, b), min = Math.min(r, g, b);
    var h = 0;
    var s = 0;
    var v = max;
    var d = max - min;
    s = max == 0 ? 0 : d / max;
    if (max == min) {
        h = 0; // achromatic
    }
    else {
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
        }
        h /= 6;
    }
    return {
        h: h,
        s: s,
        v: v
    };
}
/**
 * Converts an HSV color value to RGB. Conversion formula
 * adapted from http://en.wikipedia.org/wiki/HSV_color_space.
 * Assumes h, s, and v are contained in the set [0, 1] and
 * returns r, g, and b in the set [0, 255].
 *
 * @ignore Exclude from docs
 * @param   Number  h       The hue
 * @param   Number  s       The saturation
 * @param   Number  v       The value
 * @return  Array           The RGB representation
 */
function hsvToRgb(color) {
    var r = 0;
    var g = 0;
    var b = 0;
    var h = color.h;
    var s = color.s;
    var v = color.v;
    var i = Math.floor(h * 6);
    var f = h * 6 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);
    switch (i % 6) {
        case 0:
            r = v, g = t, b = p;
            break;
        case 1:
            r = q, g = v, b = p;
            break;
        case 2:
            r = p, g = v, b = t;
            break;
        case 3:
            r = p, g = q, b = v;
            break;
        case 4:
            r = t, g = p, b = v;
            break;
        case 5:
            r = v, g = p, b = q;
            break;
    }
    return {
        r: Math.round(r * 255),
        g: Math.round(g * 255),
        b: Math.round(b * 255)
    };
}
/**
 * Returns `true` if color is "light". Useful indetermining which contrasting
 * color to use for elements over this color. E.g.: you would want to use
 * black text over light background, and vice versa.
 *
 * @ignore Exclude from docs
 * @param  {iRGB}     color  Source color
 * @return {boolean}         Light?
 */
function isLight(color) {
    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;
}
//# sourceMappingURL=Colors.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js ***!
  \**********************************************************************/
/*! exports provided: SVGNS, XMLNS, XLINK, addEventListener, getElement, addClass, removeClass, setStyle, blur, focus, outerHTML, isElement, contains, copyAttributes, fixPixelPerfect, StyleRule, StyleClass, ready */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SVGNS", function() { return SVGNS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XMLNS", function() { return XMLNS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XLINK", function() { return XLINK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEventListener", function() { return addEventListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return getElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return addClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return removeClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setStyle", function() { return setStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blur", function() { return blur; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "focus", function() { return focus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerHTML", function() { return outerHTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isElement", function() { return isElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyAttributes", function() { return copyAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixPixelPerfect", function() { return fixPixelPerfect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleRule", function() { return StyleRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleClass", function() { return StyleClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ready", function() { return ready; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _AsyncPending__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncPending */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js");
/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A collection of DOM-related functions.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * SVG namespace.
 *
 * @ignore Exclude from docs
 * @type {string}
 */
var SVGNS = "http://www.w3.org/2000/svg";
/**
 * XML namespace.
 *
 * @ignore Exclude from docs
 * @type {string}
 */
var XMLNS = "http://www.w3.org/2000/xmlns/";
/**
 * XLINK namespace.
 *
 * @ignore Exclude from docs
 * @type {string}
 */
var XLINK = "http://www.w3.org/1999/xlink";
/**
 * Function that adds a disposable event listener directly to a DOM element.
 *
 * @ignore Exclude from docs
 * @param {EventTarget}   dom       A DOM element to add event to
 * @param {string}        type      Event type
 * @param {Function}      listener  Event listener
 * @returns {IDisposer}             Disposable event
 */
function addEventListener(dom, type, listener, options) {
    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)
    //console.log(type, dom);
    dom.addEventListener(type, listener, options || false);
    return new _Disposer__WEBPACK_IMPORTED_MODULE_1__["Disposer"](function () {
        dom.removeEventListener(type, listener, options || false);
    });
}
/**
 * Finds and returns an element reference using following logic:
 * * If we pass in an element instance, we just return it back.
 * * If we pass in a string, the function looks for an element with such id.
 * * If no element with such id is found, we grab the first element with a tag name like this.
 *
 * @ignore Exclude from docs
 * @param  {Optional<HTMLElement | string>}  el  Element definition (reference, or id, or tag name)
 * @return {Optional<HTMLElement>}               Element reference
 * @todo Review this function as it seems pretty fuzzy and hacky
 */
function getElement(el) {
    if (_Type__WEBPACK_IMPORTED_MODULE_5__["isString"](el)) {
        var e = document.getElementById(el);
        if (e == null) {
            e = document.getElementsByClassName(el)[0];
        }
        if (e instanceof HTMLElement) {
            return e;
        }
    }
    else if (el instanceof HTMLElement) {
        return el;
    }
}
/**
 * Adds a class name to an HTML or SVG element.
 *
 * @ignore Exclude from docs
 * @param {HTMLElement | SVGSVGElement}  element    Element
 * @param {string}                       className  Class name to add
 */
function addClass(element, className) {
    if (element.classList) {
        element.classList.add(className);
    }
    else {
        var currentClassName = element.getAttribute("class");
        if (currentClassName) {
            element.setAttribute("class", currentClassName.split(" ").filter(function (item) {
                return item !== className;
            }).join(" ") + " " + className);
        }
        else {
            element.setAttribute("class", className);
        }
        //element.className = element.className.replace(new RegExp("^" + className + "| " + className), "") + " " + className;
    }
}
/**
 * Removes a class name from an HTML or SVG element.
 *
 * @ignore Exclude from docs
 * @param {HTMLElement | SVGSVGElement}  element    Element
 * @param {string}                       className  Class name to add
 */
function removeClass(element, className) {
    if (element.classList) {
        element.classList.remove(className);
    }
    else {
        var currentClassName = element.getAttribute("class");
        if (currentClassName) {
            element.setAttribute("class", currentClassName.split(" ").filter(function (item) {
                return item !== className;
            }).join(" "));
        }
        //element.className = element.className.replace(new RegExp("^" + className + "| " + className), "");
    }
}
/**
 * Sets style property on DOM element.
 *
 * @ignore Exclude from docs
 * @todo Still needed?
 */
function setStyle(element, property, value) {
    element.style[property] = value;
}
/**
 * Removes focus from any element by shifting focus to body.
 *
 * @ignore Exclude from docs
 */
function blur() {
    var input = document.createElement("input");
    input.style.position = "fixed";
    input.style.top = "0px";
    input.style.left = "-10000px";
    document.body.appendChild(input);
    input.focus();
    input.blur();
    document.body.removeChild(input);
}
/**
 * Tries to focus the element.
 *
 * @ignore Exlude from docs
 * @param {HTMLElement | SVGSVGElement}  element  Element to focus
 */
function focus(element) {
    if (element instanceof HTMLElement) {
        element.focus();
    }
    else {
        var input = document.createElement("input");
        var fo = document.createElementNS(SVGNS, "foreignObject");
        fo.appendChild(input);
        element.appendChild(fo);
        input.focus();
        input.disabled = true;
        fo.remove();
    }
    /*if ((<any>element).focus != undefined) {
        (<any>element).focus();
    }
    else if (element instanceof SVGSVGElement) {
        // Not implemented
        // @todo implement focus fallback
    }*/
}
/**
 * Returns markup for the element including the element tag itself.
 * SVG elements do not support `outerHTML` so this functions applies of
 * a workaround which creates a new temporary wrapper, clones element and uses
 * wrapper's `innerHTML`.
 *
 * @ignore Exclude from docs
 * @param  {HTMLElement | SVGSVGElement}  element  Element to get full markup for
 * @return {string}                                Markup
 * @deprecated Not in use anywhere
 */
function outerHTML(element) {
    if (element.outerHTML) {
        return element.outerHTML;
    }
    else {
        var twrap = document.createElement("div");
        var tnode = element.cloneNode(true);
        twrap.appendChild(tnode);
        var content = twrap.innerHTML;
        return content;
    }
}
/**
 * Checks if element is a valid DOM node.
 *
 * @ignore Exclude from docs
 * @param  {HTMLElement}  el  Element
 * @return {boolean}          `true` if element is a valid DOM node
 */
function isElement(el) {
    return el instanceof Object && el && el.nodeType === 1;
}
/**
 * Checks of element `a` contains element `b`.
 *
 * @param  {HTMLElement | SVGSVGElement}  a  Aleged ascendant
 * @param  {HTMLElement | SVGSVGElement}  b  Aleged descendant
 * @return {boolean}                         Contains?
 */
function contains(a, b) {
    return a !== b && (a.contains
        ? a.contains(b)
        : a.compareDocumentPosition
            ? !!(a.compareDocumentPosition(b) & 16)
            : true);
}
/**
 * Copies attributes from one element to another.
 *
 * @ignore Exclude from docs
 * @param {Element | HTMLElement |  SVGSVGElement}  source  Element to copy attributes from
 * @param {HTMLElement | SVGSVGElement}          target  Element to copy attributes to
 */
function copyAttributes(source, target) {
    _Array__WEBPACK_IMPORTED_MODULE_4__["each"](source.attributes, function (attr) {
        // TODO what if it's null ?
        if (attr.value != null) {
            target.setAttribute(attr.name, attr.value);
        }
    });
}
/**
 * [fixPixelPerfect description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param {HTMLElement}  el  Element
 */
function fixPixelPerfect(el) {
    Object(_AsyncPending__WEBPACK_IMPORTED_MODULE_2__["readFrame"])(function () {
        // sometimes IE doesn't like this
        // TODO figure out a way to remove this
        try {
            var rect = el.getBoundingClientRect();
            var left_1 = rect.left - Math.round(rect.left);
            var top_1 = rect.top - Math.round(rect.top);
            if (left_1 !== 0) {
                Object(_AsyncPending__WEBPACK_IMPORTED_MODULE_2__["writeFrame"])(function () {
                    el.style.left = left_1 + "px";
                });
            }
            if (top_1 !== 0) {
                Object(_AsyncPending__WEBPACK_IMPORTED_MODULE_2__["writeFrame"])(function () {
                    el.style.top = top_1 + "px";
                });
            }
        }
        catch (e) { }
    });
}
/**
 * [rootStylesheet description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Optional<CSSStyleSheet>}
 */
var rootStylesheet;
/**
 * [getStylesheet description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @return {CSSStyleSheet} [description]
 */
function getStylesheet() {
    if (!_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](rootStylesheet)) {
        // TODO use createElementNS ?
        var e = document.createElement("style");
        e.type = "text/css";
        document.head.appendChild(e);
        rootStylesheet = e.sheet;
    }
    return rootStylesheet;
}
/**
 * [makeStylesheet description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {string}        selector  [description]
 * @return {CSSStyleRule}            [description]
 */
function makeStylesheet(selector) {
    var root = getStylesheet();
    var index = root.cssRules.length;
    root.insertRule(selector + "{}", index);
    return root.cssRules[index];
}
/**
 * Defines a class for a CSS rule.
 *
 * Can be used to dynamically add CSS to the document.
 */
var StyleRule = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](StyleRule, _super);
    /**
     * Constructor.
     *
     * @param {string}  selector  CSS selector
     * @param {object}  styles    An object of style attribute - value pairs
     */
    function StyleRule(selector, styles) {
        var _this = 
        // TODO test this
        _super.call(this, function () {
            var root = getStylesheet();
            // TODO a bit hacky
            var index = _Array__WEBPACK_IMPORTED_MODULE_4__["indexOf"](root.cssRules, _this._rule);
            if (index === -1) {
                throw new Error("Could not dispose StyleRule");
            }
            else {
                root.deleteRule(index);
            }
        }) || this;
        _this._rule = makeStylesheet(selector);
        _Object__WEBPACK_IMPORTED_MODULE_3__["each"](styles, function (key, value) {
            _this.setStyle(key, value);
        });
        return _this;
    }
    Object.defineProperty(StyleRule.prototype, "selector", {
        /**
         * @return {string} CSS selector
         */
        get: function () {
            return this._rule.selectorText;
        },
        /**
         * A CSS selector text.
         *
         * E.g.: `.myClass p`
         *
         * @param {string}  selector  CSS selector
         */
        set: function (selector) {
            this._rule.selectorText = selector;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the same style properties with browser-speicifc prefixes.
     *
     * @param {string}  name   Attribute name
     * @param {string}  value  Attribute value
     */
    StyleRule.prototype._setVendorPrefixName = function (name, value) {
        var style = this._rule.style;
        style.setProperty("-webkit-" + name, value, "");
        style.setProperty("-moz-" + name, value, "");
        style.setProperty("-ms-" + name, value, "");
        style.setProperty("-o-" + name, value, "");
        style.setProperty(name, value, "");
    };
    /**
     * Sets a value for specific style attribute.
     *
     * @param {string}  name   Attribute
     * @param {string}  value  Value
     */
    StyleRule.prototype.setStyle = function (name, value) {
        if (name === "transition") {
            this._setVendorPrefixName(name, value);
        }
        else {
            this._rule.style.setProperty(name, value, "");
        }
    };
    return StyleRule;
}(_Disposer__WEBPACK_IMPORTED_MODULE_1__["Disposer"]));

/**
 * An internal counter for unique style ids.
 *
 * @ignore Exclude from docs
 * @type {number}
 */
var styleId = 0;
/**
 * @ignore Exclude from docs
 * @todo Description
 */
var StyleClass = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](StyleClass, _super);
    /**
     * Constructor.
     *
     * @param {object}  styles  An object of style attribute - value pairs
     * @param {string}  name    Class name
     */
    function StyleClass(styles, name) {
        var _this = this;
        var className = (!_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](name)
            // TODO generate the classname randomly
            ? "__style_" + (++styleId) + "__"
            : name);
        _this = _super.call(this, "." + className, styles) || this;
        _this._className = className;
        return _this;
    }
    Object.defineProperty(StyleClass.prototype, "className", {
        /**
         * @return {string} Class name
         */
        get: function () {
            return this._className;
        },
        /**
         * Class name.
         *
         * @param {string}  name  Class name
         */
        set: function (name) {
            this._className = name;
            this.selector = "." + name;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts the whole class to
     * @ignore Exclude from docs
     */
    StyleClass.prototype.toString = function () {
        return this._className;
    };
    return StyleClass;
}(StyleRule));

function ready(f) {
    if (document.readyState !== "loading") {
        f();
    }
    else {
        var listener_1 = function () {
            if (document.readyState !== "loading") {
                document.removeEventListener("readystatechange", listener_1);
                f();
            }
        };
        document.addEventListener("readystatechange", listener_1);
    }
}
//# sourceMappingURL=DOM.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js ***!
  \*****************************************************************************/
/*! exports provided: DictionaryDisposer, Dictionary, DictionaryTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DictionaryDisposer", function() { return DictionaryDisposer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return Dictionary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DictionaryTemplate", function() { return DictionaryTemplate; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _Iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _String__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./String */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * A disposable dictionary, which when disposed itself will call `dispose()`
 * method on all its items.
 */
var DictionaryDisposer = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DictionaryDisposer, _super);
    function DictionaryDisposer(dict) {
        var _this = this;
        var disposer = dict.events.on("removed", function (x) {
            x.oldValue.dispose();
        }, undefined, false);
        _this = _super.call(this, function () {
            disposer.dispose();
            // TODO clear the dictionary ?
            _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](dict.iterator(), function (a) {
                var v = a[1];
                v.dispose();
            });
        }) || this;
        return _this;
    }
    return DictionaryDisposer;
}(_Disposer__WEBPACK_IMPORTED_MODULE_1__["Disposer"]));

/**
 * A Dictionary is collection where values of some type can be mapped to
 * string keys.
 *
 * You might call it an "associative list" or "associative array".
 */
var Dictionary = /** @class */ (function () {
    /**
     * Constructor
     */
    function Dictionary() {
        /**
         * Event dispatcher.
         *
         * @type {EventDispatcher<AMEvent<Dictionary<Key, T>, IDictionaryEvents<Key, T>>>}
         */
        this.events = new _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__["EventDispatcher"]();
        this._dictionary = {};
    }
    /**
     * Returns `true` if key exists in Dictionary.
     *
     * @param  {Key}      key  The key to search for
     * @return {boolean}       `true` if key exists, `false` if it doesn't
     */
    Dictionary.prototype.hasKey = function (key) {
        return _Object__WEBPACK_IMPORTED_MODULE_3__["hasKey"](this._dictionary, key);
    };
    /**
     * Returns the value for a specific key.
     *
     * @param  {Key}          key  The key to search for
     * @return {Optional<T>}       Value for the key, or `undefined` if it doesn't exist
     */
    Dictionary.prototype.getKey = function (key) {
        return this._dictionary[key];
    };
    /**
     * Inserts value at specific key.
     *
     * Will thrown an exception if the key already exists in the dictionary.
     *
     * @param {Key}  key    Key
     * @param {T}    value  Value
     */
    Dictionary.prototype.insertKey = function (key, value) {
        if (_Object__WEBPACK_IMPORTED_MODULE_3__["hasKey"](this._dictionary, key)) {
            throw new Error("Key " + key + " already exists in dictionary");
        }
        else {
            this._dictionary[key] = value;
            if (this.events.isEnabled("insertKey")) {
                this.events.dispatchImmediately("insertKey", {
                    type: "insertKey",
                    target: this,
                    key: key,
                    newValue: value
                });
            }
        }
    };
    /**
     * Adds or updates key/value into dictionary.
     *
     * If the key already exists, the old value will be overwritten.
     *
     * If the new value is exactly the same as the old value (using ===), it won't do anything.
     *
     * @param  {Key}  key    Key
     * @param  {T}    value  Value
     */
    Dictionary.prototype.setKey = function (key, value) {
        if (_Object__WEBPACK_IMPORTED_MODULE_3__["hasKey"](this._dictionary, key)) {
            var oldValue = this._dictionary[key];
            if (oldValue !== value) {
                this._dictionary[key] = value;
                if (this.events.isEnabled("setKey")) {
                    this.events.dispatchImmediately("setKey", {
                        type: "setKey",
                        target: this,
                        key: key,
                        oldValue: oldValue,
                        newValue: value
                    });
                }
                if (this.events.isEnabled("removed")) {
                    this.events.dispatchImmediately("removed", {
                        type: "removed",
                        target: this,
                        oldValue: oldValue
                    });
                }
            }
        }
        else {
            this._dictionary[key] = value;
            if (this.events.isEnabled("insertKey")) {
                this.events.dispatchImmediately("insertKey", {
                    type: "insertKey",
                    target: this,
                    key: key,
                    newValue: value
                });
            }
        }
    };
    /**
     * Updates the value at specific `key` using custom function.
     *
     * Passes in current value into the function, and uses its output as a new
     * value.
     *
     * If the new value is exactly the same as the old value (using ===), it won't do anything.
     *
     * @ignore Exclude from docs
     * @param {Key}       key  Key
     * @param {function}  fn   Function to transform the value
     */
    Dictionary.prototype.updateKey = function (key, fn) {
        if (_Object__WEBPACK_IMPORTED_MODULE_3__["hasKey"](this._dictionary, key)) {
            var oldValue = this._dictionary[key];
            var newValue = fn(oldValue);
            if (oldValue !== newValue) {
                this._dictionary[key] = newValue;
                if (this.events.isEnabled("setKey")) {
                    this.events.dispatchImmediately("setKey", {
                        type: "setKey",
                        target: this,
                        key: key,
                        oldValue: oldValue,
                        newValue: newValue
                    });
                }
                if (this.events.isEnabled("removed")) {
                    this.events.dispatchImmediately("removed", {
                        type: "removed",
                        target: this,
                        oldValue: oldValue
                    });
                }
            }
        }
        else {
            throw new Error("Key " + key + " doesn't exist in dictionary");
        }
    };
    /**
     * Removes value at specific `key` from dictionary.
     *
     * @param {Key}  key  Key to remove
     */
    Dictionary.prototype.removeKey = function (key) {
        if (_Object__WEBPACK_IMPORTED_MODULE_3__["hasKey"](this._dictionary, key)) {
            var oldValue = this._dictionary[key];
            delete this._dictionary[key];
            if (this.events.isEnabled("removeKey")) {
                this.events.dispatchImmediately("removeKey", {
                    type: "removeKey",
                    target: this,
                    key: key,
                    oldValue: oldValue
                });
            }
            if (this.events.isEnabled("removed")) {
                this.events.dispatchImmediately("removed", {
                    type: "removed",
                    target: this,
                    oldValue: oldValue
                });
            }
        }
    };
    /**
     * [insertKeyIfEmpty description]
     *
     * @ignore Exclude from docs
     * @todo description
     * @param  {Key}       key      [description]
     * @param  {function}  ifEmpty  [description]
     * @return {T}                  [description]
     */
    Dictionary.prototype.insertKeyIfEmpty = function (key, ifEmpty) {
        if (!this.hasKey(key)) {
            this.insertKey(key, ifEmpty());
        }
        return this.getKey(key);
    };
    /**
     * Removes all items from the dictionary.
     */
    Dictionary.prototype.clear = function () {
        var _this = this;
        // TODO dispatch this after clear
        if (this.events.isEnabled("removed")) {
            _Object__WEBPACK_IMPORTED_MODULE_3__["each"](this._dictionary, function (key, value) {
                _this.events.dispatchImmediately("removed", {
                    type: "removed",
                    target: _this,
                    oldValue: value
                });
            });
        }
        this._dictionary = {};
        if (this.events.isEnabled("cleared")) {
            this.events.dispatchImmediately("cleared", {
                type: "cleared",
                target: this
            });
        }
    };
    /**
     * Copies items from another Dictionary.
     *
     * @param {Dictionary<Key, T>}  source  A Dictionary to copy items from
     */
    Dictionary.prototype.copyFrom = function (source) {
        var _this = this;
        _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](source.iterator(), function (a) {
            // TODO fix this type cast
            _this.setKey(a[0], a[1]);
        });
    };
    /**
     * Returns an interator that can be used to iterate through all items in
     * the dictionary.
     *
     * @return {Iterator} Iterator
     */
    Dictionary.prototype.iterator = function () {
        // @todo fix this type after the Iterator bug is fixed
        // https://github.com/Microsoft/TypeScript/issues/16730
        return _Object__WEBPACK_IMPORTED_MODULE_3__["entries"](this._dictionary);
    };
    /**
     * Returns an ES6 iterator for the keys/values of the dictionary.
     */
    Dictionary.prototype[Symbol.iterator] = function () {
        var _a, _b, _i, key;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_c) {
            switch (_c.label) {
                case 0:
                    _a = [];
                    for (_b in this._dictionary)
                        _a.push(_b);
                    _i = 0;
                    _c.label = 1;
                case 1:
                    if (!(_i < _a.length)) return [3 /*break*/, 4];
                    key = _a[_i];
                    if (!_Object__WEBPACK_IMPORTED_MODULE_3__["hasKey"](this._dictionary, key)) return [3 /*break*/, 3];
                    return [4 /*yield*/, [key, this._dictionary[key]]];
                case 2:
                    _c.sent();
                    _c.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    /**
     * Calls `f` for each key/value in the dictionary.
     */
    Dictionary.prototype.each = function (f) {
        _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](this.iterator(), function (_a) {
            var _b = tslib__WEBPACK_IMPORTED_MODULE_0__["__read"](_a, 2), key = _b[0], value = _b[1];
            return f(key, value);
        });
    };
    /**
     * Returns an iterator that can be used to iterate through all items in
     * the dictionary, ordered by key.
     *
     * @ignore Exclude from docs
     * @return {Iterator} Iterator
     */
    Dictionary.prototype.sortedIterator = function () {
        return _Iterator__WEBPACK_IMPORTED_MODULE_4__["sort"](this.iterator(), function (x, y) { return _String__WEBPACK_IMPORTED_MODULE_5__["order"](x[0], y[0]); });
    };
    return Dictionary;
}());

/**
 * A version of a [[Dictionary]] that has a "template".
 *
 * A template is an instance of an object, that can be used to create new
 * elements in the list without actually needing to create instances for those.
 *
 * When new element is created in the list, e.g. by calling its `create()`
 * method, an exact copy of the element is created (including properties and
 * other attributes), inserted into the list and returned.
 */
var DictionaryTemplate = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DictionaryTemplate, _super);
    /**
     * Constructor
     *
     * @param {T} t Template object
     */
    function DictionaryTemplate(t) {
        var _this = _super.call(this) || this;
        _this.template = t;
        return _this;
    }
    Object.defineProperty(DictionaryTemplate.prototype, "template", {
        /**
         * @return {T} Template object
         */
        get: function () {
            return this._template;
        },
        /**
         * A "template" object to copy all properties from when creating new list
         * items.
         *
         * @param {T}  v  Template object
         */
        set: function (v) {
            v.isTemplate = true;
            this._template = v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all elements from other dictionary.
     *
     * @param {DictionaryTemplate}  source  Source dictionary
     */
    DictionaryTemplate.prototype.copyFrom = function (source) {
        var _this = this;
        _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](source.iterator(), function (a) {
            // TODO fix this type cast
            // TODO why does this need to clone ?
            _this.setKey(a[0], a[1].clone());
        });
    };
    /**
     * Instantiates a new object of the specified type, adds it to specified
     * `key` in the dictionary, and returns it.
     *
     * @param make  Item type to use. Will use the default type for the dictionary if not specified.
     * @return      Newly created item
     */
    DictionaryTemplate.prototype.create = function (key) {
        var _this = this;
        return this.insertKeyIfEmpty(key, function () { return _this.template.clone(); });
    };
    return DictionaryTemplate;
}(Dictionary));

//# sourceMappingURL=Dictionary.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js ***!
  \***************************************************************************/
/*! exports provided: Disposer, MultiDisposer, MutableValueDisposer, CounterDisposer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Disposer", function() { return Disposer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiDisposer", function() { return MultiDisposer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MutableValueDisposer", function() { return MutableValueDisposer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CounterDisposer", function() { return CounterDisposer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * A base class for disposable objects.
 *
 * @ignore Exclude from docs
 */
var Disposer = /** @class */ (function () {
    /**
     * Constructor.
     *
     * @param {function}  dispose  Function that disposes object
     */
    function Disposer(dispose) {
        this._disposed = false;
        this._dispose = dispose;
    }
    /**
     * Checks if object is disposed.
     *
     * @return {boolean} Disposed?
     */
    Disposer.prototype.isDisposed = function () {
        return this._disposed;
    };
    /**
     * Disposes the object.
     */
    Disposer.prototype.dispose = function () {
        if (!this._disposed) {
            this._disposed = true;
            this._dispose();
        }
    };
    return Disposer;
}());

/**
 * A collection of related disposers that can be disposed in one go.
 *
 * @ignore Exclude from docs
 */
var MultiDisposer = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MultiDisposer, _super);
    function MultiDisposer(disposers) {
        return _super.call(this, function () {
            _Array__WEBPACK_IMPORTED_MODULE_1__["each"](disposers, function (x) {
                x.dispose();
            });
        }) || this;
    }
    return MultiDisposer;
}(Disposer));

/**
 * A special kind of Disposer that has attached value set.
 *
 * If a new value is set using `set()` method, the old disposer value is
 * disposed.
 *
 * @ignore Exclude from docs
 * @todo Description
 */
var MutableValueDisposer = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MutableValueDisposer, _super);
    /**
     * Constructor.
     */
    function MutableValueDisposer() {
        var _this = _super.call(this, function () {
            if (_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](_this._disposer)) {
                _this._disposer.dispose();
                _this._disposer = undefined;
            }
        }) || this;
        return _this;
    }
    /**
     * Returns current value.
     *
     * @return {Optional<T>} Value
     */
    MutableValueDisposer.prototype.get = function () {
        return this._value;
    };
    /**
     * Sets value and disposes previous disposer if it was set.
     *
     * @param {Optional<T>}          value     New value
     * @param {Optional<IDisposer>}  disposer  Disposer
     */
    MutableValueDisposer.prototype.set = function (value, disposer) {
        if (_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](this._disposer)) {
            this._disposer.dispose();
        }
        this._disposer = disposer;
        this._value = value;
    };
    /**
     * Resets the disposer value.
     */
    MutableValueDisposer.prototype.reset = function () {
        this.set(undefined, undefined);
    };
    return MutableValueDisposer;
}(Disposer));

/**
 * @ignore Exclude from docs
 * @todo Description
 */
var CounterDisposer = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CounterDisposer, _super);
    function CounterDisposer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * [_counter description]
         *
         * @todo Description
         * @type {number}
         */
        _this._counter = 0;
        return _this;
    }
    /**
     * [increment description]
     *
     * @todo Description
     */
    CounterDisposer.prototype.increment = function () {
        var _this = this;
        // TODO throw an error if it is disposed
        ++this._counter;
        // TODO make this more efficient
        return new Disposer(function () {
            --_this._counter;
            if (_this._counter === 0) {
                _this.dispose();
            }
        });
    };
    return CounterDisposer;
}(Disposer));

//# sourceMappingURL=Disposer.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js ***!
  \***********************************************************************/
/*! exports provided: linear, quadIn, quadOut, quadInOut, polyIn, polyOut, polyInOut, polyIn3, polyOut3, polyInOut3, expIn, expOut, expInOut, sinIn, sinOut, sinInOut, cubicIn, cubicOut, cubicInOut, circleIn, circleOut, circleInOut, bounceIn, bounceOut, bounceInOut, elasticIn, elasticOut, elasticInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return linear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadIn", function() { return quadIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadOut", function() { return quadOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadInOut", function() { return quadInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyIn", function() { return polyIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyOut", function() { return polyOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyInOut", function() { return polyInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyIn3", function() { return polyIn3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyOut3", function() { return polyOut3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyInOut3", function() { return polyInOut3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expIn", function() { return expIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expOut", function() { return expOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expInOut", function() { return expInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinIn", function() { return sinIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinOut", function() { return sinOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinInOut", function() { return sinInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicIn", function() { return cubicIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicOut", function() { return cubicOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicInOut", function() { return cubicInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleIn", function() { return circleIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleOut", function() { return circleOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleInOut", function() { return circleInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceIn", function() { return bounceIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceOut", function() { return bounceOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceInOut", function() { return bounceInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticIn", function() { return elasticIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticOut", function() { return elasticOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticInOut", function() { return elasticInOut; });
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * A collection of easing functions
 *
 * Parts of this collection are taken from D3.js library (https://d3js.org/)
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

/**
 * The functions below are from D3.js library (https://d3js.org/)
 *
 * ----------------------------------------------------------------------------
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ----------------------------------------------------------------------------
 * @hidden
 */
/**
 * ============================================================================
 * LINEAR FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Easing function: "linear".
 */
function linear(t) {
    return +t;
}
/**
 * Easing function: "quadIn".
 */
function quadIn(t) {
    return t * t;
}
/**
 * Easing function: "quadOut".
 */
function quadOut(t) {
    return t * (2 - t);
}
/**
 * Easing function: "quadInOut".
 */
function quadInOut(t) {
    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
/**
 * Easing function: "polyIn".
 */
function polyIn(t, e) {
    return Math.pow(t, e);
}
/**
 * Easing function: "polyOut".
 */
function polyOut(t, e) {
    return 1 - Math.pow(1 - t, e);
}
/**
 * Easing function: "polyInOut".
 */
function polyInOut(t, e) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
}
/**
 * Easing function: "polyIn3".
 */
function polyIn3(t) {
    return polyIn(t, 3);
}
/**
 * Easing function: "polyOut3".
 */
function polyOut3(t) {
    return polyOut(t, 3);
}
/**
 * Easing function: "polyInOut3".
 */
function polyInOut3(t) {
    return polyInOut(t, 3);
}
/**
 * ============================================================================
 * EXPONENTIAL FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Easing function: "expIn".
 */
function expIn(t) {
    return Math.pow(2, 10 * t - 10);
}
/**
 * Easing function: "expOut".
 */
function expOut(t) {
    return 1 - Math.pow(2, -10 * t);
}
/**
 * Easing function: "expInOut".
 */
function expInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
/**
 * ============================================================================
 * SINE FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Easing function: "sinIn".
 */
function sinIn(t) {
    return 1 - Math.cos(t * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["HALFPI"]);
}
/**
 * Easing function: "sinOut".
 */
function sinOut(t) {
    return Math.sin(t * _utils_Math__WEBPACK_IMPORTED_MODULE_0__["HALFPI"]);
}
/**
 * Easing function: "sinInOut".
 */
function sinInOut(t) {
    return (1 - Math.cos(_utils_Math__WEBPACK_IMPORTED_MODULE_0__["PI"] * t)) / 2;
}
/**
 * ============================================================================
 * CUBIC FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Easing function: "cubicIn".
 */
function cubicIn(t) {
    return t * t * t;
}
/**
 * Easing function: "cubicOut".
 */
function cubicOut(t) {
    return --t * t * t + 1;
}
/**
 * Easing function: "cubicInOut".
 */
function cubicInOut(t) {
    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
/**
 * ============================================================================
 * CIRCLE FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Easing function: "circleIn".
 */
function circleIn(t) {
    return 1 - Math.sqrt(1 - t * t);
}
/**
 * Easing function: "circleOut".
 */
function circleOut(t) {
    return Math.sqrt(1 - --t * t);
}
/**
 * Easing function: "circleInOut".
 */
function circleInOut(t) {
    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
/**
 * ============================================================================
 * BOUNCE FUNCTIONS
 * ============================================================================
 * @hidden
 */
var b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;
/**
 * Easing function: "bounceIn".
 */
function bounceIn(t) {
    return 1 - bounceOut(1 - t);
}
/**
 * Easing function: "bounceOut".
 */
function bounceOut(t) {
    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}
/**
 * Easing function: "bounceInOut".
 */
function bounceInOut(t) {
    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
/**
 * ============================================================================
 * ELASTIC FUNCTIONS
 * ============================================================================
 * @hidden
 */
var tau = 2 * Math.PI;
var amplitude = 1;
var period = 0.3 / tau;
var s = Math.asin(1 / amplitude) * period;
/**
 * Easing function: "elasticIn".
 *
 * @function elasticIn
 * @param {number}  a  Amplitude
 * @param {number}  p  period
 */
function elasticIn(t) {
    return amplitude * Math.pow(2, 10 * --t) * Math.sin((s - t) / period);
}
/**
 * Easing function: "elasticOut".
 *
 * @function elasticOut
 * @param {number}  a  Amplitude
 * @param {number}  p  period
 */
function elasticOut(t) {
    return 1 - amplitude * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / period);
}
/**
 * Easing function: "elasticInOut".
 *
 * @function elasticInOut
 * @param {number}  a  Amplitude
 * @param {number}  p  period
 */
function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0
        ? amplitude * Math.pow(2, 10 * t) * Math.sin((s - t) / period)
        : 2 - amplitude * Math.pow(2, -10 * t) * Math.sin((s + t) / period)) / 2;
}
//# sourceMappingURL=Ease.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js ***!
  \**********************************************************************************/
/*! exports provided: EventDispatcher, TargetedEventDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventDispatcher", function() { return EventDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TargetedEventDispatcher", function() { return TargetedEventDispatcher; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _AsyncPending__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AsyncPending */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Event Dispatcher module is used for registering listeners and dispatching
 * events across amCharts system.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/*export interface IEventDispatcher<T> {
    isDisposed(): boolean;
    dispose(): void;
    hasListeners(): boolean;
    enable(): void;
    disable(): void;
    enableType<Key extends keyof T>(type: Key): void;
    disableType<Key extends keyof T>(type: Key, amount?: number): void;
    isEnabled<Key extends keyof T>(type: Key): boolean;
    has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean;
    dispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void;
    dispatch<Key extends keyof T>(type: Key, event: T[Key]): void;
    onAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C): IDisposer;
    on<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;
    once<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;
    off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;
    off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;
    copyFrom(source: this): void;
}*/
/**
 * Universal Event Dispatcher.
 *
 * @important
 */
var EventDispatcher = /** @class */ (function () {
    /**
     * Constructor
     */
    function EventDispatcher() {
        this._listeners = [];
        this._killed = [];
        this._disabled = {};
        this._iterating = 0;
        this._enabled = true;
        this._disposed = false;
    }
    /**
     * Returns if this object has been already disposed.
     *
     * @return {boolean} Disposed?
     */
    EventDispatcher.prototype.isDisposed = function () {
        return this._disposed;
    };
    /**
     * Dispose (destroy) this object.
     */
    EventDispatcher.prototype.dispose = function () {
        if (!this._disposed) {
            this._disposed = true;
            var a = this._listeners;
            this._iterating = 1;
            this._listeners = null;
            this._disabled = null;
            try {
                _Array__WEBPACK_IMPORTED_MODULE_2__["each"](a, function (x) {
                    x.disposer.dispose();
                });
            }
            finally {
                this._killed = null;
                this._iterating = null;
            }
        }
    };
    /**
     * Checks if this particular event dispatcher has any listeners set.
     *
     * @return {boolean} Has listeners?
     */
    EventDispatcher.prototype.hasListeners = function () {
        return this._listeners.length !== 0;
    };
    /**
     * Checks if this particular event dispatcher has any particular listeners set.
     *
     * @return {boolean} Has particular event listeners?
     */
    EventDispatcher.prototype.hasListenersByType = function (type) {
        return _Array__WEBPACK_IMPORTED_MODULE_2__["any"](this._listeners, function (x) { return (x.type === null || x.type === type) && !x.killed; });
    };
    /**
     * Enable dispatching of events if they were previously disabled by
     * `disable()`.
     */
    EventDispatcher.prototype.enable = function () {
        this._enabled = true;
    };
    /**
     * Disable dispatching of events until re-enabled by `enable()`.
     */
    EventDispatcher.prototype.disable = function () {
        this._enabled = false;
    };
    /**
     * Enable dispatching particular event, if it was disabled before by
     * `disableType()`.
     *
     * @param {Key} type Event type
     */
    EventDispatcher.prototype.enableType = function (type) {
        delete this._disabled[type];
    };
    /**
     * Disable dispatching of events for a certain event type.
     *
     * Optionally, can set how many dispatches to skip before automatically
     * re-enabling the dispatching.
     *
     * @param {Key}                type    Event type
     * @param {number = Infinity}  amount  Number of event dispatches to skip
     */
    EventDispatcher.prototype.disableType = function (type, amount) {
        if (amount === void 0) { amount = Infinity; }
        this._disabled[type] = amount;
    };
    /**
     * Removes listener from dispatcher.
     *
     * Will throw an exception if such listener does not exists.
     *
     * @param {EventListener<T>} listener Listener to remove
     */
    EventDispatcher.prototype._removeListener = function (listener) {
        if (this._iterating === 0) {
            var index = this._listeners.indexOf(listener);
            if (index === -1) {
                throw new Error("Invalid state: could not remove listener");
            }
            this._listeners.splice(index, 1);
        }
        else {
            this._killed.push(listener);
        }
    };
    /**
     * Removes existing listener by certain parameters.
     *
     * @param {boolean}     once         Listener's once setting
     * @param {Key | null}  type         Listener's type
     * @param {A}           callback     Callback function
     * @param {B}           context      Callback context
     */
    EventDispatcher.prototype._removeExistingListener = function (once, type, callback, context) {
        if (this._disposed) {
            throw new Error("EventDispatcher is disposed");
        }
        var index = _Array__WEBPACK_IMPORTED_MODULE_2__["findIndex"](this._listeners, function (info) {
            return info.once === once && // TODO is this correct ?
                info.type === type &&
                info.callback === callback &&
                info.context === context;
        });
        if (index !== -1) {
            this._listeners[index].disposer.dispose();
        }
    };
    /**
     * Checks if dispatching for particular event type is enabled.
     *
     * @param  {Key}      type  Event type
     * @return {boolean}        Enabled?
     */
    EventDispatcher.prototype.isEnabled = function (type) {
        if (this._disposed) {
            throw new Error("EventDispatcher is disposed");
        }
        // TODO is this check correct ?
        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] == null;
    };
    /**
     * Checks if there's already a listener with specific parameters.
     *
     * @param   {Key | null}  type      Listener's type
     * @param   {A}           callback  Callback function
     * @param   {B}           context   Callback context
     * @return {boolean}                Has listener?
     */
    EventDispatcher.prototype.has = function (type, callback, context) {
        var index = _Array__WEBPACK_IMPORTED_MODULE_2__["findIndex"](this._listeners, function (info) {
            return info.once !== true && // Ignoring "once" listeners
                info.type === type &&
                (!callback || info.callback === callback) &&
                info.context === context;
        });
        return index !== -1;
    };
    /**
     * Checks whether event of the particular type should be dispatched.
     *
     * @param  {Key}   type  Event type
     * @return {boolean}        Dispatch?
     */
    EventDispatcher.prototype._shouldDispatch = function (type) {
        if (this._disposed) {
            throw new Error("EventDispatcher is disposed");
        }
        var count = this._disabled[type];
        if (!_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](count)) {
            return this._enabled;
        }
        else {
            if (count <= 1) {
                delete this._disabled[type];
            }
            else {
                --this._disabled[type];
            }
            return false;
        }
    };
    /**
     * [_eachListener description]
     *
     * All of this extra code is needed when a listener is removed while iterating
     *
     * @todo Description
     * @param {EventListener<T>) => void} fn [description]
     */
    EventDispatcher.prototype._eachListener = function (fn) {
        var _this = this;
        ++this._iterating;
        try {
            _Array__WEBPACK_IMPORTED_MODULE_2__["each"](this._listeners, fn);
        }
        finally {
            --this._iterating;
            // TODO should this be inside or outside the finally ?
            if (this._iterating === 0 && this._killed.length !== 0) {
                // Remove killed listeners
                _Array__WEBPACK_IMPORTED_MODULE_2__["each"](this._killed, function (killed) {
                    _this._removeListener(killed);
                });
                this._killed.length = 0;
            }
        }
    };
    /**
     * Dispatches an event immediately without waiting for next cycle.
     *
     * @param {Key}     type   Event type
     * @param {T[Key]}  event  Event object
     * @todo automatically add in type and target properties if they are missing
     */
    EventDispatcher.prototype.dispatchImmediately = function (type, event) {
        if (this._shouldDispatch(type)) {
            // TODO check if it's faster to use an object of listeners rather than a single big array
            // TODO if the function throws, maybe it should keep going ?
            this._eachListener(function (listener) {
                if (!listener.killed && (listener.type === null || listener.type === type)) {
                    listener.dispatch(type, event);
                }
            });
        }
    };
    /**
     * Shelves the event to be dispatched within next update cycle.
     *
     * @param {Key}     type   Event type
     * @param {T[Key]}  event  Event object
     * @todo automatically add in type and target properties if they are missing
     */
    EventDispatcher.prototype.dispatch = function (type, event) {
        if (this._shouldDispatch(type)) {
            this._eachListener(function (listener) {
                // TODO check if it's faster to use an object of listeners rather than a single big array
                if (!listener.killed && (listener.type === null || listener.type === type)) {
                    // TODO if the function throws, maybe it should keep going ?
                    // TODO dispatch during the update cycle, rather than using whenIdle
                    _AsyncPending__WEBPACK_IMPORTED_MODULE_3__["whenIdle"](function () {
                        if (!listener.killed) {
                            listener.dispatch(type, event);
                        }
                    });
                }
            });
        }
    };
    /**
     * Creates, catalogs and returns an [[EventListener]].
     *
     * Event listener can be disposed.
     *
     * @param   {boolean}     once         Listener's once setting
     * @param   {Key | null}  type         Listener's type
     * @param   {A}           callback     Callback function
     * @param   {B}           context      Callback context
     * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied
     * @param   {function}    dispatch
     * @returns {EventListener} An event listener
     */
    EventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {
        var _this = this;
        if (this._disposed) {
            throw new Error("EventDispatcher is disposed");
        }
        this._removeExistingListener(once, type, callback, context);
        var info = {
            type: type,
            callback: callback,
            context: context,
            shouldClone: shouldClone,
            dispatch: dispatch,
            killed: false,
            once: once,
            disposer: new _Disposer__WEBPACK_IMPORTED_MODULE_1__["Disposer"](function () {
                info.killed = true;
                _this._removeListener(info);
            })
        };
        this._listeners.push(info);
        return info;
    };
    /**
     * Creates an event listener to be invoked on **any** event.
     *
     * @param   {A}           callback     Callback function
     * @param   {B}           context      Callback context
     * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied
     * @returns {IDisposer}                A disposable event listener
     * @todo what if `listen` is called on the same function twice ?
     */
    EventDispatcher.prototype.onAll = function (callback, context, shouldClone) {
        if (shouldClone === void 0) { shouldClone = true; }
        return this._on(false, null, callback, context, shouldClone, function (type, event) { return callback.call(context, type, event); }).disposer;
    };
    /**
     * Creates an event listener to be invoked on a specific event type.
     *
     * ```TypeScript
     * series.events.on("hidden", (ev) => {
     *   console.log("Series hidden: " + ev.target.name);
     * }, this);
     * ```
     * ```JavaScript
     * series.events.on("hidden", function(ev) {
     *   console.log("Series hidden: " + ev.target.name);
     * }, this);
     * ```
     * ```JSON
     * {
     *   // ...
     *   "series": [{
     *     // ...
     *     "events": {
     *     	"hidden": function(ev) {
     *     	  console.log("Series hidden: " + ev.target.name);
     *     	}
     *     }
     *   }]
     * }
     * ```
     *
     * The above will invoke our custom event handler whenever series we put
     * event on is hidden.
     *
     * @param   {Key | null}  type         Listener's type
     * @param   {A}           callback     Callback function
     * @param   {B}           context      Callback context
     * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied
     * @returns {IDisposer}                A disposable event listener
     * @todo what if `listen` is called on the same function twice ?
     */
    EventDispatcher.prototype.on = function (type, callback, context, shouldClone) {
        if (shouldClone === void 0) { shouldClone = true; }
        return this._on(false, type, callback, context, shouldClone, function (type, event) { return callback.call(context, event); }).disposer;
    };
    /**
     * Creates an event listener to be invoked on a specific event type once.
     *
     * Once the event listener is invoked, it is automatically disposed.
     *
     * ```TypeScript
     * series.events.on("hidden", (ev) => {
     *   console.log("Series hidden: " + ev.target.name);
     * }, this);
     * ```
     * ```JavaScript
     * series.events.on("hidden", function(ev) {
     *   console.log("Series hidden: " + ev.target.name);
     * }, this);
     * ```
     * ```JSON
     * {
     *   // ...
     *   "series": [{
     *     // ...
     *     "events": {
     *     	"hidden": function(ev) {
     *     	  console.log("Series hidden: " + ev.target.name);
     *     	}
     *     }
     *   }]
     * }
     * ```
     *
     * The above will invoke our custom event handler the first time series we
     * put event on is hidden.
     *
     * @param   {Key | null}  type         Listener's type
     * @param   {A}           callback     Callback function
     * @param   {B}           context      Callback context
     * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied
     * @returns {IDisposer}                A disposable event listener
     * @todo what if `listen` is called on the same function twice ?
     */
    EventDispatcher.prototype.once = function (type, callback, context, shouldClone) {
        if (shouldClone === void 0) { shouldClone = true; }
        var x = this._on(true, type, callback, context, shouldClone, function (type, event) {
            x.disposer.dispose();
            callback.call(context, event);
        });
        // TODO maybe this should return a different Disposer ?
        return x.disposer;
    };
    /**
     * Removes the event listener with specific parameters.
     *
     * @param   {Key | null}  type         Listener's type
     * @param   {A}           callback     Callback function
     * @param   {B}           context      Callback context
     */
    EventDispatcher.prototype.off = function (type, callback, context) {
        this._removeExistingListener(false, type, callback, context);
    };
    /**
     * Copies all dispatcher parameters, including listeners, from another event
     * dispatcher.
     *
     * @param {this} source Source event dispatcher
     */
    EventDispatcher.prototype.copyFrom = function (source) {
        var _this = this;
        if (this._disposed) {
            throw new Error("EventDispatcher is disposed");
        }
        if (source === this) {
            throw new Error("Cannot copyFrom the same TargetedEventDispatcher");
        }
        _Array__WEBPACK_IMPORTED_MODULE_2__["each"](source._listeners, function (x) {
            // TODO is this correct ?
            if (!x.killed && x.shouldClone) {
                if (x.type === null) {
                    _this.onAll(x.callback, x.context);
                }
                else if (x.once) {
                    _this.once(x.type, x.callback, x.context);
                }
                else {
                    _this.on(x.type, x.callback, x.context);
                }
            }
        });
    };
    return EventDispatcher;
}());

/**
 * A version of the [[EventDispatcher]] that dispatches events for a specific
 * target object.
 *
 * @type {[type]}
 * @important
 */
var TargetedEventDispatcher = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TargetedEventDispatcher, _super);
    /**
     * Constructor
     *
     * @param {Target} target Event dispatcher target
     */
    function TargetedEventDispatcher(target) {
        var _this = _super.call(this) || this;
        _this.target = target;
        return _this;
    }
    /**
     * Copies all dispatcher parameters, including listeners, from another event
     * dispatcher.
     *
     * @param {this} source Source event dispatcher
     */
    TargetedEventDispatcher.prototype.copyFrom = function (source) {
        var _this = this;
        if (this._disposed) {
            throw new Error("EventDispatcher is disposed");
        }
        if (source === this) {
            throw new Error("Cannot copyFrom the same TargetedEventDispatcher");
        }
        _Array__WEBPACK_IMPORTED_MODULE_2__["each"](source._listeners, function (x) {
            // TODO very hacky
            if (x.context === source.target) {
                return;
            }
            // TODO is this correct ?
            if (!x.killed && x.shouldClone) {
                if (x.type === null) {
                    _this.onAll(x.callback, x.context);
                }
                else if (x.once) {
                    _this.once(x.type, x.callback, x.context);
                }
                else {
                    _this.on(x.type, x.callback, x.context);
                }
            }
        });
    };
    return TargetedEventDispatcher;
}(EventDispatcher));

//# sourceMappingURL=EventDispatcher.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js ***!
  \***************************************************************************/
/*! exports provided: create, createFromConfig, useTheme, unuseTheme, unuseAllThemes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFromConfig", function() { return createFromConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useTheme", function() { return useTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unuseTheme", function() { return unuseTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unuseAllThemes", function() { return unuseAllThemes; });
/* harmony import */ var _System__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _rendering_Paper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony import */ var _rendering_SVGContainer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rendering/SVGContainer */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/SVGContainer.js");
/* harmony import */ var _rendering_filters_FocusFilter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../rendering/filters/FocusFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/FocusFilter.js");
/* harmony import */ var _elements_Preloader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../elements/Preloader */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Preloader.js");
/* harmony import */ var _elements_AmChartsLogo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../elements/AmChartsLogo */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/AmChartsLogo.js");
/* harmony import */ var _elements_Tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../elements/Tooltip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js");
/* harmony import */ var _utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _Options__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */















/**
 * ============================================================================
 * INSTANTIATION FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Creates all HTML and SVG containers needed for the chart instance, as well
 * as the new [[Sprite]] (as specified in `classType` parameter).
 *
 * @param  {Optional<HTMLElement | string>}  htmlElement  A container to creat elements in
 * @param  {T}                               classType    A class definition of the new element to create
 * @return {T}                                            Newly-created Sprite object
 */
function createChild(htmlElement, classType) {
    var htmlContainer = _DOM__WEBPACK_IMPORTED_MODULE_14__["getElement"](htmlElement);
    if (htmlContainer) {
        htmlContainer.innerHTML = "";
        //htmlContainer.style.overflow = "hidden";
        var svgDiv_1 = new _rendering_SVGContainer__WEBPACK_IMPORTED_MODULE_4__["SVGContainer"](htmlContainer);
        var paper = new _rendering_Paper__WEBPACK_IMPORTED_MODULE_3__["Paper"](svgDiv_1.SVGContainer, "svg-" + (_rendering_SVGContainer__WEBPACK_IMPORTED_MODULE_4__["svgContainers"].length - 1));
        // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside
        // svg area - this is often needed when working with small charts.
        // main container which holds content container and tooltips container
        var container_1 = new _Container__WEBPACK_IMPORTED_MODULE_2__["Container"]();
        container_1.htmlContainer = htmlContainer;
        container_1.svgContainer = svgDiv_1;
        container_1.width = Object(_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        container_1.height = Object(_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        container_1.background.fillOpacity = 0;
        container_1.paper = paper;
        paper.append(container_1.group);
        // this is set from parent container, but this one doesn't have, so do it manually.
        container_1.relativeWidth = 1;
        container_1.relativeHeight = 1;
        svgDiv_1.container = container_1;
        // creating classType instance
        var sprite_1 = container_1.createChild(classType);
        sprite_1.topParent = container_1;
        var uid = sprite_1.uid;
        _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].invalidSprites[uid] = [];
        _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].invalidDatas[uid] = [];
        _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].invalidPositions[uid] = [];
        _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].invalidLayouts[uid] = [];
        container_1.baseId = uid;
        sprite_1.isBaseSprite = true;
        sprite_1.focusFilter = new _rendering_filters_FocusFilter__WEBPACK_IMPORTED_MODULE_5__["FocusFilter"]();
        _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].baseSprites.push(sprite_1);
        _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].baseSpritesByUid[uid] = sprite_1;
        sprite_1.maskRectangle = { x: 0, y: 0, width: svgDiv_1.width, height: svgDiv_1.height };
        // this solves issues with display:none, as all children are measured as 0x0
        container_1.events.on("maxsizechanged", function (event) {
            if (event.previousWidth == 0 || event.previousHeight == 0) {
                container_1.deepInvalidate();
            }
            if (sprite_1.maskRectangle) {
                sprite_1.maskRectangle = { x: 0, y: 0, width: svgDiv_1.width, height: svgDiv_1.height };
            }
        });
        sprite_1.addDisposer(new _utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
            _Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].baseSprites, sprite_1);
            _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].baseSpritesByUid[sprite_1.uid] = undefined;
        }));
        // TODO figure out a better way of doing this
        sprite_1.addDisposer(container_1);
        // tooltip container
        var tooltipContainer_1 = container_1.createChild(_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        tooltipContainer_1.topParent = container_1;
        tooltipContainer_1.width = Object(_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        tooltipContainer_1.height = Object(_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        tooltipContainer_1.isMeasured = false;
        container_1.tooltipContainer = tooltipContainer_1;
        sprite_1.tooltip = new _elements_Tooltip__WEBPACK_IMPORTED_MODULE_8__["Tooltip"]();
        sprite_1.tooltip.hide(0);
        sprite_1.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });
        tooltipContainer_1.events.on("maxsizechanged", function () {
            _Type__WEBPACK_IMPORTED_MODULE_13__["getValue"](sprite_1.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });
        }, undefined, false);
        //@todo: maybe we don't need to create one by default but only on request?
        var preloader_1 = new _elements_Preloader__WEBPACK_IMPORTED_MODULE_6__["Preloader"]();
        preloader_1.events.on("inited", function () {
            preloader_1.__disabled = true;
        }, undefined, false);
        container_1.preloader = preloader_1;
        if (!_Options__WEBPACK_IMPORTED_MODULE_11__["options"].commercialLicense) {
            var logo_1 = tooltipContainer_1.createChild(_elements_AmChartsLogo__WEBPACK_IMPORTED_MODULE_7__["AmChartsLogo"]);
            tooltipContainer_1.events.on("maxsizechanged", function (ev) {
                if ((tooltipContainer_1.maxWidth <= 100) || (tooltipContainer_1.maxHeight <= 50)) {
                    logo_1.hide();
                }
                else if (logo_1.isHidden || logo_1.isHiding) {
                    logo_1.show();
                }
            }, undefined, false);
            sprite_1.logo = logo_1;
            logo_1.align = "left";
            logo_1.valign = "bottom";
        }
        sprite_1.numberFormatter; // need to create one.
        // Set this as an autonomouse instance
        // Controls like Preloader, Export will use this.
        container_1.isStandaloneInstance = true;
        return sprite_1;
    }
    else {
        _System__WEBPACK_IMPORTED_MODULE_0__["system"].log("html container not found");
        throw new Error("html container not found");
    }
}
/**
 * A shortcut to creating a chart instance.
 *
 * The first argument is either a reference to or an id of a DOM element to be
 * used as a container for the chart.
 *
 * The second argument is the type reference of the chart type. (for plain
 * JavaScript users this can also be a string indicating chart type)
 *
 * ```TypeScript
 * let chart = am4core.create("chartdiv", am4charts.PieChart);
 * ```
 * ```JavaScript
 * // Can pass in chart type reference like this:
 * var chart = am4core.create("chartdiv", am4charts.PieChart);
 *
 * // ... or chart class type as a string:
 * var chart = am4core.create("chartdiv", "PieChart");
 * ```
 *
 * @param  {HTMLElement | string}  htmlElement  Reference or id of the target container element
 * @param  {T}                     classType    Class type of the target chart type
 * @return {T}                                  Chart instance
 */
function create(htmlElement, classType) {
    // This is a nasty hack for the benefit of vanilla JS users, who do not
    // enjoy benefits of type-check anyway.
    // We're allowing passing in a name of the class rather than type reference
    // itself.
    var classError;
    if (_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](classType)) {
        if (_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](_Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses[classType])) {
            classType = _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses[classType];
        }
        else {
            classType = _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses["Container"];
            classError = new Error("Class [" + classType + "] is not loaded.");
        }
    }
    // Create the chart
    var chart = createChild(htmlElement, classType);
    // Error?
    if (classError) {
        chart.raiseCriticalError(classError);
    }
    return chart;
}
/**
 * A shortcut to creating a chart from a config object.
 *
 * Example:
 *
 * ```TypeScript
 * let chart am4core.createFromConfig({ ... }, "chartdiv", am4charts.XYChart );
 * ```
 * ```JavaScript
 * var chart am4core.createFromConfig({ ... }, "chartdiv", "XYChart" );
 * ```
 *
 * If `chartType` parameter is not supplied it must be set in a config object,
 * via reference to chart type, e.g.:
 *
 * ```TypeScript
 * {
 *   "type": am4charts.XYChart,
 *   // ...
 * }
 * ```
 * ```JavaScript
 * {
 *   "type": am4charts.XYChart,
 *   // ...
 * }
 * ```
 *
 * Or via string: (if you are using JavaScript)
 *
 * ```TypeScript
 * {
 *   "type": "XYChart",
 *   // ...
 * }
 * ```
 * ```JavaScript
 * {
 *   "type": "XYChart",
 *   // ...
 * }
 * ```
 *
 * A `container` can either be a reference to an HTML container to put chart
 * in, or it's unique id.
 *
 * If `container` is not specified, it must be included in the config object:
 *
 * ```TypeScript
 * {
 *   "type": "XYChart",
 *   "container": "chartdiv",
 *   // ...
 * }
 * ```
 * ```JavaScript
 * {
 *   "type": "XYChart",
 *   "container": "chartdiv",
 *   // ...
 * }
 * ```
 *
 * @param  {any}                   config       Config object in property/value pairs
 * @param  {string | HTMLElement}  htmlElement  Container reference or ID
 * @param  {typeof Chart}          objectType   Chart type
 * @return {Chart}                              A newly created chart instance
 * @todo Throw exception if type is not correct
 */
function createFromConfig(config, htmlElement, classType) {
    // Extract chart type from config if necessary
    if (!_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](classType)) {
        classType = config.type;
        delete config.type;
    }
    // Extract element from config if necessary
    if (!_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](htmlElement)) {
        htmlElement = config.container;
        delete config.container;
    }
    // Check if we need to extract actual type reference
    var finalType;
    var classError;
    if (_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](classType) && _Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](_Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses[classType])) {
        finalType = _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses[classType];
    }
    else if (typeof classType !== "function") {
        finalType = _Container__WEBPACK_IMPORTED_MODULE_2__["Container"];
        classError = new Error("Class [" + classType + "] is not loaded.");
    }
    else {
        finalType = classType;
    }
    // Check if maybe we have `geodata` set as string, which would mean that
    // we need to try to refer to a loaded map with a global variable, like
    // `am4geodata_xxx`
    if (_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](config["geodata"]) && _Type__WEBPACK_IMPORTED_MODULE_13__["isString"](config["geodata"])) {
        // Check if there's a map loaded by such name
        if (_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](window["am4geodata_" + config["geodata"]])) {
            config["geodata"] = window["am4geodata_" + config["geodata"]];
        }
        // Nope. Let's try maybe we got JSON as string?
        else {
            try {
                config["geodata"] = JSON.parse(config["geodata"]);
            }
            catch (e) {
                // No go again. Error out.
                classError = new Error("<code>geodata</code> is incorrect or the map file is not loaded.");
            }
        }
    }
    // Create the chart
    var chart = createChild(htmlElement, finalType);
    // Set config
    if (classError) {
        chart.raiseCriticalError(classError);
    }
    else {
        chart.config = config;
    }
    return chart;
}
/**
 * Applies a theme to System, and subsequently all chart instances created
 * from that point forward.
 *
 * amCharts supports multiple themes. Calling `useTheme` multiple times will
 * make the System apply multiple themes, rather than overwrite previously
 * set one.
 *
 * This enables combining features from multiple themes on the same chart.
 * E.g.:
 *
 * ```TypeScript
 * am4core.useTheme(am4themes.material);
 * am4core.useTheme(am4themes.animated);
 * ```
 * ```JavaScript
 * am4core.useTheme(am4themes.material);
 * am4core.useTheme(am4themes.animated);
 * ```
 *
 * The above will apply both the Material color and animation options to all
 * charts created.
 *
 * @param {ITheme}  value  A reference to a theme
 */
function useTheme(value) {
    _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].themes.push(value);
}
/**
 * Removes a theme from "active themes" list, so it won't get applied to any
 * charts created subsequently.
 *
 * @param {ITheme}  value  A reference to a theme
 */
function unuseTheme(value) {
    _Array__WEBPACK_IMPORTED_MODULE_12__["remove"](_Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].themes, value);
}
/**
 * Removes all "active" themes. Any charts created subsequently will not have
 * any theme applied to them.
 */
function unuseAllThemes() {
    _Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].themes = [];
}
//# sourceMappingURL=Instance.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js ***!
  \************************************************************************************/
/*! exports provided: InterfaceColorSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterfaceColorSet", function() { return InterfaceColorSet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/**
 * This module contains a version of ColorSet that can (and should) be used for
 * coloring UI elements.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This module contains a version of ColorSet that can (and should) be used for
 * coloring UI elements.
 *
 * The main difference from the basic [[ColorSet]] is that instead of sequenced
 * colors, it uses a concept of named colors.
 *
 * This way, every element in the UI can extract an exact color theme author
 * meant for the specific purpose, like strokes, backgrounds, etc.
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info
 */
var InterfaceColorSet = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InterfaceColorSet, _super);
    /**
     * Constructor
     */
    function InterfaceColorSet() {
        var _this = _super.call(this) || this;
        /**
         * Maps the list of purposes (like "stroke") to an index of color of the
         * color set.
         */
        _this._purposes = {
            stroke: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#e5e5e5"),
            fill: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#f3f3f3"),
            primaryButton: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#6794dc"),
            primaryButtonHover: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#6771dc"),
            primaryButtonDown: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#68dc75"),
            primaryButtonActive: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#68dc75"),
            primaryButtonText: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#FFFFFF"),
            primaryButtonStroke: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#FFFFFF"),
            secondaryButton: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#d9d9d9"),
            secondaryButtonHover: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#d9d9d9").brighten(-0.25),
            secondaryButtonDown: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#d9d9d9").brighten(-0.35),
            secondaryButtonActive: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#d9d9d9").brighten(0.35),
            secondaryButtonText: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#000000"),
            secondaryButtonStroke: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#FFFFFF"),
            grid: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#000000"),
            background: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#ffffff"),
            alternativeBackground: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#000000"),
            text: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#000000"),
            alternativeText: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#FFFFFF"),
            disabledBackground: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#999999"),
            positive: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#67dc75"),
            negative: Object(_Color__WEBPACK_IMPORTED_MODULE_2__["color"])("#dc6788")
        };
        _this.className = "InterfaceColorSet";
        _this.applyTheme();
        return _this;
    }
    InterfaceColorSet.prototype.debug = function () { };
    /**
     * Returns a color to be used for the specific purpose.
     *
     * ```TypeScript
     * let uicolors = new am4core.InterfaceColorSet();
     * console.log(uicolors.getFor("stroke"));
     * ```
     * ```JavaScript
     * var uicolors = new am4core.InterfaceColorSet();
     * console.log(uicolors.getFor("stroke"));
     * ```
     *
     * @param  {keyof IColorPurpose}  purpose  Color use purpuse
     * @return {Color}                        Color
     */
    InterfaceColorSet.prototype.getFor = function (purpose) {
        return this._purposes[purpose];
    };
    /**
     * Sets color to be used for the specific purpose.
     *
     * @param {keyof IColorPurpose}  purpose  Color use purpose
     * @param {Color}               color    Color
     */
    InterfaceColorSet.prototype.setFor = function (purpose, color) {
        this._purposes[purpose] = color;
    };
    return InterfaceColorSet;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

//# sourceMappingURL=InterfaceColorSet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js ***!
  \***************************************************************************/
/*! exports provided: fromArray, length, toArray, eachContinue, each, sort, map, filter, concat, flatten, indexed, findIndex, find, findMap, contains, foldl, min, max, join, ListIterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArray", function() { return fromArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eachContinue", function() { return eachContinue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "each", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexed", function() { return indexed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findMap", function() { return findMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "foldl", function() { return foldl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "join", function() { return join; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListIterator", function() { return ListIterator; });
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");

/**
 * @ignore Exclude from docs
 * @todo Description
 */
function fromArray(array) {
    return function (push) {
        var length = array.length;
        for (var i = 0; i < length; ++i) {
            if (!push(array[i])) {
                break;
            }
        }
    };
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
function length(iter) {
    var sum = 0;
    iter(function (_) {
        ++sum;
        return true;
    });
    return sum;
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
function toArray(iter) {
    var output = [];
    iter(function (value) {
        output.push(value);
        return true;
    });
    return output;
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function eachContinue(iter, fn) {
    return iter(fn);
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function each(iter, fn) {
    return iter(function (value) {
        fn(value);
        return true;
    });
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function sort(iter, fn) {
    return fromArray(toArray(iter).sort(fn));
}
/**
 * [A description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {[type]}
 */
function map(iter, fn) {
    return function (push) { return iter(function (value) { return push(fn(value)); }); };
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function filter(iter, fn) {
    return function (push) { return iter(function (value) {
        if (fn(value)) {
            return push(value);
        }
        else {
            return true;
        }
    }); };
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
function concat() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (push) {
        var go = true;
        var push2 = function (value) { return (go = push(value)); };
        var length = args.length;
        for (var i = 0; i < length; ++i) {
            args[i](push2);
            if (!go) {
                break;
            }
        }
    };
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
function flatten(iter) {
    return function (push) {
        var go = true;
        var push2 = function (value) { return (go = push(value)); };
        return iter(function (value) {
            value(push2);
            return go;
        });
    };
}
/**
 * [number description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {[type]}
 */
function indexed(iter) {
    return function (push) {
        var index = 0;
        return iter(function (value) { return push([index++, value]); });
    };
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function findIndex(iter, matches) {
    var found = false;
    var i = 0;
    iter(function (value) {
        if (matches(value)) {
            found = true;
            return false;
        }
        else {
            ++i;
            return true;
        }
    });
    return (found ? i : -1);
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function find(iter, matches) {
    var output;
    iter(function (value) {
        if (matches(value)) {
            output = value;
            return false;
        }
        else {
            return true;
        }
    });
    return output;
}
/**
 * [A description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {[type]}
 */
function findMap(iter, matches) {
    var output;
    iter(function (value) {
        var v = matches(value);
        if (v !== null) {
            output = v;
            return false;
        }
        else {
            return true;
        }
    });
    return output;
}
/**
 * [iter description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {Iterator<A>}
 */
function contains(iter, matches) {
    var output = false;
    iter(function (value) {
        if (matches(value)) {
            output = true;
            return false;
        }
        else {
            return true;
        }
    });
    return output;
}
/**
 * [A description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @type {[type]}
 */
function foldl(iter, init, fn) {
    iter(function (value) {
        init = fn(init, value);
        return true;
    });
    return init;
}
/**
 * [min2 description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number |     null}        left [description]
 * @param  {number}    right [description]
 * @return {number}          [description]
 */
function min2(left, right) {
    if (left == null || right < left) {
        return right;
    }
    else {
        return left;
    }
}
/**
 * [min description]
 *
 * @ignore Exclude from docs
 * @todo Verify that this works correctly
 * @todo Description
 * @param  {Iterator<number>} a [description]
 * @return {number}             [description]
 */
function min(a) {
    return foldl(a, null, min2);
}
/**
 * [max2 description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number |     null}        left [description]
 * @param  {number}    right [description]
 * @return {number}          [description]
 */
function max2(left, right) {
    if (left == null || right > left) {
        return right;
    }
    else {
        return left;
    }
}
/**
 * [max description]
 *
 * @ignore Exclude from docs
 * @todo Verify that this works correctly
 * @todo Description
 * @param  {Iterator<number>} a [description]
 * @return {number}             [description]
 */
function max(a) {
    return foldl(a, null, max2);
}
/**
 * [join description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {Iterator<string>} iter [description]
 * @param  {string        =    ""}          separator [description]
 * @return {string}                [description]
 */
function join(iter, separator) {
    if (separator === void 0) { separator = ""; }
    var first = true;
    var init = "";
    iter(function (value) {
        if (first) {
            first = false;
        }
        else {
            init += separator;
        }
        init += value;
        return true;
    });
    return init;
}
/**
 * @ignore Exclude from docs
 * @todo Description
 */
var ListIterator = /** @class */ (function () {
    /**
     * Constructor
     *
     * @param {Iterable<T>} list [description]
     * @param {()       =>   T}           create [description]
     */
    function ListIterator(list, create) {
        // flag specifies if iterator should create new list item if it is reqested for a nextItem but there is no more left in the list
        this.createNewItems = false;
        this.list = list;
        this._create = create;
        this.reset();
    }
    ListIterator.prototype.reset = function () {
        this._listCopy = toArray(this.list.iterator());
    };
    ListIterator.prototype.clear = function () {
        this._listCopy.length = 0;
    };
    ListIterator.prototype.getFirst = function () {
        return this.returnItem(0);
    };
    ListIterator.prototype.getLast = function () {
        return this.returnItem(this._listCopy.length - 1);
    };
    ListIterator.prototype.find = function (fn) {
        var index = _Array__WEBPACK_IMPORTED_MODULE_0__["findIndex"](this._listCopy, fn);
        if (index !== -1) {
            var item = this._listCopy[index];
            // TODO use removeIndex instead ?
            _Array__WEBPACK_IMPORTED_MODULE_0__["remove"](this._listCopy, item);
            return item;
        }
        else {
            return this.getLast();
        }
    };
    ListIterator.prototype.removeItem = function (item) {
        return _Array__WEBPACK_IMPORTED_MODULE_0__["remove"](this._listCopy, item);
    };
    ListIterator.prototype.returnItem = function (index) {
        if (index >= 0 && index < this._listCopy.length) {
            var item = this._listCopy[index];
            // TODO use removeIndex instead ?
            _Array__WEBPACK_IMPORTED_MODULE_0__["remove"](this._listCopy, item);
            return item;
        }
        else if (this.createNewItems) {
            return this._create();
        }
    };
    ListIterator.prototype.iterator = function () {
        return fromArray(this._listCopy);
    };
    return ListIterator;
}());

//# sourceMappingURL=Iterator.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js ***!
  \***************************************************************************/
/*! exports provided: Keyboard, keyboard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Keyboard", function() { return Keyboard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyboard", function() { return keyboard; });
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A collection of keyboard-related utilities accessible via `keyboard`
 * instance.
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

/**
 * A class that represents collection of keyboard-related utilities.
 *
 * Do not instantiate this class directly, but rather use `keyboard` variable.
 */
var Keyboard = /** @class */ (function () {
    function Keyboard() {
    }
    /**
     * Returns a named key based on information contained in the event or
     * "other".
     *
     * @param  {KeyboardEvent}  ev  A keyboard event
     * @return {KeyboardKeys}       Keyboard named key
     */
    Keyboard.prototype.getEventKey = function (ev) {
        // Get the key code
        var code = ev.keyCode || ev.which, key;
        // Map to internal key
        switch (code) {
            case 38:
                key = "up";
                break;
            case 40:
                key = "down";
                break;
            case 37:
                key = "left";
                break;
            case 39:
                key = "right";
                break;
            case 13:
                key = "enter";
                break;
            case 27:
                key = "esc";
                break;
            case 36:
                key = "home";
                break;
            case 35:
                key = "end";
                break;
            case 9:
                key = "tab";
                break;
            case 17:
                key = "ctrl";
                break;
            case 18:
                key = "alt";
                break;
            case 16:
                key = "shift";
                break;
            case 32:
                key = "space";
                break;
            case 36:
                key = "home";
                break;
            case 35:
                key = "end";
                break;
            case 33:
                key = "pgup";
                break;
            case 34:
                key = "pgdn";
                break;
            case 45:
                key = "ins";
                break;
            case 46:
                key = "del";
                break;
            case 107:
                key = "plus";
                break;
            case 109:
                key = "minus";
                break;
            default:
                key = "other";
                break;
        }
        return key;
    };
    /**
     * Checks if event key is one or more of the selected named keys.
     *
     * @param  {KeyboardEvent}      ev   Keyboard event
     * @param  {string | string[]}  key  Named key or array of keys
     * @return {boolean}                 Is event key one of the list?
     */
    Keyboard.prototype.isKey = function (ev, key) {
        var eventKey = this.getEventKey(ev);
        if (_Type__WEBPACK_IMPORTED_MODULE_0__["isString"](key)) {
            key = [key];
        }
        return key.indexOf(eventKey) !== -1;
    };
    /**
     * Returns `true` if shift key was presset at the moment of the event.
     *
     * @param  {KeyboardEvent | MouseEvent}  ev  Event object
     * @return {boolean}                         Was shift pressed?
     */
    Keyboard.prototype.shiftKey = function (ev) {
        return ev.shiftKey;
    };
    /**
     * Returns `true` if ctrl key was presset at the moment of the event.
     *
     * @param  {KeyboardEvent | MouseEvent}  ev  Event object
     * @return {boolean}                         Was ctrl pressed?
     */
    Keyboard.prototype.ctrlKey = function (ev) {
        return ev.ctrlKey;
    };
    /**
     * Returns `true` if alt key was presset at the moment of the event
     * @param  {KeyboardEvent | MouseEvent}  ev  Event object
     * @return {boolean}                         Was alt pressed?
     */
    Keyboard.prototype.altKey = function (ev) {
        return ev.altKey;
    };
    /**
     * Returns `true` if meta key was presset at the moment of the event
     * @param  {KeyboardEvent | MouseEvent}  ev  Event object
     * @return {boolean}                         Was meta pressed?
     */
    Keyboard.prototype.metaKey = function (ev) {
        return ev.metaKey;
    };
    return Keyboard;
}());

/**
 * A single [[Keyboard]] instance to be reused across all elements so that
 * they don't need to instantiate their own.
 *
 * @ignore Exclude from docs
 */
var keyboard = new Keyboard();
//# sourceMappingURL=Keyboard.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js ***!
  \***************************************************************************/
/*! exports provided: Language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Language", function() { return Language; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _lang_en__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lang/en */ "./node_modules/@amcharts/amcharts4/lang/en.js");
/* harmony import */ var _Options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/**
 * Language module contains everything related to language-specific operations:
 * * Translating prompts
 * * Translating functions
 * * Date format localizations
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






;
;
/**
 * Handles all language-related tasks, like loading and storing translations,
 * translating prompts, lists of prompts and even functions.
 *
 * Almost every object in amCharts4 universe will have a `language` property,
 * which can be accessed for prompt translation.
 *
 * @see {@link ILanguageAdapters} for a list of available Adapters
 * @todo Make prompt keys case-insensitive
 * @important
 */
var Language = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Language, _super);
    /**
     * Constructor
     */
    function Language() {
        var _this = _super.call(this) || this;
        /**
         * Adapter.
         *
         * @type {Adapter<this, this["_adapter"]>}
         */
        _this.adapter = new _Adapter__WEBPACK_IMPORTED_MODULE_2__["Adapter"](_this);
        /**
         * Current locale.
         *
         * @type {ILocale}
         */
        _this._locale = _lang_en__WEBPACK_IMPORTED_MODULE_5__["default"];
        /**
         * Default locale. A locale to fall back to if none is specified, or
         * if there's no translation for the prompt for the current language.
         *
         * @type {ILocaleDefault}
         */
        _this._defaultLocale = _lang_en__WEBPACK_IMPORTED_MODULE_5__["default"];
        _this.className = "Language";
        // Set default language if necessary
        if (_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](_Options__WEBPACK_IMPORTED_MODULE_6__["options"].defaultLocale)) {
            _this.locale = _Options__WEBPACK_IMPORTED_MODULE_6__["options"].defaultLocale;
        }
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns locale that is currently used.
     *
     * @param  {ILocale}  locale  Force locale. Will use current language if not set.
     * @return {string}           Locale
     */
    Language.prototype.getLocale = function (locale) {
        if (locale == null) {
            locale = this._locale;
        }
        return this.adapter.apply("locale", {
            locale: locale
        }).locale;
    };
    /**
     * Returns the translation of the string.
     *
     * If the translation is empty, it will return untranslated prompt.
     *
     * Third parameter and up are strings that can be used to replace "%X"
     * placeholders in prompt.
     *
     * E.g.:
     *
     * ```TypeScript
     * // Results in "This is a first translation test"
     * chart.language.translate("This is a %1 translation %2", null, "first", "test");
     * ```
     * ```JavaScriptScript
     * // Results in "This is a first translation test"
     * chart.language.translate("This is a %1 translation %2", null, "first", "test");
     * ```
     *
     * @param  {Key}            prompt   A string to translate
     * @param  {ILocale}        locale   Force translation into specific locale, e.g. fr_FR
     * @param  {Array<string>}  ...rest  Parameters to replace in string
     * @return {string}                  Translation
     */
    Language.prototype.translate = function (prompt, locale) {
        var rest = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            rest[_i - 2] = arguments[_i];
        }
        // Get langauge
        locale = this.getLocale(locale);
        // Init translation
        var translation = prompt;
        // Get translations for the locale
        var translations = this.getTranslations(locale);
        var value = translations[prompt];
        // Try to look for the translation
        if (value === null) {
            value = "";
        }
        else if (_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](value)) {
            // It might be an empty string
            if (value) {
                translation = value;
            }
        }
        else if (locale !== this._defaultLocale) {
            // Try to look in default language
            return this.translate.apply(this, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"]([prompt, this._defaultLocale], rest));
        }
        // Replace %1, %2, etc params
        if (rest.length) {
            for (var len = rest.length, i = 0; i < len; ++i) {
                translation = translation.split("%" + (i + 1)).join(rest[i]);
            }
        }
        // Return the translation
        return this.adapter.apply("translate", {
            translation: translation,
            locale: locale
        }).translation;
    };
    /**
     * Translates prompt.
     *
     * If translation is empty, it will return empty string, which is a different
     * behavior than that of regular `translate`.
     *
     * @param  {Key}            prompt   A string to translate
     * @param  {ILocale}        locale   Force translation into specific locale, e.g. fr_FR
     * @param  {Array<string>}  ...rest  Parameters to replace in string
     * @return {string}                  Translation
     */
    Language.prototype.translateEmpty = function (prompt, locale) {
        var rest = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            rest[_i - 2] = arguments[_i];
        }
        var translation = this.translate.apply(this, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"]([prompt, locale], rest));
        return translation == prompt ? "" : translation;
    };
    /**
     * Translates a function.
     *
     * This method will return a function reference, but will not run it. It's
     * up to the caller script to run the function.
     *
     * @param  {Key}                    prompt  A function id to translate
     * @param  {ILocale}                locale  Force translation into specific locale. e.g. fr_FR
     * @return {ILocaleFunctions[Key]}          A language-specific version of the function
     * @todo Apply adapter
     */
    Language.prototype.translateFunc = function (prompt, locale) {
        // Get langauge
        locale = this.getLocale(locale);
        // Get translations for the locale
        var translations = this.getTranslations(locale);
        var value = translations[prompt];
        // Try to look for the translation
        if (value != null) {
            return value;
        }
        // Try to look in default language
        if (locale !== this._defaultLocale) {
            return this.translateFunc(prompt, this._defaultLocale);
        }
        // Fail - return empty function
        return function () {
            return "";
        };
    };
    /**
     * Translates a list of prompts in one go.
     *
     * @param  {Array<Key>}     list    An array of strings to translate
     * @param  {ILocale}        locale  Force translation into specific locale. e.g. fr_FR
     * @return {Array<string>}          An array of translated strings in the same order as source list
     */
    Language.prototype.translateAll = function (list, locale) {
        var _this = this;
        // Translate all items in the list
        if (!this.isDefault()) {
            return _Array__WEBPACK_IMPORTED_MODULE_3__["map"](list, function (x) { return _this.translate(x, locale); });
        }
        else {
            return list;
        }
    };
    /**
     * Returns `true` if the currently selected locale is a default locale.
     *
     * @return {boolean} `true` if locale is default; `false` if it is not.
     */
    Language.prototype.isDefault = function () {
        return this._defaultLocale === this._locale;
    };
    Object.defineProperty(Language.prototype, "locale", {
        /**
         * @return {ILocale} Locale definition
         */
        get: function () {
            return this._locale;
        },
        /**
         * Current locale.
         *
         * @param {ILocale}  value  Locale definition (translations)
         */
        set: function (value) {
            if (this._locale != value) {
                this._locale = value;
                if (this.events.isEnabled("localechanged")) {
                    var event_1 = {
                        type: "localechanged",
                        locale: value,
                        target: this
                    };
                    this.events.dispatchImmediately("localechanged", event_1);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns translations for a given locale.
     *
     * @ignore
     * @deprecated
     * @param  {ILocale}        locale  Locale
     * @return {ILocale}        Translations
     */
    Language.prototype.getTranslations = function (locale) {
        return this.adapter.apply("translations", {
            translations: locale,
            locale: locale
        }).translations;
    };
    return Language;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]));

//# sourceMappingURL=Language.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js ***!
  \***********************************************************************/
/*! exports provided: IndexedIterable, ListGrouper, ListDisposer, List, ListTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexedIterable", function() { return IndexedIterable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListGrouper", function() { return ListGrouper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListDisposer", function() { return ListDisposer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "List", function() { return List; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListTemplate", function() { return ListTemplate; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");





/**
 * @todo Description
 */
var IndexedIterable = /** @class */ (function () {
    /**
     * Constructor.
     *
     * @param {Array<A>}  array  List items
     * @param {number}    start  Start index
     * @param {number}    end    End index
     */
    function IndexedIterable(array, start, end) {
        this._array = array;
        this._start = start;
        this._end = end;
    }
    /**
     * Returns a list item iterator.
     *
     * @return {Iterator} Iterator
     */
    IndexedIterable.prototype.iterator = function () {
        var _this = this;
        return function (push) {
            if (_this._start !== _this._end) {
                if (_this._start < _this._end) {
                    for (var i = _this._start; i < _this._end; ++i) {
                        if (!push(_this._array[i])) {
                            break;
                        }
                    }
                }
                else {
                    for (var i = _this._start - 1; i >= _this._end; --i) {
                        if (!push(_this._array[i])) {
                            break;
                        }
                    }
                }
            }
        };
    };
    /**
     * Returns an interable list sorted backwards than current list.
     *
     * @return {IndexedIterable<A>} List
     */
    IndexedIterable.prototype.backwards = function () {
        return new IndexedIterable(this._array, this._end, this._start);
    };
    /**
     * Returns a new list consisting only of specific range of items between
     * `start` and `end` indexes.
     *
     * @param  {number}              start  Start index
     * @param  {number}              end    End index
     * @return {IndexedIterable<A>}         List
     */
    IndexedIterable.prototype.range = function (start, end) {
        if (start <= end) {
            if (this._start === this._end) {
                return this;
            }
            else if (this._start < this._end) {
                var diff = end - start;
                start = Math.max(this._start + start, this._start);
                end = Math.min(start + diff, this._end);
                return new IndexedIterable(this._array, start, end);
            }
            else {
                var diff = end - start;
                start = Math.max(this._start - start, this._end);
                end = Math.max(start - diff, this._end);
                return new IndexedIterable(this._array, start, end);
            }
        }
        else {
            throw new Error("Start index must be lower than end index");
        }
    };
    return IndexedIterable;
}());

/**
 * ListGrouper organizes [[List]] items into groups.
 *
 * @ignore Exclude from docs
 */
var ListGrouper = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ListGrouper, _super);
    /**
     * Constructor.
     */
    function ListGrouper(list, getKey, sort) {
        var _this = _super.call(this, [
            list.events.on("inserted", function (x) {
                var value = x.newValue;
                var key = _this._getKey(value);
                var index = 0;
                _Iterator__WEBPACK_IMPORTED_MODULE_4__["eachContinue"](list.iterator(), function (x) {
                    if (x === value) {
                        return false;
                    }
                    else if (_this._getKey(x) === key) {
                        ++index;
                    }
                    return true;
                });
                _this._insert(value, key, index);
            }, undefined, false),
            list.events.on("removed", function (x) {
                _this._remove(x.oldValue);
            }, undefined, false)
        ]) || this;
        /**
         * Grouping keys.
         *
         * @type {Array<number>}
         */
        _this._keys = [];
        /**
         * List item groups.
         */
        _this._groups = {};
        _this._getKey = getKey;
        _this._sort = sort;
        _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](list.iterator(), function (x) {
            _this._insert(x, getKey(x));
        });
        return _this;
    }
    /**
     * Inserts an item (`x`) to a specific group (`key`) and specific `index`.
     *
     * @param {A}       x      Item
     * @param {number}  key    Group name
     * @param {number}  index  Index
     */
    ListGrouper.prototype._insert = function (x, key, index) {
        if (this._groups[key] == null) {
            this._groups[key] = [];
            // TODO code duplication with SortedList
            var _a = _Array__WEBPACK_IMPORTED_MODULE_3__["getSortedIndex"](this._keys, this._sort, key), found = _a.found, index_1 = _a.index;
            if (found) {
                throw new Error("Key already exists: " + key);
            }
            else {
                _Array__WEBPACK_IMPORTED_MODULE_3__["insertIndex"](this._keys, index_1, key);
            }
        }
        if (index == null) {
            this._groups[key].push(x);
        }
        else {
            _Array__WEBPACK_IMPORTED_MODULE_3__["insertIndex"](this._groups[key], index, x);
        }
    };
    /**
     * Removes an item from the list.
     *
     * @param {A} x Item to remove
     */
    ListGrouper.prototype._remove = function (x) {
        var key = this._getKey(x);
        var values = this._groups[key];
        if (values != null) {
            _Array__WEBPACK_IMPORTED_MODULE_3__["remove"](values, x);
            if (values.length === 0) {
                delete this._groups[key];
                var _a = _Array__WEBPACK_IMPORTED_MODULE_3__["getSortedIndex"](this._keys, this._sort, key), found = _a.found, index = _a.index;
                if (found) {
                    _Array__WEBPACK_IMPORTED_MODULE_3__["removeIndex"](this._keys, index);
                }
                else {
                    throw new Error("Key doesn't exist: " + key);
                }
            }
        }
    };
    /**
     * Returns an iterator for the list.
     *
     * The iterator will iterate through all items in all groups.
     *
     * @return {.Iterator<A>} Iterator
     */
    ListGrouper.prototype.iterator = function () {
        var _this = this;
        return _Iterator__WEBPACK_IMPORTED_MODULE_4__["flatten"](_Iterator__WEBPACK_IMPORTED_MODULE_4__["map"](_Iterator__WEBPACK_IMPORTED_MODULE_4__["fromArray"](this._keys), function (key) {
            return _Iterator__WEBPACK_IMPORTED_MODULE_4__["fromArray"](_this._groups[key]);
        }));
    };
    return ListGrouper;
}(_Disposer__WEBPACK_IMPORTED_MODULE_1__["MultiDisposer"]));

/**
 * A disposable list, which when disposed itself will call `dispose()` method
 * on all its items.
 */
var ListDisposer = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ListDisposer, _super);
    function ListDisposer(list) {
        var _this = this;
        var disposer = list.events.on("removed", function (x) {
            x.oldValue.dispose();
        }, undefined, false);
        _this = _super.call(this, function () {
            disposer.dispose();
            // TODO clear the list ?
            _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](list.iterator(), function (x) {
                x.dispose();
            });
        }) || this;
        return _this;
    }
    return ListDisposer;
}(_Disposer__WEBPACK_IMPORTED_MODULE_1__["Disposer"]));

/**
 * Checks if specific index fits into length.
 *
 * @param {number}  index  Index
 * @param {number}  len    Length
 */
function checkBounds(index, len) {
    if (!(index >= 0 && index < len)) {
        throw new Error("Index out of bounds: " + index);
    }
}
/**
 * A List class is used to hold a number of indexed items of the same type.
 */
var List = /** @class */ (function () {
    /**
     * Constructor
     *
     * @param {Array<T>}  initial  Inital list of values to add to list
     */
    function List(initial) {
        if (initial === void 0) { initial = []; }
        /**
         * Event dispatcher.
         *
         * @type {EventDispatcher<AMEvent<this, IListEvents<T>>>}
         */
        this.events = new _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__["EventDispatcher"]();
        this._values = initial;
    }
    Object.defineProperty(List.prototype, "values", {
        /**
         * An array of values in the list.
         *
         * Do not use this property to add values. Rather use dedicated methods, like
         * `push()`, `removeIndex()`, etc.
         *
         * @readonly
         * @return {Array<T>} List values
         */
        get: function () {
            return this._values;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if list contains specific item reference.
     *
     * @param  {T}        item  Item to search for
     * @return {boolean}        `true` if found, `false` if not found
     */
    List.prototype.contains = function (value) {
        return this._values.indexOf(value) !== -1;
    };
    /**
     * Removes specific item from the list.
     *
     * @param {T} item An item to remove
     */
    List.prototype.removeValue = function (value) {
        var i = 0;
        var length = this._values.length;
        while (i < length) {
            // TODO handle NaN
            if (this._values[i] === value) {
                this.removeIndex(i);
                --length;
            }
            else {
                ++i;
            }
        }
    };
    /**
     * Searches the list for specific item and returns its index.
     *
     * @param  {T}       item  An item to search for
     * @return {number}        Index or -1 if not found
     */
    List.prototype.indexOf = function (value) {
        return _Array__WEBPACK_IMPORTED_MODULE_3__["indexOf"](this._values, value);
    };
    Object.defineProperty(List.prototype, "length", {
        /**
         * Number of items in list.
         *
         * @readonly
         * @return {number} Number of items
         */
        get: function () {
            return this._values.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Checks if there's a value at specific index.
     *
     * @param  {number}   index  Index
     * @return {boolean}         Value exists?
     */
    List.prototype.hasIndex = function (index) {
        return index >= 0 && index < this._values.length;
    };
    /**
     * Returns an item at specified index.
     *
     * @param  {number}  index  Index
     * @return {T}              List item
     */
    List.prototype.getIndex = function (index) {
        return this._values[index];
    };
    /**
     * Sets value at specific index.
     *
     * If there's already a value at the index, it is overwritten.
     *
     * @param  {number}  index  Index
     * @param  {T}       value  New value
     * @return {T}              New value
     */
    List.prototype.setIndex = function (index, value) {
        checkBounds(index, this._values.length);
        var oldValue = this._values[index];
        // Do nothing if the old value and the new value are the same
        if (oldValue !== value) {
            this._values[index] = value;
            if (this.events.isEnabled("setIndex")) {
                this.events.dispatchImmediately("setIndex", {
                    type: "setIndex",
                    target: this,
                    index: index,
                    oldValue: oldValue,
                    newValue: value
                });
            }
            if (this.events.isEnabled("removed")) {
                this.events.dispatchImmediately("removed", {
                    type: "removed",
                    target: this,
                    oldValue: oldValue
                });
            }
            if (this.events.isEnabled("inserted")) {
                this.events.dispatchImmediately("inserted", {
                    type: "inserted",
                    target: this,
                    newValue: value
                });
            }
        }
        return oldValue;
    };
    /**
     * Adds an item to the list at a specific index, which pushes all the other
     * items further down the list.
     *
     * @param  {number} index Index
     * @param  {T}      item  An item to add
     */
    List.prototype.insertIndex = function (index, value) {
        checkBounds(index, this._values.length + 1);
        _Array__WEBPACK_IMPORTED_MODULE_3__["insertIndex"](this._values, index, value);
        if (this.events.isEnabled("insertIndex")) {
            this.events.dispatchImmediately("insertIndex", {
                type: "insertIndex",
                target: this,
                index: index,
                newValue: value
            });
        }
        if (this.events.isEnabled("inserted")) {
            this.events.dispatchImmediately("inserted", {
                type: "inserted",
                target: this,
                newValue: value
            });
        }
    };
    /**
     * [_sortQuicksort description]
     *
     * @todo Description
     * @param {number}    low    [description]
     * @param {number}    high   [description]
     * @param {function}  order  [description]
     */
    List.prototype._sortQuicksort = function (low, high, order) {
        if (low < high) {
            var p = this._sortPartition(low, high, order);
            this._sortQuicksort(low, p, order);
            this._sortQuicksort(p + 1, high, order);
        }
    };
    /**
     * [_sortPartition description]
     *
     * @todo Description
     * @param  {number}    low    [description]
     * @param  {number}    high   [description]
     * @param  {function}  order  [description]
     * @return {number}           [description]
     */
    List.prototype._sortPartition = function (low, high, order) {
        var values = this._values;
        var pivot = values[low];
        var i = low - 1;
        var j = high + 1;
        for (;;) {
            do {
                ++i;
            } while (order(values[i], pivot) < 0);
            do {
                --j;
            } while (order(values[j], pivot) > 0);
            if (i >= j) {
                return j;
            }
            else {
                this.swap(i, j);
            }
        }
    };
    /**
     * Reorders list items according to specific ordering function.
     *
     * @param {T) => Ordering}  order  Ordering function
     */
    List.prototype.sort = function (order) {
        // https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme
        // @todo faster implementation of this
        // @todo test this
        this._sortQuicksort(0, this._values.length - 1, order);
    };
    /**
     * Swaps indexes of two items in the list.
     *
     * @param {number}  a  Item 1
     * @param {number}  b  Item 2
     */
    List.prototype.swap = function (a, b) {
        var len = this._values.length;
        checkBounds(a, len);
        checkBounds(b, len);
        if (a !== b) {
            var value_a = this._values[a];
            var value_b = this._values[b];
            this._values[a] = value_b;
            if (this.events.isEnabled("setIndex")) {
                this.events.dispatchImmediately("setIndex", {
                    type: "setIndex",
                    target: this,
                    index: a,
                    oldValue: value_a,
                    newValue: value_b
                });
            }
            this._values[b] = value_a;
            if (this.events.isEnabled("setIndex")) {
                this.events.dispatchImmediately("setIndex", {
                    type: "setIndex",
                    target: this,
                    index: b,
                    oldValue: value_b,
                    newValue: value_a
                });
            }
        }
    };
    /**
     * Removes a value at specific index.
     *
     * @param  {number}  index  Index of value to remove
     * @return {T}              Removed value
     */
    List.prototype.removeIndex = function (index) {
        checkBounds(index, this._values.length);
        var oldValue = this._values[index];
        _Array__WEBPACK_IMPORTED_MODULE_3__["removeIndex"](this._values, index);
        if (this.events.isEnabled("removeIndex")) {
            this.events.dispatchImmediately("removeIndex", {
                type: "removeIndex",
                target: this,
                index: index,
                oldValue: oldValue
            });
        }
        if (this.events.isEnabled("removed")) {
            this.events.dispatchImmediately("removed", {
                type: "removed",
                target: this,
                oldValue: oldValue
            });
        }
        return oldValue;
    };
    /**
     * Moves an item to a specific index within the list.
     *
     * If the index is not specified it will move the item to the end of the
     * list.
     *
     * @param {T}       value  Item to move
     * @param {number}  index  Index to place item at
     */
    List.prototype.moveValue = function (value, toIndex) {
        // TODO don't do anything if the desired index is the same as the current index
        var index = this.indexOf(value);
        // TODO remove all old values rather than only the first ?
        if (index !== -1) {
            var oldValue = this._values[index];
            _Array__WEBPACK_IMPORTED_MODULE_3__["removeIndex"](this._values, index);
            if (this.events.isEnabled("removeIndex")) {
                this.events.dispatchImmediately("removeIndex", {
                    type: "removeIndex",
                    target: this,
                    index: index,
                    oldValue: oldValue
                });
            }
        }
        if (toIndex == null) {
            toIndex = this._values.length;
            this._values.push(value);
        }
        else {
            _Array__WEBPACK_IMPORTED_MODULE_3__["insertIndex"](this._values, toIndex, value);
        }
        if (this.events.isEnabled("insertIndex")) {
            this.events.dispatchImmediately("insertIndex", {
                type: "insertIndex",
                target: this,
                index: toIndex,
                newValue: value
            });
        }
        if (index === -1) {
            if (this.events.isEnabled("inserted")) {
                this.events.dispatchImmediately("inserted", {
                    type: "inserted",
                    target: this,
                    newValue: value
                });
            }
        }
    };
    /**
     * Adds an item to the end of the list.
     *
     * @param  {T}  item  An item to add
     */
    List.prototype.push = function (value) {
        var index = this._values.push(value) - 1;
        if (this.events.isEnabled("insertIndex")) {
            this.events.dispatchImmediately("insertIndex", {
                type: "insertIndex",
                target: this,
                index: index,
                newValue: value
            });
        }
        if (this.events.isEnabled("inserted")) {
            this.events.dispatchImmediately("inserted", {
                type: "inserted",
                target: this,
                newValue: value
            });
        }
        return value;
    };
    /**
     * Adds an item as a first item in the list.
     *
     * @param  {T}  item  An item to add
     */
    List.prototype.unshift = function (value) {
        return this.insertIndex(0, value);
    };
    /**
     * Adds multiple items to the list.
     *
     * @param {Array<T>}  items  An Array of items to add
     */
    List.prototype.pushAll = function (values) {
        var _this = this;
        _Array__WEBPACK_IMPORTED_MODULE_3__["each"](values, function (value) {
            _this.push(value);
        });
    };
    /**
     * Copies and adds items from abother list.
     *
     * @param {List<T>}  source  A list top copy items from
     */
    List.prototype.copyFrom = function (source) {
        this.pushAll(source._values);
    };
    /**
     * Returns the last item from the list, and removes it.
     *
     * @return {T} Item
     */
    List.prototype.pop = function () {
        var index = this._values.length - 1;
        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);
    };
    /**
     * Returns the first item from the list, and removes it.
     *
     * @return {T} Item
     */
    List.prototype.shift = function () {
        return this._values.length ? this.removeIndex(0) : undefined;
    };
    /**
     * Sets multiple items to the list.
     *
     * All current items are removed.
     *
     * @param {Array<T>}  newArray  New items
     */
    List.prototype.setAll = function (newArray) {
        var _this = this;
        // @tod if a value exists in both the new and old arrays, don't send remove/insert events
        var oldArray = _Array__WEBPACK_IMPORTED_MODULE_3__["copy"](this._values);
        this._values.length = 0;
        _Array__WEBPACK_IMPORTED_MODULE_3__["each"](newArray, function (value) {
            _this._values.push(value);
        });
        if (this.events.isEnabled("setAll")) {
            this.events.dispatchImmediately("setAll", {
                type: "setAll",
                target: this,
                oldArray: oldArray,
                newArray: this._values // TODO make a copy ?
            });
        }
        if (this.events.isEnabled("removed")) {
            _Array__WEBPACK_IMPORTED_MODULE_3__["each"](oldArray, function (x) {
                _this.events.dispatchImmediately("removed", {
                    type: "removed",
                    target: _this,
                    oldValue: x
                });
            });
        }
        if (this.events.isEnabled("inserted")) {
            _Array__WEBPACK_IMPORTED_MODULE_3__["each"](this._values, function (x) {
                _this.events.dispatchImmediately("inserted", {
                    type: "inserted",
                    target: _this,
                    newValue: x
                });
            });
        }
    };
    /**
     * Removes all items from the list.
     */
    List.prototype.clear = function () {
        this.setAll([]);
    };
    /**
     * Returns a list iterator.
     *
     * @return {Iterator} Iterator
     */
    List.prototype.iterator = function () {
        return _Iterator__WEBPACK_IMPORTED_MODULE_4__["fromArray"](this._values);
    };
    /**
     * Returns an ES6 iterator for the list.
     */
    List.prototype[Symbol.iterator] = function () {
        var length, i;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
            switch (_a.label) {
                case 0:
                    length = this._values.length;
                    i = 0;
                    _a.label = 1;
                case 1:
                    if (!(i < length)) return [3 /*break*/, 4];
                    return [4 /*yield*/, this._values[i]];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    ++i;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    /**
     * Calls `f` for each element in the list.
     *
     * `f` should have at least one parameter defined which will get a current
     * item, with optional second argument - index.
     */
    List.prototype.each = function (f) {
        _Array__WEBPACK_IMPORTED_MODULE_3__["each"](this._values, f);
    };
    /**
     * Returns a specific range of list items, which can be iterated.
     *
     * @ignore Exclude from docs
     * @todo Code duplication with IndexedIterable
     * @param  {number}              start  Start index
     * @param  {number}              end    End index
     * @return {IndexedIterable<T>}         Range
     */
    List.prototype.range = function (start, end) {
        if (start <= end) {
            var diff = end - start;
            start = Math.max(start, 0);
            end = Math.min(start + diff, this._values.length);
            return new IndexedIterable(this._values, start, end);
        }
        else {
            throw new Error("Start index must be lower than end index");
        }
    };
    /**
     * Returns an iterator that has list items sorted backwards.
     *
     * @ignore Exclude from docs
     * @return {IndexedIterable<T>} List
     */
    List.prototype.backwards = function () {
        return new IndexedIterable(this._values, this._values.length, 0);
    };
    return List;
}());

/**
 * A version of a [[List]] that has a "template".
 *
 * A template is an instance of an object, that can be used to create new
 * elements in the list without actually needing to create instances for those.
 *
 * When new element is created in the list, e.g. by calling its `create()`
 * method, an exact copy of the element is created (including properties and
 * other attributes), inserted into the list and returned.
 */
var ListTemplate = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ListTemplate, _super);
    /**
     * Constructor
     *
     * @param {T} t Template object
     */
    function ListTemplate(t) {
        var _this = _super.call(this) || this;
        _this.template = t;
        return _this;
    }
    Object.defineProperty(ListTemplate.prototype, "template", {
        /**
         * @return {T} Template object
         */
        get: function () {
            return this._template;
        },
        /**
         * A "template" object to copy all properties from when creating new list
         * items.
         *
         * @param {T}  v  Template object
         */
        set: function (v) {
            v.isTemplate = true;
            this._template = v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all elements from other list.
     *
     * @param {ListTemplate}  source  Source list
     */
    ListTemplate.prototype.copyFrom = function (source) {
        var _this = this;
        _Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](source.iterator(), function (value) {
            _this.push(value.clone());
        });
    };
    ListTemplate.prototype.create = function (make) {
        var clone = (make != null
            ? new make()
            : this.template.clone());
        this.push(clone);
        return clone;
    };
    /**
     * Creates an exact clone of the list, including its items and template.
     *
     * @return {ListTemplate<T>} New list
     */
    ListTemplate.prototype.clone = function () {
        var out = new ListTemplate(this.template);
        var values = this.values;
        var length = values.length;
        for (var i = 0; i < length; ++i) {
            out.push(values[i].clone());
        }
        return out;
    };
    return ListTemplate;
}(List));

//# sourceMappingURL=List.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js ***!
  \***********************************************************************/
/*! exports provided: PI, HALFPI, RADIANS, DEGREES, toNumberRange, round, ceil, stretch, fitToRange, sin, tan, cos, max, min, closest, intersect, invertRange, intersection, getDistance, getScale, getMidPoint, getRotation, getAngle, getCenterShift, getBBox, getCommonRectangle, getPointOnQuadraticCurve, getPointOnCubicCurve, getCubicControlPointA, getCubicControlPointB, adjustTension, normalizeAngle, fitAngleToRange, getArcRect, getArcPoint, isInRectangle, getLineIntersection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PI", function() { return PI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HALFPI", function() { return HALFPI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RADIANS", function() { return RADIANS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEGREES", function() { return DEGREES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toNumberRange", function() { return toNumberRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stretch", function() { return stretch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitToRange", function() { return fitToRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return closest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return intersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invertRange", function() { return invertRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return intersection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDistance", function() { return getDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScale", function() { return getScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMidPoint", function() { return getMidPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRotation", function() { return getRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAngle", function() { return getAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCenterShift", function() { return getCenterShift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBBox", function() { return getBBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCommonRectangle", function() { return getCommonRectangle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPointOnQuadraticCurve", function() { return getPointOnQuadraticCurve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPointOnCubicCurve", function() { return getPointOnCubicCurve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCubicControlPointA", function() { return getCubicControlPointA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCubicControlPointB", function() { return getCubicControlPointB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjustTension", function() { return adjustTension; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeAngle", function() { return normalizeAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitAngleToRange", function() { return fitAngleToRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArcRect", function() { return getArcRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArcPoint", function() { return getArcPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInRectangle", function() { return isInRectangle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLineIntersection", function() { return getLineIntersection; });
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A collection of Math-related functions
 *
 * @todo Comment trigonometric functions?
 */

/**
 * ============================================================================
 * CONSTANTS
 * ============================================================================
 * @hidden
 */
var PI = Math.PI;
var HALFPI = PI / 2;
var RADIANS = PI / 180;
var DEGREES = 180 / PI;
/**
 * Converts any value and fits it into a specific value range.
 *
 * @param  {any}     value  Source value
 * @param  {number}  min    Minimum allowable value
 * @param  {number}  max    Maximum allowable value
 * @return {number}         Number
 */
function toNumberRange(value, min, max) {
    if (_Type__WEBPACK_IMPORTED_MODULE_0__["hasValue"](value)) {
        value = _Type__WEBPACK_IMPORTED_MODULE_0__["toNumber"](value);
        return fitToRange(value, min, max);
    }
    return value;
}
/**
 * Rounds the numeric value to whole number or specific precision of set.
 *
 * @param  {number} value      Value
 * @param  {number} precision  Precision (number of decimal points)
 * @param  {boolean} floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.
 * @return {number}            Rounded value
 */
function round(value, precision, floor) {
    if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](precision) || precision <= 0) {
        var rounded = Math.round(value);
        if (floor) {
            if (rounded - value == 0.5) {
                rounded--;
            }
        }
        return rounded;
    }
    else {
        var d = Math.pow(10, precision);
        return Math.round(value * d) / d;
    }
}
/**
 * Ceils the numeric value to whole number or specific precision of set.
 *
 * @param  {number} value      Value
 * @param  {number} precision  Precision (number of decimal points)
 * @return {number}            Rounded value
 */
function ceil(value, precision) {
    if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](precision) || precision <= 0) {
        return Math.ceil(value);
    }
    else {
        var d = Math.pow(10, precision);
        return Math.ceil(value * d) / d;
    }
}
/**
 * Stretches `t` so that it will always be between `from` and `to`.
 *
 * @param  {number} t     Number from 0 to 1
 * @param  {number} from  Lowest possible value
 * @param  {number} to    Highest possible value
 * @return {number}       Adjusted value
 */
function stretch(t, from, to) {
    return (t * (to - from)) + from;
}
/**
 * Adjust numeric value so it fits to specific value range.
 *
 * @param  {number} value     Value
 * @param  {Optional<number>} minValue  Lowest possible value
 * @param  {Optional<number>} maxValue  Highest possible value
 * @return {number}                     Adjusted value
 */
function fitToRange(value, minValue, maxValue) {
    if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](minValue)) {
        if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](maxValue) && maxValue < minValue) {
            var temp = maxValue;
            maxValue = minValue;
            minValue = temp;
        }
        if (value < minValue) {
            value = minValue;
        }
    }
    if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](maxValue)) {
        if (value > maxValue) {
            value = maxValue;
        }
    }
    return value;
}
/**
 * Returns sine of a number.
 *
 * @param  {number} value  Value
 * @return {number}        Sine
 */
function sin(value) {
    return round(Math.sin(RADIANS * value), 10);
}
/**
 * Returns tan of a number.
 *
 * @param  {number} value  Value
 * @return {number}        Sine
 */
function tan(value) {
    return round(Math.tan(RADIANS * value), 10);
}
/**
 * Returns cosine of a number.
 *
 * @param  {number} value  Value
 * @return {number}        Cosine
 */
function cos(value) {
    return round(Math.cos(RADIANS * value), 10);
}
function max(left, right) {
    if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](left)) {
        if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](right)) {
            if (right > left) {
                return right;
            }
            else {
                return left;
            }
        }
        else {
            return left;
        }
    }
    else if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](right)) {
        return right;
    }
    else {
        return null;
    }
}
function min(left, right) {
    if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](left)) {
        if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](right)) {
            if (right < left) {
                return right;
            }
            else {
                return left;
            }
        }
        else {
            return left;
        }
    }
    else if (_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](right)) {
        return right;
    }
    else {
        return null;
    }
}
/**
 * Returns the closest value from the array of values to the reference value.
 *
 * @param  {number[]}  values  Array of values
 * @param  {number}    value   Reference value
 * @return {number}            Closes value from the array
 */
function closest(values, referenceValue) {
    return values.reduce(function (prev, curr) {
        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);
    });
}
/**
 * Checks whether two ranges of values intersect.
 *
 * @param {IRange}    range1  Range 1
 * @param {IRange}    range2  Range 2
 * @return {boolean}          Any intersecting numbers?
 */
function intersect(range1, range2) {
    var start1 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range1.start);
    var start2 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range2.start);
    var end1 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range1.end);
    var end2 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range2.end);
    return Math.max(start1, start2) <= Math.min(end1, end2);
}
/**
 * Inverts the range of values.
 *
 * @param {IRange}  range  Range
 */
function invertRange(range) {
    var start = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range.start);
    var end = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range.end);
    return { start: 1 - end, end: 1 - start };
}
/**
 * Returns an intersection range between two ranges of values.
 *
 * @param  {IRange}  range1  Range 1
 * @param  {IRange}  range2  Range 2
 * @return {IRange}          Intersecting value range
 */
function intersection(range1, range2) {
    var start1 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range1.start);
    var start2 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range2.start);
    var end1 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range1.end);
    var end2 = _Type__WEBPACK_IMPORTED_MODULE_0__["getValue"](range2.end);
    var startMax = Math.max(start1, start2);
    var endMin = Math.min(end1, end2);
    if (endMin < startMax) {
        return undefined;
    }
    else {
        return { start: startMax, end: endMin };
    }
}
/**
 * Returns pixel "distance" between two points.
 *
 * If second point is not specified, distance from {x:0, y:0} point is
 * calculated.
 *
 * @param  {IPoint}  point1  Point 1
 * @param  {IPoint}  point2  Point 2
 * @return {number}          Distance in relative pixels
 */
function getDistance(point1, point2) {
    if (!point1) {
        return 0;
    }
    if (!point2) {
        point2 = { x: 0, y: 0 };
    }
    return Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));
}
/**
 * Returns scale based on original and end position of the two points.
 *
 * @param  {IPoint}  point1       Current position of point 1
 * @param  {IPoint}  startPoint1  Start position of point 1
 * @param  {IPoint}  point2       Current position of point 1
 * @param  {IPoint}  startPoint2  Start position of point 2
 * @return {number}  Scale        Calculated scale
 */
function getScale(point1, startPoint1, point2, startPoint2) {
    var initialDistance = getDistance(startPoint1, startPoint2);
    var currentDistance = getDistance(point1, point2);
    return Math.abs(currentDistance / initialDistance);
}
/**
 * Returns an exact mid point between two points.
 *
 * @param  {IPoint}  point1     Position of point 1
 * @param  {IPoint}  point2     Position of point 2
 * @return {IPoint}  Mid point  Position of mid-point
 */
function getMidPoint(point1, point2, position) {
    if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](position)) {
        position = 0.5;
    }
    return {
        "x": (point1.x + (point2.x - point1.x) * position),
        "y": (point1.y + (point2.y - point1.y) * position)
    };
}
/**
 * Returns difference in angles between starting and ending position of two
 * vectors.
 *
 * @param  {IPoint}  point1       Current position of point 1
 * @param  {IPoint}  startPoint1  Start position of point 1
 * @param  {IPoint}  point2       Current position of point 1
 * @param  {IPoint}  startPoint2  Start position of point 2
 * @return {number}               Angle difference in degrees
 */
function getRotation(point1, startPoint1, point2, startPoint2) {
    // Get start and end angles
    var startAngle = getAngle(startPoint1, startPoint2);
    var angle = getAngle(point1, point2);
    // Calculate angle
    var diff = startAngle - angle;
    if (diff < 0) {
        diff += 360;
    }
    return diff;
}
/**
 * Calculates angle of the vector based on two or one point.
 *
 * @param  {IPoint}  point1  Point 1
 * @param  {IPoint}  point2  Point 2
 * @return {number}          Angle in degrees
 */
function getAngle(point1, point2) {
    if (!point2) {
        point2 = { x: point1.x * 2, y: point1.y * 2 };
    }
    var diffX = point2.x - point1.x;
    var diffY = point2.y - point1.y;
    var angle = Math.atan2(diffY, diffX) * DEGREES;
    if (angle < 0) {
        angle += 360;
    }
    return normalizeAngle(angle);
}
/**
 * Returns the shift in coordinates of the center when item is rotated, moved
 * and scaled at the same time.
 *
 * @param  {IPoint}  center       Current center
 * @param  {IPoint}  point1       Frst reference point
 * @param  {IPoint}  startPoint1  Original position of the first reference point
 * @param  {IPoint}  point2       Second reference point
 * @param  {IPoint}  startPoint2  Original position of the first reference point
 * @return {IPoint}               Shift in center point coordinates
 */
function getCenterShift(center, point1, startPoint1, point2, startPoint2) {
    // Get angle
    var angle = getRotation(point1, startPoint1, point2, startPoint2) - 90;
    if (angle < 0) {
        angle += 360;
    }
    // Get distance between new position
    var distance = getDistance(point1, point2);
    // Calculate new X
    var x = Math.cos(angle) / distance + point1.x;
    var y = Math.cos(angle) / distance + point1.y;
    var shift = {
        "x": x - center.x,
        "y": y - center.y
    };
    return shift;
}
/**
 * Converts an array of points into a bounding box rectangle.
 *
 * Array can contain any number of points.
 *
 * @param  {IPoint[]}              points  Points
 * @return {Optional<IRectangle>}          Bounding box rectangle
 */
function getBBox(points) {
    if (points) {
        var length_1 = points.length;
        if (length_1 !== 0) {
            var left = void 0;
            var right = void 0;
            var top_1;
            var bottom = void 0;
            for (var i = 0; i < length_1; i++) {
                var point = points[i];
                if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](right) || (point.x > right)) {
                    right = point.x;
                }
                if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](left) || (point.x < left)) {
                    left = point.x;
                }
                if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](top_1) || (point.y < top_1)) {
                    top_1 = point.y;
                }
                if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](bottom) || (point.y > bottom)) {
                    bottom = point.y;
                }
            }
            return { x: left, y: top_1, width: right - left, height: bottom - top_1 };
        }
    }
    return { x: 0, y: 0, width: 0, height: 0 };
}
/**
 * Returns a [[IRectangle]] object representing a common rectangle that fits
 * all passed in rectangles in it.
 *
 * @param {IRectangle[]}           rectangles  An array of rectangles
 * @return {Optional<IRectangle>}              Common rectangle
 */
function getCommonRectangle(rectangles) {
    var length = rectangles.length;
    if (length !== 0) {
        var minX = void 0;
        var minY = void 0;
        var maxX = void 0;
        var maxY = void 0;
        for (var i = 0; i < length; i++) {
            var rectangle = rectangles[i];
            minX = min(rectangle.x, minX);
            minY = min(rectangle.y, minY);
            maxX = max(rectangle.x + rectangle.width, maxX);
            maxY = max(rectangle.y + rectangle.height, maxY);
        }
        return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };
    }
}
/**
 * [getPointOnQuadraticCurve description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {IPoint}  pointA        [description]
 * @param  {IPoint}  pointB        [description]
 * @param  {IPoint}  controlPoint  [description]
 * @param  {number}  position      [description]
 * @return {IPoint}                [description]
 */
function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {
    var x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;
    var y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;
    return { x: x, y: y };
}
/**
 * [getPointOnCubicCurve description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {IPoint}  pointA         [description]
 * @param  {IPoint}  pointB         [description]
 * @param  {IPoint}  controlPointA  [description]
 * @param  {IPoint}  controlPointB  [description]
 * @param  {number}  position       [description]
 * @return {IPoint}                 [description]
 */
function getPointOnCubicCurve(pointA, pointB, controlPointA, controlPointB, position) {
    var point = { x: 0, y: 0 };
    var mt1 = 1 - position;
    var mt2 = mt1 * mt1;
    var mt3 = mt2 * mt1;
    point.x = pointA.x * mt3 + controlPointA.x * 3 * mt2 * position + controlPointB.x * 3 * mt1 * position * position + pointB.x * position * position * position;
    point.y = pointA.y * mt3 + controlPointA.y * 3 * mt2 * position + controlPointB.y * 3 * mt1 * position * position + pointB.y * position * position * position;
    return point;
}
/**
 * [getCubicControlPointA description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {IPoint}  p0        [description]
 * @param  {IPoint}  p1        [description]
 * @param  {IPoint}  p2        [description]
 * @param  {IPoint}  p3        [description]
 * @param  {number}  tensionX  [description]
 * @param  {number}  tensionY  [description]
 * @return {IPoint}            [description]
 */
function getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY) {
    tensionX = adjustTension(tensionX);
    tensionY = adjustTension(tensionY);
    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };
}
/**
 * [getCubicControlPointB description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {IPoint}  p0        [description]
 * @param  {IPoint}  p1        [description]
 * @param  {IPoint}  p2        [description]
 * @param  {IPoint}  p3        [description]
 * @param  {number}  tensionX  [description]
 * @param  {number}  tensionY  [description]
 * @return {IPoint}            [description]
 */
function getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY) {
    tensionX = adjustTension(tensionX);
    tensionY = adjustTension(tensionY);
    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };
}
/**
 * [adjustTension description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number}  tension  [description]
 * @return {number}           [description]
 */
function adjustTension(tension) {
    return 1 - tension + 0.00001;
}
/**
 * [normalizeAngle description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number}  value  [description]
 * @return {number}         [description]
 */
function normalizeAngle(value) {
    if (value == 360) {
        return 360;
    }
    return value % 360;
}
/**
 * [normalizeAngleToRange description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @todo review this with various angles, can be tested on radar chart with custom start/end angles
 * @param {number}   value       [description]
 * @param {number}   startAngle  [description]
 * @param {number}   endAngle    [description]
 * @return {number}              [description]
 */
function fitAngleToRange(value, startAngle, endAngle) {
    if (startAngle > endAngle) {
        var temp = startAngle;
        startAngle = endAngle;
        endAngle = temp;
    }
    value = normalizeAngle(value);
    var count = (startAngle - normalizeAngle(startAngle)) / 360;
    if (value < startAngle) {
        value += 360 * (count + 1);
    }
    var maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;
    var maxStart = startAngle + (endAngle - startAngle) / 2 - 180;
    if (value > endAngle) {
        if (value - 360 > startAngle) {
            value -= 360;
        }
        else {
            if (value < maxEnd) {
                value = endAngle;
            }
            else {
                value = startAngle;
            }
        }
    }
    if (value < startAngle) {
        if (value > maxStart) {
            value = startAngle;
        }
        else {
            value = endAngle;
        }
    }
    return value;
}
/**
 * Returns [[IRectangle]] of an arc in relative values, assuming that the
 * center is at the circle center.
 *
 * Used to find out max radius of an arc.
 *
 * @ignore Exclude from docs
 * @param  {number}      startAngle  Start angle
 * @param  {number}      endAngle    End angle
 * @param  {number}      radius    	 Relative radius
 * @return {IRectangle}              Rectangle
 */
function getArcRect(startAngle, endAngle, radius) {
    var minX = Number.MAX_VALUE;
    var minY = Number.MAX_VALUE;
    var maxX = -Number.MAX_VALUE;
    var maxY = -Number.MAX_VALUE;
    var bpoints = [];
    if (!_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](radius)) {
        radius = 1;
    }
    bpoints.push(getArcPoint(radius, startAngle));
    bpoints.push(getArcPoint(radius, endAngle));
    var fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);
    var toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);
    for (var angle = fromAngle; angle <= toAngle; angle += 90) {
        if (angle >= startAngle && angle <= endAngle) {
            bpoints.push(getArcPoint(radius, angle));
        }
    }
    for (var i = 0; i < bpoints.length; i++) {
        var pt = bpoints[i];
        if (pt.x < minX) {
            minX = pt.x;
        }
        if (pt.y < minY) {
            minY = pt.y;
        }
        if (pt.x > maxX) {
            maxX = pt.x;
        }
        if (pt.y > maxY) {
            maxY = pt.y;
        }
    }
    return ({ x: minX, y: minY, width: maxX - minX, height: maxY - minY });
}
/**
 * Returns point on arc
 *
 * @param  {IPoint}  center point
 * @param  {number}  radius
 * @param  {number}  arc
 * @return {boolean}
 */
function getArcPoint(radius, arc) {
    return ({ x: radius * cos(arc), y: radius * sin(arc) });
}
/**
 * Returns true if a point is within rectangle
 *
 * @param  {IPoint}      point
 * @param  {IRectangle}  rectangle
 * @return {boolean}
 */
function isInRectangle(point, rectangle) {
    if (point.x >= rectangle.x && point.x <= rectangle.x + rectangle.width && point.y > rectangle.y && point.y < rectangle.y + rectangle.height) {
        return true;
    }
    return false;
}
function getLineIntersection(pointA1, pointA2, pointB1, pointB2) {
    var x = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.x - pointB2.x) - (pointA1.x - pointA2.x) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));
    var y = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));
    return { x: x, y: y };
}
//# sourceMappingURL=Math.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Morpher.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Morpher.js ***!
  \**************************************************************************/
/*! exports provided: Morpher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Morpher", function() { return Morpher; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _utils_Animation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Ease__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Morpher module contains functionality that allows morphing one polygon to
 * another.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * Morpher can be used to morph one polygon to some other polygon.
 */
var Morpher = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Morpher, _super);
    /**
     * Constructor.
     *
     * @param {IMorphable} morphable An object to morph
     */
    function Morpher(morphable) {
        var _this = _super.call(this) || this;
        /**
         * A storage for measurements.
         *
         * @type {IRectangle[]}
         */
        _this._bboxes = [];
        /**
         * Duration of the morphing animation in milliseconds.
         *
         * @type {number}
         */
        _this.morphDuration = 800;
        /**
         * An easing function to use for morphing animation.
         *
         * @see {@link Ease}
         * @type {Function}
         */
        _this.morphEasing = _utils_Ease__WEBPACK_IMPORTED_MODULE_4__["cubicOut"];
        /**
         * If set to `true`, all separate parts of the multi-part polygon will
         * morph into a single circle or polygon when using built-in methods
         * `morphToCircle()` or `morphToPolygon()`.
         *
         * Otherwise each separate part of polygon will morph to individual target
         * circle or polgyon.
         *
         * @type {boolean}
         */
        _this.morphToSingle = true;
        /**
         * A ratio to scale morphed object in relation to the source object.
         *
         * @type {number}
         */
        _this.scaleRatio = 1;
        _this.className = "Morpher";
        _this.morphable = morphable;
        _this.applyTheme();
        return _this;
    }
    /**
     * Morphs a polygon to another polygon.
     *
     * @param {IPoint[][][]}        toPoints  Corner points of the target shape
     * @param {number}              duration  Duration in milliseconds
     * @param {(number) => number}  easing    Easing function
     * @return {Animation}                    Animation
     */
    Morpher.prototype.morphToPolygon = function (toPoints, duration, easing) {
        var points = this.morphable.currentPoints;
        this.sortPoints(points);
        this.sortPoints(toPoints);
        this._morphFromPointsReal = [];
        this._morphToPointsReal = [];
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](duration)) {
            duration = this.morphDuration;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](easing)) {
            easing = this.morphEasing;
        }
        this._morphFromPointsReal = this.normalizePoints(toPoints, points);
        this._morphToPointsReal = this.normalizePoints(points, toPoints);
        this.morphable.currentPoints = this._morphFromPointsReal;
        var animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_2__["Animation"](this, { property: "morphProgress", from: 0, to: 1 }, duration, easing);
        this._disposers.push(animation);
        animation.start();
        return animation;
    };
    /**
     * [normalizePoints description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param  {IPoint[][][]}  pointsA  Point A
     * @param  {IPoint[][][]}  pointsB  Point B
     * @return {IPoint[]}               Normalized points
     */
    Morpher.prototype.normalizePoints = function (pointsA, pointsB) {
        for (var i = 0, len = pointsA.length; i < len; i++) {
            var surfaceA = pointsA[i][0];
            var holeA = pointsA[i][1];
            var bboxA = _utils_Type__WEBPACK_IMPORTED_MODULE_5__["getValue"](_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getBBox"](surfaceA));
            var middleX = bboxA.x + bboxA.width;
            var middleY = bboxA.y + bboxA.height;
            // check if we have the same in PointsB
            if (!pointsB[i]) {
                pointsB[i] = [];
            }
            // check if we have surface in pointsB
            if (surfaceA && !pointsB[i][0]) {
                pointsB[i][0] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];
            }
            if (pointsB[i][0]) {
                pointsB[i][0] = this.addPoints(pointsB[i][0], surfaceA.length);
                var distance = Infinity;
                var splitAt = 0;
                for (var a = 0; a < pointsB[i][0].length; a++) {
                    var newDistance = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["getDistance"](pointsB[i][0][a], surfaceA[0]);
                    if (newDistance < distance) {
                        splitAt = a;
                        distance = newDistance;
                    }
                }
                var partA = pointsB[i][0].slice(0, splitAt);
                var partB = pointsB[i][0].slice(splitAt);
                pointsB[i][0] = partB.concat(partA);
            }
            if (holeA) {
                if (!pointsB[i][1]) {
                    pointsB[i][1] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];
                }
                pointsB[i][1] = this.addPoints(pointsB[i][1], holeA.length);
            }
        }
        return pointsB;
    };
    /**
     * [sortPoints description]
     *
     * @ignore Exclude from doc
     * @todo Description
     * @param {IPoint[][][]}  points  [description]
     * @return                        common bbox of points
     */
    Morpher.prototype.sortPoints = function (points) {
        points.sort(function (a, b) {
            var bbox1 = _utils_Type__WEBPACK_IMPORTED_MODULE_5__["getValue"](_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getBBox"](a[0]));
            var bbox2 = _utils_Type__WEBPACK_IMPORTED_MODULE_5__["getValue"](_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getBBox"](b[0]));
            if (bbox1.width * bbox1.height > bbox2.width * bbox2.height) {
                return -1;
            }
            else {
                return 1;
            }
        });
        var bboxes = [];
        for (var i = 0, len = points.length; i < len; i++) {
            var surface = points[i][0];
            if (surface) {
                bboxes.push(_utils_Type__WEBPACK_IMPORTED_MODULE_5__["getValue"](_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getBBox"](surface)));
            }
        }
        return _utils_Math__WEBPACK_IMPORTED_MODULE_3__["getCommonRectangle"](bboxes);
    };
    /**
     * Morphs polygon to a circle (it is actually a polygon which makes a circle).
     *
     * @param  {number}              radius    Target circle radius (px)
     * @param  {number}              duration  Duration (ms)
     * @param  {(number) => number}  easing    Easing function
     * @return {Animation}                     Animation
     */
    Morpher.prototype.morphToCircle = function (radius, duration, easing) {
        var points = this.morphable.points;
        var commonBBox = this.sortPoints(points);
        this._morphFromPointsReal = [];
        this._morphToPointsReal = [];
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](duration)) {
            duration = this.morphDuration;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](easing)) {
            easing = this.morphEasing;
        }
        // surface
        for (var i = 0, len = points.length; i < len; i++) {
            var surface = points[i][0];
            var hole = points[i][1];
            this._morphFromPointsReal[i] = [];
            this._morphToPointsReal[i] = [];
            if (surface) {
                var toPoints = surface;
                var fromPoints = surface;
                var bbox = _utils_Type__WEBPACK_IMPORTED_MODULE_5__["getValue"](_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getBBox"](fromPoints)); // this._bboxes[i];
                if (this.morphToSingle) {
                    bbox = _utils_Type__WEBPACK_IMPORTED_MODULE_5__["getValue"](commonBBox);
                }
                var middleX = bbox.x + bbox.width / 2;
                var middleY = bbox.y + bbox.height / 2;
                var realRadius = radius;
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](realRadius)) {
                    realRadius = Math.min(bbox.width / 2, bbox.height / 2);
                }
                toPoints = [];
                // find angle for the first point
                var startAngle = _utils_Math__WEBPACK_IMPORTED_MODULE_3__["getAngle"]({ x: middleX, y: middleY }, surface[0]);
                var count = 100;
                if (surface.length > count) {
                    count = surface.length;
                }
                fromPoints = this.addPoints(surface, count);
                count = fromPoints.length; // add Points might increase number a bit
                var angle = 360 / (count - 1);
                for (var a = 0; a < count; a++) {
                    var realAngle = angle * a + startAngle;
                    var pointOnCircle = { x: middleX + realRadius * _utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](realAngle), y: middleY + realRadius * _utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](realAngle) };
                    toPoints[a] = pointOnCircle;
                }
                if (hole && hole.length > 0) {
                    for (var i_1 = 0, hlen = hole.length; i_1 < hlen; i_1++) {
                        toPoints.push({ x: middleX, y: middleY });
                    }
                }
                this._morphFromPointsReal[i][0] = fromPoints;
                this._morphToPointsReal[i][0] = toPoints;
            }
        }
        this.morphable.currentPoints = this._morphFromPointsReal;
        var animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_2__["Animation"](this, { property: "morphProgress", from: 0, to: 1 }, duration, easing);
        this._disposers.push(animation);
        animation.start();
        return animation;
    };
    /**
     * [addPoints description]
     *
     * @ignore Exclude from doc
     * @todo Description
     * @param  {IPoint[]}  points         [description]
     * @param  {number}    mustHaveCount  [description]
     * @return {IPoint[]}                 [description]
     */
    Morpher.prototype.addPoints = function (points, mustHaveCount) {
        var addToSegmentCount = Math.round(mustHaveCount / points.length);
        var newPoints = [];
        for (var i = 0, len = points.length; i < len; i++) {
            var point0 = points[i];
            var point1 = void 0;
            if (i == points.length - 1) {
                point1 = points[0];
            }
            else {
                point1 = points[i + 1];
            }
            newPoints.push(point0);
            for (var p = 1; p < addToSegmentCount; p++) {
                var percent = p / addToSegmentCount;
                var extraPoint = { x: point0.x + (point1.x - point0.x) * percent, y: point0.y + (point1.y - point0.y) * percent };
                newPoints.push(extraPoint);
            }
            // stop adding in case we already added more than left in original
            if (newPoints.length + points.length - i == mustHaveCount) {
                addToSegmentCount = 0;
            }
        }
        if (newPoints.length < mustHaveCount && points.length > 0) {
            var lastPoint = points[points.length - 1];
            for (var p = newPoints.length; p < mustHaveCount; p++) {
                // add same as last
                newPoints.push({ x: lastPoint.x, y: lastPoint.y });
            }
        }
        return newPoints;
    };
    /**
     * Morphs polygon into a rectangular polygon.
     *
     * @param  {number}              width     Width of the target rectangle (px)
     * @param  {number}              height    Height of the target rectangle (px)
     * @param  {number}              duration  Duration (ms)
     * @param  {(number) => number}  easing    Easing function
     * @return {Animation}                     Animation
     */
    Morpher.prototype.morphToRectangle = function (width, height, duration, easing) {
        var points = this.morphable.points;
        this.sortPoints(points);
        this._morphFromPointsReal = [];
        this._morphToPointsReal = [];
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](duration)) {
            duration = this.morphDuration;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](easing)) {
            easing = this.morphEasing;
        }
        //		let biggestBBox: IRectangle = this._bboxes[this._biggestIndex];
        // surface
        for (var i = 0, len = points.length; i < len; i++) {
            var surface = points[i][0];
            var hole = points[i][1];
            this._morphFromPointsReal[i] = [];
            this._morphToPointsReal[i] = [];
            if (surface) {
                var toPoints = surface;
                var fromPoints = surface;
                var bbox = this._bboxes[i];
                // we only work with first area. TODO: maybe we should find the biggest one?
                if (this.morphToSingle) {
                    //if (i != this._biggestIndex) {
                    //	bbox = { x: biggestBBox.x + biggestBBox.width / 2, y: biggestBBox.y + biggestBBox.height / 2, width: 0, height: 0 };
                    //}
                }
                var x = bbox.x;
                var y = bbox.y;
                var realWidth = width;
                var realHeight = height;
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](realWidth)) {
                    realWidth = bbox.width;
                }
                if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](realHeight)) {
                    realHeight = bbox.height;
                }
                toPoints = [{ x: x, y: y }, { x: x + realWidth, y: y }, { x: x + realWidth, y: y + realHeight }, { x: x, y: y + realHeight }];
                toPoints = this.addPoints(toPoints, surface.length);
                // if polygon has less points then count, add
                if (surface.length < 4) {
                    for (var i_2 = surface.length; i_2 < 4; i_2++) {
                        toPoints.push({ x: surface[i_2].x, y: surface[i_2].y });
                    }
                }
                if (hole && hole.length > 0) {
                    var middleX = bbox.x + bbox.width / 2;
                    var middleY = bbox.y + bbox.height / 2;
                    for (var i_3 = 0, hlen = hole.length; i_3 < hlen; i_3++) {
                        toPoints.push({ x: middleX, y: middleY });
                    }
                }
                this._morphFromPointsReal[i][0] = fromPoints;
                this._morphToPointsReal[i][0] = toPoints;
            }
        }
        this.morphable.currentPoints = this._morphFromPointsReal;
        var animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_2__["Animation"](this, { property: "morphProgress", from: 0, to: 1 }, duration, easing);
        this._disposers.push(animation);
        animation.start();
        return animation;
    };
    Object.defineProperty(Morpher.prototype, "morphProgress", {
        /**
         * Returns the progress of morph transition.
         *
         * @return {Optional<number>} Progress (0-1)
         */
        get: function () {
            return this._morphProgress;
        },
        /**
         * Progress of the morph transition.
         *
         * Setting this will also trigger actual transformation.
         *
         * @param {number}  value  Progress (0-1)
         */
        set: function (value) {
            this._morphProgress = value;
            var currentPoints = [];
            if (value != null) {
                var fromPoints = this._morphFromPointsReal;
                var toPoints = this._morphToPointsReal;
                if (fromPoints != null && toPoints != null) {
                    for (var i = 0, len = fromPoints.length; i < len; i++) {
                        var currentArea = [];
                        currentPoints.push(currentArea);
                        var surfaceFrom = fromPoints[i][0];
                        var holeFrom = fromPoints[i][1];
                        var surfaceTo = toPoints[i][0];
                        var holeTo = toPoints[i][1];
                        if (surfaceFrom && surfaceFrom.length > 0 && surfaceTo && surfaceTo.length > 0) {
                            var currentSurface = [];
                            for (var i_4 = 0, slen = surfaceFrom.length; i_4 < slen; i_4++) {
                                var point0 = surfaceFrom[i_4];
                                var point1 = surfaceTo[i_4];
                                var currentPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value };
                                currentSurface.push(currentPoint);
                            }
                            currentArea[0] = currentSurface;
                        }
                        if (holeFrom && holeFrom.length > 0 && holeTo && holeTo.length > 0) {
                            var currentHole = [];
                            for (var i_5 = 0, hlen = holeFrom.length; i_5 < hlen; i_5++) {
                                var point0 = holeFrom[i_5];
                                var point1 = holeTo[i_5];
                                var currentPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value };
                                currentHole.push(currentPoint);
                            }
                            currentArea[1] = currentHole;
                        }
                    }
                }
            }
            this.morphable.currentPoints = currentPoints;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Restores the polygon to its original appearance.
     *
     * @param {number}              duration  Duration (ms)
     * @param {(number) => number}  easing    Easing function
     * @return {Animation}                    Animation
     */
    Morpher.prototype.morphBack = function (duration, easing) {
        this._morphToPointsReal = this._morphFromPointsReal;
        this._morphFromPointsReal = this.morphable.currentPoints;
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](duration)) {
            duration = this.morphDuration;
        }
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](easing)) {
            easing = this.morphEasing;
        }
        var animation = new _utils_Animation__WEBPACK_IMPORTED_MODULE_2__["Animation"](this, { property: "morphProgress", from: 0, to: 1 }, duration, easing);
        this._disposers.push(animation);
        animation.start();
        return animation;
    };
    Object.defineProperty(Morpher.prototype, "animations", {
        /**
         * Returns a list of morph animations currently being played.
         *
         * @return {Array<Animation>} List of animations
         */
        get: function () {
            if (!this._animations) {
                this._animations = [];
                this._disposers.push(new _utils_Animation__WEBPACK_IMPORTED_MODULE_2__["AnimationDisposer"](this._animations));
            }
            return this._animations;
        },
        enumerable: true,
        configurable: true
    });
    return Morpher;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]));

//# sourceMappingURL=Morpher.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Net.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Net.js ***!
  \**********************************************************************/
/*! exports provided: load */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "load", function() { return load; });
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A collection of network-related functions
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

/**
 * Loads an external file via its URL.
 *
 * Please note that this is an asynchronous function.
 *
 * It will not return the result, but rather a `Promise`.
 *
 * You can use the `await` notion, or `then()`.
 *
 * ```TypeScript
 * // Using await
 * let response = await Net.load( "http://www.my.com/data.json" );
 * console.log( response.response );
 *
 * // Using then()
 * Net.load( "http://www.my.com/data.json" ).then( ( response ) => {
 *   console.log( response.response );
 * } );
 * ```
 * ```JavaScript
 * // Using then()
 * Net.load( "http://www.my.com/data.json" ).then( function( response ) {
 *   console.log( response.response );
 * } );
 * ```
 *
 * @async
 * @param  {string}                      url      URL for the file to load
 * @param  {A}                           target   A target element that is requesting the net load
 * @param  {INetRequestOptions}          options  Request options
 * @return {Promise<INetLoadResult<A>>}           Result (Promise)
 */
function load(url, target, options) {
    return new Promise(function (success, error) {
        // Is return type Blob?
        var isBlob = _Type__WEBPACK_IMPORTED_MODULE_0__["hasValue"](options) && options.responseType == "blob";
        // Create request and set up handlers
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
            if (xhr.status === 200) {
                var response = void 0;
                var blob = void 0;
                if (isBlob) {
                    blob = xhr.response;
                }
                else {
                    response = xhr.responseText || xhr.response;
                }
                var output = {
                    xhr: xhr,
                    error: false,
                    response: response,
                    blob: blob,
                    type: xhr.getResponseHeader("Content-Type"),
                    target: target
                };
                success(output);
            }
            else {
                error({
                    xhr: xhr,
                    error: true,
                    type: xhr.getResponseHeader("Content-Type"),
                    target: target
                });
            }
        };
        xhr.onerror = function () {
            error({
                xhr: xhr,
                error: true,
                type: xhr.getResponseHeader("Content-Type"),
                target: target
            });
        };
        // Open request
        xhr.open("GET", url, true);
        if (options && options.withCredentials) {
            xhr.withCredentials = true;
        }
        // Process options
        if (_Type__WEBPACK_IMPORTED_MODULE_0__["hasValue"](options)) {
            if (_Type__WEBPACK_IMPORTED_MODULE_0__["hasValue"](options.requestHeaders)) {
                for (var i = 0; i < options.requestHeaders.length; i++) {
                    var header = options.requestHeaders[i];
                    xhr.setRequestHeader(header.key, header.value);
                }
            }
            if (_Type__WEBPACK_IMPORTED_MODULE_0__["hasValue"](options.responseType)) {
                xhr.responseType = options.responseType;
            }
        }
        // Send request
        xhr.send();
    });
}
//# sourceMappingURL=Net.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js ***!
  \*************************************************************************/
/*! exports provided: order */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "order", function() { return order; });
/**
 * ============================================================================
 * COMPARING FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Comparing function used for ordering.
 *
 * @ignore Exclude from docs
 * @param  {number}    a  Number 1
 * @param  {number}    b  Number 2
 * @return {Ordering}     Result
 */
function order(a, b) {
    if (a === b) {
        return 0;
    }
    else if (a < b) {
        return -1;
    }
    else {
        return 1;
    }
}
//# sourceMappingURL=Number.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js ***!
  \*************************************************************************/
/*! exports provided: entries, keys, keysOrdered, hasKey, getKey, eachContinue, each, eachOrdered, copy, merge, copyProperties, softCopyProperties, forceCopyProperties, copyAllProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return entries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keysOrdered", function() { return keysOrdered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasKey", function() { return hasKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getKey", function() { return getKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eachContinue", function() { return eachContinue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "each", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eachOrdered", function() { return eachOrdered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyProperties", function() { return copyProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "softCopyProperties", function() { return softCopyProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forceCopyProperties", function() { return forceCopyProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyAllProperties", function() { return copyAllProperties; });
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * UTILITY FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Returns an iterator for all entries in object.
 *
 * Can be used to safely iterate through all properties of the object.
 *
 * @param   {object}    object  Source object
 * @returns {Iterator}          Iterator
 */
function entries(object) {
    return function (push) {
        // TODO make this more efficient ?
        for (var key in object) {
            if (hasKey(object, key)) {
                if (!push([key, object[key]])) {
                    break;
                }
            }
        }
    };
}
/**
 * Returns an array of object's property names.
 *
 * @param   {object}        object  Source object
 * @returns {Array<string}          Object property names
 */
function keys(object) {
    var output = [];
    for (var key in object) {
        if (hasKey(object, key)) {
            output.push(key);
        }
    }
    return output;
}
/**
 * Returns an array of object's property names ordered using specific ordering
 * function.
 *
 * @param   {object}        object  Source object
 * @param   {function}      order   Ordering function
 * @returns {Array<string>}          Object property names
 */
function keysOrdered(object, order) {
    return keys(object).sort(order);
}
/**
 * Checks if `object` has a specific `key`.
 *
 * @param   {object}   object  Source object
 * @param   {string}   key     Property name
 * @returns {boolean}          Has key?
 */
function hasKey(object, key) {
    return {}.hasOwnProperty.call(object, key);
}
/**
 * Returns value of the specific `key`.
 *
 * @param   {object}   object  Source object
 * @param   {string}   key     Property name
 * @returns {any}              Key value
 */
function getKey(object, key) {
    return object[key];
}
/**
 * Iterates through all properties of the object calling `fn` for each of them.
 *
 * If return value of the function evaluates to `false` further iteration is
 * cancelled.
 *
 * @param {object}   object  Source object
 * @param {function} fn      Callback function
 */
function eachContinue(object, fn) {
    for (var key in object) {
        if (hasKey(object, key)) {
            if (!fn(key, object[key])) {
                break;
            }
        }
    }
}
/**
 * Iterates through all properties of the object calling `fn` for each of them.
 *
 * @param {object}   object  Source object
 * @param {function} fn      Callback function
 */
function each(object, fn) {
    eachContinue(object, function (key, value) {
        fn(key, value);
        return true;
    });
}
/**
 * Orders object properties using custom `ord` function and iterates through
 * them calling `fn` for each of them.
 *
 * @param {object}    object  Source object
 * @param {function}  fn      Callback function
 * @param {function}  order   Ordering function
 */
function eachOrdered(object, fn, ord) {
    _Array__WEBPACK_IMPORTED_MODULE_0__["each"](keysOrdered(object, ord), function (key) {
        fn(key, object[key]);
    });
}
/**
 * Returns a copy of the object.
 *
 * @param   {object} object  Source object
 * @returns {object}         Copy of the object
 */
function copy(object) {
    return Object.assign({}, object);
}
/**
 * Merges two objects and returns a new object that contains properties from
 * both source objects.
 *
 * @param   {object} object1  Source object #1
 * @param   {object} object2  Source object #2
 * @returns {object}          Combined object
 */
function merge(object1, object2) {
    return Object.assign({}, object1, object2);
}
/**
 * Copies a list of properties from one object to another.
 *
 * Will not copy empty properties.
 *
 * @param {object}         source  Source object
 * @param {object}         target    Target object
 * @param {Array<string>}  keys  List of keys to copy
 */
function copyProperties(source, target, keys) {
    _Array__WEBPACK_IMPORTED_MODULE_0__["each"](keys, function (key) {
        if (_Type__WEBPACK_IMPORTED_MODULE_1__["hasValue"](source[key])) {
            target[key] = source[key];
        }
    });
}
/**
 * Copies a list of properties from one object to another only if target does't have value of the property set.
 *
 * Will not copy empty properties.
 *
 * @param {object}         source  Source object
 * @param {object}         target    Target object
 * @param {Array<string>}  keys  List of keys to copy
 */
function softCopyProperties(source, target, keys) {
    _Array__WEBPACK_IMPORTED_MODULE_0__["each"](keys, function (key) {
        if (_Type__WEBPACK_IMPORTED_MODULE_1__["hasValue"](source[key]) && !(_Type__WEBPACK_IMPORTED_MODULE_1__["hasValue"](target[key]))) {
            target[key] = source[key];
        }
    });
}
/**
 * Copies a list of properties from one object to another.
 *
 * Will copy empty properties.
 *
 * @param {object}         source  Source object
 * @param {object}         target    Target object
 * @param {Array<string>}  keys  List of keys to copy
 */
function forceCopyProperties(source, target, keys) {
    _Array__WEBPACK_IMPORTED_MODULE_0__["each"](keys, function (key) {
        target[key] = source[key];
    });
}
/**
 * Copies all properties from one object to another.
 *
 * @param {object}  from  Source object
 * @param {object}  to    Target object
 */
function copyAllProperties(from, to) {
    copyProperties(from, to, keys(from));
}
//# sourceMappingURL=Object.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js ***!
  \************************************************************************/
/*! exports provided: reverse, or */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return reverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "or", function() { return or; });
/**
 * A collection of functions for ordering.
 */
/**
 * [reverse description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {Ordering}  a  [description]
 * @return {Ordering}     [description]
 */
function reverse(a) {
    switch (a) {
        case 0:
            return 0;
        case -1:
            return 1;
        case 1:
            return -1;
    }
}
/**
 * [or description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {Ordering}  a  Item 1
 * @param  {Ordering}  b  Item 2
 * @return {Ordering}     [description]
 */
function or(a, b) {
    if (a === 0) {
        return b;
    }
    else {
        return a;
    }
}
//# sourceMappingURL=Order.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js ***!
  \**************************************************************************/
/*! exports provided: Percent, percent, isPercent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Percent", function() { return Percent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "percent", function() { return percent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPercent", function() { return isPercent; });
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Represents a relative value. (percent)
 */
var Percent = /** @class */ (function () {
    /**
     * Constructor.
     *
     * @param {number}  percent  Percent value
     */
    function Percent(percent) {
        this._value = percent;
    }
    Object.defineProperty(Percent.prototype, "value", {
        /**
         * Relative value.
         *
         * E.g. 100% is 1, 50% is 0.5, etc.
         *
         * This is useful to apply transformations to other values. E.g.:
         *
         * ```TypeScript
         * let value = 256;
         * let percent = new am4core.Percent(50);
         * console.log(value * percent.value); // outputs 128
         * ```
         * ```JavaScript
         * var value = 256;
         * var percent = new am4core.Percent(50);
         * console.log(value * percent.value); // outputs 128
         * ```
         *
         * @readonly
         * @return {number} Relative value
         */
        get: function () {
            return this._value / 100;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Percent.prototype, "percent", {
        /**
         * Value in percent.
         *
         * @return {number} Percent
         */
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    Percent.prototype.toString = function () {
        return "" + this._value + "%";
    };
    return Percent;
}());

/**
 * Converts numeric percent value to a proper [[Percent]] object.
 *
 * ```TypeScript
 * pieSeries.radius = am4core.percent(80);
 * ```
 * ```JavaScript
 * pieSeries.radius = am4core.percent(80);
 * ```
 *
 * @param  {number}   value  Percent
 * @return {Percent}         Percent object
 */
function percent(value) {
    return new Percent(value);
}
/**
 * Checks if value is a [[Percent]] object.
 *
 * @ignore Exclude from docs
 * @param  {any}      value  Input value
 * @return {boolean}         Is percent?
 */
function isPercent(value) {
    return value instanceof Percent;
}
//# sourceMappingURL=Percent.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js ***!
  \*****************************************************************************/
/*! exports provided: OrderedList, SortedList, OrderedListTemplate, SortedListTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderedList", function() { return OrderedList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortedList", function() { return SortedList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderedListTemplate", function() { return OrderedListTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortedListTemplate", function() { return SortedListTemplate; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _Iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * Ordered list contains values of any type in an indexed array.
 */
var OrderedList = /** @class */ (function () {
    /**
     * Constructor
     *
     * @param {Array<T>}  initial  Inital list of values to add to list
     */
    function OrderedList(initial) {
        /**
         * Holds list values.
         *
         * @type {Array<T>}
         */
        this._values = [];
        /**
         * Event dispatcher.
         *
         * @type {EventDispatcher<AMEvent<OrderedList<T>, ISortedListEvents<T>>>}
         */
        this.events = new _EventDispatcher__WEBPACK_IMPORTED_MODULE_1__["EventDispatcher"]();
        if (initial != null) {
            this.setAll(initial);
        }
    }
    Object.defineProperty(OrderedList.prototype, "values", {
        /**
         * All items of the list.
         *
         * Do not modify the list directly. Rather use `insert()` and `remove()`
         * methods.
         *
         * @return {Array<T>} List values
         */
        get: function () {
            return this._values;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Inserts a value into list item array.
     *
     * @param {T}  value  Value
     */
    OrderedList.prototype._insert = function (value) {
        this._values.push(value);
        return this._values.length - 1;
    };
    Object.defineProperty(OrderedList.prototype, "length", {
        /**
         * Number of items in the list.
         *
         * @readonly
         * @return {number} Length
         */
        get: function () {
            return this._values.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the index of the specific `value`.
     *
     * -1 if not found.
     *
     * @param  {T}       value  Value
     * @return {number}        Index
     */
    OrderedList.prototype.indexOf = function (value) {
        return _Array__WEBPACK_IMPORTED_MODULE_2__["indexOf"](this._values, value);
    };
    /**
     * Checks if list contains the `value`.
     *
     * @param  {T}        value  Value
     * @return {boolean}         In the list?
     */
    OrderedList.prototype.contains = function (value) {
        return this.indexOf(value) !== -1;
    };
    /**
     * Returns an item at specific `index`.
     *
     * @param  {number}  index  Index
     * @return {T}              Item
     */
    OrderedList.prototype.getIndex = function (index) {
        return this._values[index];
    };
    Object.defineProperty(OrderedList.prototype, "first", {
        /**
         * First item in the list.
         *
         * @return {T} Item
         */
        get: function () {
            return this._values[0];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrderedList.prototype, "last", {
        /**
         * Last item in the list.
         *
         * @return {T} Item
         */
        get: function () {
            return this._values[this._values.length - 1];
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Inserts a value into list.
     *
     * @param {T}  value  Value
     */
    OrderedList.prototype.insert = function (value) {
        var index = this._insert(value);
        if (this.events.isEnabled("inserted")) {
            this.events.dispatchImmediately("inserted", {
                type: "inserted",
                target: this,
                index: index,
                newValue: value
            });
        }
    };
    /**
     * Removes an item with the `value` from the list.
     *
     * @param {T}  value  Value
     */
    OrderedList.prototype.remove = function (value) {
        var index = this.indexOf(value);
        if (index !== -1) {
            var oldValue = this._values[index];
            _Array__WEBPACK_IMPORTED_MODULE_2__["removeIndex"](this._values, index);
            if (this.events.isEnabled("removed")) {
                this.events.dispatchImmediately("removed", {
                    type: "removed",
                    target: this,
                    index: index,
                    oldValue: oldValue,
                });
            }
        }
    };
    /**
     * Sets multiple items to the list.
     *
     * All current items are removed.
     *
     * @param {Array<T>}  newArray  New items
     */
    OrderedList.prototype.setAll = function (newArray) {
        var _this = this;
        _Array__WEBPACK_IMPORTED_MODULE_2__["eachReverse"](this._values, function (x, i) {
            _this._values.pop();
            if (_this.events.isEnabled("removed")) {
                _this.events.dispatchImmediately("removed", {
                    type: "removed",
                    target: _this,
                    index: i,
                    oldValue: x
                });
            }
        });
        _Array__WEBPACK_IMPORTED_MODULE_2__["each"](newArray, function (value) {
            _this.insert(value);
        });
    };
    /**
     * Removes all items from the list.
     */
    OrderedList.prototype.clear = function () {
        this.setAll([]);
    };
    /**
     * Returns part of the list between `start` and `end` indexes, as a new
     * [[OrderedList]].
     *
     * @param  {number}          start  Start index
     * @param  {number}          end    End index
     * @return {OrderedList<T>}         Items in range
     */
    OrderedList.prototype.slice = function (start, end) {
        var out = new OrderedList();
        out._values = this._values.slice(start, end);
        return out;
    };
    /**
     * Finds a closest available index to the `value` in specified direction.
     *
     * @ignore exclude from docs
     * @param  {number}                      value      value to search for
     * @param  {function}                    fn         A callback function that returns value of the item
     * @param  {"left" | "right" |  "any" }  direction  Direciton
     * @return {number}                                 Index
     */
    OrderedList.prototype.findClosestIndex = function (value, fn, direction) {
        if (direction === void 0) { direction = "any"; }
        // Init temporary values
        var closestIndex = -1;
        var closestValue;
        var closestDifference;
        var i = 0;
        _Iterator__WEBPACK_IMPORTED_MODULE_3__["eachContinue"](this.iterator(), function (element) {
            var item = fn(element);
            // Exact match?
            if (item === value) {
                // Found exact value - don't bother searching further
                closestIndex = i;
                return false;
            }
            // Calc difference
            if (direction === "any") {
                var difference = Math.abs(value - item);
                if (!_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](closestDifference) || (closestDifference > difference)) {
                    closestIndex = i;
                    closestValue = item;
                    closestDifference = difference;
                }
            }
            else if (direction === "left" && (item < value)) {
                if (!_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](closestValue) || (closestValue < item)) {
                    closestIndex = i;
                    closestValue = item;
                }
            }
            else if (direction === "right" && (item > value)) {
                if (!_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](closestValue) || (closestValue > item)) {
                    closestIndex = i;
                    closestValue = item;
                }
            }
            ++i;
            return true;
        });
        // Found nothing?
        if (closestIndex === -1) {
            if (direction === "left") {
                // Use First one
                closestIndex = 0;
            }
            else if (direction === "right") {
                // Use last item
                closestIndex = this.length - 1;
            }
        }
        return closestIndex;
    };
    /**
     * Returns a list iterator.
     *
     * @return {Iterator} Iterator
     */
    OrderedList.prototype.iterator = function () {
        return _Iterator__WEBPACK_IMPORTED_MODULE_3__["fromArray"](this._values);
    };
    /**
     * Returns an ES6 iterator for the list.
     */
    OrderedList.prototype[Symbol.iterator] = function () {
        var length, i;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
            switch (_a.label) {
                case 0:
                    length = this._values.length;
                    i = 0;
                    _a.label = 1;
                case 1:
                    if (!(i < length)) return [3 /*break*/, 4];
                    return [4 /*yield*/, this._values[i]];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    ++i;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    /**
     * Calls `f` for each element in the list.
     */
    OrderedList.prototype.each = function (f) {
        _Array__WEBPACK_IMPORTED_MODULE_2__["each"](this._values, f);
    };
    return OrderedList;
}());

/**
 * A list where all items are ordered according to specific ordering function,
 * which is passed in via constructor parameter, when creating an instance of
 * [[SortedList]].
 */
var SortedList = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SortedList, _super);
    /**
     * Constructor.
     *
     * @param {T) => Ordering}  sort  Ordering function
     */
    function SortedList(sort) {
        var _this = _super.call(this) || this;
        _this._ordering = sort;
        return _this;
    }
    /**
     * Inserts item into the list.
     *
     * @param {T}  value  Item
     */
    SortedList.prototype._insert = function (value) {
        var index = _Array__WEBPACK_IMPORTED_MODULE_2__["getSortedIndex"](this._values, this._ordering, value).index;
        _Array__WEBPACK_IMPORTED_MODULE_2__["insertIndex"](this._values, index, value);
        return index;
    };
    /**
     * Returns index of the item in list if found.
     *
     * -1 if item is not in the list.
     *
     * @param  {T}       value  Item to search for
     * @return {number}         Index
     */
    SortedList.prototype.indexOf = function (value) {
        var _a = _Array__WEBPACK_IMPORTED_MODULE_2__["getSortedIndex"](this._values, this._ordering, value), found = _a.found, index = _a.index;
        if (found) {
            return index;
        }
        else {
            return -1;
        }
    };
    /**
     * [udpate description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param {T} value [description]
     */
    SortedList.prototype.update = function (value) {
        // @todo test this
        var index = _Array__WEBPACK_IMPORTED_MODULE_2__["indexOf"](this._values, value);
        // @todo throw an error if it doesn't exist ?
        if (index !== -1) {
            var last = this._values.length - 1;
            // Check if the current ordering is correct
            if (!((index === 0 || this._ordering(this._values[index - 1], value) < 0) &&
                (index === last || this._ordering(value, this._values[index + 1]) < 0))) {
                // TODO send remove/insert/move events
                _Array__WEBPACK_IMPORTED_MODULE_2__["removeIndex"](this._values, index);
                this._insert(value);
            }
        }
    };
    return SortedList;
}(OrderedList));

/**
 * A version of a [[OrderedList]] that has a "template".
 *
 * A template is an instance of an object, that can be used to create new
 * elements in the list without actually needing to create instances for those.
 *
 * When new element is created in the list, e.g. by calling its `create()`
 * method, an exact copy of the element is created (including properties and
 * other attributes), inserted into the list and returned.
 */
var OrderedListTemplate = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OrderedListTemplate, _super);
    /**
     * Constructor
     *
     * @param {T} t Template object
     */
    function OrderedListTemplate(t) {
        var _this = _super.call(this) || this;
        _this.template = t;
        return _this;
    }
    Object.defineProperty(OrderedListTemplate.prototype, "template", {
        /**
         * @return {T} Template object
         */
        get: function () {
            return this._template;
        },
        /**
         * A "template" object to copy all properties from when creating new list
         * items.
         *
         * @param {T}  v  Template object
         */
        set: function (v) {
            v.isTemplate = true;
            this._template = v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all elements from other list.
     *
     * @param {OrderedListTemplate}  source  Source list
     */
    OrderedListTemplate.prototype.copyFrom = function (source) {
        var _this = this;
        _Iterator__WEBPACK_IMPORTED_MODULE_3__["each"](source.iterator(), function (value) {
            _this.insert(value.clone());
        });
    };
    /**
     * Returns part of the list, starting at `start` and ending at `end` indexes,
     * as a new [[OrderedListTemplate]].
     *
     * @param  {number}                  start  Start index
     * @param  {number}                  end    End index
     * @return {OrderedListTemplate<T>}         New list
     */
    OrderedListTemplate.prototype.slice = function (start, end) {
        var out = new OrderedListTemplate(this.template);
        out._values = this._values.slice(start, end);
        return out;
    };
    OrderedListTemplate.prototype.create = function (make) {
        var clone = (make != null
            ? new make()
            : this.template.clone());
        this.insert(clone);
        return clone;
    };
    return OrderedListTemplate;
}(OrderedList));

/**
 * A version of a [[SortedList]] that has a "template".
 *
 * A template is an instance of an object, that can be used to create new
 * elements in the list without actually needing to create instances for those.
 *
 * When new element is created in the list, e.g. by calling its `create()`
 * method, an exact copy of the element is created (including properties and
 * other attributes), inserted into the list and returned.
 */
var SortedListTemplate = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SortedListTemplate, _super);
    /**
     * Constructor
     *
     * @param {T}         t     Template object
     * @param {function}  sort  Ordering function
     */
    function SortedListTemplate(t, sort) {
        var _this = _super.call(this, sort) || this;
        _this.template = t;
        return _this;
    }
    Object.defineProperty(SortedListTemplate.prototype, "template", {
        /**
         * @return {T} Template object
         */
        get: function () {
            return this._template;
        },
        /**
         * A "template" object to copy all properties from when creating new list
         * items.
         *
         * @param {T}  v  Template object
         */
        set: function (v) {
            v.isTemplate = true;
            this._template = v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all elements from other list.
     *
     * @param {SortedListTemplate}  source  Source list
     */
    SortedListTemplate.prototype.copyFrom = function (source) {
        var _this = this;
        _Iterator__WEBPACK_IMPORTED_MODULE_3__["each"](source.iterator(), function (value) {
            _this.insert(value.clone());
        });
    };
    SortedListTemplate.prototype.create = function (make) {
        var clone = (make != null
            ? new make()
            : this.template.clone());
        this.insert(clone);
        return clone;
    };
    return SortedListTemplate;
}(SortedList));

//# sourceMappingURL=SortedList.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js ***!
  \*************************************************************************/
/*! exports provided: order, repeat, random */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "order", function() { return order; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return repeat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/**
 * ============================================================================
 * COMPARING FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Comparing function used for ordering.
 *
 * @ignore Exclude from docs
 * @todo Use localeCompare
 * @param  {string}    a  Item 1
 * @param  {string}    b  Item 2
 * @return {Ordering}     Result
 */
function order(a, b) {
    if (a === b) {
        return 0;
    }
    else if (a < b) {
        return -1;
    }
    else {
        return 1;
    }
}
/**
 * ============================================================================
 * OTHER FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Repeats a `string` number of times as set in `amount`.
 *
 * @ignore Exclude from docs
 * @todo Make this faster
 * @param  {string}  string  Source string
 * @param  {number}  amount  Number of times to repeat string
 * @return {string}          New string
 */
function repeat(string, amount) {
    return new Array(amount + 1).join(string);
}
/**
 * Generates a random string `characters` length.
 *
 * @param  {number}  chars  Number of characters
 * @return {string}         Random string
 */
function random(chars) {
    var res = "";
    var choice = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for (var i = 0; i < chars; i++) {
        res += choice.charAt(Math.floor(Math.random() * choice.length));
    }
    return res;
}
//# sourceMappingURL=String.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js ***!
  \**************************************************************************/
/*! exports provided: PX, STRING, NUMBER, DATE, DURATION, PLACEHOLDER, PLACEHOLDER2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PX", function() { return PX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STRING", function() { return STRING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMBER", function() { return NUMBER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATE", function() { return DATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DURATION", function() { return DURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLACEHOLDER", function() { return PLACEHOLDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLACEHOLDER2", function() { return PLACEHOLDER2; });
/**
 * A collection of String-based constants.
 * @hidden
 * @ignore Exclude from docs
 */
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var PX = "px";
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var STRING = "string";
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var NUMBER = "number";
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var DATE = "date";
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var DURATION = "duration";
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var PLACEHOLDER = "__§§§__";
/**
 * @ignore Exclude from docs
 * @type {string}
 */
var PLACEHOLDER2 = "__§§§§__";
//# sourceMappingURL=Strings.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js ***!
  \***********************************************************************/
/*! exports provided: timeUnitDurations, getNextUnit, getDuration, now, getTime, copy, checkChange, add, round */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeUnitDurations", function() { return timeUnitDurations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNextUnit", function() { return getNextUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDuration", function() { return getDuration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTime", function() { return getTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkChange", function() { return checkChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * Maps time period names to their numeric representations in milliseconds.
 *
 * @ignore Exclude from docs
 */
var timeUnitDurations = {
    millisecond: 1,
    second: 1000,
    minute: 60000,
    hour: 3600000,
    day: 86400000,
    week: 604800000,
    month: 2592000000,
    year: 31536000000
};
/**
 * Returns the next time unit that goes after source `unit`.
 *
 * E.g. "hour" is the next unit after "minute", etc.
 *
 * @ignore Exclude from docs
 * @param  {TimeUnit}            unit  Source time unit
 * @return {Optional<TimeUnit>}        Next time unit
 */
function getNextUnit(unit) {
    switch (unit) {
        case "year":
            return;
        case "month":
            return "year";
        case "week":
            return "month";
        case "day":
            return "month"; // not a mistake
        case "hour":
            return "day";
        case "minute":
            return "hour";
        case "second":
            return "minute";
        case "millisecond":
            return "second";
    }
}
/**
 * Returns number of milliseconds in the `count` of time `unit`.
 *
 * Available units: "millisecond", "second", "minute", "hour", "day", "week",
 * "month", and "year".
 *
 * @ignore Exclude from docs
 * @param  {TimeUnit}  unit   Time unit
 * @param  {number}    count  Number of units
 * @return {number}           Milliseconds
 */
function getDuration(unit, count) {
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_0__["hasValue"](count)) {
        count = 1;
    }
    return timeUnitDurations[unit] * count;
}
/**
 * Returns current `Date` object.
 *
 * @return {Date} Current date
 */
function now() {
    return new Date();
}
/**
 * Returns current timestamp.
 *
 * @return {Date} Current timestamp
 */
function getTime() {
    return now().getTime();
}
/**
 * Returns a copy of the `Date` object.
 *
 * @ignore Exclude from docs
 * @param  {Date}  date  Source date
 * @return {Date}        Copy
 */
function copy(date) {
    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3
}
/**
 * Checks if the `unit` part of two `Date` objects do not match. Two dates
 * represent a "range" of time, rather the same time date.
 *
 * @ignore Exclude from docs
 * @param  {Date}      dateOne  Date 1
 * @param  {Date}      dateTwo  Date 2
 * @param  {TimeUnit}  unit     Time unit to check
 * @return {boolean}            Range?
 */
function checkChange(dateOne, dateTwo, unit) {
    switch (unit) {
        case "year":
            if (dateOne.getFullYear() != dateTwo.getFullYear()) {
                return true;
            }
            break;
        case "month":
            if (dateOne.getMonth() != dateTwo.getMonth()) {
                return true;
            }
            break;
        case "day":
            if (dateOne.getDate() != dateTwo.getDate()) {
                return true;
            }
            break;
        case "hour":
            if (dateOne.getHours() != dateTwo.getHours()) {
                return true;
            }
            break;
        case "minute":
            if (dateOne.getMinutes() != dateTwo.getMinutes()) {
                return true;
            }
            break;
        case "second":
            if (dateOne.getSeconds() != dateTwo.getSeconds()) {
                return true;
            }
            break;
        case "millisecond":
            if (dateOne.getTime() != dateTwo.getTime()) {
                return true;
            }
            break;
    }
    var nextUnit = getNextUnit(unit);
    if (nextUnit) {
        return checkChange(dateOne, dateTwo, nextUnit);
    }
    else {
        return false;
    }
}
/**
 * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.
 *
 * @ignore Exclude from docs
 * @param  {Date}      date   Source date
 * @param  {TimeUnit}  unit   Time unit
 * @param  {number}    count  Number of units to add
 * @return {Date}             Modified date
 */
function add(date, unit, count) {
    switch (unit) {
        case "day":
            var day = date.getDate();
            date.setDate(day + count);
            break;
        case "second":
            var seconds = date.getSeconds();
            date.setSeconds(seconds + count);
            break;
        case "millisecond":
            var milliseconds = date.getMilliseconds();
            date.setMilliseconds(milliseconds + count);
            break;
        case "hour":
            var hours = date.getHours();
            date.setHours(hours + count);
            break;
        case "minute":
            var minutes = date.getMinutes();
            date.setMinutes(minutes + count);
            break;
        case "year":
            var year = date.getFullYear();
            date.setFullYear(year + count);
            break;
        case "month":
            var month = date.getMonth();
            date.setMonth(month + count);
            break;
        case "week":
            var wday = date.getDate();
            date.setDate(wday + count * 7);
            break;
    }
    return date;
}
/**
 * "Rounds" the date to specific time unit.
 *
 * @ignore Exclude from docs
 * @param  {Date}      date             Source date
 * @param  {TimeUnit}  unit             Time unit
 * @param  {number}    count            Number of units to round to
 * @param  {number}    firstDateOfWeek  First day of week
 * @return {Date}                       New date
 */
function round(date, unit, count, firstDateOfWeek) {
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](count)) {
        count = 1;
    }
    switch (unit) {
        case "day":
            var day = date.getDate();
            if (count > 1) {
                day = Math.floor(day / count) * count;
            }
            day = day;
            date.setDate(day);
            date.setHours(0, 0, 0, 0);
            break;
        case "second":
            var seconds = date.getSeconds();
            if (count > 1) {
                seconds = Math.floor(seconds / count) * count;
            }
            date.setSeconds(seconds, 0);
            break;
        case "millisecond":
            if (count == 1) {
                return date; // much better for perf!
            }
            var milliseconds = date.getMilliseconds();
            milliseconds = Math.floor(milliseconds / count) * count;
            date.setMilliseconds(milliseconds);
            break;
        case "hour":
            var hours = date.getHours();
            if (count > 1) {
                hours = Math.floor(hours / count) * count;
            }
            date.setHours(hours, 0, 0, 0);
            break;
        case "minute":
            var minutes = date.getMinutes();
            milliseconds = date.getMilliseconds();
            if (count > 1) {
                minutes = Math.floor(minutes / count) * count;
            }
            date.setMinutes(minutes, 0, 0);
            break;
        case "month":
            var month = date.getMonth();
            if (count > 1) {
                month = Math.floor(month / count) * count;
            }
            date.setMonth(month, 1);
            date.setHours(0, 0, 0, 0);
            break;
        case "year":
            var year = date.getFullYear();
            if (count > 1) {
                year = Math.floor(year / count) * count;
            }
            date.setFullYear(year, 0, 1);
            date.setHours(0, 0, 0, 0);
            break;
        case "week":
            var wday = date.getDate();
            var weekDay = date.getDay();
            if (!_utils_Type__WEBPACK_IMPORTED_MODULE_0__["isNumber"](firstDateOfWeek)) {
                firstDateOfWeek = 1;
            }
            // todo: rounding when count is not 1
            if (weekDay >= firstDateOfWeek) {
                wday = wday - weekDay + firstDateOfWeek;
            }
            else {
                wday = wday - (7 + weekDay) + firstDateOfWeek;
            }
            date.setDate(wday);
            date.setHours(0, 0, 0, 0);
            break;
    }
    return date;
}
//# sourceMappingURL=Time.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js ***!
  \***********************************************************************/
/*! exports provided: isNaN, getType, getDefault, checkString, checkBoolean, checkNumber, checkObject, checkArray, checkDate, castString, castNumber, toBoolean, toNumber, toText, toNumberOrPercent, hasValue, getValue, getValueDefault, isDate, isString, isNumber, isObject, isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return isNaN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getType", function() { return getType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefault", function() { return getDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkString", function() { return checkString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkBoolean", function() { return checkBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkNumber", function() { return checkNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkObject", function() { return checkObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkArray", function() { return checkArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkDate", function() { return checkDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "castString", function() { return castString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "castNumber", function() { return castNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toBoolean", function() { return toBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return toNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toText", function() { return toText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toNumberOrPercent", function() { return toNumberOrPercent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasValue", function() { return hasValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValue", function() { return getValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValueDefault", function() { return getValueDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/* harmony import */ var _Percent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * A collection of utility functions for various type checks and conversion
 * @todo Review unused functions for removal
 * @hidden
 */
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

/**
 * ============================================================================
 * TYPE CHECK
 * ============================================================================
 * @hidden
 */
/**
 * Returns `true` if value is not a number (NaN).
 *
 * @param  {number}  value Input value
 * @return {boolean}       Is NaN?
 * @deprecated Is not used anywhere. JS built-in isNaN is used everywhere. Maybe we don't need this, or if we do, then we should use it everywhere
 */
function isNaN(value) {
    return Number(value) !== value;
}
/**
 * Returns a type of the value.
 *
 * @param  {any}   value  Input value
 * @return {Type}         Type of the value
 */
function getType(value) {
    return ({}).toString.call(value);
}
/**
 * Returns a default value if the passed in value is empty.
 *
 * @param  {any}   value     Input value
 * @param  {any}   optional  Default value
 * @return {any}             Value or default value whichever is available
 * @deprecated Not used anywhere
 */
function getDefault(value, optional) {
    return value || optional;
}
/**
 * Checks if the passed in value is a string.
 *
 * @param  {any}   value  Value
 * @return {value}        Is string?
 * @throws {Error}
 * @deprecated Not used anywhere
 */
function checkString(value) {
    if (typeof value === "string") {
        return true;
    }
    else {
        throw new Error("Expected a string but got " + getType(value));
    }
}
/**
 * Checks if the passed in value is a boolean.
 *
 * @param  {any}   value  Value
 * @return {value}        Is boolean?
 * @throws {Error}
 * @deprecated Not used anywhere
 */
function checkBoolean(value) {
    if (typeof value === "boolean") {
        return true;
    }
    else {
        throw new Error("Expected a boolean but got " + getType(value));
    }
}
/**
 * Checks if the passed in value is a number.
 *
 * @param  {any}   value  Value
 * @return {value}        Is number?
 * @throws {Error}
 */
function checkNumber(value) {
    if (typeof value === "number") {
        if (isNaN(value)) {
            throw new Error("Expected a number but got NaN");
        }
    }
    else {
        throw new Error("Expected a number but got " + getType(value));
    }
    return true;
}
/**
 * Checks if the passed in value is an object.
 *
 * @param  {any}   value  Value
 * @return {value}        Is object?
 * @throws {Error}
 * @todo Is the input type correct?
 * @deprecated Not used anywhere
 */
function checkObject(value) {
    var t = getType(value);
    if (t === "[object Object]") {
        return true;
    }
    else {
        throw new Error("Expected an object but got " + t);
    }
}
/**
 * Checks if the passed in value is an array.
 *
 * @param  {any}   value  Value
 * @return {value}        Is array?
 * @throws {Error}
 * @deprecated Not used anywhere
 */
function checkArray(value) {
    if (Array.isArray(value)) {
        return true;
    }
    else {
        throw new Error("Expected an array but got " + getType(value));
    }
}
/**
 * Checks if the passed in value is a Date object.
 *
 * @param  {any}   value  Value
 * @return {value}        Is Date object?
 * @throws {Error}
 * @deprecated Not used anywhere
 */
function checkDate(value) {
    var t = getType(value);
    if (t === "[object Date]") {
        return true;
    }
    else {
        throw new Error("Expected a date but got " + t);
    }
}
/**
 * ============================================================================
 * TYPE CASTING
 * ============================================================================
 * @hidden
 */
/**
 * Casts string or a number into string.
 *
 * @param  {string | number}  value  Input
 * @return {string}                  String value
 * @deprecated Not used anywhere
 */
function castString(value) {
    if (typeof value === "string") {
        return value;
    }
    else if (typeof value === "number") {
        return "" + value;
    }
    else {
        throw new Error("Expected a string or number but got " + getType(value));
    }
}
/**
 * Casts string or a number into a number.
 *
 * @param  {string | number | Date}  value   Input value
 * @return {number}                  Number  value
 * @throws {Error}
 */
function castNumber(value) {
    if (typeof value === "string") {
        var number = +value;
        if (isNaN(number)) {
            throw new Error("Cannot cast string " + JSON.stringify(value) + " to a number");
        }
        else {
            return number;
        }
    }
    else if (typeof value === "number") {
        if (isNaN(value)) {
            throw new Error("Expected a number but got NaN");
        }
        else {
            return value;
        }
    }
    else {
        var t = getType(value);
        if (t === "[object Date]") {
            return value.getTime();
        }
        else {
            throw new Error("Expected a string, number, or date but got " + t);
        }
    }
}
/**
 * Casts number, string or Date into a Date object.
 *
 * @param  {string | number | Date}   value  Input value
 * @return {Date}                            Date object
 * @deprecated Not used anywhere
 * @throws {Error}
 * @hidden
 * @deprecated
 */
/*export function castDate(value: string | number | Date, formatter?: DateFormatter): Date {
    if (typeof value === "string") {
        if (formatter) {
            return formatter.parse(value);
        }
        return new Date(value);

    } else if (typeof value === "number") {
        return new Date(value);

    } else {
        const t = getType(value);

        if (t === "[object Date]") {
            return value;

        } else {
            throw new Error("Expected a string, number, or date but got " + t);
        }
    }
}*/
/**
 * ============================================================================
 * QUICK CONVERSION
 * ============================================================================
 * @hidden
 */
/**
 * Converts any value into `boolean`.
 *
 * @param  {any}      value  Source value
 * @return {boolean}         `true` or `false`
 */
function toBoolean(value) {
    return value ? true : false;
}
/**
 * Converts any value into a `number`.
 *
 * @param  {any}     value  Source value
 * @return {number}         Number representation of value
 */
function toNumber(value) {
    if (hasValue(value) && !isNumber(value)) {
        var converted = Number(value);
        if (isNaN(converted) && isString(value) && value != "") {
            return toNumber(value.replace(/[^0-9.\-]+/g, ''));
        }
        return converted;
    }
    return value;
}
/**
 * Converts any value into a string (text).
 *
 * @param  {any}     value  Source value
 * @return {string}         String representation of the input
 */
function toText(value) {
    if (hasValue(value) && !isString(value)) {
        if (isNumber(value)) {
            return castString(value);
        }
        else if (isObject(value)) {
            return value.toString();
        }
    }
    return value;
}
/**
 * Converts any value to a number or [[Percent]].
 *
 * If the parameter is a string and contains "%", it will
 * convert it into a [[Percent]].
 *
 * Otherwise, it will convert into a number.
 *
 * @param {number | Percent}   value  Number or percent
 * @return {number | Percent}         Percent object
 */
function toNumberOrPercent(value) {
    if (!hasValue(value) || isNumber(value) || Object(_Percent__WEBPACK_IMPORTED_MODULE_0__["isPercent"])(value)) {
        return value;
    }
    if (isString(value) && value.indexOf("%") != -1) {
        return Object(_Percent__WEBPACK_IMPORTED_MODULE_0__["percent"])(toNumber(value));
    }
    return toNumber(value);
}
/**
 * Checks if a variable has a value.
 *
 * @param {Optional<A> | null}  a  Input value
 * @returns                        Has value?
 */
function hasValue(a) {
    return a != null;
}
/**
 * Returns a value or throws an {Error} exception if the variable has not
 * value.
 *
 * @param {Optional<A> | null}  a  Input value
 * @returns                        Value
 */
function getValue(a) {
    if (hasValue(a)) {
        return a;
    }
    else {
        throw new Error("Value doesn't exist");
    }
}
/**
 * Returns a value, or returns the default value if it doesn't have a value.
 *
 * @param {Optional<A> | null}  a  Input value
 * @returns                        Value
 */
function getValueDefault(a, defaultValue) {
    if (hasValue(a)) {
        return a;
    }
    else {
        return defaultValue;
    }
}
/**
 * ============================================================================
 * TYPE CHECK
 * ============================================================================
 * @hidden
 */
/**
 * Checks if parameter is `Date`.
 *
 * @param  {any}    value  Input value
 * @return {value}         Is Date?
 */
function isDate(value) {
    return getType(value) === "[object Date]";
}
/**
 * Checks if parameter is `string`.
 *
 * @param  {any}    value  Input value
 * @return {value}         Is string?
 */
function isString(value) {
    return typeof value === "string";
}
/**
 * Checks if parameter is `number`.
 *
 * @param  {any}    value  Input value
 * @return {value}         Is number?
 */
function isNumber(value) {
    return typeof value === "number" && Number(value) == value;
}
/**
 * Checks if parameter is `object`.
 *
 * @param  {any}    value  Input value
 * @return {value}         Is object?
 */
function isObject(value) {
    return typeof value === "object";
}
/**
 * Checks if parameter is `Array`.
 *
 * @param  {any}    value  Input value
 * @return {value}         Is Array?
 */
function isArray(value) {
    return Array.isArray(value);
}
//# sourceMappingURL=Type.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js ***!
  \************************************************************************/
/*! exports provided: copyProperties, softCopyProperties, copy, isNotEmpty, relativeToValue, relativeRadiusToValue, valueToRelative, getPixelRatio, camelToDashed, capitalize, stringify, escapeForRgex, splitTextByCharCount, truncateWithEllipsis, trim, rtrim, ltrim, reverseString, unquote, padString, getFormat, cleanFormat, stripTags, plainText, numberToString, anyToDate, anyToNumber, getYearDay, getWeek, getMonthWeek, getDayFromWeek, get12Hours, getTimeZone, random, fitNumber, fitNumberRelative, svgPointToSprite, spritePointToSvg, spritePointToSprite, svgRectToSprite, spriteRectToSvg, documentPointToSvg, svgPointToDocument, documentPointToSprite, spritePointToDocument, width, height, decimalPlaces, parseUrl, serializeUrl, joinUrl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyProperties", function() { return copyProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "softCopyProperties", function() { return softCopyProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNotEmpty", function() { return isNotEmpty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "relativeToValue", function() { return relativeToValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "relativeRadiusToValue", function() { return relativeRadiusToValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueToRelative", function() { return valueToRelative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPixelRatio", function() { return getPixelRatio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "camelToDashed", function() { return camelToDashed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "capitalize", function() { return capitalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escapeForRgex", function() { return escapeForRgex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitTextByCharCount", function() { return splitTextByCharCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "truncateWithEllipsis", function() { return truncateWithEllipsis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trim", function() { return trim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rtrim", function() { return rtrim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ltrim", function() { return ltrim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverseString", function() { return reverseString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unquote", function() { return unquote; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "padString", function() { return padString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFormat", function() { return getFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleanFormat", function() { return cleanFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripTags", function() { return stripTags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plainText", function() { return plainText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberToString", function() { return numberToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "anyToDate", function() { return anyToDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "anyToNumber", function() { return anyToNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getYearDay", function() { return getYearDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getWeek", function() { return getWeek; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMonthWeek", function() { return getMonthWeek; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDayFromWeek", function() { return getDayFromWeek; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get12Hours", function() { return get12Hours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTimeZone", function() { return getTimeZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitNumber", function() { return fitNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitNumberRelative", function() { return fitNumberRelative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svgPointToSprite", function() { return svgPointToSprite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spritePointToSvg", function() { return spritePointToSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spritePointToSprite", function() { return spritePointToSprite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svgRectToSprite", function() { return svgRectToSprite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spriteRectToSvg", function() { return spriteRectToSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "documentPointToSvg", function() { return documentPointToSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svgPointToDocument", function() { return svgPointToDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "documentPointToSprite", function() { return documentPointToSprite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spritePointToDocument", function() { return spritePointToDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "width", function() { return width; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "height", function() { return height; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decimalPlaces", function() { return decimalPlaces; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUrl", function() { return parseUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "serializeUrl", function() { return serializeUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "joinUrl", function() { return joinUrl; });
/* harmony import */ var _Percent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _String__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./String */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js");
/* harmony import */ var _Strings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * A collection of universal utility functions.
 */







/**
 * ============================================================================
 * MISC FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Copies all properties of one object to the other, omitting undefined.
 *
 * @param  {Object}   fromObject  Source object
 * @param  {Object}   toObject    Target object
 * @return {Object}               Updated target object
 * @todo Maybe consolidate with utils.copy?
 */
function copyProperties(source, target) {
    _Object__WEBPACK_IMPORTED_MODULE_5__["each"](source, function (key, value) {
        // only if value is set
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](value)) {
            target[key] = value;
        }
    });
    return target;
}
/**
 * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.
 *
 * @param  {Object}   fromObject  Source object
 * @param  {Object}   toObject    Target object
 * @return {Object}               Updated target object
 * @todo Maybe consolidate with utils.copy?
 */
function softCopyProperties(source, target) {
    _Object__WEBPACK_IMPORTED_MODULE_5__["each"](source, function (key, value) {
        // only if value is set
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](value) && !(_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](target[key]))) {
            target[key] = value;
        }
    });
    return target;
}
/**
 * Copies all properties of one object to the other.
 *
 * @param  {Object}  source     Source object
 * @param  {Object}  recipient  Target object
 * @return {Object}             Updated target object
 */
function copy(source, target) {
    _Object__WEBPACK_IMPORTED_MODULE_5__["each"](source, function (key, value) {
        target[key] = value;
    });
    return target;
}
/**
 * Checks if value is not empty (undefined or zero-length string).
 *
 * @param  {Optional<string>}  value  Value to check
 * @return {boolean}                  `true` if value is not "empty"
 */
function isNotEmpty(value) {
    return _utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](value) && (value.toString() !== "");
}
/**
 * [relativeToValue description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {$type.Optional<number | Percent>}  percent  [description]
 * @param  {number}                            full     [description]
 * @return {number}                                     [description]
 */
function relativeToValue(percent, full) {
    if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](percent)) {
        return percent;
    }
    else if (percent != null && _utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](percent.value) && _utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](full)) {
        return full * percent.value;
    }
    else {
        return 0;
    }
}
/**
 * [relativeRadiusToValue description]
 *
 * Differs from relativeToValue so that if a value is negative, it subtracts
 * it from full value.
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {$type.Optional<number | Percent>}  percent             [description]
 * @param  {number}                            full                [description]
 * @param  {boolean}                           subtractIfNegative  [description]
 * @return {number}                                                [description]
 */
function relativeRadiusToValue(percent, full, subtractIfNegative) {
    var value;
    if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](percent)) {
        value = percent;
        if (value < 0) {
            if (subtractIfNegative) {
                value = full + value;
            }
            else {
                value = full - value;
            }
        }
    }
    else if (percent != null && _utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](percent.value)) {
        value = full * percent.value;
    }
    return value;
}
/**
 * [valueToRelative description]
 *
 * @ignore Exclude from docs
 * @todo Description
 * @param  {number | Percent}  value  [description]
 * @param  {number}            full   [description]
 * @return {number}                   [description]
 */
function valueToRelative(value, full) {
    if (value instanceof _Percent__WEBPACK_IMPORTED_MODULE_0__["Percent"]) {
        return value.value;
    }
    else {
        return value / full;
    }
}
/**
 * Returns pixel ratio of the current screen (used on retina displays).
 *
 * @return {number} Pixel ratio
 */
function getPixelRatio() {
    var ratio = window.devicePixelRatio || 1;
    return ratio;
}
/**
 * ============================================================================
 * STRING FORMATTING FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Converts camelCased text to dashed version:
 * ("thisIsString" > "this-is-string")
 *
 * @param  {string}  str  Input
 * @return {string}       Output
 */
function camelToDashed(str) {
    return str.replace(/\W+/g, '-').replace(/([a-z\d])([A-Z])/g, '$1-$2').toLowerCase();
}
/**
 * Converts tring to uppercase.
 *
 * @param  {string}  str  String to convert
 * @return {string}       uppercased string
 * @todo Maybe make it better
 */
function capitalize(str) {
    var arr = str.split("");
    arr[0] = arr[0].toUpperCase();
    return arr.join("");
}
/**
 * Converts any value into its string representation.
 *
 * @param  {any}     value  Value
 * @return {string}         String represantation of the value
 */
function stringify(value) {
    return JSON.stringify(value);
}
/**
 * Escapes string so it can safely be used in a Regex.
 *
 * @param  {string}  value  Unsescaped string
 * @return {string}         Escaped string
 */
function escapeForRgex(value) {
    return value.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
}
/**
 * Splits the text into multiple lines, respecting maximum character count.
 * Prioretizes splitting on spaces and punctuation. Falls back on splitting
 * mid-word if there's no other option.
 *
 * @param  {string}    text      Text
 * @param  {number}    maxChars  Maximum number of characters per line
 * @return {string[]}            An array of split text
 */
function splitTextByCharCount(text, maxChars, fullWords, rtl) {
    // Maybe the text fits?
    if (text.length <= maxChars) {
        return [text];
    }
    // Init result
    var res = [];
    // Split by words or by charts
    if (fullWords) {
        // Split by words first
        // Split by spacing
        var currentIndex = -1;
        var tmpText = text.replace(/([,;:!?\\\/\.\s]+)/g, _Strings__WEBPACK_IMPORTED_MODULE_4__["PLACEHOLDER"] + "$1" + _Strings__WEBPACK_IMPORTED_MODULE_4__["PLACEHOLDER"]);
        var words = tmpText.split(_Strings__WEBPACK_IMPORTED_MODULE_4__["PLACEHOLDER"]);
        // Process each word
        for (var i = 0; i < words.length; i++) {
            // Get word and symbol count
            var word = words[i];
            var wordLength = word.length;
            // Ignore empty words
            if (wordLength === 0) {
                continue;
            }
            // Check word length
            //if ((wordLength > maxChars) && fullWords !== true) {
            if (wordLength > maxChars) {
                // A single word is longer than allowed symbol count
                // Break it up
                if (rtl) {
                    word = reverseString(word);
                }
                var parts = word.match(new RegExp(".{1," + maxChars + "}", "g"));
                // TODO is this correct ?
                if (parts) {
                    if (rtl) {
                        for (var x = 0; x < parts.length; x++) {
                            parts[x] = reverseString(parts[x]);
                        }
                        //parts.reverse();
                    }
                    res = res.concat(parts);
                }
            }
            else {
                // Init current line
                if (currentIndex === -1) {
                    res.push("");
                    currentIndex = 0;
                }
                // Check if we need to break into another line
                if (((res[currentIndex].length + wordLength + 1) > maxChars) && res[currentIndex] !== "") {
                    res.push("");
                    currentIndex++;
                }
                // Add word
                res[currentIndex] += word;
            }
            // Update index
            currentIndex = res.length - 1;
        }
    }
    else {
        // Splitting by anywhere (living la vida facil)
        var parts = text.match(new RegExp(".{1," + maxChars + "}", "g"));
        if (parts) {
            if (rtl) {
                for (var x = 0; x < parts.length; x++) {
                    parts[x] = reverseString(parts[x]);
                }
            }
            res = parts;
        }
    }
    // Do we have only one word that does not fit?
    // Since fullWords is set and we can't split the word, we end up with empty
    // set.
    if (res.length == 1 && fullWords && (res[0].length > maxChars)) {
        res = [];
    }
    return res;
}
/**
 * Truncates the text to certain character count.
 *
 * Will add ellipsis if the string is truncated. Optionally, can truncate on
 * full words only.
 *
 * For RTL support, pass in the fifth parameter as `true`.
 *
 * @param  {string}   text       Input text
 * @param  {number}   maxChars   Maximum character count of output
 * @param  {string}   ellipsis   Ellipsis string, i.e. "..."
 * @param  {boolean}  fullWords  If `true`, will not break mid-word, unless there's a single word and it does not with into `maxChars`
 * @param  {boolean}  rtl        Is this an RTL text?
 * @return {string}              Truncated text
 */
function truncateWithEllipsis(text, maxChars, ellipsis, fullWords, rtl) {
    if (text.length <= maxChars) {
        return text;
    }
    // Calc max chars
    maxChars -= ellipsis.length;
    if (maxChars < 1) {
        maxChars = 1;
        //ellipsis = "";
    }
    // Get lines
    var lines = splitTextByCharCount(text, maxChars, fullWords, rtl);
    // Use first line
    return (lines[0] || "") + ellipsis;
}
/**
 * Removes whitespace from beginning and end of the string.
 *
 * @param  {string}  str  Input
 * @return {string}       Output
 */
function trim(str) {
    return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
}
;
/**
 * Removes whitespace from end of the string.
 *
 * @param  {string}  str  Input
 * @return {string}       Output
 */
function rtrim(str) {
    return str.replace(/[\s\uFEFF\xA0]+$/g, "");
}
;
/**
 * Removes whitespace from beginning of the string.
 *
 * @param  {string}  str  Input
 * @return {string}       Output
 */
function ltrim(str) {
    return str.replace(/^[\s\uFEFF\xA0]+/g, "");
}
;
/**
 * Reverses string.
 *
 * @param  {string}  str  Input
 * @return {string}       Output
 */
function reverseString(str) {
    return str.split("").reverse().join("");
}
/**
 * Removes quotes from the string.
 *
 * @param  {string}  str  Input
 * @return {string}       Output
 */
function unquote(str) {
    var res = str.trim();
    res = str.replace(/^'(.*)'$/, "$1");
    if (res == str) {
        res = str.replace(/^"(.*)"$/, "$1");
    }
    return res;
}
/**
 * Pads a string with additional characters to certain length.
 *
 * @param  {any}            value  A numeric value
 * @param  {number = 0}     len    Result string length in characters
 * @param  {string = "0"}   char   A character to use for padding
 * @return {string}                Padded value as string
 */
function padString(value, len, char) {
    if (len === void 0) { len = 0; }
    if (char === void 0) { char = "0"; }
    if (typeof value !== "string")
        value = value.toString();
    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;
}
/**
 * Tries to determine format type.
 *
 * @ignore Exclude from docs
 * @param {string}   format  Format string
 * @return {string}          Format type ("string" | "number" | "date" | "duration")
 */
function getFormat(format) {
    // Undefined?
    if (typeof format === "undefined")
        return _Strings__WEBPACK_IMPORTED_MODULE_4__["STRING"];
    // Cleanup and lowercase format
    format = format.toLowerCase().replace(/^\[[^\]]*\]/, "");
    // Remove style tags
    format = format.replace(/\[[^\]]+\]/, "");
    // Trim
    format = format.trim();
    // Check for any explicit format hints (i.e. /Date)
    var hints = format.match(/\/(date|number|duration)$/);
    if (hints) {
        return hints[1];
    }
    // Check for explicit hints
    if (format === _Strings__WEBPACK_IMPORTED_MODULE_4__["NUMBER"]) {
        return _Strings__WEBPACK_IMPORTED_MODULE_4__["NUMBER"];
    }
    if (format === _Strings__WEBPACK_IMPORTED_MODULE_4__["DATE"]) {
        return _Strings__WEBPACK_IMPORTED_MODULE_4__["DATE"];
    }
    if (format === _Strings__WEBPACK_IMPORTED_MODULE_4__["DURATION"]) {
        return _Strings__WEBPACK_IMPORTED_MODULE_4__["DURATION"];
    }
    // Detect number formatting symbols
    if (format.match(/[#0]/)) {
        return _Strings__WEBPACK_IMPORTED_MODULE_4__["NUMBER"];
    }
    // Detect date formatting symbols
    if (format.match(/[ymwdhnsqaxkzgtei]/)) {
        return _Strings__WEBPACK_IMPORTED_MODULE_4__["DATE"];
    }
    // Nothing? Let's display as string
    return _Strings__WEBPACK_IMPORTED_MODULE_4__["STRING"];
}
/**
 * Cleans up format:
 * * Strips out formatter hints
 *
 * @ignore Exclude from docs
 * @param  {string}  format  Format
 * @return {string}          Cleaned format
 */
function cleanFormat(format) {
    return format.replace(/\/(date|number|duration)$/i, "");
}
/**
 * Strips all tags from the string.
 *
 * @param  {string}  text  Source string
 * @return {string}        String without tags
 */
function stripTags(text) {
    return text ? text.replace(/<[^>]*>/g, "") : text;
}
/**
 * Removes new lines and tags from a string.
 *
 * @param  {string}  text  String to conver
 * @return {string}        Converted string
 */
function plainText(text) {
    return text ? stripTags(text.replace(/[\n\r]+/g, ". ")) : text;
}
/**
 * ============================================================================
 * TYPE CONVERSION FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Converts numeric value into string. Deals with large or small numbers that
 * would otherwise use exponents.
 *
 * @param  {number}  value  Numeric value
 * @return {string}         Numeric value as string
 */
function numberToString(value) {
    // TODO handle Infinity and -Infinity
    if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNaN"](value)) {
        return "NaN";
    }
    if (value === Infinity) {
        return "Infinity";
    }
    if (value === -Infinity) {
        return "-Infinity";
    }
    // Negative 0
    if ((value === 0) && (1 / value === -Infinity)) {
        return "-0";
    }
    // Preserve negative and deal with absoute values
    var negative = value < 0;
    value = Math.abs(value);
    // TODO test this
    var parsed = _utils_Type__WEBPACK_IMPORTED_MODULE_2__["getValue"](/^([0-9]+)(?:\.([0-9]+))?(?:e[\+\-]([0-9]+))?$/.exec("" + value));
    var digits = parsed[1];
    var decimals = parsed[2] || "";
    var res;
    // Leave the nummber as it is if it does not use exponents
    if (parsed[3] == null) {
        res = (decimals === "" ? digits : digits + "." + decimals);
    }
    else {
        var exponent = +parsed[3];
        // Deal with decimals
        if (value < 1) {
            var zeros = exponent - 1;
            res = "0." + _String__WEBPACK_IMPORTED_MODULE_3__["repeat"]("0", zeros) + digits + decimals;
            // Deal with integers
        }
        else {
            var zeros = exponent - decimals.length;
            if (zeros === 0) {
                res = digits + decimals;
            }
            else if (zeros < 0) {
                res = digits + decimals.slice(0, zeros) + "." + decimals.slice(zeros);
            }
            else {
                res = digits + decimals + _String__WEBPACK_IMPORTED_MODULE_3__["repeat"]("0", zeros);
            }
        }
    }
    return negative ? "-" + res : res;
}
/**
 * Converts anything to Date object.
 *
 * @param  {Date | number | string}  value  A value of any type
 * @return {Date}                           Date object representing a value
 */
function anyToDate(value) {
    if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isDate"](value)) {
        // TODO maybe don't create a new Date ?
        return new Date(value);
    }
    else if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](value)) {
        return new Date(value);
    }
    else {
        // Try converting to number (assuming timestamp)
        var num = Number(value);
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](num)) {
            return new Date(value);
        }
        else {
            return new Date(num);
        }
    }
}
/**
 * Tries converting any value to a number.
 *
 * @param  {any}     value  Source value
 * @return {number}         Number
 */
function anyToNumber(value) {
    if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isDate"](value)) {
        return value.getTime();
    }
    else if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](value)) {
        return value;
    }
    else if (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isString"](value)) {
        // Try converting to number (assuming timestamp)
        var num = Number(value);
        if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](num)) {
            // Failing
            return undefined;
        }
        else {
            return num;
        }
    }
}
/**
 * ============================================================================
 * DATE-RELATED FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Returns a year day.
 *
 * @param  {Date}     date  Date
 * @param  {boolean}  utc   Assume UTC dates?
 * @return {number}         Year day
 * @todo Account for UTC
 */
function getYearDay(date, utc) {
    if (utc === void 0) { utc = false; }
    var first = new Date(date.getFullYear(), 0, 1, 0, 0, 0, 0);
    return Math.floor((date.getTime() - first.getTime()) / 86400000) + 1;
}
/**
 * Returns week number for a given date.
 *
 * @param  {Date}     date  Date
 * @param  {boolean}  utc   Assume UTC dates?
 * @return {number}         Week number
 * @todo Account for UTC
 */
function getWeek(date, utc) {
    if (utc === void 0) { utc = false; }
    var day = getYearDay(date, utc) - 1;
    var week = Math.floor((day - (date.getDay() || 7) + 10) / 7);
    if (week === 0) {
        week = 53;
    }
    else if (week === 53) {
        week = 1;
    }
    return week;
}
/**
 * Returns a week number in the month.
 *
 * @param  {Date}     date  Source Date
 * @param  {boolean}  utc   Assume UTC dates?
 * @return {number}         Week number in month
 */
function getMonthWeek(date, utc) {
    if (utc === void 0) { utc = false; }
    var firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);
    var currentWeek = getWeek(date, utc);
    if (currentWeek == 1) {
        currentWeek = 53;
    }
    return currentWeek - firstWeek + 1;
}
/**
 * Returns a year day out of the given week number.
 *
 * @param  {number}   week     Week
 * @param  {number}   year     Year
 * @param  {number}   weekday  Weekday
 * @param  {boolean}  utc      Assume UTC dates
 * @return {number}            Day in a year
 */
function getDayFromWeek(week, year, weekday, utc) {
    if (weekday === void 0) { weekday = 1; }
    if (utc === void 0) { utc = false; }
    var date = new Date(year, 0, 4, 0, 0, 0, 0);
    if (utc) {
        date.setUTCFullYear(year);
    }
    var day = week * 7 + weekday - ((date.getDay() || 7) + 3);
    return day;
}
/**
 * Returns 12-hour representation out of the 24-hour hours.
 *
 * @param  {number}  hours  24-hour number
 * @return {number}         12-hour number
 */
function get12Hours(hours, base) {
    if (hours > 12) {
        hours -= 12;
    }
    else if (hours === 0) {
        hours = 12;
    }
    return _utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](base) ? hours + (base - 1) : hours;
}
/**
 * Returns a string name of the tome zone.
 *
 * @param  {Date}     date     Date object
 * @param  {boolean}  long     Should return long ("Pacific Standard Time") or short abbreviation ("PST")
 * @param  {boolean}  savings  Include information if it's in daylight savings mode
 * @param  {boolean}  utc      Assume UTC dates
 * @return {string}            Time zone name
 */
function getTimeZone(date, long, savings, utc) {
    if (long === void 0) { long = false; }
    if (savings === void 0) { savings = false; }
    if (utc === void 0) { utc = false; }
    if (utc) {
        return long ? "Coordinated Universal Time" : "UTC";
    }
    var wotz = date.toLocaleString("UTC");
    var wtz = date.toLocaleString("UTC", { timeZoneName: long ? "long" : "short" }).substr(wotz.length);
    //wtz = wtz.replace(/[+-]+[0-9]+$/, "");
    if (savings === false) {
        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, " ");
    }
    return wtz;
}
/**
 * ============================================================================
 * NUMBER-RELATED FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Returns a random number between `from` and `to`.
 *
 * @param  {number}  from  From number
 * @param  {number}  to    To number
 * @return {number}        Random number
 */
function random(from, to) {
    return Math.floor(Math.random() * to) + from;
}
/**
 * Fits the number into specific `min` and `max` bounds.
 *
 * @param  {number}  value  Input value
 * @param  {number}  min    Minimum value
 * @param  {number}  max    Maximum value
 * @return {number}         Possibly adjusted value
 */
function fitNumber(value, min, max) {
    if (value > max) {
        return max;
    }
    else if (value < min) {
        return min;
    }
    return value;
}
/**
 * Fits the number into specific `min` and `max` bounds.
 *
 * If the value is does not fit withing specified range, it "wraps" around the
 * values.
 *
 * For example, if we have input value 10 with min set at 1 and max set at 8,
 * the value will not fit. The remainder that does not fit (2) will be added
 * to `min`, resulting in 3.
 *
 * The output of regular `fitNumber()` would return 8 instead.
 *
 * @param  {number}  value  Input value
 * @param  {number}  min    Minimum value
 * @param  {number}  max    Maximum value
 * @return {number}         Possibly adjusted value
 */
function fitNumberRelative(value, min, max) {
    var gap = max - min;
    if (value > max) {
        value = min + (value - gap * Math.floor(value / gap));
    }
    else if (value < min) {
        value = min + (value - gap * Math.floor(value / gap));
    }
    return value;
}
/**
 * ============================================================================
 * SPRITE-RELATED FUNCTIONS
 * ============================================================================
 * @hidden
 */
/**
 * Converts SVG element coordinates to coordinates within specific [[Sprite]].
 *
 * @param  {IPoint}  point   SVG coordinates
 * @param  {Sprite}  sprite  Sprite
 * @return {IPoint}         Sprite coordinates
 */
function svgPointToSprite(point, sprite) {
    var x = point.x;
    var y = point.y;
    var sprites = [];
    if (sprite) {
        while (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](sprite.parent)) {
            sprites.push(sprite);
            sprite = sprite.parent;
        }
        sprites.reverse();
        for (var i = 0; i < sprites.length; i++) {
            var sprite_1 = sprites[i];
            var angle = sprite_1.rotation;
            var relativeX = x - sprite_1.pixelX - sprite_1.ex;
            var relativeY = y - sprite_1.pixelY - sprite_1.ey;
            if (sprite_1.dx) {
                x -= sprite_1.dx;
            }
            if (sprite_1.dy) {
                y -= sprite_1.dy;
            }
            x = (_utils_Math__WEBPACK_IMPORTED_MODULE_1__["cos"](-angle) * relativeX - _utils_Math__WEBPACK_IMPORTED_MODULE_1__["sin"](-angle) * relativeY) / sprite_1.scale - sprite_1.pixelPaddingLeft;
            y = (_utils_Math__WEBPACK_IMPORTED_MODULE_1__["cos"](-angle) * relativeY + _utils_Math__WEBPACK_IMPORTED_MODULE_1__["sin"](-angle) * relativeX) / sprite_1.scale - sprite_1.pixelPaddingTop;
        }
    }
    return { x: x, y: y };
}
/**
 * Converts coordinates within [[Sprite]] to coordinates relative to the whole
 * SVG element.
 *
 * @param  {IPoint}  point   Sprite coordinates
 * @param  {Sprite}  sprite  Sprite
 * @return {IPoint}          SVG coordinates
 */
function spritePointToSvg(point, sprite) {
    var x = point.x;
    var y = point.y;
    if (sprite) {
        while (_utils_Type__WEBPACK_IMPORTED_MODULE_2__["hasValue"](sprite.parent)) {
            var angle = sprite.rotation;
            x += sprite.pixelPaddingLeft + sprite.ex;
            y += sprite.pixelPaddingTop + sprite.ey;
            if (sprite.dx) {
                x += sprite.dx;
            }
            if (sprite.dy) {
                y += sprite.dy;
            }
            var relativeX = sprite.pixelX + ((x * _utils_Math__WEBPACK_IMPORTED_MODULE_1__["cos"](angle) - y * _utils_Math__WEBPACK_IMPORTED_MODULE_1__["sin"](angle))) * sprite.scale;
            var relativeY = sprite.pixelY + ((x * _utils_Math__WEBPACK_IMPORTED_MODULE_1__["sin"](angle) + y * _utils_Math__WEBPACK_IMPORTED_MODULE_1__["cos"](angle))) * sprite.scale;
            x = relativeX;
            y = relativeY;
            sprite = sprite.parent;
        }
    }
    return { x: x, y: y };
}
/**
 * Converts coordinates of one sprite to another.
 *
 * @param  {IPoint}  point   Sprite coordinates
 * @param  {Sprite}  sprite  Sprite
 * @param  {Sprite}  toSprite  Sprite
 * @return {IPoint}  converted coordinates
 */
function spritePointToSprite(point, sprite, toSprite) {
    return svgPointToSprite(spritePointToSvg(point, sprite), toSprite);
}
/**
 * Converts a rectangle expressed in SVG element coordinates to coordinates
 * within specific [[Sprite]].
 *
 * @param  {IRectangle}  rect    SVG rectangle
 * @param  {Sprite}      sprite  Sprite
 * @return {IRectangle}          Sprite rectangle
 */
function svgRectToSprite(rect, sprite) {
    var p1 = svgPointToSprite(rect, sprite);
    var p2 = svgPointToSprite({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);
    return { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };
}
/**
 * Converts a rectangle expressed in [[Sprite]] coordinates to SVG coordinates.
 *
 * @param  {IRectangle}  rect    Sprite rectangle
 * @param  {Sprite}      sprite  Sprite
 * @return {IRectangle}          SVG rectangle
 */
function spriteRectToSvg(rect, sprite) {
    var p1 = spritePointToSvg(rect, sprite);
    var p2 = spritePointToSvg({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);
    return { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };
}
/**
 * Converts global document-wide coordinates to coordinates within SVG element.
 *
 * @param  {IPoint}       point         Global coordinates
 * @param  {HTMLElement}  svgContainer  SVG element
 * @return {IPoint}                     SVG coordinates
 */
function documentPointToSvg(point, svgContainer, cssScale) {
    var bbox = svgContainer.getBoundingClientRect();
    if (!_utils_Type__WEBPACK_IMPORTED_MODULE_2__["isNumber"](cssScale)) {
        cssScale = 1;
    }
    return {
        "x": (point.x - bbox.left) / cssScale,
        "y": (point.y - bbox.top) / cssScale
    };
}
/**
 * Converts SVG coordinates to global document-wide coordinates.
 *
 * @param  {IPoint}       point         SVG coordinates
 * @param  {HTMLElement}  svgContainer  SVG element
 * @return {IPoint}                     Global coordinates
 */
function svgPointToDocument(point, svgContainer) {
    var bbox = svgContainer.getBoundingClientRect();
    return {
        "x": point.x + bbox.left,
        "y": point.y + bbox.top
    };
}
/**
 * Converts document-wide global coordinates to coordinates within specific
 * [[Sprite]].
 *
 * @param  {IPoint}  point   Global coordinates
 * @param  {Sprite}  sprite  Sprite
 * @return {IPoint}          Sprite coordinates
 */
function documentPointToSprite(point, sprite) {
    if (sprite) {
        var svgPoint = documentPointToSvg(point, _utils_Type__WEBPACK_IMPORTED_MODULE_2__["getValue"](sprite.htmlContainer), sprite.svgContainer.cssScale);
        return svgPointToSprite(svgPoint, sprite);
    }
    else {
        return point;
    }
}
/**
 * Converts coordinates within [[Sprite]] to global document coordinates.
 *
 * @param  {IPoint}  point   Sprite coordinates
 * @param  {Sprite}  sprite  Sprite
 * @return {IPoint}          Global coordinates
 */
function spritePointToDocument(point, sprite) {
    if (sprite) {
        var svgPoint = spritePointToSvg(point, sprite);
        return svgPointToDocument(svgPoint, _utils_Type__WEBPACK_IMPORTED_MODULE_2__["getValue"](sprite.htmlContainer));
    }
    else {
        return point;
    }
}
/**
 * ============================================================================
 * DEPRECATED FUNCTIONS
 * @todo Review and remove
 * ============================================================================
 * @hidden
 */
/**
 * Returns element's width.
 *
 * @ignore Exclude from docs
 * @param  {HTMLElement}  element  Element
 * @return {number}                Width (px)
 * @deprecated Not used anywhere
 */
function width(element) {
    return element.clientWidth;
}
/**
 * Returns element's height.
 *
 * @ignore Exclude from docs
 * @param  {HTMLElement}  element  Element
 * @return {number}                Height (px)
 * @deprecated Not used anywhere
 */
function height(element) {
    return element.clientHeight;
}
/**
 * Returns number of decimals
 *
 * @ignore Exclude from docs
 * @param  {number}  number  Input number
 * @return {number}          Number of decimals
 */
function decimalPlaces(number) {
    var match = ('' + number).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
    if (!match) {
        return 0;
    }
    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));
}
var urlRegexp = /^([a-zA-Z][a-zA-Z0-9\+\.\-]*:)?(?:(\/\/)([^\@]+\@)?([^\/\?\#\:]*)(\:[0-9]+)?)?([^\?\#]*)(\?[^\#]*)?(\#.*)?$/;
/**
 * Parses a URL
 *
 * @ignore Exclude from docs
 */
// TODO test this
function parseUrl(url) {
    var match = urlRegexp.exec(url);
    return {
        protocol: (match && match[1]) || "",
        separator: (match && match[2]) || "",
        authority: (match && match[3]) || "",
        domain: (match && match[4]) || "",
        port: (match && match[5]) || "",
        path: (match && match[6]) || "",
        query: (match && match[7]) || "",
        hash: (match && match[8]) || ""
    };
}
/**
 * Serializes a Url into a string
 *
 * @ignore Exclude from docs
 */
function serializeUrl(url) {
    return url.protocol + url.separator + url.authority + url.domain + url.port + url.path + url.query + url.hash;
}
/**
 * Checks whether a Url is relative or not
 *
 * @ignore Exclude from docs
 */
// TODO is this correct ?
function isRelativeUrl(url) {
    return url.protocol === "" &&
        url.separator === "" &&
        url.authority === "" &&
        url.domain === "" &&
        url.port === "";
}
/**
 * Joins together two URLs, resolving relative URLs correctly
 *
 * @ignore Exclude from docs
 */
// TODO test this
function joinUrl(left, right) {
    var parsedLeft = parseUrl(left);
    var parsedRight = parseUrl(right);
    if (isRelativeUrl(parsedLeft)) {
        throw new Error("Left URL is not absolute");
    }
    if (isRelativeUrl(parsedRight)) {
        // TODO is this correct ?
        if (parsedRight.path !== "") {
            if (parsedRight.path[0] === "/") {
                parsedLeft.path = parsedRight.path;
                // TODO is this correct ?
            }
            else {
                var leftPath = parsedLeft.path.split(/\//);
                var rightPath = parsedRight.path.split(/\//);
                // TODO is this correct ?
                if (leftPath.length === 0) {
                    if (rightPath.length !== 0) {
                        leftPath.push("");
                    }
                }
                else if (leftPath.length > 1) {
                    leftPath.pop();
                }
                _Array__WEBPACK_IMPORTED_MODULE_6__["pushAll"](leftPath, rightPath);
                parsedLeft.path = leftPath.join("/");
                if (parsedLeft.path !== "" && parsedLeft.path[0] !== "/") {
                    throw new Error("URL path must start with /");
                }
            }
        }
        // TODO is this correct ?
        parsedLeft.query = parsedRight.query;
        parsedLeft.hash = parsedRight.hash;
        return serializeUrl(parsedLeft);
    }
    else {
        return serializeUrl(parsedRight);
    }
}
//# sourceMappingURL=Utils.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js ***!
  \******************************************************************************/
/*! exports provided: Validatable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validatable", function() { return Validatable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * This module defines a [[Validatable]] class which can be used by all
 * non-[[Sprite]] classes to use system beats to revalidate themselves.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * This module defines a [[Validatable]] class which can be used by all
 * non-[[Sprite]] classes to use system update cycle to revalidate themselves.
 *
 * @ignore Exclude from docs
 */
var Validatable = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Validatable, _super);
    function Validatable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Is invalid and should be revalidated?
         *
         * @type {boolean}
         */
        _this._invalid = false;
        return _this;
    }
    /**
     * Invalidates the element, so that it can re-validate/redraw itself in the
     * next cycle.
     *
     * @ignore Exclude from docs
     */
    Validatable.prototype.invalidate = function () {
        if (this._invalid === false) {
            this._invalid = true;
            _Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].events.on("exitframe", this.validate, this);
        }
    };
    /**
     * Validates itself.
     *
     * Most probably the extending class will have an overriding `validate()`
     * method which will do actual work, as well as call this method using
     * `super.validate()`.
     *
     * @ignore Exclude from docs
     */
    Validatable.prototype.validate = function () {
        if (this._invalid === true) {
            this._invalid = false;
            _Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].events.off("exitframe", this.validate, this);
        }
    };
    return Validatable;
}(_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]));

//# sourceMappingURL=Validatable.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/core.js":
/*!**************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/core.js ***!
  \**************************************************/
/*! exports provided: System, system, BaseObject, BaseObjectEvents, Component, Container, DataItem, Sprite, SpriteEventDispatcher, SpriteState, registry, Registry, options, CSVParser, DataLoader, dataLoader, DataParser, DataSource, JSONParser, SVGDefaults, Button, Circle, Ellipse, Image, Label, Line, Popup, Modal, PointedRectangle, PointedShape, Polyarc, Polygon, Polyline, Polyspline, Preloader, Rectangle, ResizeButton, RoundedRectangle, Scrollbar, Slider, Slice, TextLink, Tooltip, Trapezoid, Triangle, WavedCircle, WavedLine, WavedRectangle, ZoomOutButton, PlayButton, Cone, Rectangle3D, Slice3D, Export, ExportMenu, DateFormatter, DurationFormatter, NumberFormatter, TextFormatter, getTextFormatter, Inertia, Interaction, getInteraction, InteractionKeyboardObject, InteractionObject, InteractionObjectEventDispatcher, MouseCursorStyle, AMElement, Group, Paper, Tension, Basis, SVGContainer, ColorModifier, LinearGradient, LinearGradientModifier, RadialGradientModifier, LinePattern, Pattern, RadialGradient, RectPattern, ColorizeFilter, DesaturateFilter, DropShadowFilter, BlurFilter, Filter, FocusFilter, LightenFilter, Responsive, GlobalAdapter, globalAdapter, Adapter, Animation, animate, nextFrame, readFrame, writeFrame, whenIdle, triggerIdle, Cache, cache, Color, color, isColor, castColor, ColorSet, InterfaceColorSet, DictionaryDisposer, Dictionary, DictionaryTemplate, Disposer, MultiDisposer, MutableValueDisposer, CounterDisposer, StyleRule, StyleClass, getElement, addClass, removeClass, blur, focus, outerHTML, isElement, copyAttributes, fixPixelPerfect, ready, EventDispatcher, TargetedEventDispatcher, ListIterator, min, max, join, Keyboard, keyboard, Language, IndexedIterable, ListGrouper, ListDisposer, List, ListTemplate, Morpher, reverse, or, Percent, percent, isPercent, OrderedList, SortedList, OrderedListTemplate, SortedListTemplate, PX, STRING, NUMBER, DATE, DURATION, PLACEHOLDER, PLACEHOLDER2, isNaN, checkString, checkBoolean, checkNumber, checkObject, castString, castNumber, isString, isNumber, isObject, isArray, Validatable, path, colors, ease, math, array, number, object, string, time, utils, iter, type, create, createFromConfig, useTheme, unuseTheme, unuseAllThemes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_core_System__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./.internal/core/System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "System", function() { return _internal_core_System__WEBPACK_IMPORTED_MODULE_0__["System"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "system", function() { return _internal_core_System__WEBPACK_IMPORTED_MODULE_0__["system"]; });

/* harmony import */ var _internal_core_Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./.internal/core/Base */ "./node_modules/@amcharts/amcharts4/.internal/core/Base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseObject", function() { return _internal_core_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseObjectEvents", function() { return _internal_core_Base__WEBPACK_IMPORTED_MODULE_1__["BaseObjectEvents"]; });

/* harmony import */ var _internal_core_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./.internal/core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return _internal_core_Component__WEBPACK_IMPORTED_MODULE_2__["Component"]; });

/* harmony import */ var _internal_core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./.internal/core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Container", function() { return _internal_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]; });

/* harmony import */ var _internal_core_DataItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./.internal/core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataItem", function() { return _internal_core_DataItem__WEBPACK_IMPORTED_MODULE_4__["DataItem"]; });

/* harmony import */ var _internal_core_Sprite__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./.internal/core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sprite", function() { return _internal_core_Sprite__WEBPACK_IMPORTED_MODULE_5__["Sprite"]; });

/* harmony import */ var _internal_core_SpriteEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./.internal/core/SpriteEvents */ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteEvents.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpriteEventDispatcher", function() { return _internal_core_SpriteEvents__WEBPACK_IMPORTED_MODULE_6__["SpriteEventDispatcher"]; });

/* harmony import */ var _internal_core_SpriteState__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./.internal/core/SpriteState */ "./node_modules/@amcharts/amcharts4/.internal/core/SpriteState.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpriteState", function() { return _internal_core_SpriteState__WEBPACK_IMPORTED_MODULE_7__["SpriteState"]; });

/* harmony import */ var _internal_core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./.internal/core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "registry", function() { return _internal_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Registry", function() { return _internal_core_Registry__WEBPACK_IMPORTED_MODULE_8__["Registry"]; });

/* harmony import */ var _internal_core_Options__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./.internal/core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "options", function() { return _internal_core_Options__WEBPACK_IMPORTED_MODULE_9__["options"]; });

/* harmony import */ var _internal_core_data_CSVParser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./.internal/core/data/CSVParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/CSVParser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CSVParser", function() { return _internal_core_data_CSVParser__WEBPACK_IMPORTED_MODULE_10__["CSVParser"]; });

/* harmony import */ var _internal_core_data_DataLoader__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./.internal/core/data/DataLoader */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataLoader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataLoader", function() { return _internal_core_data_DataLoader__WEBPACK_IMPORTED_MODULE_11__["DataLoader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dataLoader", function() { return _internal_core_data_DataLoader__WEBPACK_IMPORTED_MODULE_11__["dataLoader"]; });

/* harmony import */ var _internal_core_data_DataParser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./.internal/core/data/DataParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataParser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataParser", function() { return _internal_core_data_DataParser__WEBPACK_IMPORTED_MODULE_12__["DataParser"]; });

/* harmony import */ var _internal_core_data_DataSource__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./.internal/core/data/DataSource */ "./node_modules/@amcharts/amcharts4/.internal/core/data/DataSource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataSource", function() { return _internal_core_data_DataSource__WEBPACK_IMPORTED_MODULE_13__["DataSource"]; });

/* harmony import */ var _internal_core_data_JSONParser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./.internal/core/data/JSONParser */ "./node_modules/@amcharts/amcharts4/.internal/core/data/JSONParser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JSONParser", function() { return _internal_core_data_JSONParser__WEBPACK_IMPORTED_MODULE_14__["JSONParser"]; });

/* harmony import */ var _internal_core_defs_SVGDefaults__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./.internal/core/defs/SVGDefaults */ "./node_modules/@amcharts/amcharts4/.internal/core/defs/SVGDefaults.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGDefaults", function() { return _internal_core_defs_SVGDefaults__WEBPACK_IMPORTED_MODULE_15__["SVGDefaults"]; });

/* harmony import */ var _internal_core_elements_Button__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./.internal/core/elements/Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Button", function() { return _internal_core_elements_Button__WEBPACK_IMPORTED_MODULE_16__["Button"]; });

/* harmony import */ var _internal_core_elements_Circle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./.internal/core/elements/Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Circle", function() { return _internal_core_elements_Circle__WEBPACK_IMPORTED_MODULE_17__["Circle"]; });

/* harmony import */ var _internal_core_elements_Ellipse__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./.internal/core/elements/Ellipse */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Ellipse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ellipse", function() { return _internal_core_elements_Ellipse__WEBPACK_IMPORTED_MODULE_18__["Ellipse"]; });

/* harmony import */ var _internal_core_elements_Image__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./.internal/core/elements/Image */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Image.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Image", function() { return _internal_core_elements_Image__WEBPACK_IMPORTED_MODULE_19__["Image"]; });

/* harmony import */ var _internal_core_elements_Label__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./.internal/core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return _internal_core_elements_Label__WEBPACK_IMPORTED_MODULE_20__["Label"]; });

/* harmony import */ var _internal_core_elements_Line__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./.internal/core/elements/Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return _internal_core_elements_Line__WEBPACK_IMPORTED_MODULE_21__["Line"]; });

/* harmony import */ var _internal_core_elements_Popup__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./.internal/core/elements/Popup */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Popup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Popup", function() { return _internal_core_elements_Popup__WEBPACK_IMPORTED_MODULE_22__["Popup"]; });

/* harmony import */ var _internal_core_elements_Modal__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./.internal/core/elements/Modal */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Modal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Modal", function() { return _internal_core_elements_Modal__WEBPACK_IMPORTED_MODULE_23__["Modal"]; });

/* harmony import */ var _internal_core_elements_PointedRectangle__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./.internal/core/elements/PointedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedRectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PointedRectangle", function() { return _internal_core_elements_PointedRectangle__WEBPACK_IMPORTED_MODULE_24__["PointedRectangle"]; });

/* harmony import */ var _internal_core_elements_PointedShape__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./.internal/core/elements/PointedShape */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedShape.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PointedShape", function() { return _internal_core_elements_PointedShape__WEBPACK_IMPORTED_MODULE_25__["PointedShape"]; });

/* harmony import */ var _internal_core_elements_Polyarc__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./.internal/core/elements/Polyarc */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Polyarc", function() { return _internal_core_elements_Polyarc__WEBPACK_IMPORTED_MODULE_26__["Polyarc"]; });

/* harmony import */ var _internal_core_elements_Polygon__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./.internal/core/elements/Polygon */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Polygon", function() { return _internal_core_elements_Polygon__WEBPACK_IMPORTED_MODULE_27__["Polygon"]; });

/* harmony import */ var _internal_core_elements_Polyline__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./.internal/core/elements/Polyline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Polyline", function() { return _internal_core_elements_Polyline__WEBPACK_IMPORTED_MODULE_28__["Polyline"]; });

/* harmony import */ var _internal_core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./.internal/core/elements/Polyspline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Polyspline", function() { return _internal_core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_29__["Polyspline"]; });

/* harmony import */ var _internal_core_elements_Preloader__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./.internal/core/elements/Preloader */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Preloader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Preloader", function() { return _internal_core_elements_Preloader__WEBPACK_IMPORTED_MODULE_30__["Preloader"]; });

/* harmony import */ var _internal_core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./.internal/core/elements/Rectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return _internal_core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_31__["Rectangle"]; });

/* harmony import */ var _internal_core_elements_ResizeButton__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./.internal/core/elements/ResizeButton */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResizeButton", function() { return _internal_core_elements_ResizeButton__WEBPACK_IMPORTED_MODULE_32__["ResizeButton"]; });

/* harmony import */ var _internal_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./.internal/core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RoundedRectangle", function() { return _internal_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_33__["RoundedRectangle"]; });

/* harmony import */ var _internal_core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./.internal/core/elements/Scrollbar */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scrollbar", function() { return _internal_core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_34__["Scrollbar"]; });

/* harmony import */ var _internal_core_elements_Slider__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./.internal/core/elements/Slider */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slider.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Slider", function() { return _internal_core_elements_Slider__WEBPACK_IMPORTED_MODULE_35__["Slider"]; });

/* harmony import */ var _internal_core_elements_Slice__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./.internal/core/elements/Slice */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Slice", function() { return _internal_core_elements_Slice__WEBPACK_IMPORTED_MODULE_36__["Slice"]; });

/* harmony import */ var _internal_core_elements_TextLink__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./.internal/core/elements/TextLink */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextLink", function() { return _internal_core_elements_TextLink__WEBPACK_IMPORTED_MODULE_37__["TextLink"]; });

/* harmony import */ var _internal_core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./.internal/core/elements/Tooltip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return _internal_core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_38__["Tooltip"]; });

/* harmony import */ var _internal_core_elements_Trapezoid__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./.internal/core/elements/Trapezoid */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Trapezoid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Trapezoid", function() { return _internal_core_elements_Trapezoid__WEBPACK_IMPORTED_MODULE_39__["Trapezoid"]; });

/* harmony import */ var _internal_core_elements_Triangle__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./.internal/core/elements/Triangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Triangle", function() { return _internal_core_elements_Triangle__WEBPACK_IMPORTED_MODULE_40__["Triangle"]; });

/* harmony import */ var _internal_core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./.internal/core/elements/WavedCircle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedCircle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WavedCircle", function() { return _internal_core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_41__["WavedCircle"]; });

/* harmony import */ var _internal_core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./.internal/core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WavedLine", function() { return _internal_core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_42__["WavedLine"]; });

/* harmony import */ var _internal_core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./.internal/core/elements/WavedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WavedRectangle", function() { return _internal_core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_43__["WavedRectangle"]; });

/* harmony import */ var _internal_core_elements_ZoomOutButton__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./.internal/core/elements/ZoomOutButton */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/ZoomOutButton.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomOutButton", function() { return _internal_core_elements_ZoomOutButton__WEBPACK_IMPORTED_MODULE_44__["ZoomOutButton"]; });

/* harmony import */ var _internal_core_elements_PlayButton__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./.internal/core/elements/PlayButton */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/PlayButton.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PlayButton", function() { return _internal_core_elements_PlayButton__WEBPACK_IMPORTED_MODULE_45__["PlayButton"]; });

/* harmony import */ var _internal_core_elements_3d_Cone__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./.internal/core/elements/3d/Cone */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Cone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cone", function() { return _internal_core_elements_3d_Cone__WEBPACK_IMPORTED_MODULE_46__["Cone"]; });

/* harmony import */ var _internal_core_elements_3d_Rectangle3D__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./.internal/core/elements/3d/Rectangle3D */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Rectangle3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rectangle3D", function() { return _internal_core_elements_3d_Rectangle3D__WEBPACK_IMPORTED_MODULE_47__["Rectangle3D"]; });

/* harmony import */ var _internal_core_elements_3d_Slice3D__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./.internal/core/elements/3d/Slice3D */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Slice3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Slice3D", function() { return _internal_core_elements_3d_Slice3D__WEBPACK_IMPORTED_MODULE_48__["Slice3D"]; });

/* harmony import */ var _internal_core_export_Export__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./.internal/core/export/Export */ "./node_modules/@amcharts/amcharts4/.internal/core/export/Export.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Export", function() { return _internal_core_export_Export__WEBPACK_IMPORTED_MODULE_49__["Export"]; });

/* harmony import */ var _internal_core_export_ExportMenu__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./.internal/core/export/ExportMenu */ "./node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExportMenu", function() { return _internal_core_export_ExportMenu__WEBPACK_IMPORTED_MODULE_50__["ExportMenu"]; });

/* harmony import */ var _internal_core_formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./.internal/core/formatters/DateFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateFormatter", function() { return _internal_core_formatters_DateFormatter__WEBPACK_IMPORTED_MODULE_51__["DateFormatter"]; });

/* harmony import */ var _internal_core_formatters_DurationFormatter__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./.internal/core/formatters/DurationFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/DurationFormatter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DurationFormatter", function() { return _internal_core_formatters_DurationFormatter__WEBPACK_IMPORTED_MODULE_52__["DurationFormatter"]; });

/* harmony import */ var _internal_core_formatters_NumberFormatter__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./.internal/core/formatters/NumberFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/NumberFormatter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NumberFormatter", function() { return _internal_core_formatters_NumberFormatter__WEBPACK_IMPORTED_MODULE_53__["NumberFormatter"]; });

/* harmony import */ var _internal_core_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./.internal/core/formatters/TextFormatter */ "./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextFormatter", function() { return _internal_core_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_54__["TextFormatter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTextFormatter", function() { return _internal_core_formatters_TextFormatter__WEBPACK_IMPORTED_MODULE_54__["getTextFormatter"]; });

/* harmony import */ var _internal_core_interaction_Inertia__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./.internal/core/interaction/Inertia */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Inertia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Inertia", function() { return _internal_core_interaction_Inertia__WEBPACK_IMPORTED_MODULE_55__["Inertia"]; });

/* harmony import */ var _internal_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./.internal/core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Interaction", function() { return _internal_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_56__["Interaction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getInteraction", function() { return _internal_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_56__["getInteraction"]; });

/* harmony import */ var _internal_core_interaction_InteractionKeyboardObject__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./.internal/core/interaction/InteractionKeyboardObject */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionKeyboardObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InteractionKeyboardObject", function() { return _internal_core_interaction_InteractionKeyboardObject__WEBPACK_IMPORTED_MODULE_57__["InteractionKeyboardObject"]; });

/* harmony import */ var _internal_core_interaction_InteractionObject__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./.internal/core/interaction/InteractionObject */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InteractionObject", function() { return _internal_core_interaction_InteractionObject__WEBPACK_IMPORTED_MODULE_58__["InteractionObject"]; });

/* harmony import */ var _internal_core_interaction_InteractionObjectEvents__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./.internal/core/interaction/InteractionObjectEvents */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InteractionObjectEventDispatcher", function() { return _internal_core_interaction_InteractionObjectEvents__WEBPACK_IMPORTED_MODULE_59__["InteractionObjectEventDispatcher"]; });

/* harmony import */ var _internal_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./.internal/core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MouseCursorStyle", function() { return _internal_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_60__["MouseCursorStyle"]; });

/* harmony import */ var _internal_core_rendering_AMElement__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./.internal/core/rendering/AMElement */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMElement", function() { return _internal_core_rendering_AMElement__WEBPACK_IMPORTED_MODULE_61__["AMElement"]; });

/* harmony import */ var _internal_core_rendering_Group__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./.internal/core/rendering/Group */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Group.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return _internal_core_rendering_Group__WEBPACK_IMPORTED_MODULE_62__["Group"]; });

/* harmony import */ var _internal_core_rendering_Paper__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./.internal/core/rendering/Paper */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Paper", function() { return _internal_core_rendering_Paper__WEBPACK_IMPORTED_MODULE_63__["Paper"]; });

/* harmony import */ var _internal_core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./.internal/core/rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tension", function() { return _internal_core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_64__["Tension"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Basis", function() { return _internal_core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_64__["Basis"]; });

/* harmony import */ var _internal_core_rendering_SVGContainer__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./.internal/core/rendering/SVGContainer */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/SVGContainer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGContainer", function() { return _internal_core_rendering_SVGContainer__WEBPACK_IMPORTED_MODULE_65__["SVGContainer"]; });

/* harmony import */ var _internal_core_rendering_fills_ColorModifier__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./.internal/core/rendering/fills/ColorModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/ColorModifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorModifier", function() { return _internal_core_rendering_fills_ColorModifier__WEBPACK_IMPORTED_MODULE_66__["ColorModifier"]; });

/* harmony import */ var _internal_core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./.internal/core/rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return _internal_core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_67__["LinearGradient"]; });

/* harmony import */ var _internal_core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./.internal/core/rendering/fills/LinearGradientModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradientModifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinearGradientModifier", function() { return _internal_core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_68__["LinearGradientModifier"]; });

/* harmony import */ var _internal_core_rendering_fills_RadialGradientModifier__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./.internal/core/rendering/fills/RadialGradientModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradientModifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadialGradientModifier", function() { return _internal_core_rendering_fills_RadialGradientModifier__WEBPACK_IMPORTED_MODULE_69__["RadialGradientModifier"]; });

/* harmony import */ var _internal_core_rendering_fills_LinePattern__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./.internal/core/rendering/fills/LinePattern */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinePattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinePattern", function() { return _internal_core_rendering_fills_LinePattern__WEBPACK_IMPORTED_MODULE_70__["LinePattern"]; });

/* harmony import */ var _internal_core_rendering_fills_Pattern__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./.internal/core/rendering/fills/Pattern */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pattern", function() { return _internal_core_rendering_fills_Pattern__WEBPACK_IMPORTED_MODULE_71__["Pattern"]; });

/* harmony import */ var _internal_core_rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./.internal/core/rendering/fills/RadialGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return _internal_core_rendering_fills_RadialGradient__WEBPACK_IMPORTED_MODULE_72__["RadialGradient"]; });

/* harmony import */ var _internal_core_rendering_fills_RectPattern__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./.internal/core/rendering/fills/RectPattern */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectPattern", function() { return _internal_core_rendering_fills_RectPattern__WEBPACK_IMPORTED_MODULE_73__["RectPattern"]; });

/* harmony import */ var _internal_core_rendering_filters_ColorizeFilter__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./.internal/core/rendering/filters/ColorizeFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/ColorizeFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorizeFilter", function() { return _internal_core_rendering_filters_ColorizeFilter__WEBPACK_IMPORTED_MODULE_74__["ColorizeFilter"]; });

/* harmony import */ var _internal_core_rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./.internal/core/rendering/filters/DesaturateFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DesaturateFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DesaturateFilter", function() { return _internal_core_rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_75__["DesaturateFilter"]; });

/* harmony import */ var _internal_core_rendering_filters_DropShadowFilter__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./.internal/core/rendering/filters/DropShadowFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DropShadowFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DropShadowFilter", function() { return _internal_core_rendering_filters_DropShadowFilter__WEBPACK_IMPORTED_MODULE_76__["DropShadowFilter"]; });

/* harmony import */ var _internal_core_rendering_filters_BlurFilter__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./.internal/core/rendering/filters/BlurFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/BlurFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlurFilter", function() { return _internal_core_rendering_filters_BlurFilter__WEBPACK_IMPORTED_MODULE_77__["BlurFilter"]; });

/* harmony import */ var _internal_core_rendering_filters_Filter__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./.internal/core/rendering/filters/Filter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return _internal_core_rendering_filters_Filter__WEBPACK_IMPORTED_MODULE_78__["Filter"]; });

/* harmony import */ var _internal_core_rendering_filters_FocusFilter__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./.internal/core/rendering/filters/FocusFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/FocusFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FocusFilter", function() { return _internal_core_rendering_filters_FocusFilter__WEBPACK_IMPORTED_MODULE_79__["FocusFilter"]; });

/* harmony import */ var _internal_core_rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./.internal/core/rendering/filters/LightenFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/LightenFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LightenFilter", function() { return _internal_core_rendering_filters_LightenFilter__WEBPACK_IMPORTED_MODULE_80__["LightenFilter"]; });

/* harmony import */ var _internal_core_responsive_Responsive__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./.internal/core/responsive/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/responsive/Responsive.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Responsive", function() { return _internal_core_responsive_Responsive__WEBPACK_IMPORTED_MODULE_81__["Responsive"]; });

/* harmony import */ var _internal_core_utils_Adapter__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./.internal/core/utils/Adapter */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GlobalAdapter", function() { return _internal_core_utils_Adapter__WEBPACK_IMPORTED_MODULE_82__["GlobalAdapter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "globalAdapter", function() { return _internal_core_utils_Adapter__WEBPACK_IMPORTED_MODULE_82__["globalAdapter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Adapter", function() { return _internal_core_utils_Adapter__WEBPACK_IMPORTED_MODULE_82__["Adapter"]; });

/* harmony import */ var _internal_core_utils_Animation__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./.internal/core/utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _internal_core_utils_Animation__WEBPACK_IMPORTED_MODULE_83__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return _internal_core_utils_Animation__WEBPACK_IMPORTED_MODULE_83__["animate"]; });

/* harmony import */ var _internal_core_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./.internal/core/utils/AsyncPending */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nextFrame", function() { return _internal_core_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_84__["nextFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "readFrame", function() { return _internal_core_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_84__["readFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "writeFrame", function() { return _internal_core_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_84__["writeFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "whenIdle", function() { return _internal_core_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_84__["whenIdle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "triggerIdle", function() { return _internal_core_utils_AsyncPending__WEBPACK_IMPORTED_MODULE_84__["triggerIdle"]; });

/* harmony import */ var _internal_core_utils_Cache__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./.internal/core/utils/Cache */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cache", function() { return _internal_core_utils_Cache__WEBPACK_IMPORTED_MODULE_85__["Cache"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cache", function() { return _internal_core_utils_Cache__WEBPACK_IMPORTED_MODULE_85__["cache"]; });

/* harmony import */ var _internal_core_utils_Color__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./.internal/core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return _internal_core_utils_Color__WEBPACK_IMPORTED_MODULE_86__["Color"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _internal_core_utils_Color__WEBPACK_IMPORTED_MODULE_86__["color"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isColor", function() { return _internal_core_utils_Color__WEBPACK_IMPORTED_MODULE_86__["isColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "castColor", function() { return _internal_core_utils_Color__WEBPACK_IMPORTED_MODULE_86__["castColor"]; });

/* harmony import */ var _internal_core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./.internal/core/utils/ColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorSet", function() { return _internal_core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_87__["ColorSet"]; });

/* harmony import */ var _internal_core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./.internal/core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InterfaceColorSet", function() { return _internal_core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_88__["InterfaceColorSet"]; });

/* harmony import */ var _internal_core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./.internal/core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DictionaryDisposer", function() { return _internal_core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_89__["DictionaryDisposer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return _internal_core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_89__["Dictionary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DictionaryTemplate", function() { return _internal_core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_89__["DictionaryTemplate"]; });

/* harmony import */ var _internal_core_utils_Disposer__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./.internal/core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Disposer", function() { return _internal_core_utils_Disposer__WEBPACK_IMPORTED_MODULE_90__["Disposer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultiDisposer", function() { return _internal_core_utils_Disposer__WEBPACK_IMPORTED_MODULE_90__["MultiDisposer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MutableValueDisposer", function() { return _internal_core_utils_Disposer__WEBPACK_IMPORTED_MODULE_90__["MutableValueDisposer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CounterDisposer", function() { return _internal_core_utils_Disposer__WEBPACK_IMPORTED_MODULE_90__["CounterDisposer"]; });

/* harmony import */ var _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./.internal/core/utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StyleRule", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["StyleRule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StyleClass", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["StyleClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["addClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["removeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blur", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["blur"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "focus", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["focus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "outerHTML", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["outerHTML"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isElement", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["isElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "copyAttributes", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["copyAttributes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fixPixelPerfect", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["fixPixelPerfect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ready", function() { return _internal_core_utils_DOM__WEBPACK_IMPORTED_MODULE_91__["ready"]; });

/* harmony import */ var _internal_core_utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./.internal/core/utils/EventDispatcher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventDispatcher", function() { return _internal_core_utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_92__["EventDispatcher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TargetedEventDispatcher", function() { return _internal_core_utils_EventDispatcher__WEBPACK_IMPORTED_MODULE_92__["TargetedEventDispatcher"]; });

/* harmony import */ var _internal_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./.internal/core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListIterator", function() { return _internal_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_93__["ListIterator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _internal_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_93__["min"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _internal_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_93__["max"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "join", function() { return _internal_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_93__["join"]; });

/* harmony import */ var _internal_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./.internal/core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Keyboard", function() { return _internal_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_94__["Keyboard"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keyboard", function() { return _internal_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_94__["keyboard"]; });

/* harmony import */ var _internal_core_utils_Language__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./.internal/core/utils/Language */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Language", function() { return _internal_core_utils_Language__WEBPACK_IMPORTED_MODULE_95__["Language"]; });

/* harmony import */ var _internal_core_utils_List__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./.internal/core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexedIterable", function() { return _internal_core_utils_List__WEBPACK_IMPORTED_MODULE_96__["IndexedIterable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListGrouper", function() { return _internal_core_utils_List__WEBPACK_IMPORTED_MODULE_96__["ListGrouper"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListDisposer", function() { return _internal_core_utils_List__WEBPACK_IMPORTED_MODULE_96__["ListDisposer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "List", function() { return _internal_core_utils_List__WEBPACK_IMPORTED_MODULE_96__["List"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListTemplate", function() { return _internal_core_utils_List__WEBPACK_IMPORTED_MODULE_96__["ListTemplate"]; });

/* harmony import */ var _internal_core_utils_Morpher__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./.internal/core/utils/Morpher */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Morpher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Morpher", function() { return _internal_core_utils_Morpher__WEBPACK_IMPORTED_MODULE_97__["Morpher"]; });

/* harmony import */ var _internal_core_utils_Order__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./.internal/core/utils/Order */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return _internal_core_utils_Order__WEBPACK_IMPORTED_MODULE_98__["reverse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "or", function() { return _internal_core_utils_Order__WEBPACK_IMPORTED_MODULE_98__["or"]; });

/* harmony import */ var _internal_core_utils_Percent__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./.internal/core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Percent", function() { return _internal_core_utils_Percent__WEBPACK_IMPORTED_MODULE_99__["Percent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "percent", function() { return _internal_core_utils_Percent__WEBPACK_IMPORTED_MODULE_99__["percent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPercent", function() { return _internal_core_utils_Percent__WEBPACK_IMPORTED_MODULE_99__["isPercent"]; });

/* harmony import */ var _internal_core_utils_SortedList__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./.internal/core/utils/SortedList */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrderedList", function() { return _internal_core_utils_SortedList__WEBPACK_IMPORTED_MODULE_100__["OrderedList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SortedList", function() { return _internal_core_utils_SortedList__WEBPACK_IMPORTED_MODULE_100__["SortedList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrderedListTemplate", function() { return _internal_core_utils_SortedList__WEBPACK_IMPORTED_MODULE_100__["OrderedListTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SortedListTemplate", function() { return _internal_core_utils_SortedList__WEBPACK_IMPORTED_MODULE_100__["SortedListTemplate"]; });

/* harmony import */ var _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./.internal/core/utils/Strings */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PX", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["PX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STRING", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["STRING"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NUMBER", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["NUMBER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATE", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["DATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DURATION", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["DURATION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PLACEHOLDER", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["PLACEHOLDER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PLACEHOLDER2", function() { return _internal_core_utils_Strings__WEBPACK_IMPORTED_MODULE_101__["PLACEHOLDER2"]; });

/* harmony import */ var _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./.internal/core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["isNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "checkString", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["checkString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "checkBoolean", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["checkBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "checkNumber", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["checkNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "checkObject", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["checkObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "castString", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["castString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "castNumber", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["castNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__["isArray"]; });

/* harmony import */ var _internal_core_utils_Validatable__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./.internal/core/utils/Validatable */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Validatable", function() { return _internal_core_utils_Validatable__WEBPACK_IMPORTED_MODULE_103__["Validatable"]; });

/* harmony import */ var _internal_core_rendering_Path__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./.internal/core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "path", function() { return _internal_core_rendering_Path__WEBPACK_IMPORTED_MODULE_104__; });
/* harmony import */ var _internal_core_utils_Colors__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./.internal/core/utils/Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "colors", function() { return _internal_core_utils_Colors__WEBPACK_IMPORTED_MODULE_105__; });
/* harmony import */ var _internal_core_utils_Ease__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./.internal/core/utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "ease", function() { return _internal_core_utils_Ease__WEBPACK_IMPORTED_MODULE_106__; });
/* harmony import */ var _internal_core_utils_Math__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./.internal/core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "math", function() { return _internal_core_utils_Math__WEBPACK_IMPORTED_MODULE_107__; });
/* harmony import */ var _internal_core_utils_Array__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./.internal/core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "array", function() { return _internal_core_utils_Array__WEBPACK_IMPORTED_MODULE_108__; });
/* harmony import */ var _internal_core_utils_Number__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./.internal/core/utils/Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "number", function() { return _internal_core_utils_Number__WEBPACK_IMPORTED_MODULE_109__; });
/* harmony import */ var _internal_core_utils_Object__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./.internal/core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "object", function() { return _internal_core_utils_Object__WEBPACK_IMPORTED_MODULE_110__; });
/* harmony import */ var _internal_core_utils_String__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./.internal/core/utils/String */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "string", function() { return _internal_core_utils_String__WEBPACK_IMPORTED_MODULE_111__; });
/* harmony import */ var _internal_core_utils_Time__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./.internal/core/utils/Time */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "time", function() { return _internal_core_utils_Time__WEBPACK_IMPORTED_MODULE_112__; });
/* harmony import */ var _internal_core_utils_Utils__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./.internal/core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "utils", function() { return _internal_core_utils_Utils__WEBPACK_IMPORTED_MODULE_113__; });
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "iter", function() { return _internal_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_93__; });
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "type", function() { return _internal_core_utils_Type__WEBPACK_IMPORTED_MODULE_102__; });
/* harmony import */ var _internal_core_utils_Instance__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./.internal/core/utils/Instance */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _internal_core_utils_Instance__WEBPACK_IMPORTED_MODULE_114__["create"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createFromConfig", function() { return _internal_core_utils_Instance__WEBPACK_IMPORTED_MODULE_114__["createFromConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useTheme", function() { return _internal_core_utils_Instance__WEBPACK_IMPORTED_MODULE_114__["useTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unuseTheme", function() { return _internal_core_utils_Instance__WEBPACK_IMPORTED_MODULE_114__["unuseTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unuseAllThemes", function() { return _internal_core_utils_Instance__WEBPACK_IMPORTED_MODULE_114__["unuseAllThemes"]; });

/**
 * This module houses all core/framework functionality and is required for
 * all charting components to work
 */
/**
 * Elements: core
 */










/**
 * Elements: data
 */






/**
 * Elements: elements
 */






























/**
 * Elements: 3d
 */



/**
 * Elements: export
 */


/**
 * Elements: formatters
 */




/**
 * Elements: interaction
 */






/**
 * Elements: rendering
 */





/**
 * Elements: fills
 */








/**
 * Elements: filters
 */







/**
 * Elements: responsive
 */

/**
 * Elements: utils
 */






















/**
 * Functions: rendering
 */


/**
 * Functions: utils
 */
























//# sourceMappingURL=core.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/lang/en.js":
/*!*****************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/lang/en.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * amCharts 4 locale
 *
 * Locale: en
 * Language: International English
 * Author: Martynas Majeris
 *
 * Follow instructions in [on this page](https://www.amcharts.com/docs/v4/tutorials/creating-translations/) to make corrections or add new translations.
 *
 * ---
 * Edit but leave the header section above this line. You can remove any
 * subsequent comment sections.
 * ---
 *
 * Use this file as a template to create translations. Leave the key part in
 * English intact. Fill the value with a translation.
 *
 * Empty string means no translation, so default "International English"
 * will be used.
 *
 * If you need the translation to literally be an empty string, use `null`
 * instead.
 *
 * IMPORTANT:
 * When translating make good effort to keep the translation length
 * at least the same chartcount as the English, especially for short prompts.
 *
 * Having significantly longer prompts may distort the actual charts.
 *
 * NOTE:
 * Some prompts - like months or weekdays - come in two versions: full and
 * shortened.
 *
 * If there's no official shortened version of these in your language, and it
 * would not be possible to invent such short versions that don't seem weird
 * to native speakers of that language, fill those with the same as full
 * version.
 *
 * PLACEHOLDERS:
 * Some prompts have placeholders like "%1". Those will be replaced by actual
 * values during translation and should be retained in the translated prompts.
 *
 * Placeholder positions may be changed to better suit structure of the
 * sentence.
 *
 * For example "From %1 to %2", when actually used will replace "%1" with an
 * actual value representing range start, and "%2" will be replaced by end
 * value.
 *
 * E.g. in a Scrollbar for Value axis "From %1 to %2" will become
 * "From 100 to 200". You may translate "From" and "to", as well as re-arrange
 * the order of the prompt itself, but make sure the "%1" and "%2" remain, in
 * places where they will make sense.
 *
 * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.
 */
/* harmony default export */ __webpack_exports__["default"] = ({
    // Number formatting options.
    // 
    // Please check with the local standards which separator is accepted to be
    // used for separating decimals, and which for thousands.
    "_decimalSeparator": ".",
    "_thousandSeparator": ",",
    // Suffixes for numbers
    // When formatting numbers, big or small numers might be reformatted to
    // shorter version, by applying a suffix.
    // 
    // For example, 1000000 might become "1m".
    // Or 1024 might become "1KB" if we're formatting byte numbers.
    // 
    // This section defines such suffixes for all such cases.
    "_big_number_suffix_3": "k",
    "_big_number_suffix_6": "M",
    "_big_number_suffix_9": "G",
    "_big_number_suffix_12": "T",
    "_big_number_suffix_15": "P",
    "_big_number_suffix_18": "E",
    "_big_number_suffix_21": "Z",
    "_big_number_suffix_24": "Y",
    "_small_number_suffix_3": "m",
    "_small_number_suffix_6": "μ",
    "_small_number_suffix_9": "n",
    "_small_number_suffix_12": "p",
    "_small_number_suffix_15": "f",
    "_small_number_suffix_18": "a",
    "_small_number_suffix_21": "z",
    "_small_number_suffix_24": "y",
    "_byte_suffix_B": "B",
    "_byte_suffix_KB": "KB",
    "_byte_suffix_MB": "MB",
    "_byte_suffix_GB": "GB",
    "_byte_suffix_TB": "TB",
    "_byte_suffix_PB": "PB",
    // Default date formats for various periods.
    // 
    // This should reflect official or de facto formatting universally accepted
    // in the country translation is being made for
    // Available format codes here:
    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Format_codes
    // 
    // This will be used when formatting date/time for particular granularity,
    // e.g. "_date_hour" will be shown whenever we need to show time as hours.
    "_date_millisecond": "mm:ss SSS",
    "_date_second": "HH:mm:ss",
    "_date_minute": "HH:mm",
    "_date_hour": "HH:mm",
    "_date_day": "MMM dd",
    "_date_week": "ww",
    "_date_month": "MMM",
    "_date_year": "yyyy",
    // Default duration formats for various base units.
    // 
    // This will be used by DurationFormatter to format numeric values into
    // duration.
    // 
    // Notice how each duration unit comes in several versions. This is to ensure
    // that each base unit is shown correctly.
    // 
    // For example, if we have baseUnit set to "second", meaning our duration is
    // in seconds.
    // 
    // If we pass in `50` to formatter, it will know that we have just 50 seconds
    // (less than a minute) so it will use format in `"_duration_second"` ("ss"),
    // and the formatted result will be in like `"50"`.
    // 
    // If we pass in `70`, which is more than a minute, the formatter will switch
    // to `"_duration_second_minute"` ("mm:ss"), resulting in "01:10" formatted
    // text.
    // 
    // Available codes here:
    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes
    "_duration_millisecond": "SSS",
    "_duration_millisecond_second": "ss.SSS",
    "_duration_millisecond_minute": "mm:ss SSS",
    "_duration_millisecond_hour": "hh:mm:ss SSS",
    "_duration_millisecond_day": "d'd' mm:ss SSS",
    "_duration_millisecond_week": "d'd' mm:ss SSS",
    "_duration_millisecond_month": "M'm' dd'd' mm:ss SSS",
    "_duration_millisecond_year": "y'y' MM'm' dd'd' mm:ss SSS",
    "_duration_second": "ss",
    "_duration_second_minute": "mm:ss",
    "_duration_second_hour": "hh:mm:ss",
    "_duration_second_day": "d'd' hh:mm:ss",
    "_duration_second_week": "d'd' hh:mm:ss",
    "_duration_second_month": "M'm' dd'd' hh:mm:ss",
    "_duration_second_year": "y'y' MM'm' dd'd' hh:mm:ss",
    "_duration_minute": "mm",
    "_duration_minute_hour": "hh:mm",
    "_duration_minute_day": "d'd' hh:mm",
    "_duration_minute_week": "d'd' hh:mm",
    "_duration_minute_month": "M'm' dd'd' hh:mm",
    "_duration_minute_year": "y'y' MM'm' dd'd' hh:mm",
    "_duration_hour": "hh'h'",
    "_duration_hour_day": "d'd' hh'h'",
    "_duration_hour_week": "d'd' hh'h'",
    "_duration_hour_month": "M'm' dd'd' hh'h'",
    "_duration_hour_year": "y'y' MM'm' dd'd' hh'h'",
    "_duration_day": "d'd'",
    "_duration_day_week": "d'd'",
    "_duration_day_month": "M'm' dd'd'",
    "_duration_day_year": "y'y' MM'm' dd'd'",
    "_duration_week": "w'w'",
    "_duration_week_month": "w'w'",
    "_duration_week_year": "w'w'",
    "_duration_month": "M'm'",
    "_duration_month_year": "y'y' MM'm'",
    "_duration_year": "y'y'",
    // Era translations
    "_era_ad": "AD",
    "_era_bc": "BC",
    // Day part, used in 12-hour formats, e.g. 5 P.M.
    // Please note that these come in 3 variants:
    // * one letter (e.g. "A")
    // * two letters (e.g. "AM")
    // * two letters with dots (e.g. "A.M.")
    // 
    // All three need to to be translated even if they are all the same. Some
    // users might use one, some the other.
    "A": "",
    "P": "",
    "AM": "",
    "PM": "",
    "A.M.": "",
    "P.M.": "",
    // Date-related stuff.
    // 
    // When translating months, if there's a difference, use the form which is
    // best for a full date, e.g. as you would use it in "2018 January 1".
    // 
    // Note that May is listed twice. This is because in English May is the same
    // in both long and short forms, while in other languages it may not be the
    // case. Translate "May" to full word, while "May(short)" to shortened
    // version.
    // 
    // Should month names and weekdays be capitalized or not?
    // 
    // Rule of thumb is this: if the names should always be capitalized,
    // regardless of name position within date ("January", "21st January 2018",
    // etc.) use capitalized names. Otherwise enter all lowercase.
    // 
    // The date formatter will automatically capitalize names if they are the
    // first (or only) word in resulting date.
    "January": "",
    "February": "",
    "March": "",
    "April": "",
    "May": "",
    "June": "",
    "July": "",
    "August": "",
    "September": "",
    "October": "",
    "November": "",
    "December": "",
    "Jan": "",
    "Feb": "",
    "Mar": "",
    "Apr": "",
    "May(short)": "May",
    "Jun": "",
    "Jul": "",
    "Aug": "",
    "Sep": "",
    "Oct": "",
    "Nov": "",
    "Dec": "",
    // Weekdays.
    "Sunday": "",
    "Monday": "",
    "Tuesday": "",
    "Wednesday": "",
    "Thursday": "",
    "Friday": "",
    "Saturday": "",
    "Sun": "",
    "Mon": "",
    "Tue": "",
    "Wed": "",
    "Thu": "",
    "Fri": "",
    "Sat": "",
    // Date ordinal function.
    // 
    // This is used when adding number ordinal when formatting days in dates.
    // 
    // E.g. "January 1st", "February 2nd".
    // 
    // The function accepts day number, and returns a string to be added to the
    // day, like in default English translation, if we pass in 2, we will receive
    // "nd" back.
    "_dateOrd": function (day) {
        var res = "th";
        if ((day < 11) || (day > 13)) {
            switch (day % 10) {
                case 1:
                    res = "st";
                    break;
                case 2:
                    res = "nd";
                    break;
                case 3:
                    res = "rd";
                    break;
            }
        }
        return res;
    },
    // Various chart controls.
    // Shown as a tooltip on zoom out button.
    "Zoom Out": "",
    // Timeline buttons
    "Play": "",
    "Stop": "",
    // Chart's Legend screen reader title.
    "Legend": "",
    // Legend's item screen reader indicator.
    "Click, tap or press ENTER to toggle": "",
    // Shown when the chart is busy loading something.
    "Loading": "",
    // Shown as the first button in the breadcrumb navigation, e.g.:
    // Home > First level > ...
    "Home": "",
    // Chart types.
    // Those are used as default screen reader titles for the main chart element
    // unless developer has set some more descriptive title.
    "Chart": "",
    "Serial chart": "",
    "X/Y chart": "",
    "Pie chart": "",
    "Gauge chart": "",
    "Radar chart": "",
    "Sankey diagram": "",
    "Flow diagram": "",
    "Chord diagram": "",
    "TreeMap chart": "",
    "Sliced chart": "",
    // Series types.
    // Used to name series by type for screen readers if they do not have their
    // name set.
    "Series": "",
    "Candlestick Series": "",
    "OHLC Series": "",
    "Column Series": "",
    "Line Series": "",
    "Pie Slice Series": "",
    "Funnel Series": "",
    "Pyramid Series": "",
    "X/Y Series": "",
    // Map-related stuff.
    "Map": "",
    "Press ENTER to zoom in": "",
    "Press ENTER to zoom out": "",
    "Use arrow keys to zoom in and out": "",
    "Use plus and minus keys on your keyboard to zoom in and out": "",
    // Export-related stuff.
    // These prompts are used in Export menu labels.
    // 
    // "Export" is the top-level menu item.
    // 
    // "Image", "Data", "Print" as second-level indicating type of export
    // operation.
    // 
    // Leave actual format untranslated, unless you absolutely know that they
    // would convey more meaning in some other way.
    "Export": "",
    "Image": "",
    "Data": "",
    "Print": "",
    "Click, tap or press ENTER to open": "",
    "Click, tap or press ENTER to print.": "",
    "Click, tap or press ENTER to export as %1.": "",
    'To save the image, right-click this link and choose "Save picture as..."': "",
    'To save the image, right-click thumbnail on the left and choose "Save picture as..."': "",
    "(Press ESC to close this message)": "",
    "Image Export Complete": "",
    "Export operation took longer than expected. Something might have gone wrong.": "",
    "Saved from": "",
    "PNG": "",
    "JPG": "",
    "GIF": "",
    "SVG": "",
    "PDF": "",
    "JSON": "",
    "CSV": "",
    "XLSX": "",
    // Scrollbar-related stuff.
    // 
    // Scrollbar is a control which can zoom and pan the axes on the chart.
    // 
    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or
    // upper and lower (for vertical one).
    // 
    // Prompts change in relation to whether Scrollbar is vertical or horizontal.
    // 
    // The final section is used to indicate the current range of selection.
    "Use TAB to select grip buttons or left and right arrows to change selection": "",
    "Use left and right arrows to move selection": "",
    "Use left and right arrows to move left selection": "",
    "Use left and right arrows to move right selection": "",
    "Use TAB select grip buttons or up and down arrows to change selection": "",
    "Use up and down arrows to move selection": "",
    "Use up and down arrows to move lower selection": "",
    "Use up and down arrows to move upper selection": "",
    "From %1 to %2": "",
    "From %1": "",
    "To %1": "",
    // Data loader-related.
    "No parser available for file: %1": "",
    "Error parsing file: %1": "",
    "Unable to load file: %1": "",
    "Invalid date": "",
});
//# sourceMappingURL=en.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/maps.js":
/*!**************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/maps.js ***!
  \**************************************************/
/*! exports provided: LegendDataItem, Legend, LegendSettings, HeatLegend, MapChartDataItem, MapChart, MapSeriesDataItem, MapSeries, MapObject, MapPolygon, MapImage, MapLine, MapLineObject, MapSpline, MapArc, MapPolygonSeriesDataItem, MapPolygonSeries, MapLineSeriesDataItem, MapLineSeries, MapSplineSeriesDataItem, MapSplineSeries, MapImageSeriesDataItem, MapImageSeries, MapArcSeriesDataItem, MapArcSeries, multiPolygonToGeo, multiLineToGeo, multiPointToGeo, pointToGeo, ZoomControl, SmallMap, Projection, projections, geo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./.internal/charts/Legend */ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDataItem", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__["LegendDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__["LegendSettings"]; });

/* harmony import */ var _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./.internal/charts/elements/HeatLegend */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HeatLegend", function() { return _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_1__["HeatLegend"]; });

/* harmony import */ var _internal_charts_types_MapChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./.internal/charts/types/MapChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/MapChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapChartDataItem", function() { return _internal_charts_types_MapChart__WEBPACK_IMPORTED_MODULE_2__["MapChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapChart", function() { return _internal_charts_types_MapChart__WEBPACK_IMPORTED_MODULE_2__["MapChart"]; });

/* harmony import */ var _internal_charts_map_MapSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./.internal/charts/map/MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSeriesDataItem", function() { return _internal_charts_map_MapSeries__WEBPACK_IMPORTED_MODULE_3__["MapSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSeries", function() { return _internal_charts_map_MapSeries__WEBPACK_IMPORTED_MODULE_3__["MapSeries"]; });

/* harmony import */ var _internal_charts_map_MapObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./.internal/charts/map/MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapObject", function() { return _internal_charts_map_MapObject__WEBPACK_IMPORTED_MODULE_4__["MapObject"]; });

/* harmony import */ var _internal_charts_map_MapPolygon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./.internal/charts/map/MapPolygon */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapPolygon", function() { return _internal_charts_map_MapPolygon__WEBPACK_IMPORTED_MODULE_5__["MapPolygon"]; });

/* harmony import */ var _internal_charts_map_MapImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./.internal/charts/map/MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapImage", function() { return _internal_charts_map_MapImage__WEBPACK_IMPORTED_MODULE_6__["MapImage"]; });

/* harmony import */ var _internal_charts_map_MapLine__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./.internal/charts/map/MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLine", function() { return _internal_charts_map_MapLine__WEBPACK_IMPORTED_MODULE_7__["MapLine"]; });

/* harmony import */ var _internal_charts_map_MapLineObject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./.internal/charts/map/MapLineObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLineObject", function() { return _internal_charts_map_MapLineObject__WEBPACK_IMPORTED_MODULE_8__["MapLineObject"]; });

/* harmony import */ var _internal_charts_map_MapSpline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./.internal/charts/map/MapSpline */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSpline", function() { return _internal_charts_map_MapSpline__WEBPACK_IMPORTED_MODULE_9__["MapSpline"]; });

/* harmony import */ var _internal_charts_map_MapArc__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./.internal/charts/map/MapArc */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapArc", function() { return _internal_charts_map_MapArc__WEBPACK_IMPORTED_MODULE_10__["MapArc"]; });

/* harmony import */ var _internal_charts_map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./.internal/charts/map/MapPolygonSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeriesDataItem", function() { return _internal_charts_map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_11__["MapPolygonSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeries", function() { return _internal_charts_map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_11__["MapPolygonSeries"]; });

/* harmony import */ var _internal_charts_map_MapLineSeries__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./.internal/charts/map/MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLineSeriesDataItem", function() { return _internal_charts_map_MapLineSeries__WEBPACK_IMPORTED_MODULE_12__["MapLineSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLineSeries", function() { return _internal_charts_map_MapLineSeries__WEBPACK_IMPORTED_MODULE_12__["MapLineSeries"]; });

/* harmony import */ var _internal_charts_map_MapSplineSeries__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./.internal/charts/map/MapSplineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSplineSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeriesDataItem", function() { return _internal_charts_map_MapSplineSeries__WEBPACK_IMPORTED_MODULE_13__["MapSplineSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeries", function() { return _internal_charts_map_MapSplineSeries__WEBPACK_IMPORTED_MODULE_13__["MapSplineSeries"]; });

/* harmony import */ var _internal_charts_map_MapImageSeries__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./.internal/charts/map/MapImageSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapImageSeriesDataItem", function() { return _internal_charts_map_MapImageSeries__WEBPACK_IMPORTED_MODULE_14__["MapImageSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapImageSeries", function() { return _internal_charts_map_MapImageSeries__WEBPACK_IMPORTED_MODULE_14__["MapImageSeries"]; });

/* harmony import */ var _internal_charts_map_MapArcSeries__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./.internal/charts/map/MapArcSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArcSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapArcSeriesDataItem", function() { return _internal_charts_map_MapArcSeries__WEBPACK_IMPORTED_MODULE_15__["MapArcSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapArcSeries", function() { return _internal_charts_map_MapArcSeries__WEBPACK_IMPORTED_MODULE_15__["MapArcSeries"]; });

/* harmony import */ var _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./.internal/charts/map/MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiPolygonToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_16__["multiPolygonToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiLineToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_16__["multiLineToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiPointToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_16__["multiPointToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_16__["pointToGeo"]; });

/* harmony import */ var _internal_charts_map_ZoomControl__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./.internal/charts/map/ZoomControl */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomControl", function() { return _internal_charts_map_ZoomControl__WEBPACK_IMPORTED_MODULE_17__["ZoomControl"]; });

/* harmony import */ var _internal_charts_map_SmallMap__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./.internal/charts/map/SmallMap */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SmallMap", function() { return _internal_charts_map_SmallMap__WEBPACK_IMPORTED_MODULE_18__["SmallMap"]; });

/* harmony import */ var _internal_charts_map_projections_Projection__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./.internal/charts/map/projections/Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return _internal_charts_map_projections_Projection__WEBPACK_IMPORTED_MODULE_19__["Projection"]; });

/* harmony import */ var _internal_charts_map_projections__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./.internal/charts/map/projections */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "projections", function() { return _internal_charts_map_projections__WEBPACK_IMPORTED_MODULE_20__; });
/* harmony import */ var _internal_charts_map_Geo__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./.internal/charts/map/Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "geo", function() { return _internal_charts_map_Geo__WEBPACK_IMPORTED_MODULE_21__; });
/**
 * Duplicated
 */


/**
 * Maps
 */

















/**
 * Elements: projections
 */





//# sourceMappingURL=maps.js.map

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/array/is-array */ "./node_modules/core-js/library/fn/array/is-array.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/get-iterator */ "./node_modules/core-js/library/fn/get-iterator.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/json/stringify */ "./node_modules/core-js/library/fn/json/stringify.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/assign.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/assign */ "./node_modules/core-js/library/fn/object/assign.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/create.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/create.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/create */ "./node_modules/core-js/library/fn/object/create.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/define-property */ "./node_modules/core-js/library/fn/object/define-property.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/get-own-property-descriptor */ "./node_modules/core-js/library/fn/object/get-own-property-descriptor.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/get-own-property-symbols */ "./node_modules/core-js/library/fn/object/get-own-property-symbols.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/get-prototype-of */ "./node_modules/core-js/library/fn/object/get-prototype-of.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/keys.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/keys.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/keys */ "./node_modules/core-js/library/fn/object/keys.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/set-prototype-of */ "./node_modules/core-js/library/fn/object/set-prototype-of.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/promise.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/promise.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/promise */ "./node_modules/core-js/library/fn/promise.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/reflect/construct */ "./node_modules/core-js/library/fn/reflect/construct.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/set.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/set.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/set */ "./node_modules/core-js/library/fn/set.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/symbol.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/symbol.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/symbol */ "./node_modules/core-js/library/fn/symbol/index.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/symbol/iterator */ "./node_modules/core-js/library/fn/symbol/iterator.js");

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/arrayWithHoles.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/arrayWithHoles.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Array$isArray = __webpack_require__(/*! ../core-js/array/is-array */ "./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js");

function _arrayWithHoles(arr) {
  if (_Array$isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Promise = __webpack_require__(/*! ../core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    _Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new _Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/construct.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/construct.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Reflect$construct = __webpack_require__(/*! ../core-js/reflect/construct */ "./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js");

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js");

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !_Reflect$construct) return false;
  if (_Reflect$construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = _Reflect$construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/createClass.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js");

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;

    _Object$defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js");

function _defineProperty(obj, key, value) {
  if (key in obj) {
    _Object$defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$getPrototypeOf = __webpack_require__(/*! ../core-js/object/get-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js");

var _Object$setPrototypeOf = __webpack_require__(/*! ../core-js/object/set-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js");

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || _Object$getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/inherits.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$create = __webpack_require__(/*! ../core-js/object/create */ "./node_modules/@babel/runtime-corejs2/core-js/object/create.js");

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = _Object$create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$getOwnPropertyDescriptor = __webpack_require__(/*! ../core-js/object/get-own-property-descriptor */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js");

var _Object$defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js");

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            _Object$defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/iterableToArrayLimit.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/iterableToArrayLimit.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _getIterator = __webpack_require__(/*! ../core-js/get-iterator */ "./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js");

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/nonIterableRest.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/nonIterableRest.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/objectSpread.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/objectSpread.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$getOwnPropertyDescriptor = __webpack_require__(/*! ../core-js/object/get-own-property-descriptor */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js");

var _Object$getOwnPropertySymbols = __webpack_require__(/*! ../core-js/object/get-own-property-symbols */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js");

var _Object$keys = __webpack_require__(/*! ../core-js/object/keys */ "./node_modules/@babel/runtime-corejs2/core-js/object/keys.js");

var defineProperty = __webpack_require__(/*! ./defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js");

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    var ownKeys = _Object$keys(source);

    if (typeof _Object$getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {
        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      defineProperty(target, key, source[key]);
    });
  }

  return target;
}

module.exports = _objectSpread;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$setPrototypeOf = __webpack_require__(/*! ../core-js/object/set-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js");

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/slicedToArray.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/slicedToArray.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime-corejs2/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime-corejs2/helpers/iterableToArrayLimit.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime-corejs2/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/typeof.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol$iterator = __webpack_require__(/*! ../core-js/symbol/iterator */ "./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js");

var _Symbol = __webpack_require__(/*! ../core-js/symbol */ "./node_modules/@babel/runtime-corejs2/core-js/symbol.js");

function _typeof2(obj) { if (typeof _Symbol === "function" && typeof _Symbol$iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === "function" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof _Symbol === "function" && _typeof2(_Symbol$iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof _Symbol === "function" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/@babel/runtime-corejs2/regenerator/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/regenerator/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime-module.js");


/***/ }),

/***/ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js");


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

/* harmony default export */ __webpack_exports__["default"] = (index);


/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (memoize);


/***/ }),

/***/ "./node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

/* harmony default export */ __webpack_exports__["default"] = (unitlessKeys);


/***/ }),

/***/ "./node_modules/core-js/library/fn/array/is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/fn/array/is-array.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.array.is-array */ "./node_modules/core-js/library/modules/es6.array.is-array.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Array.isArray;


/***/ }),

/***/ "./node_modules/core-js/library/fn/get-iterator.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/fn/get-iterator.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.get-iterator */ "./node_modules/core-js/library/modules/core.get-iterator.js");


/***/ }),

/***/ "./node_modules/core-js/library/fn/json/stringify.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/fn/json/stringify.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js");
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/assign.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.assign */ "./node_modules/core-js/library/modules/es6.object.assign.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.assign;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/create.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/create.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.create */ "./node_modules/core-js/library/modules/es6.object.create.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/define-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/define-property.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.define-property */ "./node_modules/core-js/library/modules/es6.object.define-property.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/get-own-property-descriptor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-own-property-descriptor.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-own-property-descriptor */ "./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/get-own-property-symbols.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-own-property-symbols.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.symbol */ "./node_modules/core-js/library/modules/es6.symbol.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/get-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-prototype-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-prototype-of */ "./node_modules/core-js/library/modules/es6.object.get-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.getPrototypeOf;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.keys */ "./node_modules/core-js/library/modules/es6.object.keys.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.keys;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/set-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/set-prototype-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.set-prototype-of */ "./node_modules/core-js/library/modules/es6.object.set-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf;


/***/ }),

/***/ "./node_modules/core-js/library/fn/promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/library/fn/promise.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.promise */ "./node_modules/core-js/library/modules/es6.promise.js");
__webpack_require__(/*! ../modules/es7.promise.finally */ "./node_modules/core-js/library/modules/es7.promise.finally.js");
__webpack_require__(/*! ../modules/es7.promise.try */ "./node_modules/core-js/library/modules/es7.promise.try.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Promise;


/***/ }),

/***/ "./node_modules/core-js/library/fn/reflect/construct.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/fn/reflect/construct.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.reflect.construct */ "./node_modules/core-js/library/modules/es6.reflect.construct.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Reflect.construct;


/***/ }),

/***/ "./node_modules/core-js/library/fn/set.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/library/fn/set.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.set */ "./node_modules/core-js/library/modules/es6.set.js");
__webpack_require__(/*! ../modules/es7.set.to-json */ "./node_modules/core-js/library/modules/es7.set.to-json.js");
__webpack_require__(/*! ../modules/es7.set.of */ "./node_modules/core-js/library/modules/es7.set.of.js");
__webpack_require__(/*! ../modules/es7.set.from */ "./node_modules/core-js/library/modules/es7.set.from.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Set;


/***/ }),

/***/ "./node_modules/core-js/library/fn/symbol/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/fn/symbol/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.symbol */ "./node_modules/core-js/library/modules/es6.symbol.js");
__webpack_require__(/*! ../../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "./node_modules/core-js/library/modules/es7.symbol.async-iterator.js");
__webpack_require__(/*! ../../modules/es7.symbol.observable */ "./node_modules/core-js/library/modules/es7.symbol.observable.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Symbol;


/***/ }),

/***/ "./node_modules/core-js/library/fn/symbol/iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/fn/symbol/iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js").f('iterator');


/***/ }),

/***/ "./node_modules/core-js/library/modules/_a-function.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-instance.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-instance.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-from-iterable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-from-iterable.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-includes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-includes.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-methods.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-methods.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/library/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-species-constructor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-constructor.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-species-create.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-create.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/library/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_bind.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_bind.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/library/modules/_invoke.js");
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_classof.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_classof.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_cof.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_cof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection-strong.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-strong.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var $iterDefine = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var fastKey = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js").fastKey;
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection-to-json.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-to-json.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var from = __webpack_require__(/*! ./_array-from-iterable */ "./node_modules/core-js/library/modules/_array-from-iterable.js");
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var each = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/library/modules/_array-methods.js")(0);
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    C = wrapper(function (target, iterable) {
      anInstance(target, C, NAME, '_c');
      target._c = new Base();
      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
    });
    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
        anInstance(this, C, KEY);
        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
        var result = this._c[KEY](a === 0 ? 0 : a, b);
        return IS_ADDER ? this : result;
      });
    });
    IS_WEAK || dP(C.prototype, 'size', {
      get: function () {
        return this._c.size;
      }
    });
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F, O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_core.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.3' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ctx.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_defined.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_defined.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_descriptors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_dom-create.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-keys.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-keys.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_export.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_fails.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_for-of.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_for-of.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/library/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/library/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/library/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_global.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_has.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_html.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_html.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_invoke.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_invoke.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iobject.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iobject.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array-iter.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array-iter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-call.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-call.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-create.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-create.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-define.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-define.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-detect.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-detect.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-step.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-step.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iterators.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iterators.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_library.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_library.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_meta.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_meta.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_microtask.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_microtask.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/core-js/library/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_new-promise-capability.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_new-promise-capability.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-assign.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-assign.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-create.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dp.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dps.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dps.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopd.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopd.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopn-ext.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopn-ext.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/library/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopn.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopn.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gops.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gops.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gpo.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gpo.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys-internal.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-pie.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-pie.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-sap.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-sap.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_perform.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_perform.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_promise-resolve.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_promise-resolve.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_property-desc.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine-all.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine-all.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-collection-from.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-from.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-collection-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-proto.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-proto.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-species.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-species.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared-key.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared-key.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_species-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_species-constructor.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_string-at.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_string-at.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_task.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_task.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/library/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-absolute-index.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-integer.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-integer.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-iobject.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-iobject.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-length.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_uid.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_uid.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_user-agent.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/core-js/library/modules/_validate-collection.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_validate-collection.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks-define.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks-define.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks-ext.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks-ext.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js");


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/core.get-iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var get = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/library/modules/core.get-iterator-method.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.array.is-array.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.is-array.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.S, 'Array', { isArray: __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.array.iterator.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.assign.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/library/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.create.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.create.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.define-property.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var $getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js").f;

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.get-prototype-of.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.get-prototype-of.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var $getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.keys.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.keys.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.set-prototype-of.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/library/modules/_set-proto.js").set });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.to-string.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.promise.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.promise.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/library/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/library/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/library/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/library/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.reflect.construct.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.reflect.construct.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
var bind = __webpack_require__(/*! ./_bind */ "./node_modules/core-js/library/modules/_bind.js");
var rConstruct = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.set.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.set.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/library/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js");
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/library/modules/_collection.js")(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.string.iterator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.symbol.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.symbol.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/core-js/library/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/library/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/library/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js").f = $propertyIsEnumerable;
  __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.finally.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.finally.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.try.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.try.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.set.from.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.set.from.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
__webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/library/modules/_set-collection-from.js")('Set');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.set.of.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.set.of.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
__webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/library/modules/_set-collection-of.js")('Set');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.set.to-json.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.set.to-json.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(/*! ./_collection-to-json */ "./node_modules/core-js/library/modules/_collection-to-json.js")('Set') });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.symbol.async-iterator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.symbol.async-iterator.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.symbol.observable.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.symbol.observable.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js")('observable');


/***/ }),

/***/ "./node_modules/core-js/library/modules/web.dom.iterable.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "./node_modules/css-element-queries/src/ResizeSensor.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-element-queries/src/ResizeSensor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;

/**
 * Copyright Marc J. Schmidt. See the LICENSE file at the top-level
 * directory of this distribution and at
 * https://github.com/marcj/css-element-queries/blob/master/LICENSE.
 */
(function (root, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(typeof window !== 'undefined' ? window : this, function () {

    // Make sure it does not throw in a SSR (Server Side Rendering) situation
    if (typeof window === "undefined") {
        return null;
    }
    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.
    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and
    // would generate too many unnecessary events.
    var requestAnimationFrame = window.requestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        function (fn) {
            return window.setTimeout(fn, 20);
        };

    /**
     * Iterate over each of the provided element(s).
     *
     * @param {HTMLElement|HTMLElement[]} elements
     * @param {Function}                  callback
     */
    function forEachElement(elements, callback){
        var elementsType = Object.prototype.toString.call(elements);
        var isCollectionTyped = ('[object Array]' === elementsType
            || ('[object NodeList]' === elementsType)
            || ('[object HTMLCollection]' === elementsType)
            || ('[object Object]' === elementsType)
            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery
            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools
        );
        var i = 0, j = elements.length;
        if (isCollectionTyped) {
            for (; i < j; i++) {
                callback(elements[i]);
            }
        } else {
            callback(elements);
        }
    }

    /**
    * Get element size
    * @param {HTMLElement} element
    * @returns {Object} {width, height}
    */
    function getElementSize(element) {
        if (!element.getBoundingClientRect) {
            return {
                width: element.offsetWidth,
                height: element.offsetHeight
            }
        }

        var rect = element.getBoundingClientRect();
        return {
            width: Math.round(rect.width),
            height: Math.round(rect.height)
        }
    }

    /**
     * Class for dimension change detection.
     *
     * @param {Element|Element[]|Elements|jQuery} element
     * @param {Function} callback
     *
     * @constructor
     */
    var ResizeSensor = function(element, callback) {
        /**
         *
         * @constructor
         */
        function EventQueue() {
            var q = [];
            this.add = function(ev) {
                q.push(ev);
            };

            var i, j;
            this.call = function(sizeInfo) {
                for (i = 0, j = q.length; i < j; i++) {
                    q[i].call(this, sizeInfo);
                }
            };

            this.remove = function(ev) {
                var newQueue = [];
                for(i = 0, j = q.length; i < j; i++) {
                    if(q[i] !== ev) newQueue.push(q[i]);
                }
                q = newQueue;
            };

            this.length = function() {
                return q.length;
            }
        }

        /**
         *
         * @param {HTMLElement} element
         * @param {Function}    resized
         */
        function attachResizeEvent(element, resized) {
            if (!element) return;
            if (element.resizedAttached) {
                element.resizedAttached.add(resized);
                return;
            }

            element.resizedAttached = new EventQueue();
            element.resizedAttached.add(resized);

            element.resizeSensor = document.createElement('div');
            element.resizeSensor.dir = 'ltr';
            element.resizeSensor.className = 'resize-sensor';
            var style = 'pointer-events: none; position: absolute; left: 0px; top: 0px; right: 0; bottom: 0; ' +
                'overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;';
            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';

            element.resizeSensor.style.cssText = style;
            element.resizeSensor.innerHTML =
                '<div class="resize-sensor-expand" style="' + style + '">' +
                    '<div style="' + styleChild + '"></div>' +
                '</div>' +
                '<div class="resize-sensor-shrink" style="' + style + '">' +
                    '<div style="' + styleChild + ' width: 200%; height: 200%"></div>' +
                '</div>';
            element.appendChild(element.resizeSensor);

            var computedStyle = window.getComputedStyle(element);
            var position = computedStyle ? computedStyle.getPropertyValue('position') : null;
            if ('absolute' !== position && 'relative' !== position && 'fixed' !== position) {
                element.style.position = 'relative';
            }

            var expand = element.resizeSensor.childNodes[0];
            var expandChild = expand.childNodes[0];
            var shrink = element.resizeSensor.childNodes[1];
            var dirty, rafId;
            var size = getElementSize(element);
            var lastWidth = size.width;
            var lastHeight = size.height;
            var initialHiddenCheck = true;
            var lastAnimationFrame = 0;

            var resetExpandShrink = function () {
                var width = element.offsetWidth;
                var height = element.offsetHeight;

                expandChild.style.width = (width + 10) + 'px';
                expandChild.style.height = (height + 10) + 'px';

                expand.scrollLeft = width + 10;
                expand.scrollTop = height + 10;

                shrink.scrollLeft = width + 10;
                shrink.scrollTop = height + 10;
            };

            var reset = function() {
                // Check if element is hidden
                if (initialHiddenCheck) {
                    var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;
                    if (invisible) {
                        // Check in next frame
                        if (!lastAnimationFrame){
                            lastAnimationFrame = requestAnimationFrame(function(){
                                lastAnimationFrame = 0;

                                reset();
                            });
                        }

                        return;
                    } else {
                        // Stop checking
                        initialHiddenCheck = false;
                    }
                }

                resetExpandShrink();
            };
            element.resizeSensor.resetSensor = reset;

            var onResized = function() {
                rafId = 0;

                if (!dirty) return;

                lastWidth = size.width;
                lastHeight = size.height;

                if (element.resizedAttached) {
                    element.resizedAttached.call(size);
                }
            };

            var onScroll = function() {
                size = getElementSize(element);
                dirty = size.width !== lastWidth || size.height !== lastHeight;

                if (dirty && !rafId) {
                    rafId = requestAnimationFrame(onResized);
                }

                reset();
            };

            var addEvent = function(el, name, cb) {
                if (el.attachEvent) {
                    el.attachEvent('on' + name, cb);
                } else {
                    el.addEventListener(name, cb);
                }
            };

            addEvent(expand, 'scroll', onScroll);
            addEvent(shrink, 'scroll', onScroll);

            // Fix for custom Elements
            requestAnimationFrame(reset);
        }

        forEachElement(element, function(elem){
            attachResizeEvent(elem, callback);
        });

        this.detach = function(ev) {
            ResizeSensor.detach(element, ev);
        };

        this.reset = function() {
            element.resizeSensor.resetSensor();
        };
    };

    ResizeSensor.reset = function(element) {
        forEachElement(element, function(elem){
            elem.resizeSensor.resetSensor();
        });
    };

    ResizeSensor.detach = function(element, ev) {
        forEachElement(element, function(elem){
            if (!elem) return;
            if(elem.resizedAttached && typeof ev === "function"){
                elem.resizedAttached.remove(ev);
                if(elem.resizedAttached.length()) return;
            }
            if (elem.resizeSensor) {
                if (elem.contains(elem.resizeSensor)) {
                    elem.removeChild(elem.resizeSensor);
                }
                delete elem.resizeSensor;
                delete elem.resizedAttached;
            }
        });
    };

    if (typeof MutationObserver !== "undefined") {
        var observer = new MutationObserver(function (mutations) {
            for (var i in mutations) {
                if (mutations.hasOwnProperty(i)) {
                    var items = mutations[i].addedNodes;
                    for (var j = 0; j < items.length; j++) {
                        if (items[j].resizeSensor) {
                            ResizeSensor.reset(items[j]);
                        }
                    }
                }
            }
        });

        document.addEventListener("DOMContentLoaded", function (event) {
            observer.observe(document.body, {
                childList: true,
                subtree: true,
            });
        });
    }

    return ResizeSensor;

}));


/***/ }),

/***/ "./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
			return false;
		}
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");

module.exports = Function.prototype.bind || implementation;


/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint complexity: [2, 17], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};


/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try { // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "./node_modules/memoize-one/dist/memoize-one.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/memoize-one/dist/memoize-one.esm.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var simpleIsEqual = function simpleIsEqual(a, b) {
  return a === b;
};

function index (resultFn, isEqual) {
  if (isEqual === void 0) {
    isEqual = simpleIsEqual;
  }

  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;

  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {
    return isEqual(newArg, lastArgs[index]);
  };

  var result = function result() {
    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {
      newArgs[_key] = arguments[_key];
    }

    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {
      return lastResult;
    }

    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  };

  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (index);


/***/ }),

/***/ "./node_modules/next/dist/lib/EventEmitter.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/lib/EventEmitter.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _set = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/core-js/set */ "./node_modules/@babel/runtime-corejs2/core-js/set.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js"));

var EventEmitter =
/*#__PURE__*/
function () {
  function EventEmitter() {
    (0, _classCallCheck2.default)(this, EventEmitter);
    (0, _defineProperty2.default)(this, "listeners", {});
  }

  (0, _createClass2.default)(EventEmitter, [{
    key: "on",
    value: function on(event, cb) {
      if (!this.listeners[event]) {
        this.listeners[event] = new _set.default();
      }

      if (this.listeners[event].has(cb)) {
        throw new Error("The listener already exising in event: ".concat(event));
      }

      this.listeners[event].add(cb);
      return this;
    }
  }, {
    key: "emit",
    value: function emit(event) {
      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        data[_key - 1] = arguments[_key];
      }

      var listeners = this.listeners[event];
      var hasListeners = listeners && listeners.size;

      if (!hasListeners) {
        return false;
      }

      listeners.forEach(function (cb) {
        return cb.apply(void 0, data);
      }); // eslint-disable-line standard/no-callback-literal

      return true;
    }
  }, {
    key: "off",
    value: function off(event, cb) {
      this.listeners[event].delete(cb);
      return this;
    }
  }]);
  return EventEmitter;
}();

exports.default = EventEmitter;

/***/ }),

/***/ "./node_modules/next/dist/lib/link.js":
/*!********************************************!*\
  !*** ./node_modules/next/dist/lib/link.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _stringify = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/core-js/json/stringify */ "./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"));

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/typeof */ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js"));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/assertThisInitialized */ "./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js"));

var _url = __webpack_require__(/*! url */ "./node_modules/url/url.js");

var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _router = _interopRequireWildcard(__webpack_require__(/*! ./router */ "./node_modules/next/dist/lib/router/index.js"));

var _utils = __webpack_require__(/*! ./utils */ "./node_modules/next/dist/lib/utils.js");

/* global __NEXT_DATA__ */
function isLocal(href) {
  var url = (0, _url.parse)(href, false, true);
  var origin = (0, _url.parse)((0, _utils.getLocationOrigin)(), false, true);
  return !url.host || url.protocol === origin.protocol && url.host === origin.host;
}

function memoizedFormatUrl(formatUrl) {
  var lastHref = null;
  var lastAs = null;
  var lastResult = null;
  return function (href, as) {
    if (href === lastHref && as === lastAs) {
      return lastResult;
    }

    var result = formatUrl(href, as);
    lastHref = href;
    lastAs = as;
    lastResult = result;
    return result;
  };
}

var Link =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Link, _Component);

  function Link() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Link);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Link)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "formatUrls", memoizedFormatUrl(function (href, asHref) {
      return {
        href: href && (0, _typeof2.default)(href) === 'object' ? (0, _url.format)(href) : href,
        as: asHref && (0, _typeof2.default)(asHref) === 'object' ? (0, _url.format)(asHref) : asHref
      };
    }));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "linkClicked", function (e) {
      var _e$currentTarget = e.currentTarget,
          nodeName = _e$currentTarget.nodeName,
          target = _e$currentTarget.target;

      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {
        // ignore click for new tab / new window behavior
        return;
      }

      var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),
          href = _this$formatUrls.href,
          as = _this$formatUrls.as;

      if (!isLocal(href)) {
        // ignore click if it's outside our scope
        return;
      }

      var pathname = window.location.pathname;
      href = (0, _url.resolve)(pathname, href);
      as = as ? (0, _url.resolve)(pathname, as) : href;
      e.preventDefault(); //  avoid scroll for urls with anchor refs

      var scroll = _this.props.scroll;

      if (scroll == null) {
        scroll = as.indexOf('#') < 0;
      } // replace state instead of push if prop is present


      var replace = _this.props.replace;
      var changeMethod = replace ? 'replace' : 'push'; // straight up redirect

      _router.default[changeMethod](href, as, {
        shallow: _this.props.shallow
      }).then(function (success) {
        if (!success) return;

        if (scroll) {
          window.scrollTo(0, 0);
          document.body.focus();
        }
      }).catch(function (err) {
        if (_this.props.onError) _this.props.onError(err);
      });
    });
    return _this;
  }

  (0, _createClass2.default)(Link, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.prefetch();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if ((0, _stringify.default)(this.props.href) !== (0, _stringify.default)(prevProps.href)) {
        this.prefetch();
      }
    } // The function is memoized so that no extra lifecycles are needed
    // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html

  }, {
    key: "prefetch",
    value: function prefetch() {
      if (!this.props.prefetch) return;
      if (typeof window === 'undefined') return; // Prefetch the JSON page if asked (only in the client)

      var pathname = window.location.pathname;

      var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),
          parsedHref = _this$formatUrls2.href;

      var href = (0, _url.resolve)(pathname, parsedHref);

      _router.default.prefetch(href);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var children = this.props.children;

      var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),
          href = _this$formatUrls3.href,
          as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag


      if (typeof children === 'string') {
        children = _react.default.createElement("a", null, children);
      } // This will return the first child, if multiple are provided it will throw an error


      var child = _react.Children.only(children);

      var props = {
        onClick: function onClick(e) {
          if (child.props && typeof child.props.onClick === 'function') {
            child.props.onClick(e);
          }

          if (!e.defaultPrevented) {
            _this2.linkClicked(e);
          }
        } // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
        // defined, we specify the current 'href', so that repetition is not needed by the user

      };

      if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {
        props.href = as || href;
      } // Add the ending slash to the paths. So, we can serve the
      // "<page>/index.html" directly.


      if (props.href && typeof __NEXT_DATA__ !== 'undefined' && __NEXT_DATA__.nextExport) {
        props.href = (0, _router._rewriteUrlForNextExport)(props.href);
      }

      return _react.default.cloneElement(child, props);
    }
  }]);
  return Link;
}(_react.Component);

if (true) {
  var warn = (0, _utils.execOnce)(console.error); // This module gets removed by webpack.IgnorePlugin

  var exact = __webpack_require__(/*! prop-types-exact */ "./node_modules/prop-types-exact/build/index.js");

  Link.propTypes = exact({
    href: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]).isRequired,
    as: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),
    prefetch: _propTypes.default.bool,
    replace: _propTypes.default.bool,
    shallow: _propTypes.default.bool,
    passHref: _propTypes.default.bool,
    scroll: _propTypes.default.bool,
    children: _propTypes.default.oneOfType([_propTypes.default.element, function (props, propName) {
      var value = props[propName];

      if (typeof value === 'string') {
        warn("Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>");
      }

      return null;
    }]).isRequired
  });
}

var _default = Link;
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/lib/p-queue.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/lib/p-queue.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _promise = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js"));

var _assign = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/core-js/object/assign */ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js"));

// based on https://github.com/sindresorhus/p-queue (MIT)
// modified for browser support
var Queue =
/*#__PURE__*/
function () {
  function Queue() {
    (0, _classCallCheck2.default)(this, Queue);
    this._queue = [];
  }

  (0, _createClass2.default)(Queue, [{
    key: "enqueue",
    value: function enqueue(run) {
      this._queue.push(run);
    }
  }, {
    key: "dequeue",
    value: function dequeue() {
      return this._queue.shift();
    }
  }, {
    key: "size",
    get: function get() {
      return this._queue.length;
    }
  }]);
  return Queue;
}();

var PQueue =
/*#__PURE__*/
function () {
  function PQueue(opts) {
    (0, _classCallCheck2.default)(this, PQueue);
    opts = (0, _assign.default)({
      concurrency: Infinity,
      queueClass: Queue
    }, opts);

    if (opts.concurrency < 1) {
      throw new TypeError('Expected `concurrency` to be a number from 1 and up');
    }

    this.queue = new opts.queueClass(); // eslint-disable-line new-cap

    this._pendingCount = 0;
    this._concurrency = opts.concurrency;

    this._resolveEmpty = function () {};
  }

  (0, _createClass2.default)(PQueue, [{
    key: "_next",
    value: function _next() {
      this._pendingCount--;

      if (this.queue.size > 0) {
        this.queue.dequeue()();
      } else {
        this._resolveEmpty();
      }
    }
  }, {
    key: "add",
    value: function add(fn, opts) {
      var _this = this;

      return new _promise.default(function (resolve, reject) {
        var run = function run() {
          _this._pendingCount++;
          fn().then(function (val) {
            resolve(val);

            _this._next();
          }, function (err) {
            reject(err);

            _this._next();
          });
        };

        if (_this._pendingCount < _this._concurrency) {
          run();
        } else {
          _this.queue.enqueue(run, opts);
        }
      });
    }
  }, {
    key: "onEmpty",
    value: function onEmpty() {
      var _this2 = this;

      return new _promise.default(function (resolve) {
        var existingResolve = _this2._resolveEmpty;

        _this2._resolveEmpty = function () {
          existingResolve();
          resolve();
        };
      });
    }
  }, {
    key: "size",
    get: function get() {
      return this.queue.size;
    }
  }, {
    key: "pending",
    get: function get() {
      return this._pendingCount;
    }
  }]);
  return PQueue;
}();

exports.default = PQueue;

/***/ }),

/***/ "./node_modules/next/dist/lib/router/index.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/lib/router/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._rewriteUrlForNextExport = _rewriteUrlForNextExport;
exports.makePublicRouterInstance = makePublicRouterInstance;
Object.defineProperty(exports, "withRouter", {
  enumerable: true,
  get: function get() {
    return _withRouter.default;
  }
});
exports.Router = exports.createRouter = exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/objectSpread */ "./node_modules/@babel/runtime-corejs2/helpers/objectSpread.js"));

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/typeof */ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js"));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/slicedToArray */ "./node_modules/@babel/runtime-corejs2/helpers/slicedToArray.js"));

var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/construct */ "./node_modules/@babel/runtime-corejs2/helpers/construct.js"));

var _defineProperty = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js"));

var _router = _interopRequireDefault(__webpack_require__(/*! ./router */ "./node_modules/next/dist/lib/router/router.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/lib/utils.js");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/lib/router/with-router.js"));

/* global window */
var SingletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready: function ready(cb) {
    if (this.router) return cb();

    if (typeof window !== 'undefined') {
      this.readyCallbacks.push(cb);
    }
  }
}; // Create public properties and methods of the router in the SingletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath'];
var propertyFields = ['components'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(SingletonRouter, 'events', {
  get: function get() {
    return _router.default.events;
  }
});
propertyFields.concat(urlPropertyFields).forEach(function (field) {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  (0, _defineProperty.default)(SingletonRouter, field, {
    get: function get() {
      throwIfNoRouter();
      return SingletonRouter.router[field];
    }
  });
});
coreMethodFields.forEach(function (field) {
  SingletonRouter[field] = function () {
    var _SingletonRouter$rout;

    throwIfNoRouter();
    return (_SingletonRouter$rout = SingletonRouter.router)[field].apply(_SingletonRouter$rout, arguments);
  };
});
routerEvents.forEach(function (event) {
  SingletonRouter.ready(function () {
    _router.default.events.on(event, function () {
      var eventField = "on".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));

      if (SingletonRouter[eventField]) {
        try {
          SingletonRouter[eventField].apply(SingletonRouter, arguments);
        } catch (err) {
          console.error("Error when running the Router event: ".concat(eventField));
          console.error("".concat(err.message, "\n").concat(err.stack));
        }
      }
    });
  });
});
var warnAboutRouterOnAppUpdated = (0, _utils.execOnce)(function () {
  console.warn("Router.onAppUpdated is removed - visit https://err.sh/zeit/next.js/no-on-app-updated-hook for more information.");
});
Object.defineProperty(SingletonRouter, 'onAppUpdated', {
  get: function get() {
    return null;
  },
  set: function set() {
    warnAboutRouterOnAppUpdated();
    return null;
  }
});

function throwIfNoRouter() {
  if (!SingletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }
} // Export the SingletonRouter and this is the public API.


var _default = SingletonRouter; // Reexport the withRoute HOC

exports.default = _default;

// INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.
var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  SingletonRouter.router = (0, _construct2.default)(_router.default, args);
  SingletonRouter.readyCallbacks.forEach(function (cb) {
    return cb();
  });
  SingletonRouter.readyCallbacks = [];
  return SingletonRouter.router;
}; // Export the actual Router class, which is usually used inside the server


exports.createRouter = createRouter;
var Router = _router.default;
exports.Router = Router;

function _rewriteUrlForNextExport(url) {
  var _url$split = url.split('#'),
      _url$split2 = (0, _slicedToArray2.default)(_url$split, 2),
      hash = _url$split2[1];

  url = url.replace(/#.*/, '');

  var _url$split3 = url.split('?'),
      _url$split4 = (0, _slicedToArray2.default)(_url$split3, 2),
      path = _url$split4[0],
      qs = _url$split4[1];

  path = path.replace(/\/$/, '');
  var newPath = path; // Append a trailing slash if this path does not have an extension

  if (!/\.[^/]+\/?$/.test(path)) {
    newPath = "".concat(path, "/");
  }

  if (qs) {
    newPath = "".concat(newPath, "?").concat(qs);
  }

  if (hash) {
    newPath = "".concat(newPath, "#").concat(hash);
  }

  return newPath;
} // This function is used to create the `withRouter` router instance


function makePublicRouterInstance(router) {
  var instance = {};

  for (var _i = 0; _i < urlPropertyFields.length; _i++) {
    var property = urlPropertyFields[_i];

    if ((0, _typeof2.default)(router[property]) === 'object') {
      instance[property] = (0, _objectSpread2.default)({}, router[property]); // makes sure query is not stateful

      continue;
    }

    instance[property] = router[property];
  } // Events is a static property on the router, the router doesn't have to be initialized to use it


  instance.events = _router.default.events;
  propertyFields.forEach(function (field) {
    // Here we need to use Object.defineProperty because, we need to return
    // the property assigned to the actual router
    // The value might get changed as we change routes and this is the
    // proper way to access it
    (0, _defineProperty.default)(instance, field, {
      get: function get() {
        return router[field];
      }
    });
  });
  coreMethodFields.forEach(function (field) {
    instance[field] = function () {
      return router[field].apply(router, arguments);
    };
  });
  return instance;
}

/***/ }),

/***/ "./node_modules/next/dist/lib/router/router.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/lib/router/router.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/slicedToArray */ "./node_modules/@babel/runtime-corejs2/helpers/slicedToArray.js"));

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/typeof */ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js"));

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/asyncToGenerator */ "./node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js"));

var _objectSpread2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/objectSpread */ "./node_modules/@babel/runtime-corejs2/helpers/objectSpread.js"));

var _set = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/core-js/set */ "./node_modules/@babel/runtime-corejs2/core-js/set.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js"));

var _url2 = __webpack_require__(/*! url */ "./node_modules/url/url.js");

var _EventEmitter = _interopRequireDefault(__webpack_require__(/*! ../EventEmitter */ "./node_modules/next/dist/lib/EventEmitter.js"));

var _shallowEquals = _interopRequireDefault(__webpack_require__(/*! ../shallow-equals */ "./node_modules/next/dist/lib/shallow-equals.js"));

var _pQueue = _interopRequireDefault(__webpack_require__(/*! ../p-queue */ "./node_modules/next/dist/lib/p-queue.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/lib/utils.js");

var _ = __webpack_require__(/*! ./ */ "./node_modules/next/dist/lib/router/index.js");

/* global __NEXT_DATA__ */
var Router =
/*#__PURE__*/
function () {
  function Router(_pathname, _query, _as2) {
    var _this = this;

    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        initialProps = _ref.initialProps,
        pageLoader = _ref.pageLoader,
        App = _ref.App,
        Component = _ref.Component,
        ErrorComponent = _ref.ErrorComponent,
        err = _ref.err;

    (0, _classCallCheck2.default)(this, Router);
    (0, _defineProperty2.default)(this, "onPopState", function (e) {
      if (!e.state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        var pathname = _this.pathname,
            query = _this.query;

        _this.changeState('replaceState', (0, _url2.format)({
          pathname: pathname,
          query: query
        }), (0, _utils.getURL)());

        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (!_this._beforePopState(e.state)) {
        return;
      }

      var _e$state = e.state,
          url = _e$state.url,
          as = _e$state.as,
          options = _e$state.options;

      if (true) {
        if (typeof url === 'undefined' || typeof as === 'undefined') {
          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');
        }
      }

      _this.replace(url, as, options);
    });
    // represents the current component key
    this.route = toRoute(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (Component !== ErrorComponent) {
      this.components[this.route] = {
        Component: Component,
        props: initialProps,
        err: err
      };
    }

    this.components['/_app'] = {
      Component: App // Backwards compat for Router.router.events
      // TODO: Should be remove the following major version as it was never documented

    };
    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.prefetchQueue = new _pQueue.default({
      concurrency: 2
    });
    this.ErrorComponent = ErrorComponent;
    this.pathname = _pathname;
    this.query = _query;
    this.asPath = _as2;
    this.subscriptions = new _set.default();
    this.componentLoadCancel = null;

    this._beforePopState = function () {
      return true;
    };

    if (typeof window !== 'undefined') {
      // in order for `e.state` to work on the `onpopstate` event
      // we have to register the initial route upon initialization
      this.changeState('replaceState', (0, _url2.format)({
        pathname: _pathname,
        query: _query
      }), (0, _utils.getURL)());
      window.addEventListener('popstate', this.onPopState);
    }
  }

  (0, _createClass2.default)(Router, [{
    key: "update",
    value: function update(route, Component) {
      var data = this.components[route];

      if (!data) {
        throw new Error("Cannot update unavailable route: ".concat(route));
      }

      var newData = (0, _objectSpread2.default)({}, data, {
        Component: Component
      });
      this.components[route] = newData; // pages/_app.js updated

      if (route === '/_app') {
        this.notify(this.components[this.route]);
        return;
      }

      if (route === this.route) {
        this.notify(newData);
      }
    }
  }, {
    key: "reload",
    value: function () {
      var _reload = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee(route) {
        var pathname, query, url, as, routeInfo, error;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                delete this.components[route];
                this.pageLoader.clearCache(route);

                if (!(route !== this.route)) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return");

              case 4:
                pathname = this.pathname, query = this.query;
                url = window.location.href; // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.

                as = window.location.pathname + window.location.search + window.location.hash;
                Router.events.emit('routeChangeStart', url);
                _context.next = 10;
                return this.getRouteInfo(route, pathname, query, as);

              case 10:
                routeInfo = _context.sent;
                error = routeInfo.error;

                if (!(error && error.cancelled)) {
                  _context.next = 14;
                  break;
                }

                return _context.abrupt("return");

              case 14:
                this.notify(routeInfo);

                if (!error) {
                  _context.next = 18;
                  break;
                }

                Router.events.emit('routeChangeError', error, url);
                throw error;

              case 18:
                Router.events.emit('routeChangeComplete', url);

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      return function reload(_x) {
        return _reload.apply(this, arguments);
      };
    }()
  }, {
    key: "back",
    value: function back() {
      window.history.back();
    }
  }, {
    key: "push",
    value: function push(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.change('pushState', url, as, options);
    }
  }, {
    key: "replace",
    value: function replace(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.change('replaceState', url, as, options);
    }
  }, {
    key: "change",
    value: function () {
      var _change = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee2(method, _url, _as, options) {
        var url, as, _parse, asPathname, asQuery, _parse2, pathname, query, route, _options$shallow, shallow, routeInfo, _routeInfo, error, hash;

        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                // If url and as provided as an object representation,
                // we'll format them into the string version here.
                url = (0, _typeof2.default)(_url) === 'object' ? (0, _url2.format)(_url) : _url;
                as = (0, _typeof2.default)(_as) === 'object' ? (0, _url2.format)(_as) : _as; // Add the ending slash to the paths. So, we can serve the
                // "<page>/index.html" directly for the SSR page.

                if (__NEXT_DATA__.nextExport) {
                  as = (0, _._rewriteUrlForNextExport)(as);
                }

                this.abortComponentLoad(as); // If the url change is only related to a hash change
                // We should not proceed. We should only change the state.

                if (!this.onlyAHashChange(as)) {
                  _context2.next = 10;
                  break;
                }

                Router.events.emit('hashChangeStart', as);
                this.changeState(method, url, as);
                this.scrollToHash(as);
                Router.events.emit('hashChangeComplete', as);
                return _context2.abrupt("return", true);

              case 10:
                _parse = (0, _url2.parse)(as, true), asPathname = _parse.pathname, asQuery = _parse.query;
                _parse2 = (0, _url2.parse)(url, true), pathname = _parse2.pathname, query = _parse2.query; // If asked to change the current URL we should reload the current page
                // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                // We also need to set the method = replaceState always
                // as this should not go into the history (That's how browsers work)

                if (!this.urlIsNew(asPathname, asQuery)) {
                  method = 'replaceState';
                }

                route = toRoute(pathname);
                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;
                routeInfo = null;
                Router.events.emit('routeChangeStart', as); // If shallow === false and other conditions met, we reuse the
                // existing routeInfo for this route.
                // Because of this, getInitialProps would not run.

                if (!(shallow && this.isShallowRoutingPossible(route))) {
                  _context2.next = 21;
                  break;
                }

                routeInfo = this.components[route];
                _context2.next = 24;
                break;

              case 21:
                _context2.next = 23;
                return this.getRouteInfo(route, pathname, query, as);

              case 23:
                routeInfo = _context2.sent;

              case 24:
                _routeInfo = routeInfo, error = _routeInfo.error;

                if (!(error && error.cancelled)) {
                  _context2.next = 27;
                  break;
                }

                return _context2.abrupt("return", false);

              case 27:
                Router.events.emit('beforeHistoryChange', as);
                this.changeState(method, url, as, options);
                hash = window.location.hash.substring(1);
                this.set(route, pathname, query, as, (0, _objectSpread2.default)({}, routeInfo, {
                  hash: hash
                }));

                if (!error) {
                  _context2.next = 34;
                  break;
                }

                Router.events.emit('routeChangeError', error, as);
                throw error;

              case 34:
                Router.events.emit('routeChangeComplete', as);
                return _context2.abrupt("return", true);

              case 36:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      return function change(_x2, _x3, _x4, _x5) {
        return _change.apply(this, arguments);
      };
    }()
  }, {
    key: "changeState",
    value: function changeState(method, url, as) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (true) {
        if (typeof window.history === 'undefined') {
          console.error("Warning: window.history is not available.");
          return;
        }

        if (typeof window.history[method] === 'undefined') {
          console.error("Warning: window.history.".concat(method, " is not available"));
          return;
        }
      }

      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
        window.history[method]({
          url: url,
          as: as,
          options: options
        }, null, as);
      }
    }
  }, {
    key: "getRouteInfo",
    value: function () {
      var _getRouteInfo = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee3(route, pathname, query, as) {
        var routeInfo, _routeInfo2, Component, ctx, _Component, _ctx;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                routeInfo = null;
                _context3.prev = 1;
                routeInfo = this.components[route];

                if (routeInfo) {
                  _context3.next = 8;
                  break;
                }

                _context3.next = 6;
                return this.fetchComponent(route, as);

              case 6:
                _context3.t0 = _context3.sent;
                routeInfo = {
                  Component: _context3.t0
                };

              case 8:
                _routeInfo2 = routeInfo, Component = _routeInfo2.Component;

                if (!(typeof Component !== 'function')) {
                  _context3.next = 11;
                  break;
                }

                throw new Error("The default export is not a React Component in page: \"".concat(pathname, "\""));

              case 11:
                ctx = {
                  pathname: pathname,
                  query: query,
                  asPath: as
                };
                _context3.next = 14;
                return this.getInitialProps(Component, ctx);

              case 14:
                routeInfo.props = _context3.sent;
                this.components[route] = routeInfo;
                _context3.next = 40;
                break;

              case 18:
                _context3.prev = 18;
                _context3.t1 = _context3["catch"](1);

                if (!(_context3.t1.code === 'PAGE_LOAD_ERROR')) {
                  _context3.next = 24;
                  break;
                }

                // If we can't load the page it could be one of following reasons
                //  1. Page doesn't exists
                //  2. Page does exist in a different zone
                //  3. Internal error while loading the page
                // So, doing a hard reload is the proper way to deal with this.
                window.location.href = as; // Changing the URL doesn't block executing the current code path.
                // So, we need to mark it as a cancelled error and stop the routing logic.

                _context3.t1.cancelled = true;
                return _context3.abrupt("return", {
                  error: _context3.t1
                });

              case 24:
                if (!_context3.t1.cancelled) {
                  _context3.next = 26;
                  break;
                }

                return _context3.abrupt("return", {
                  error: _context3.t1
                });

              case 26:
                _Component = this.ErrorComponent;
                routeInfo = {
                  Component: _Component,
                  err: _context3.t1
                };
                _ctx = {
                  err: _context3.t1,
                  pathname: pathname,
                  query: query
                };
                _context3.prev = 29;
                _context3.next = 32;
                return this.getInitialProps(_Component, _ctx);

              case 32:
                routeInfo.props = _context3.sent;
                _context3.next = 39;
                break;

              case 35:
                _context3.prev = 35;
                _context3.t2 = _context3["catch"](29);
                console.error('Error in error page `getInitialProps`: ', _context3.t2);
                routeInfo.props = {};

              case 39:
                routeInfo.error = _context3.t1;

              case 40:
                return _context3.abrupt("return", routeInfo);

              case 41:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 18], [29, 35]]);
      }));

      return function getRouteInfo(_x6, _x7, _x8, _x9) {
        return _getRouteInfo.apply(this, arguments);
      };
    }()
  }, {
    key: "set",
    value: function set(route, pathname, query, as, data) {
      this.route = route;
      this.pathname = pathname;
      this.query = query;
      this.asPath = as;
      this.notify(data);
    }
  }, {
    key: "beforePopState",
    value: function beforePopState(cb) {
      this._beforePopState = cb;
    }
  }, {
    key: "onlyAHashChange",
    value: function onlyAHashChange(as) {
      if (!this.asPath) return false;

      var _this$asPath$split = this.asPath.split('#'),
          _this$asPath$split2 = (0, _slicedToArray2.default)(_this$asPath$split, 2),
          oldUrlNoHash = _this$asPath$split2[0],
          oldHash = _this$asPath$split2[1];

      var _as$split = as.split('#'),
          _as$split2 = (0, _slicedToArray2.default)(_as$split, 2),
          newUrlNoHash = _as$split2[0],
          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same


      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
        return true;
      } // If the urls are change, there's more than a hash change


      if (oldUrlNoHash !== newUrlNoHash) {
        return false;
      } // If the hash has changed, then it's a hash only change.
      // This check is necessary to handle both the enter and
      // leave hash === '' cases. The identity case falls through
      // and is treated as a next reload.


      return oldHash !== newHash;
    }
  }, {
    key: "scrollToHash",
    value: function scrollToHash(as) {
      var _as$split3 = as.split('#'),
          _as$split4 = (0, _slicedToArray2.default)(_as$split3, 2),
          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value


      if (hash === '') {
        window.scrollTo(0, 0);
        return;
      } // First we check if the element by id is found


      var idEl = document.getElementById(hash);

      if (idEl) {
        idEl.scrollIntoView();
        return;
      } // If there's no element with the id, we check the `name` property
      // To mirror browsers


      var nameEl = document.getElementsByName(hash)[0];

      if (nameEl) {
        nameEl.scrollIntoView();
      }
    }
  }, {
    key: "urlIsNew",
    value: function urlIsNew(pathname, query) {
      return this.pathname !== pathname || !(0, _shallowEquals.default)(query, this.query);
    }
  }, {
    key: "isShallowRoutingPossible",
    value: function isShallowRoutingPossible(route) {
      return (// If there's cached routeInfo for the route.
        Boolean(this.components[route]) && // If the route is already rendered on the screen.
        this.route === route
      );
    }
  }, {
    key: "prefetch",
    value: function () {
      var _prefetch = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee4(url) {
        var _this2 = this;

        var _parse3, pathname, route;

        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (false) {}

                return _context4.abrupt("return");

              case 2:
                _parse3 = (0, _url2.parse)(url), pathname = _parse3.pathname;
                route = toRoute(pathname);
                return _context4.abrupt("return", this.prefetchQueue.add(function () {
                  return _this2.fetchRoute(route);
                }));

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      return function prefetch(_x10) {
        return _prefetch.apply(this, arguments);
      };
    }()
  }, {
    key: "fetchComponent",
    value: function () {
      var _fetchComponent = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee5(route, as) {
        var cancelled, cancel, Component, error;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                cancelled = false;

                cancel = this.componentLoadCancel = function () {
                  cancelled = true;
                };

                _context5.next = 4;
                return this.fetchRoute(route);

              case 4:
                Component = _context5.sent;

                if (!cancelled) {
                  _context5.next = 9;
                  break;
                }

                error = new Error("Abort fetching component for route: \"".concat(route, "\""));
                error.cancelled = true;
                throw error;

              case 9:
                if (cancel === this.componentLoadCancel) {
                  this.componentLoadCancel = null;
                }

                return _context5.abrupt("return", Component);

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      return function fetchComponent(_x11, _x12) {
        return _fetchComponent.apply(this, arguments);
      };
    }()
  }, {
    key: "getInitialProps",
    value: function () {
      var _getInitialProps = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee6(Component, ctx) {
        var cancelled, cancel, App, props, err;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                cancelled = false;

                cancel = function cancel() {
                  cancelled = true;
                };

                this.componentLoadCancel = cancel;
                App = this.components['/_app'].Component;
                _context6.next = 6;
                return (0, _utils.loadGetInitialProps)(App, {
                  Component: Component,
                  router: this,
                  ctx: ctx
                });

              case 6:
                props = _context6.sent;

                if (cancel === this.componentLoadCancel) {
                  this.componentLoadCancel = null;
                }

                if (!cancelled) {
                  _context6.next = 12;
                  break;
                }

                err = new Error('Loading initial props cancelled');
                err.cancelled = true;
                throw err;

              case 12:
                return _context6.abrupt("return", props);

              case 13:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      return function getInitialProps(_x13, _x14) {
        return _getInitialProps.apply(this, arguments);
      };
    }()
  }, {
    key: "fetchRoute",
    value: function () {
      var _fetchRoute = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee7(route) {
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt("return", this.pageLoader.loadPage(route));

              case 1:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      return function fetchRoute(_x15) {
        return _fetchRoute.apply(this, arguments);
      };
    }()
  }, {
    key: "abortComponentLoad",
    value: function abortComponentLoad(as) {
      if (this.componentLoadCancel) {
        Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);
        this.componentLoadCancel();
        this.componentLoadCancel = null;
      }
    }
  }, {
    key: "notify",
    value: function notify(data) {
      var App = this.components['/_app'].Component;
      this.subscriptions.forEach(function (fn) {
        return fn((0, _objectSpread2.default)({}, data, {
          App: App
        }));
      });
    }
  }, {
    key: "subscribe",
    value: function subscribe(fn) {
      var _this3 = this;

      this.subscriptions.add(fn);
      return function () {
        return _this3.subscriptions.delete(fn);
      };
    }
  }]);
  return Router;
}();

exports.default = Router;
(0, _defineProperty2.default)(Router, "events", new _EventEmitter.default());

function toRoute(path) {
  return path.replace(/\/$/, '') || '/';
}

/***/ }),

/***/ "./node_modules/next/dist/lib/router/with-router.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/lib/router/with-router.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = withRouter;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/objectSpread */ "./node_modules/@babel/runtime-corejs2/helpers/objectSpread.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/defineProperty.js"));

var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/lib/utils.js");

function withRouter(ComposedComponent) {
  var displayName = (0, _utils.getDisplayName)(ComposedComponent);

  var WithRouteWrapper =
  /*#__PURE__*/
  function (_Component) {
    (0, _inherits2.default)(WithRouteWrapper, _Component);

    function WithRouteWrapper() {
      (0, _classCallCheck2.default)(this, WithRouteWrapper);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WithRouteWrapper).apply(this, arguments));
    }

    (0, _createClass2.default)(WithRouteWrapper, [{
      key: "render",
      value: function render() {
        var props = (0, _objectSpread2.default)({
          router: this.context.router
        }, this.props);
        return _react.default.createElement(ComposedComponent, props);
      }
    }]);
    return WithRouteWrapper;
  }(_react.Component);

  (0, _defineProperty2.default)(WithRouteWrapper, "contextTypes", {
    router: _propTypes.default.object
  });
  (0, _defineProperty2.default)(WithRouteWrapper, "displayName", "withRouter(".concat(displayName, ")"));
  return (0, _hoistNonReactStatics.default)(WithRouteWrapper, ComposedComponent);
}

/***/ }),

/***/ "./node_modules/next/dist/lib/shallow-equals.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/lib/shallow-equals.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = shallowEquals;

function shallowEquals(a, b) {
  for (var i in a) {
    if (b[i] !== a[i]) return false;
  }

  for (var _i in b) {
    if (b[_i] !== a[_i]) return false;
  }

  return true;
}

/***/ }),

/***/ "./node_modules/next/dist/lib/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/lib/utils.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execOnce = execOnce;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime-corejs2/helpers/asyncToGenerator */ "./node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js"));

function execOnce(fn) {
  var _this = this;

  var used = false;
  return function () {
    if (!used) {
      used = true;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      fn.apply(_this, args);
    }
  };
}

function getDisplayName(Component) {
  if (typeof Component === 'string') {
    return Component;
  }

  return Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

function loadGetInitialProps(_x, _x2) {
  return _loadGetInitialProps.apply(this, arguments);
}

function _loadGetInitialProps() {
  _loadGetInitialProps = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(Component, ctx) {
    var compName, message, props, _compName, _message;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (false) {}

            if (!(Component.prototype && Component.prototype.getInitialProps)) {
              _context.next = 5;
              break;
            }

            compName = getDisplayName(Component);
            message = "\"".concat(compName, ".getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.");
            throw new Error(message);

          case 5:
            if (Component.getInitialProps) {
              _context.next = 7;
              break;
            }

            return _context.abrupt("return", {});

          case 7:
            _context.next = 9;
            return Component.getInitialProps(ctx);

          case 9:
            props = _context.sent;

            if (!(ctx.res && isResSent(ctx.res))) {
              _context.next = 12;
              break;
            }

            return _context.abrupt("return", props);

          case 12:
            if (props) {
              _context.next = 16;
              break;
            }

            _compName = getDisplayName(Component);
            _message = "\"".concat(_compName, ".getInitialProps()\" should resolve to an object. But found \"").concat(props, "\" instead.");
            throw new Error(_message);

          case 16:
            return _context.abrupt("return", props);

          case 17:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
  return _loadGetInitialProps.apply(this, arguments);
}

function getLocationOrigin() {
  var _window$location = window.location,
      protocol = _window$location.protocol,
      hostname = _window$location.hostname,
      port = _window$location.port;
  return "".concat(protocol, "//").concat(hostname).concat(port ? ':' + port : '');
}

function getURL() {
  var href = window.location.href;
  var origin = getLocationOrigin();
  return href.substring(origin.length);
}

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/lib/link */ "./node_modules/next/dist/lib/link.js")


/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js":
/*!**************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/punycode/punycode.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return punycode;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!***************************************************************************************************!*\
  !*** delegated ./node_modules/object-assign/index.js from dll-reference dll_831a3634f66cb1dada0c ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_831a3634f66cb1dada0c */ "dll-reference dll_831a3634f66cb1dada0c"))("./node_modules/object-assign/index.js");

/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// modified from https://github.com/es-shims/es5-shim
var has = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");
var isEnumerable = Object.prototype.propertyIsEnumerable;
var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
var dontEnums = [
	'toString',
	'toLocaleString',
	'valueOf',
	'hasOwnProperty',
	'isPrototypeOf',
	'propertyIsEnumerable',
	'constructor'
];
var equalsConstructorPrototype = function (o) {
	var ctor = o.constructor;
	return ctor && ctor.prototype === o;
};
var excludedKeys = {
	$applicationCache: true,
	$console: true,
	$external: true,
	$frame: true,
	$frameElement: true,
	$frames: true,
	$innerHeight: true,
	$innerWidth: true,
	$outerHeight: true,
	$outerWidth: true,
	$pageXOffset: true,
	$pageYOffset: true,
	$parent: true,
	$scrollLeft: true,
	$scrollTop: true,
	$scrollX: true,
	$scrollY: true,
	$self: true,
	$webkitIndexedDB: true,
	$webkitStorageInfo: true,
	$window: true
};
var hasAutomationEqualityBug = (function () {
	/* global window */
	if (typeof window === 'undefined') { return false; }
	for (var k in window) {
		try {
			if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
				try {
					equalsConstructorPrototype(window[k]);
				} catch (e) {
					return true;
				}
			}
		} catch (e) {
			return true;
		}
	}
	return false;
}());
var equalsConstructorPrototypeIfNotBuggy = function (o) {
	/* global window */
	if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
		return equalsConstructorPrototype(o);
	}
	try {
		return equalsConstructorPrototype(o);
	} catch (e) {
		return false;
	}
};

var keysShim = function keys(object) {
	var isObject = object !== null && typeof object === 'object';
	var isFunction = toStr.call(object) === '[object Function]';
	var isArguments = isArgs(object);
	var isString = isObject && toStr.call(object) === '[object String]';
	var theKeys = [];

	if (!isObject && !isFunction && !isArguments) {
		throw new TypeError('Object.keys called on a non-object');
	}

	var skipProto = hasProtoEnumBug && isFunction;
	if (isString && object.length > 0 && !has.call(object, 0)) {
		for (var i = 0; i < object.length; ++i) {
			theKeys.push(String(i));
		}
	}

	if (isArguments && object.length > 0) {
		for (var j = 0; j < object.length; ++j) {
			theKeys.push(String(j));
		}
	} else {
		for (var name in object) {
			if (!(skipProto && name === 'prototype') && has.call(object, name)) {
				theKeys.push(String(name));
			}
		}
	}

	if (hasDontEnumBug) {
		var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

		for (var k = 0; k < dontEnums.length; ++k) {
			if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
				theKeys.push(dontEnums[k]);
			}
		}
	}
	return theKeys;
};

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			return (Object.keys(arguments) || '').length === 2;
		}(1, 2));
		if (!keysWorksWithArguments) {
			var originalKeys = Object.keys;
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				} else {
					return originalKeys(object);
				}
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),

/***/ "./node_modules/object.assign/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/object.assign/implementation.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// modified from https://github.com/es-shims/es6-shim
var keys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var canBeObject = function (obj) {
	return typeof obj !== 'undefined' && obj !== null;
};
var hasSymbols = __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js")();
var toObject = Object;
var push = bind.call(Function.call, Array.prototype.push);
var propIsEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

module.exports = function assign(target, source1) {
	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
	var objTarget = toObject(target);
	var s, source, i, props, syms, value, key;
	for (s = 1; s < arguments.length; ++s) {
		source = toObject(arguments[s]);
		props = keys(source);
		var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) {
			syms = getSymbols(source);
			for (i = 0; i < syms.length; ++i) {
				key = syms[i];
				if (propIsEnumerable(source, key)) {
					push(props, key);
				}
			}
		}
		for (i = 0; i < props.length; ++i) {
			key = props[i];
			value = source[key];
			if (propIsEnumerable(source, key)) {
				objTarget[key] = value;
			}
		}
	}
	return objTarget;
};


/***/ }),

/***/ "./node_modules/object.assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object.assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defineProperties = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object.assign/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object.assign/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/object.assign/shim.js");

var polyfill = getPolyfill();

defineProperties(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),

/***/ "./node_modules/object.assign/polyfill.js":
/*!************************************************!*\
  !*** ./node_modules/object.assign/polyfill.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object.assign/implementation.js");

var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	// v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	// note: this does not detect the bug unless there's 20 characters
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	// which is 72% slower than our shim, and Firefox 40's native implementation.
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
	return false;
};

module.exports = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};


/***/ }),

/***/ "./node_modules/object.assign/shim.js":
/*!********************************************!*\
  !*** ./node_modules/object.assign/shim.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object.assign/polyfill.js");

module.exports = function shimAssign() {
	var polyfill = getPolyfill();
	define(
		Object,
		{ assign: polyfill },
		{ assign: function () { return Object.assign !== polyfill; } }
	);
	return polyfill;
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/prop-types-exact/build/helpers/isPlainObject.js":
/*!**********************************************************************!*\
  !*** ./node_modules/prop-types-exact/build/helpers/isPlainObject.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = isPlainObject;
function isPlainObject(x) {
  return x && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && !Array.isArray(x);
}
module.exports = exports['default'];
//# sourceMappingURL=isPlainObject.js.map

/***/ }),

/***/ "./node_modules/prop-types-exact/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/prop-types-exact/build/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = forbidExtraProps;

var _object = __webpack_require__(/*! object.assign */ "./node_modules/object.assign/index.js");

var _object2 = _interopRequireDefault(_object);

var _has = __webpack_require__(/*! has */ "./node_modules/has/src/index.js");

var _has2 = _interopRequireDefault(_has);

var _isPlainObject = __webpack_require__(/*! ./helpers/isPlainObject */ "./node_modules/prop-types-exact/build/helpers/isPlainObject.js");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var zeroWidthSpace = '\u200B';
var specialProperty = 'prop-types-exact: ' + zeroWidthSpace;
var semaphore = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? Symbol['for'](specialProperty) : /* istanbul ignore next */specialProperty;

function brand(fn) {
  return (0, _object2['default'])(fn, _defineProperty({}, specialProperty, semaphore));
}

function isBranded(value) {
  return value && value[specialProperty] === semaphore;
}

function forbidExtraProps(propTypes) {
  if (!(0, _isPlainObject2['default'])(propTypes)) {
    throw new TypeError('given propTypes must be an object');
  }
  if ((0, _has2['default'])(propTypes, specialProperty) && !isBranded(propTypes[specialProperty])) {
    throw new TypeError('Against all odds, you created a propType for a prop that uses both the zero-width space and our custom string - which, sadly, conflicts with `prop-types-exact`');
  }

  return (0, _object2['default'])({}, propTypes, _defineProperty({}, specialProperty, brand(function () {
    function forbidUnknownProps(props, _, componentName) {
      var unknownProps = Object.keys(props).filter(function (prop) {
        return !(0, _has2['default'])(propTypes, prop);
      });
      if (unknownProps.length > 0) {
        return new TypeError(String(componentName) + ': unknown props found: ' + String(unknownProps.join(', ')));
      }
      return null;
    }

    return forbidUnknownProps;
  }())));
}
module.exports = exports['default'];
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_831a3634f66cb1dada0c ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_831a3634f66cb1dada0c */ "dll-reference dll_831a3634f66cb1dada0c"))("./node_modules/prop-types/checkPropTypes.js");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
       true ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(isValidElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_831a3634f66cb1dada0c ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_831a3634f66cb1dada0c */ "dll-reference dll_831a3634f66cb1dada0c"))("./node_modules/prop-types/lib/ReactPropTypesSecret.js");

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring-es3/decode.js");
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring-es3/encode.js");


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!***********************************************************************************************!*\
  !*** delegated ./node_modules/react-dom/index.js from dll-reference dll_831a3634f66cb1dada0c ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_831a3634f66cb1dada0c */ "dll-reference dll_831a3634f66cb1dada0c"))("./node_modules/react-dom/index.js");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.7.0
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;
    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;
          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;
              default:
                return $$typeof;
            }
        }
      case REACT_LAZY_TYPE:
      case REACT_MEMO_TYPE:
      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}

// AsyncMode is deprecated along with isAsyncMode
var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;

var hasWarnedAboutDeprecatedIsAsyncMode = false;

// AsyncMode should be deprecated
function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }
  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_831a3634f66cb1dada0c ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_831a3634f66cb1dada0c */ "dll-reference dll_831a3634f66cb1dada0c"))("./node_modules/react/index.js");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime-module.js":
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ "./node_modules/regenerator-runtime/runtime.js");

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),

/***/ "./node_modules/styled-components/dist/styled-components.browser.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/styled-components/dist/styled-components.browser.esm.js ***!
  \******************************************************************************/
/*! exports provided: default, css, keyframes, createGlobalStyle, isStyledComponent, ThemeConsumer, ThemeContext, ThemeProvider, withTheme, ServerStyleSheet, StyleSheetManager, __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "css", function() { return css; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyframes", function() { return keyframes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGlobalStyle", function() { return createGlobalStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStyledComponent", function() { return isStyledComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeConsumer", function() { return ThemeConsumer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeContext", function() { return ThemeContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeProvider", function() { return ThemeProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withTheme", function() { return withTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerStyleSheet", function() { return ServerStyleSheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleSheetManager", function() { return StyleSheetManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS", function() { return __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS; });
/* harmony import */ var stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stylis/stylis.min */ "./node_modules/stylis/stylis.min.js");
/* harmony import */ var stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stylis-rule-sheet */ "./node_modules/stylis-rule-sheet/index.js");
/* harmony import */ var stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/unitless */ "./node_modules/@emotion/unitless/dist/unitless.browser.esm.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! memoize-one */ "./node_modules/memoize-one/dist/memoize-one.esm.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/is-prop-valid */ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js");










// 

var interleave = (function (strings, interpolations) {
  var result = [strings[0]];

  for (var i = 0, len = interpolations.length; i < len; i += 1) {
    result.push(interpolations[i], strings[i + 1]);
  }

  return result;
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

// 
var isPlainObject = (function (x) {
  return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x.constructor === Object;
});

// 
var EMPTY_ARRAY = Object.freeze([]);
var EMPTY_OBJECT = Object.freeze({});

// 
function isFunction(test) {
  return typeof test === 'function';
}

// 

function getComponentName(target) {
  return ( true ? typeof target === 'string' && target : undefined) || target.displayName || target.name || 'Component';
}

// 
function isStyledComponent(target) {
  return target && typeof target.styledComponentId === 'string';
}

// 

var SC_ATTR = typeof process !== 'undefined' && process.env.SC_ATTR || 'data-styled';

var SC_VERSION_ATTR = 'data-styled-version';

var SC_STREAM_ATTR = 'data-styled-streamed';

var IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;

var DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY === 'boolean' && SC_DISABLE_SPEEDY || "development" !== 'production';

// Shared empty execution context when generating static styles
var STATIC_EXECUTION_CONTEXT = {};

// 


/**
 * Parse errors.md and turn it into a simple hash of code: message
 */
var ERRORS =  true ? {
  "1": "Cannot create styled-component for component: %s.\n\n",
  "2": "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",
  "3": "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",
  "4": "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",
  "5": "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",
  "6": "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",
  "7": "ThemeProvider: Please return an object from your \"theme\" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n",
  "8": "ThemeProvider: Please make your \"theme\" prop an object.\n\n",
  "9": "Missing document `<head>`\n\n",
  "10": "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",
  "11": "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",
  "12": "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper (see https://www.styled-components.com/docs/api#css), which ensures the styles are injected correctly.\n\n",
  "13": "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n"
} : undefined;

/**
 * super basic version of sprintf
 */
function format() {
  var a = arguments.length <= 0 ? undefined : arguments[0];
  var b = [];

  for (var c = 1, len = arguments.length; c < len; c += 1) {
    b.push(arguments.length <= c ? undefined : arguments[c]);
  }

  b.forEach(function (d) {
    a = a.replace(/%[a-z]/, d);
  });

  return a;
}

/**
 * Create an error file out of errors.md for development and a simple web link to the full errors
 * in production mode.
 */

var StyledComponentsError = function (_Error) {
  inherits(StyledComponentsError, _Error);

  function StyledComponentsError(code) {
    classCallCheck(this, StyledComponentsError);

    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      interpolations[_key - 1] = arguments[_key];
    }

    if (false) { var _this; } else {
      var _this = possibleConstructorReturn(this, _Error.call(this, format.apply(undefined, [ERRORS[code]].concat(interpolations)).trim()));
    }
    return possibleConstructorReturn(_this);
  }

  return StyledComponentsError;
}(Error);

// 
var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm;

var extractComps = (function (maybeCSS) {
  var css = '' + (maybeCSS || ''); // Definitely a string, and a clone
  var existingComponents = [];
  css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {
    existingComponents.push({ componentId: componentId, matchIndex: matchIndex });
    return match;
  });
  return existingComponents.map(function (_ref, i) {
    var componentId = _ref.componentId,
        matchIndex = _ref.matchIndex;

    var nextComp = existingComponents[i + 1];
    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);
    return { componentId: componentId, cssFromDOM: cssFromDOM };
  });
});

// 

var COMMENT_REGEX = /^\s*\/\/.*$/gm;

// NOTE: This stylis instance is only used to split rules from SSR'd style tags
var stylisSplitter = new stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0___default.a({
  global: false,
  cascade: true,
  keyframe: false,
  prefix: false,
  compress: false,
  semicolon: true
});

var stylis = new stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0___default.a({
  global: false,
  cascade: true,
  keyframe: false,
  prefix: true,
  compress: false,
  semicolon: false // NOTE: This means "autocomplete missing semicolons"
});

// Wrap `insertRulePlugin to build a list of rules,
// and then make our own plugin to return the rules. This
// makes it easier to hook into the existing SSR architecture

var parsingRules = [];

// eslint-disable-next-line consistent-return
var returnRulesPlugin = function returnRulesPlugin(context) {
  if (context === -2) {
    var parsedRules = parsingRules;
    parsingRules = [];
    return parsedRules;
  }
};

var parseRulesPlugin = stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1___default()(function (rule) {
  parsingRules.push(rule);
});

var _componentId = void 0;
var _selector = void 0;
var _selectorRegexp = void 0;

var selfReferenceReplacer = function selfReferenceReplacer(match, offset, string) {
  if (
  // the first self-ref is always untouched
  offset > 0 &&
  // there should be at least two self-refs to do a replacement (.b > .b)
  string.slice(0, offset).indexOf(_selector) !== -1 &&
  // no consecutive self refs (.b.b); that is a precedence boost and treated differently
  string.slice(offset - _selector.length, offset) !== _selector) {
    return '.' + _componentId;
  }

  return match;
};

/**
 * When writing a style like
 *
 * & + & {
 *   color: red;
 * }
 *
 * The second ampersand should be a reference to the static component class. stylis
 * has no knowledge of static class so we have to intelligently replace the base selector.
 */
var selfReferenceReplacementPlugin = function selfReferenceReplacementPlugin(context, _, selectors) {
  if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {
    // eslint-disable-next-line no-param-reassign
    selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);
  }
};

stylis.use([selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);
stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);

var splitByRules = function splitByRules(css) {
  return stylisSplitter('', css);
};

function stringifyRules(rules, selector, prefix) {
  var componentId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '&';

  var flatCSS = rules.join('').replace(COMMENT_REGEX, ''); // replace JS comments

  var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;

  // stylis has no concept of state to be passed to plugins
  // but since JS is single=threaded, we can rely on that to ensure
  // these properties stay in sync with the current stylis run
  _componentId = componentId;
  _selector = selector;
  _selectorRegexp = new RegExp('\\' + _selector + '\\b', 'g');

  return stylis(prefix || !selector ? '' : selector, cssStr);
}

// 
/* eslint-disable camelcase, no-undef */

var getNonce = (function () {
  return  true ? __webpack_require__.nc : undefined;
});

// 
/* These are helpers for the StyleTags to keep track of the injected
 * rule names for each (component) ID that they're keeping track of.
 * They're crucial for detecting whether a name has already been
 * injected.
 * (This excludes rehydrated names) */

/* adds a new ID:name pairing to a names dictionary */
var addNameForId = function addNameForId(names, id, name) {
  if (name) {
    // eslint-disable-next-line no-param-reassign
    var namesForId = names[id] || (names[id] = Object.create(null));
    namesForId[name] = true;
  }
};

/* resets an ID entirely by overwriting it in the dictionary */
var resetIdNames = function resetIdNames(names, id) {
  // eslint-disable-next-line no-param-reassign
  names[id] = Object.create(null);
};

/* factory for a names dictionary checking the existance of an ID:name pairing */
var hasNameForId = function hasNameForId(names) {
  return function (id, name) {
    return names[id] !== undefined && names[id][name];
  };
};

/* stringifies names for the html/element output */
var stringifyNames = function stringifyNames(names) {
  var str = '';
  // eslint-disable-next-line guard-for-in
  for (var id in names) {
    str += Object.keys(names[id]).join(' ') + ' ';
  }
  return str.trim();
};

/* clones the nested names dictionary */
var cloneNames = function cloneNames(names) {
  var clone = Object.create(null);
  // eslint-disable-next-line guard-for-in
  for (var id in names) {
    clone[id] = _extends({}, names[id]);
  }
  return clone;
};

// 

/* These are helpers that deal with the insertRule (aka speedy) API
 * They are used in the StyleTags and specifically the speedy tag
 */

/* retrieve a sheet for a given style tag */
var sheetForTag = function sheetForTag(tag) {
  // $FlowFixMe
  if (tag.sheet) return tag.sheet;

  /* Firefox quirk requires us to step through all stylesheets to find one owned by the given tag */
  var size = document.styleSheets.length;
  for (var i = 0; i < size; i += 1) {
    var sheet = document.styleSheets[i];
    // $FlowFixMe
    if (sheet.ownerNode === tag) return sheet;
  }

  /* we should always be able to find a tag */
  throw new StyledComponentsError(10);
};

/* insert a rule safely and return whether it was actually injected */
var safeInsertRule = function safeInsertRule(sheet, cssRule, index) {
  /* abort early if cssRule string is falsy */
  if (!cssRule) return false;

  var maxIndex = sheet.cssRules.length;

  try {
    /* use insertRule and cap passed index with maxIndex (no of cssRules) */
    sheet.insertRule(cssRule, index <= maxIndex ? index : maxIndex);
  } catch (err) {
    /* any error indicates an invalid rule */
    return false;
  }

  return true;
};

/* deletes `size` rules starting from `removalIndex` */
var deleteRules = function deleteRules(sheet, removalIndex, size) {
  var lowerBound = removalIndex - size;
  for (var i = removalIndex; i > lowerBound; i -= 1) {
    sheet.deleteRule(i);
  }
};

// 

/* this marker separates component styles and is important for rehydration */
var makeTextMarker = function makeTextMarker(id) {
  return '\n/* sc-component-id: ' + id + ' */\n';
};

/* add up all numbers in array up until and including the index */
var addUpUntilIndex = function addUpUntilIndex(sizes, index) {
  var totalUpToIndex = 0;
  for (var i = 0; i <= index; i += 1) {
    totalUpToIndex += sizes[i];
  }

  return totalUpToIndex;
};

/* create a new style tag after lastEl */
var makeStyleTag = function makeStyleTag(target, tagEl, insertBefore) {
  var el = document.createElement('style');
  el.setAttribute(SC_ATTR, '');
  el.setAttribute(SC_VERSION_ATTR, "4.1.3");

  var nonce = getNonce();
  if (nonce) {
    el.setAttribute('nonce', nonce);
  }

  /* Work around insertRule quirk in EdgeHTML */
  el.appendChild(document.createTextNode(''));

  if (target && !tagEl) {
    /* Append to target when no previous element was passed */
    target.appendChild(el);
  } else {
    if (!tagEl || !target || !tagEl.parentNode) {
      throw new StyledComponentsError(6);
    }

    /* Insert new style tag after the previous one */
    tagEl.parentNode.insertBefore(el, insertBefore ? tagEl : tagEl.nextSibling);
  }

  return el;
};

/* takes a css factory function and outputs an html styled tag factory */
var wrapAsHtmlTag = function wrapAsHtmlTag(css, names) {
  return function (additionalAttrs) {
    var nonce = getNonce();
    var attrs = [nonce && 'nonce="' + nonce + '"', SC_ATTR + '="' + stringifyNames(names) + '"', SC_VERSION_ATTR + '="' + "4.1.3" + '"', additionalAttrs];

    var htmlAttr = attrs.filter(Boolean).join(' ');
    return '<style ' + htmlAttr + '>' + css() + '</style>';
  };
};

/* takes a css factory function and outputs an element factory */
var wrapAsElement = function wrapAsElement(css, names) {
  return function () {
    var _props;

    var props = (_props = {}, _props[SC_ATTR] = stringifyNames(names), _props[SC_VERSION_ATTR] = "4.1.3", _props);

    var nonce = getNonce();
    if (nonce) {
      // $FlowFixMe
      props.nonce = nonce;
    }

    // eslint-disable-next-line react/no-danger
    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement('style', _extends({}, props, { dangerouslySetInnerHTML: { __html: css() } }));
  };
};

var getIdsFromMarkersFactory = function getIdsFromMarkersFactory(markers) {
  return function () {
    return Object.keys(markers);
  };
};

/* speedy tags utilise insertRule */
var makeSpeedyTag = function makeSpeedyTag(el, getImportRuleTag) {
  var names = Object.create(null);
  var markers = Object.create(null);
  var sizes = [];

  var extractImport = getImportRuleTag !== undefined;
  /* indicates whether getImportRuleTag was called */
  var usedImportRuleTag = false;

  var insertMarker = function insertMarker(id) {
    var prev = markers[id];
    if (prev !== undefined) {
      return prev;
    }

    markers[id] = sizes.length;
    sizes.push(0);
    resetIdNames(names, id);

    return markers[id];
  };

  var insertRules = function insertRules(id, cssRules, name) {
    var marker = insertMarker(id);
    var sheet = sheetForTag(el);
    var insertIndex = addUpUntilIndex(sizes, marker);

    var injectedRules = 0;
    var importRules = [];
    var cssRulesSize = cssRules.length;

    for (var i = 0; i < cssRulesSize; i += 1) {
      var cssRule = cssRules[i];
      var mayHaveImport = extractImport; /* @import rules are reordered to appear first */
      if (mayHaveImport && cssRule.indexOf('@import') !== -1) {
        importRules.push(cssRule);
      } else if (safeInsertRule(sheet, cssRule, insertIndex + injectedRules)) {
        mayHaveImport = false;
        injectedRules += 1;
      }
    }

    if (extractImport && importRules.length > 0) {
      usedImportRuleTag = true;
      // $FlowFixMe
      getImportRuleTag().insertRules(id + '-import', importRules);
    }

    sizes[marker] += injectedRules; /* add up no of injected rules */
    addNameForId(names, id, name);
  };

  var removeRules = function removeRules(id) {
    var marker = markers[id];
    if (marker === undefined) return;

    var size = sizes[marker];
    var sheet = sheetForTag(el);
    var removalIndex = addUpUntilIndex(sizes, marker) - 1;
    deleteRules(sheet, removalIndex, size);
    sizes[marker] = 0;
    resetIdNames(names, id);

    if (extractImport && usedImportRuleTag) {
      // $FlowFixMe
      getImportRuleTag().removeRules(id + '-import');
    }
  };

  var css = function css() {
    var _sheetForTag = sheetForTag(el),
        cssRules = _sheetForTag.cssRules;

    var str = '';

    // eslint-disable-next-line guard-for-in
    for (var id in markers) {
      str += makeTextMarker(id);
      var marker = markers[id];
      var end = addUpUntilIndex(sizes, marker);
      var size = sizes[marker];
      for (var i = end - size; i < end; i += 1) {
        var rule = cssRules[i];
        if (rule !== undefined) {
          str += rule.cssText;
        }
      }
    }

    return str;
  };

  return {
    clone: function clone() {
      throw new StyledComponentsError(5);
    },

    css: css,
    getIds: getIdsFromMarkersFactory(markers),
    hasNameForId: hasNameForId(names),
    insertMarker: insertMarker,
    insertRules: insertRules,
    removeRules: removeRules,
    sealed: false,
    styleTag: el,
    toElement: wrapAsElement(css, names),
    toHTML: wrapAsHtmlTag(css, names)
  };
};

var makeTextNode = function makeTextNode(id) {
  return document.createTextNode(makeTextMarker(id));
};

var makeBrowserTag = function makeBrowserTag(el, getImportRuleTag) {
  var names = Object.create(null);
  var markers = Object.create(null);

  var extractImport = getImportRuleTag !== undefined;

  /* indicates whether getImportRuleTag was called */
  var usedImportRuleTag = false;

  var insertMarker = function insertMarker(id) {
    var prev = markers[id];
    if (prev !== undefined) {
      return prev;
    }

    markers[id] = makeTextNode(id);
    el.appendChild(markers[id]);
    names[id] = Object.create(null);

    return markers[id];
  };

  var insertRules = function insertRules(id, cssRules, name) {
    var marker = insertMarker(id);
    var importRules = [];
    var cssRulesSize = cssRules.length;

    for (var i = 0; i < cssRulesSize; i += 1) {
      var rule = cssRules[i];
      var mayHaveImport = extractImport;
      if (mayHaveImport && rule.indexOf('@import') !== -1) {
        importRules.push(rule);
      } else {
        mayHaveImport = false;
        var separator = i === cssRulesSize - 1 ? '' : ' ';
        marker.appendData('' + rule + separator);
      }
    }

    addNameForId(names, id, name);

    if (extractImport && importRules.length > 0) {
      usedImportRuleTag = true;
      // $FlowFixMe
      getImportRuleTag().insertRules(id + '-import', importRules);
    }
  };

  var removeRules = function removeRules(id) {
    var marker = markers[id];
    if (marker === undefined) return;

    /* create new empty text node and replace the current one */
    var newMarker = makeTextNode(id);
    el.replaceChild(newMarker, marker);
    markers[id] = newMarker;
    resetIdNames(names, id);

    if (extractImport && usedImportRuleTag) {
      // $FlowFixMe
      getImportRuleTag().removeRules(id + '-import');
    }
  };

  var css = function css() {
    var str = '';

    // eslint-disable-next-line guard-for-in
    for (var id in markers) {
      str += markers[id].data;
    }

    return str;
  };

  return {
    clone: function clone() {
      throw new StyledComponentsError(5);
    },

    css: css,
    getIds: getIdsFromMarkersFactory(markers),
    hasNameForId: hasNameForId(names),
    insertMarker: insertMarker,
    insertRules: insertRules,
    removeRules: removeRules,
    sealed: false,
    styleTag: el,
    toElement: wrapAsElement(css, names),
    toHTML: wrapAsHtmlTag(css, names)
  };
};

var makeServerTag = function makeServerTag(namesArg, markersArg) {
  var names = namesArg === undefined ? Object.create(null) : namesArg;
  var markers = markersArg === undefined ? Object.create(null) : markersArg;

  var insertMarker = function insertMarker(id) {
    var prev = markers[id];
    if (prev !== undefined) {
      return prev;
    }

    return markers[id] = [''];
  };

  var insertRules = function insertRules(id, cssRules, name) {
    var marker = insertMarker(id);
    marker[0] += cssRules.join(' ');
    addNameForId(names, id, name);
  };

  var removeRules = function removeRules(id) {
    var marker = markers[id];
    if (marker === undefined) return;
    marker[0] = '';
    resetIdNames(names, id);
  };

  var css = function css() {
    var str = '';
    // eslint-disable-next-line guard-for-in
    for (var id in markers) {
      var cssForId = markers[id][0];
      if (cssForId) {
        str += makeTextMarker(id) + cssForId;
      }
    }
    return str;
  };

  var clone = function clone() {
    var namesClone = cloneNames(names);
    var markersClone = Object.create(null);

    // eslint-disable-next-line guard-for-in
    for (var id in markers) {
      markersClone[id] = [markers[id][0]];
    }

    return makeServerTag(namesClone, markersClone);
  };

  var tag = {
    clone: clone,
    css: css,
    getIds: getIdsFromMarkersFactory(markers),
    hasNameForId: hasNameForId(names),
    insertMarker: insertMarker,
    insertRules: insertRules,
    removeRules: removeRules,
    sealed: false,
    styleTag: null,
    toElement: wrapAsElement(css, names),
    toHTML: wrapAsHtmlTag(css, names)
  };

  return tag;
};

var makeTag = function makeTag(target, tagEl, forceServer, insertBefore, getImportRuleTag) {
  if (IS_BROWSER && !forceServer) {
    var el = makeStyleTag(target, tagEl, insertBefore);

    if (DISABLE_SPEEDY) {
      return makeBrowserTag(el, getImportRuleTag);
    } else {
      return makeSpeedyTag(el, getImportRuleTag);
    }
  }

  return makeServerTag();
};

var rehydrate = function rehydrate(tag, els, extracted) {
  /* add all extracted components to the new tag */
  for (var i = 0, len = extracted.length; i < len; i += 1) {
    var _extracted$i = extracted[i],
        componentId = _extracted$i.componentId,
        cssFromDOM = _extracted$i.cssFromDOM;

    var cssRules = splitByRules(cssFromDOM);
    tag.insertRules(componentId, cssRules);
  }

  /* remove old HTMLStyleElements, since they have been rehydrated */
  for (var _i = 0, _len = els.length; _i < _len; _i += 1) {
    var el = els[_i];
    if (el.parentNode) {
      el.parentNode.removeChild(el);
    }
  }
};

// 

var SPLIT_REGEX = /\s+/;

/* determine the maximum number of components before tags are sharded */
var MAX_SIZE = void 0;
if (IS_BROWSER) {
  /* in speedy mode we can keep a lot more rules in a sheet before a slowdown can be expected */
  MAX_SIZE = DISABLE_SPEEDY ? 40 : 1000;
} else {
  /* for servers we do not need to shard at all */
  MAX_SIZE = -1;
}

var sheetRunningId = 0;
var master = void 0;

var StyleSheet = function () {

  /* a map from ids to tags */

  /* deferred rules for a given id */

  /* this is used for not reinjecting rules via hasNameForId() */

  /* when rules for an id are removed using remove() we have to ignore rehydratedNames for it */

  /* a list of tags belonging to this StyleSheet */

  /* a tag for import rules */

  /* current capacity until a new tag must be created */

  /* children (aka clones) of this StyleSheet inheriting all and future injections */

  function StyleSheet() {
    var _this = this;

    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : IS_BROWSER ? document.head : null;
    var forceServer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    classCallCheck(this, StyleSheet);

    this.getImportRuleTag = function () {
      var importRuleTag = _this.importRuleTag;

      if (importRuleTag !== undefined) {
        return importRuleTag;
      }

      var firstTag = _this.tags[0];
      var insertBefore = true;

      return _this.importRuleTag = makeTag(_this.target, firstTag ? firstTag.styleTag : null, _this.forceServer, insertBefore);
    };

    sheetRunningId += 1;
    this.id = sheetRunningId;
    this.forceServer = forceServer;
    this.target = forceServer ? null : target;
    this.tagMap = {};
    this.deferred = {};
    this.rehydratedNames = {};
    this.ignoreRehydratedNames = {};
    this.tags = [];
    this.capacity = 1;
    this.clones = [];
  }

  /* rehydrate all SSR'd style tags */


  StyleSheet.prototype.rehydrate = function rehydrate$$1() {
    if (!IS_BROWSER || this.forceServer) return this;

    var els = [];
    var extracted = [];
    var isStreamed = false;

    /* retrieve all of our SSR style elements from the DOM */
    var nodes = document.querySelectorAll('style[' + SC_ATTR + '][' + SC_VERSION_ATTR + '="' + "4.1.3" + '"]');

    var nodesSize = nodes.length;

    /* abort rehydration if no previous style tags were found */
    if (!nodesSize) return this;

    for (var i = 0; i < nodesSize; i += 1) {
      var el = nodes[i];

      /* check if style tag is a streamed tag */
      if (!isStreamed) isStreamed = !!el.getAttribute(SC_STREAM_ATTR);

      /* retrieve all component names */
      var elNames = (el.getAttribute(SC_ATTR) || '').trim().split(SPLIT_REGEX);
      var elNamesSize = elNames.length;
      for (var j = 0, name; j < elNamesSize; j += 1) {
        name = elNames[j];
        /* add rehydrated name to sheet to avoid re-adding styles */
        this.rehydratedNames[name] = true;
      }

      /* extract all components and their CSS */
      extracted.push.apply(extracted, extractComps(el.textContent));

      /* store original HTMLStyleElement */
      els.push(el);
    }

    /* abort rehydration if nothing was extracted */
    var extractedSize = extracted.length;
    if (!extractedSize) return this;

    /* create a tag to be used for rehydration */
    var tag = this.makeTag(null);

    rehydrate(tag, els, extracted);

    /* reset capacity and adjust MAX_SIZE by the initial size of the rehydration */
    this.capacity = Math.max(1, MAX_SIZE - extractedSize);
    this.tags.push(tag);

    /* retrieve all component ids */
    for (var _j = 0; _j < extractedSize; _j += 1) {
      this.tagMap[extracted[_j].componentId] = tag;
    }

    return this;
  };

  /* retrieve a "master" instance of StyleSheet which is typically used when no other is available
   * The master StyleSheet is targeted by createGlobalStyle, keyframes, and components outside of any
    * StyleSheetManager's context */


  /* reset the internal "master" instance */
  StyleSheet.reset = function reset() {
    var forceServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    master = new StyleSheet(undefined, forceServer).rehydrate();
  };

  /* adds "children" to the StyleSheet that inherit all of the parents' rules
   * while their own rules do not affect the parent */


  StyleSheet.prototype.clone = function clone() {
    var sheet = new StyleSheet(this.target, this.forceServer);

    /* add to clone array */
    this.clones.push(sheet);

    /* clone all tags */
    sheet.tags = this.tags.map(function (tag) {
      var ids = tag.getIds();
      var newTag = tag.clone();

      /* reconstruct tagMap */
      for (var i = 0; i < ids.length; i += 1) {
        sheet.tagMap[ids[i]] = newTag;
      }

      return newTag;
    });

    /* clone other maps */
    sheet.rehydratedNames = _extends({}, this.rehydratedNames);
    sheet.deferred = _extends({}, this.deferred);

    return sheet;
  };

  /* force StyleSheet to create a new tag on the next injection */


  StyleSheet.prototype.sealAllTags = function sealAllTags() {
    this.capacity = 1;

    this.tags.forEach(function (tag) {
      // eslint-disable-next-line no-param-reassign
      tag.sealed = true;
    });
  };

  StyleSheet.prototype.makeTag = function makeTag$$1(tag) {
    var lastEl = tag ? tag.styleTag : null;
    var insertBefore = false;

    return makeTag(this.target, lastEl, this.forceServer, insertBefore, this.getImportRuleTag);
  };

  /* get a tag for a given componentId, assign the componentId to one, or shard */
  StyleSheet.prototype.getTagForId = function getTagForId(id) {
    /* simply return a tag, when the componentId was already assigned one */
    var prev = this.tagMap[id];
    if (prev !== undefined && !prev.sealed) {
      return prev;
    }

    var tag = this.tags[this.tags.length - 1];

    /* shard (create a new tag) if the tag is exhausted (See MAX_SIZE) */
    this.capacity -= 1;

    if (this.capacity === 0) {
      this.capacity = MAX_SIZE;
      tag = this.makeTag(tag);
      this.tags.push(tag);
    }

    return this.tagMap[id] = tag;
  };

  /* mainly for createGlobalStyle to check for its id */


  StyleSheet.prototype.hasId = function hasId(id) {
    return this.tagMap[id] !== undefined;
  };

  /* caching layer checking id+name to already have a corresponding tag and injected rules */


  StyleSheet.prototype.hasNameForId = function hasNameForId(id, name) {
    /* exception for rehydrated names which are checked separately */
    if (this.ignoreRehydratedNames[id] === undefined && this.rehydratedNames[name]) {
      return true;
    }

    var tag = this.tagMap[id];
    return tag !== undefined && tag.hasNameForId(id, name);
  };

  /* registers a componentId and registers it on its tag */


  StyleSheet.prototype.deferredInject = function deferredInject(id, cssRules) {
    /* don't inject when the id is already registered */
    if (this.tagMap[id] !== undefined) return;

    var clones = this.clones;

    for (var i = 0; i < clones.length; i += 1) {
      clones[i].deferredInject(id, cssRules);
    }

    this.getTagForId(id).insertMarker(id);
    this.deferred[id] = cssRules;
  };

  /* injects rules for a given id with a name that will need to be cached */


  StyleSheet.prototype.inject = function inject(id, cssRules, name) {
    var clones = this.clones;


    for (var i = 0; i < clones.length; i += 1) {
      clones[i].inject(id, cssRules, name);
    }

    var tag = this.getTagForId(id);

    /* add deferred rules for component */
    if (this.deferred[id] !== undefined) {
      // Combine passed cssRules with previously deferred CSS rules
      // NOTE: We cannot mutate the deferred array itself as all clones
      // do the same (see clones[i].inject)
      var rules = this.deferred[id].concat(cssRules);
      tag.insertRules(id, rules, name);

      this.deferred[id] = undefined;
    } else {
      tag.insertRules(id, cssRules, name);
    }
  };

  /* removes all rules for a given id, which doesn't remove its marker but resets it */


  StyleSheet.prototype.remove = function remove(id) {
    var tag = this.tagMap[id];
    if (tag === undefined) return;

    var clones = this.clones;

    for (var i = 0; i < clones.length; i += 1) {
      clones[i].remove(id);
    }

    /* remove all rules from the tag */
    tag.removeRules(id);

    /* ignore possible rehydrated names */
    this.ignoreRehydratedNames[id] = true;

    /* delete possible deferred rules */
    this.deferred[id] = undefined;
  };

  StyleSheet.prototype.toHTML = function toHTML() {
    return this.tags.map(function (tag) {
      return tag.toHTML();
    }).join('');
  };

  StyleSheet.prototype.toReactElements = function toReactElements() {
    var id = this.id;


    return this.tags.map(function (tag, i) {
      var key = 'sc-' + id + '-' + i;
      return Object(react__WEBPACK_IMPORTED_MODULE_2__["cloneElement"])(tag.toElement(), { key: key });
    });
  };

  createClass(StyleSheet, null, [{
    key: 'master',
    get: function get$$1() {
      return master || (master = new StyleSheet().rehydrate());
    }

    /* NOTE: This is just for backwards-compatibility with jest-styled-components */

  }, {
    key: 'instance',
    get: function get$$1() {
      return StyleSheet.master;
    }
  }]);
  return StyleSheet;
}();

// 

var Keyframes = function () {
  function Keyframes(name, rules) {
    var _this = this;

    classCallCheck(this, Keyframes);

    this.inject = function (styleSheet) {
      if (!styleSheet.hasNameForId(_this.id, _this.name)) {
        styleSheet.inject(_this.id, _this.rules, _this.name);
      }
    };

    this.toString = function () {
      throw new StyledComponentsError(12, String(_this.name));
    };

    this.name = name;
    this.rules = rules;

    this.id = 'sc-keyframes-' + name;
  }

  Keyframes.prototype.getName = function getName() {
    return this.name;
  };

  return Keyframes;
}();

// 

/**
 * inlined version of
 * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js
 */

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return string.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

// 

// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js
function addUnitIfNeeded(name, value) {
  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133
  // $FlowFixMe
  if (value == null || typeof value === 'boolean' || value === '') {
    return '';
  }

  if (typeof value === 'number' && value !== 0 && !(name in _emotion_unitless__WEBPACK_IMPORTED_MODULE_3__["default"])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return String(value).trim();
}

// 

/**
 * It's falsish not falsy because 0 is allowed.
 */
var isFalsish = function isFalsish(chunk) {
  return chunk === undefined || chunk === null || chunk === false || chunk === '';
};

var objToCss = function objToCss(obj, prevKey) {
  var css = Object.keys(obj).filter(function (key) {
    return !isFalsish(obj[key]);
  }).map(function (key) {
    if (isPlainObject(obj[key])) return objToCss(obj[key], key);
    return hyphenateStyleName(key) + ': ' + addUnitIfNeeded(key, obj[key]) + ';';
  }).join(' ');
  return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
};

function flatten(chunk, executionContext, styleSheet) {
  if (Array.isArray(chunk)) {
    var ruleSet = [];

    for (var i = 0, len = chunk.length, result; i < len; i += 1) {
      result = flatten(chunk[i], executionContext, styleSheet);

      if (result === null) continue;else if (Array.isArray(result)) ruleSet.push.apply(ruleSet, result);else ruleSet.push(result);
    }

    return ruleSet;
  }

  if (isFalsish(chunk)) {
    return null;
  }

  /* Handle other components */
  if (isStyledComponent(chunk)) {
    return '.' + chunk.styledComponentId;
  }

  /* Either execute or defer the function */
  if (isFunction(chunk)) {
    if (executionContext) {
      var shouldThrow = false;

      try {
        // eslint-disable-next-line new-cap
        if (Object(react_is__WEBPACK_IMPORTED_MODULE_4__["isElement"])(new chunk(executionContext))) {
          shouldThrow = true;
        }
      } catch (e) {
        /* */
      }

      if (shouldThrow) {
        throw new StyledComponentsError(13, getComponentName(chunk));
      }

      return flatten(chunk(executionContext), executionContext, styleSheet);
    } else return chunk;
  }

  if (chunk instanceof Keyframes) {
    if (styleSheet) {
      chunk.inject(styleSheet);
      return chunk.getName();
    } else return chunk;
  }

  /* Handle objects */
  return isPlainObject(chunk) ? objToCss(chunk) : chunk.toString();
}

// 

function css(styles) {
  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  if (isFunction(styles) || isPlainObject(styles)) {
    // $FlowFixMe
    return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));
  }

  // $FlowFixMe
  return flatten(interleave(styles, interpolations));
}

// 

function constructWithOptions(componentConstructor, tag) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;

  if (!Object(react_is__WEBPACK_IMPORTED_MODULE_4__["isValidElementType"])(tag)) {
    throw new StyledComponentsError(1, String(tag));
  }

  /* This is callable directly as a template function */
  // $FlowFixMe: Not typed to avoid destructuring arguments
  var templateFunction = function templateFunction() {
    return componentConstructor(tag, options, css.apply(undefined, arguments));
  };

  /* If config methods are called, wrap up a new template function and merge options */
  templateFunction.withConfig = function (config) {
    return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
  };

  /* Modify/inject new props at runtime */
  templateFunction.attrs = function (attrs) {
    return constructWithOptions(componentConstructor, tag, _extends({}, options, {
      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean)
    }));
  };

  return templateFunction;
}

// 
// Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
function murmurhash(c) {
  for (var e = c.length | 0, a = e | 0, d = 0, b; e >= 4;) {
    b = c.charCodeAt(d) & 255 | (c.charCodeAt(++d) & 255) << 8 | (c.charCodeAt(++d) & 255) << 16 | (c.charCodeAt(++d) & 255) << 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), b ^= b >>> 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16) ^ b, e -= 4, ++d;
  }
  switch (e) {
    case 3:
      a ^= (c.charCodeAt(d + 2) & 255) << 16;
    case 2:
      a ^= (c.charCodeAt(d + 1) & 255) << 8;
    case 1:
      a ^= c.charCodeAt(d) & 255, a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);
  }
  a ^= a >>> 13;
  a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);
  return (a ^ a >>> 15) >>> 0;
}

// 
/* eslint-disable no-bitwise */

/* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
 * counterparts */
var charsLength = 52;

/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */
var getAlphabeticChar = function getAlphabeticChar(code) {
  return String.fromCharCode(code + (code > 25 ? 39 : 97));
};

/* input a number, usually a hash and convert it to base-52 */
function generateAlphabeticName(code) {
  var name = '';
  var x = void 0;

  /* get a char and divide by alphabet-length */
  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
    name = getAlphabeticChar(x % charsLength) + name;
  }

  return getAlphabeticChar(x % charsLength) + name;
}

// 

function hasFunctionObjectKey(obj) {
  // eslint-disable-next-line guard-for-in, no-restricted-syntax
  for (var key in obj) {
    if (isFunction(obj[key])) {
      return true;
    }
  }

  return false;
}

function isStaticRules(rules, attrs) {
  for (var i = 0; i < rules.length; i += 1) {
    var rule = rules[i];

    // recursive case
    if (Array.isArray(rule) && !isStaticRules(rule, attrs)) {
      return false;
    } else if (isFunction(rule) && !isStyledComponent(rule)) {
      // functions are allowed to be static if they're just being
      // used to get the classname of a nested styled component
      return false;
    }
  }

  if (attrs.some(function (x) {
    return isFunction(x) || hasFunctionObjectKey(x);
  })) return false;

  return true;
}

// 

var isHMREnabled = "development" !== 'production' && typeof module !== 'undefined' && module.hot;

/* combines hashStr (murmurhash) and nameGenerator for convenience */
var hasher = function hasher(str) {
  return generateAlphabeticName(murmurhash(str));
};

/*
 ComponentStyle is all the CSS-specific stuff, not
 the React-specific stuff.
 */

var ComponentStyle = function () {
  function ComponentStyle(rules, attrs, componentId) {
    classCallCheck(this, ComponentStyle);

    this.rules = rules;
    this.isStatic = !isHMREnabled && isStaticRules(rules, attrs);
    this.componentId = componentId;

    if (!StyleSheet.master.hasId(componentId)) {
      StyleSheet.master.deferredInject(componentId, []);
    }
  }

  /*
     * Flattens a rule set into valid CSS
     * Hashes it, wraps the whole chunk in a .hash1234 {}
     * Returns the hash to be injected on render()
     * */


  ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
    var isStatic = this.isStatic,
        componentId = this.componentId,
        lastClassName = this.lastClassName;

    if (IS_BROWSER && isStatic && typeof lastClassName === 'string' && styleSheet.hasNameForId(componentId, lastClassName)) {
      return lastClassName;
    }

    var flatCSS = flatten(this.rules, executionContext, styleSheet);
    var name = hasher(this.componentId + flatCSS.join(''));
    if (!styleSheet.hasNameForId(componentId, name)) {
      styleSheet.inject(this.componentId, stringifyRules(flatCSS, '.' + name, undefined, componentId), name);
    }

    this.lastClassName = name;
    return name;
  };

  ComponentStyle.generateName = function generateName(str) {
    return hasher(str);
  };

  return ComponentStyle;
}();

// 

var LIMIT = 200;

var createWarnTooManyClasses = (function (displayName) {
  var generatedClasses = {};
  var warningSeen = false;

  return function (className) {
    if (!warningSeen) {
      generatedClasses[className] = true;
      if (Object.keys(generatedClasses).length >= LIMIT) {
        // Unable to find latestRule in test environment.
        /* eslint-disable no-console, prefer-template */
        console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\n' + 'Example:\n' + '  const Component = styled.div.attrs({\n' + '    style: ({ background }) => ({\n' + '      background,\n' + '    }),\n' + '  })`width: 100%;`\n\n' + '  <Component />');
        warningSeen = true;
        generatedClasses = {};
      }
    }
  };
});

// 

var determineTheme = (function (props, fallbackTheme) {
  var defaultProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;

  // Props should take precedence over ThemeProvider, which should take precedence over
  // defaultProps, but React automatically puts defaultProps on props.

  /* eslint-disable react/prop-types, flowtype-errors/show-errors */
  var isDefaultTheme = defaultProps ? props.theme === defaultProps.theme : false;
  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme || defaultProps.theme;
  /* eslint-enable */

  return theme;
});

// 
var escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g;
var dashesAtEnds = /(^-|-$)/g;

/**
 * TODO: Explore using CSS.escape when it becomes more available
 * in evergreen browsers.
 */
function escape(str) {
  return str
  // Replace all possible CSS selectors
  .replace(escapeRegex, '-')

  // Remove extraneous hyphens at the start and end
  .replace(dashesAtEnds, '');
}

// 

function isTag(target) {
  return typeof target === 'string' && ( true ? target.charAt(0) === target.charAt(0).toLowerCase() : undefined);
}

// 

function generateDisplayName(target) {
  // $FlowFixMe
  return isTag(target) ? 'styled.' + target : 'Styled(' + getComponentName(target) + ')';
}

var _TYPE_STATICS;

var REACT_STATICS = {
  childContextTypes: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDerivedStateFromProps: true,
  propTypes: true,
  type: true
};

var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};

var TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[react_is__WEBPACK_IMPORTED_MODULE_4__["ForwardRef"]] = {
  $$typeof: true,
  render: true
}, _TYPE_STATICS);

var defineProperty$1 = Object.defineProperty,
    getOwnPropertyNames = Object.getOwnPropertyNames,
    _Object$getOwnPropert = Object.getOwnPropertySymbols,
    getOwnPropertySymbols = _Object$getOwnPropert === undefined ? function () {
  return [];
} : _Object$getOwnPropert,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
    getPrototypeOf = Object.getPrototypeOf,
    objectPrototype = Object.prototype;
var arrayPrototype = Array.prototype;


function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components

    var inheritedComponent = getPrototypeOf(sourceComponent);

    if (inheritedComponent && inheritedComponent !== objectPrototype) {
      hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
    }

    var keys = arrayPrototype.concat(getOwnPropertyNames(sourceComponent),
    // $FlowFixMe
    getOwnPropertySymbols(sourceComponent));

    var targetStatics = TYPE_STATICS[targetComponent.$$typeof] || REACT_STATICS;

    var sourceStatics = TYPE_STATICS[sourceComponent.$$typeof] || REACT_STATICS;

    var i = keys.length;
    var descriptor = void 0;
    var key = void 0;

    // eslint-disable-next-line no-plusplus
    while (i--) {
      key = keys[i];

      if (
      // $FlowFixMe
      !KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) &&
      // $FlowFixMe
      !(targetStatics && targetStatics[key])) {
        descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        if (descriptor) {
          try {
            // Avoid failures from read-only properties
            defineProperty$1(targetComponent, key, descriptor);
          } catch (e) {
            /* fail silently */
          }
        }
      }
    }

    return targetComponent;
  }

  return targetComponent;
}

// 
function isDerivedReactComponent(fn) {
  return !!(fn && fn.prototype && fn.prototype.isReactComponent);
}

// 
// Helper to call a given function, only once
var once = (function (cb) {
  var called = false;

  return function () {
    if (!called) {
      called = true;
      cb.apply(undefined, arguments);
    }
  };
});

// 

var ThemeContext = Object(react__WEBPACK_IMPORTED_MODULE_2__["createContext"])();

var ThemeConsumer = ThemeContext.Consumer;

/**
 * Provide a theme to an entire react component tree via context
 */

var ThemeProvider = function (_Component) {
  inherits(ThemeProvider, _Component);

  function ThemeProvider(props) {
    classCallCheck(this, ThemeProvider);

    var _this = possibleConstructorReturn(this, _Component.call(this, props));

    _this.getContext = Object(memoize_one__WEBPACK_IMPORTED_MODULE_5__["default"])(_this.getContext.bind(_this));
    _this.renderInner = _this.renderInner.bind(_this);
    return _this;
  }

  ThemeProvider.prototype.render = function render() {
    if (!this.props.children) return null;

    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      ThemeContext.Consumer,
      null,
      this.renderInner
    );
  };

  ThemeProvider.prototype.renderInner = function renderInner(outerTheme) {
    var context = this.getContext(this.props.theme, outerTheme);

    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      ThemeContext.Provider,
      { value: context },
      react__WEBPACK_IMPORTED_MODULE_2___default.a.Children.only(this.props.children)
    );
  };

  /**
   * Get the theme from the props, supporting both (outerTheme) => {}
   * as well as object notation
   */


  ThemeProvider.prototype.getTheme = function getTheme(theme, outerTheme) {
    if (isFunction(theme)) {
      var mergedTheme = theme(outerTheme);

      if ("development" !== 'production' && (mergedTheme === null || Array.isArray(mergedTheme) || (typeof mergedTheme === 'undefined' ? 'undefined' : _typeof(mergedTheme)) !== 'object')) {
        throw new StyledComponentsError(7);
      }

      return mergedTheme;
    }

    if (theme === null || Array.isArray(theme) || (typeof theme === 'undefined' ? 'undefined' : _typeof(theme)) !== 'object') {
      throw new StyledComponentsError(8);
    }

    return _extends({}, outerTheme, theme);
  };

  ThemeProvider.prototype.getContext = function getContext(theme, outerTheme) {
    return this.getTheme(theme, outerTheme);
  };

  return ThemeProvider;
}(react__WEBPACK_IMPORTED_MODULE_2__["Component"]);

// 

var ServerStyleSheet = function () {
  function ServerStyleSheet() {
    classCallCheck(this, ServerStyleSheet);

    /* The master sheet might be reset, so keep a reference here */
    this.masterSheet = StyleSheet.master;
    this.instance = this.masterSheet.clone();
    this.sealed = false;
  }

  /**
   * Mark the ServerStyleSheet as being fully emitted and manually GC it from the
   * StyleSheet singleton.
   */


  ServerStyleSheet.prototype.seal = function seal() {
    if (!this.sealed) {
      /* Remove sealed StyleSheets from the master sheet */
      var index = this.masterSheet.clones.indexOf(this.instance);
      this.masterSheet.clones.splice(index, 1);
      this.sealed = true;
    }
  };

  ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {
    if (this.sealed) {
      throw new StyledComponentsError(2);
    }

    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      StyleSheetManager,
      { sheet: this.instance },
      children
    );
  };

  ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {
    this.seal();
    return this.instance.toHTML();
  };

  ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {
    this.seal();
    return this.instance.toReactElements();
  };

  ServerStyleSheet.prototype.interleaveWithNodeStream = function interleaveWithNodeStream(readableStream) {
    var _this = this;

    {
      throw new StyledComponentsError(3);
    }

    /* the tag index keeps track of which tags have already been emitted */
    var instance = this.instance;

    var instanceTagIndex = 0;

    var streamAttr = SC_STREAM_ATTR + '="true"';

    var transformer = new stream.Transform({
      transform: function appendStyleChunks(chunk, /* encoding */_, callback) {
        var tags = instance.tags;

        var html = '';

        /* retrieve html for each new style tag */
        for (; instanceTagIndex < tags.length; instanceTagIndex += 1) {
          var tag = tags[instanceTagIndex];
          html += tag.toHTML(streamAttr);
        }

        /* force our StyleSheets to emit entirely new tags */
        instance.sealAllTags();

        /* prepend style html to chunk */
        this.push(html + chunk);
        callback();
      }
    });

    readableStream.on('end', function () {
      return _this.seal();
    });
    readableStream.on('error', function (err) {
      _this.seal();

      // forward the error to the transform stream
      transformer.emit('error', err);
    });

    return readableStream.pipe(transformer);
  };

  return ServerStyleSheet;
}();

// 

var StyleSheetContext = Object(react__WEBPACK_IMPORTED_MODULE_2__["createContext"])();

var StyleSheetConsumer = StyleSheetContext.Consumer;

var StyleSheetManager = function (_Component) {
  inherits(StyleSheetManager, _Component);

  function StyleSheetManager(props) {
    classCallCheck(this, StyleSheetManager);

    var _this = possibleConstructorReturn(this, _Component.call(this, props));

    _this.getContext = Object(memoize_one__WEBPACK_IMPORTED_MODULE_5__["default"])(_this.getContext);
    return _this;
  }

  StyleSheetManager.prototype.getContext = function getContext(sheet, target) {
    if (sheet) {
      return sheet;
    } else if (target) {
      return new StyleSheet(target);
    } else {
      throw new StyledComponentsError(4);
    }
  };

  StyleSheetManager.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        sheet = _props.sheet,
        target = _props.target;


    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      StyleSheetContext.Provider,
      { value: this.getContext(sheet, target) },
       true ? react__WEBPACK_IMPORTED_MODULE_2___default.a.Children.only(children) : undefined
    );
  };

  return StyleSheetManager;
}(react__WEBPACK_IMPORTED_MODULE_2__["Component"]);
 true ? StyleSheetManager.propTypes = {
  sheet: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(StyleSheet), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(ServerStyleSheet)]),

  target: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.shape({
    appendChild: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.func.isRequired
  })
} : undefined;

// 

var didWarnAboutClassNameUsage = new Set();

var classNameUsageCheckInjector = (function (target) {
  var elementClassName = '';

  var targetCDM = target.componentDidMount;

  // eslint-disable-next-line no-param-reassign
  target.componentDidMount = function componentDidMount() {
    if (typeof targetCDM === 'function') {
      targetCDM.call(this);
    }

    var forwardTarget = this.props.forwardedComponent.target;

    if (target.props && target.props.suppressClassNameWarning || target.attrs && target.attrs.suppressClassNameWarning || didWarnAboutClassNameUsage.has(forwardTarget)) {
      return;
    }

    didWarnAboutClassNameUsage.add(forwardTarget);

    var classNames = elementClassName.replace(/ +/g, ' ').trim().split(' ');
    // eslint-disable-next-line react/no-find-dom-node
    var node = react_dom__WEBPACK_IMPORTED_MODULE_7___default.a.findDOMNode(this);
    var selector = classNames.map(function (s) {
      return '.' + s;
    }).join('');

    if (node && node.nodeType === 1 && !classNames.every(function (className) {
      return node.classList && node.classList.contains(className);
    }) && !node.querySelector(selector)) {
      console.warn('It looks like you\'ve wrapped styled() around your React component (' + getComponentName(forwardTarget) + '), but the className prop is not being passed down to a child. No styles will be rendered unless className is composed within your React component.');
    }
  };

  var prevRenderInner = target.renderInner;

  // eslint-disable-next-line no-param-reassign
  target.renderInner = function renderInner() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var element = prevRenderInner.apply(this, args);

    elementClassName = element.props.className;

    return element;
  };
});

// 

var identifiers = {};

/* We depend on components having unique IDs */
function generateId(_ComponentStyle, _displayName, parentComponentId) {
  var displayName = typeof _displayName !== 'string' ? 'sc' : escape(_displayName);

  /**
   * This ensures uniqueness if two components happen to share
   * the same displayName.
   */
  var nr = (identifiers[displayName] || 0) + 1;
  identifiers[displayName] = nr;

  var componentId = displayName + '-' + _ComponentStyle.generateName(displayName + nr);

  return parentComponentId ? parentComponentId + '-' + componentId : componentId;
}

// $FlowFixMe

var StyledComponent = function (_Component) {
  inherits(StyledComponent, _Component);

  function StyledComponent() {
    classCallCheck(this, StyledComponent);

    var _this = possibleConstructorReturn(this, _Component.call(this));

    _this.attrs = {};

    _this.renderOuter = _this.renderOuter.bind(_this);
    _this.renderInner = _this.renderInner.bind(_this);

    if (true) {
      _this.warnInnerRef = once(function (displayName) {
        return (
          // eslint-disable-next-line no-console
          console.warn('The "innerRef" API has been removed in styled-components v4 in favor of React 16 ref forwarding, use "ref" instead like a typical component. "innerRef" was detected on component "' + displayName + '".')
        );
      });

      _this.warnAttrsFnObjectKeyDeprecated = once(function (key, displayName) {
        return (
          // eslint-disable-next-line no-console
          console.warn('Functions as object-form attrs({}) keys are now deprecated and will be removed in a future version of styled-components. Switch to the new attrs(props => ({})) syntax instead for easier and more powerful composition. The attrs key in question is "' + key + '" on component "' + displayName + '".')
        );
      });

      _this.warnNonStyledComponentAttrsObjectKey = once(function (key, displayName) {
        return (
          // eslint-disable-next-line no-console
          console.warn('It looks like you\'ve used a non styled-component as the value for the "' + key + '" prop in an object-form attrs constructor of "' + displayName + '".\n' + 'You should use the new function-form attrs constructor which avoids this issue: attrs(props => ({ yourStuff }))\n' + "To continue using the deprecated object syntax, you'll need to wrap your component prop in a function to make it available inside the styled component (you'll still get the deprecation warning though.)\n" + ('For example, { ' + key + ': () => InnerComponent } instead of { ' + key + ': InnerComponent }'))
        );
      });
    }

    if ("development" !== 'production' && IS_BROWSER) {
      classNameUsageCheckInjector(_this);
    }
    return _this;
  }

  StyledComponent.prototype.render = function render() {
    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      StyleSheetConsumer,
      null,
      this.renderOuter
    );
  };

  StyledComponent.prototype.renderOuter = function renderOuter() {
    var styleSheet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : StyleSheet.master;

    this.styleSheet = styleSheet;

    // No need to subscribe a static component to theme changes, it won't change anything
    if (this.props.forwardedComponent.componentStyle.isStatic) return this.renderInner();

    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      ThemeConsumer,
      null,
      this.renderInner
    );
  };

  StyledComponent.prototype.renderInner = function renderInner(theme) {
    var _props$forwardedCompo = this.props.forwardedComponent,
        componentStyle = _props$forwardedCompo.componentStyle,
        defaultProps = _props$forwardedCompo.defaultProps,
        displayName = _props$forwardedCompo.displayName,
        foldedComponentIds = _props$forwardedCompo.foldedComponentIds,
        styledComponentId = _props$forwardedCompo.styledComponentId,
        target = _props$forwardedCompo.target;


    var generatedClassName = void 0;
    if (componentStyle.isStatic) {
      generatedClassName = this.generateAndInjectStyles(EMPTY_OBJECT, this.props);
    } else if (theme !== undefined) {
      generatedClassName = this.generateAndInjectStyles(determineTheme(this.props, theme, defaultProps), this.props);
    } else {
      generatedClassName = this.generateAndInjectStyles(this.props.theme || EMPTY_OBJECT, this.props);
    }

    var elementToBeCreated = this.props.as || this.attrs.as || target;
    var isTargetTag = isTag(elementToBeCreated);

    var propsForElement = {};
    var computedProps = _extends({}, this.attrs, this.props);

    var key = void 0;
    // eslint-disable-next-line guard-for-in
    for (key in computedProps) {
      if ("development" !== 'production' && key === 'innerRef' && isTargetTag) {
        this.warnInnerRef(displayName);
      }

      if (key === 'forwardedComponent' || key === 'as') continue;else if (key === 'forwardedRef') propsForElement.ref = computedProps[key];else if (!isTargetTag || Object(_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_8__["default"])(key)) {
        // Don't pass through non HTML tags through to HTML elements
        propsForElement[key] = computedProps[key];
      }
    }

    if (this.props.style && this.attrs.style) {
      propsForElement.style = _extends({}, this.attrs.style, this.props.style);
    }

    propsForElement.className = Array.prototype.concat(foldedComponentIds, this.props.className, styledComponentId, this.attrs.className, generatedClassName).filter(Boolean).join(' ');

    return Object(react__WEBPACK_IMPORTED_MODULE_2__["createElement"])(elementToBeCreated, propsForElement);
  };

  StyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props, attrs) {
    var _this2 = this;

    var context = _extends({}, props, { theme: theme });

    if (!attrs.length) return context;

    this.attrs = {};

    attrs.forEach(function (attrDef) {
      var resolvedAttrDef = attrDef;
      var attrDefWasFn = false;
      var attr = void 0;
      var key = void 0;

      if (isFunction(resolvedAttrDef)) {
        // $FlowFixMe
        resolvedAttrDef = resolvedAttrDef(context);
        attrDefWasFn = true;
      }

      /* eslint-disable guard-for-in */
      // $FlowFixMe
      for (key in resolvedAttrDef) {
        attr = resolvedAttrDef[key];

        if (!attrDefWasFn) {
          if (isFunction(attr) && !isDerivedReactComponent(attr) && !isStyledComponent(attr)) {
            if (true) {
              _this2.warnAttrsFnObjectKeyDeprecated(key, props.forwardedComponent.displayName);
            }

            attr = attr(context);

            if ("development" !== 'production' && react__WEBPACK_IMPORTED_MODULE_2___default.a.isValidElement(attr)) {
              _this2.warnNonStyledComponentAttrsObjectKey(key, props.forwardedComponent.displayName);
            }
          }
        }

        _this2.attrs[key] = attr;
        context[key] = attr;
      }
      /* eslint-enable */
    });

    return context;
  };

  StyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
    var _props$forwardedCompo2 = props.forwardedComponent,
        attrs = _props$forwardedCompo2.attrs,
        componentStyle = _props$forwardedCompo2.componentStyle,
        warnTooManyClasses = _props$forwardedCompo2.warnTooManyClasses;

    // statically styled-components don't need to build an execution context object,
    // and shouldn't be increasing the number of class names

    if (componentStyle.isStatic && !attrs.length) {
      return componentStyle.generateAndInjectStyles(EMPTY_OBJECT, this.styleSheet);
    }

    var className = componentStyle.generateAndInjectStyles(this.buildExecutionContext(theme, props, attrs), this.styleSheet);

    if ("development" !== 'production' && warnTooManyClasses) warnTooManyClasses(className);

    return className;
  };

  return StyledComponent;
}(react__WEBPACK_IMPORTED_MODULE_2__["Component"]);

function createStyledComponent(target, options, rules) {
  var isTargetStyledComp = isStyledComponent(target);
  var isClass = !isTag(target);

  var _options$displayName = options.displayName,
      displayName = _options$displayName === undefined ? generateDisplayName(target) : _options$displayName,
      _options$componentId = options.componentId,
      componentId = _options$componentId === undefined ? generateId(ComponentStyle, options.displayName, options.parentComponentId) : _options$componentId,
      _options$ParentCompon = options.ParentComponent,
      ParentComponent = _options$ParentCompon === undefined ? StyledComponent : _options$ParentCompon,
      _options$attrs = options.attrs,
      attrs = _options$attrs === undefined ? EMPTY_ARRAY : _options$attrs;


  var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + '-' + options.componentId : options.componentId || componentId;

  // fold the underlying StyledComponent attrs up (implicit extend)
  var finalAttrs =
  // $FlowFixMe
  isTargetStyledComp && target.attrs ? Array.prototype.concat(target.attrs, attrs).filter(Boolean) : attrs;

  var componentStyle = new ComponentStyle(isTargetStyledComp ? // fold the underlying StyledComponent rules up (implicit extend)
  // $FlowFixMe
  target.componentStyle.rules.concat(rules) : rules, finalAttrs, styledComponentId);

  /**
   * forwardRef creates a new interim component, which we'll take advantage of
   * instead of extending ParentComponent to create _another_ interim class
   */
  var WrappedStyledComponent = react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef(function (props, ref) {
    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(ParentComponent, _extends({}, props, { forwardedComponent: WrappedStyledComponent, forwardedRef: ref }));
  });

  // $FlowFixMe
  WrappedStyledComponent.attrs = finalAttrs;
  // $FlowFixMe
  WrappedStyledComponent.componentStyle = componentStyle;
  WrappedStyledComponent.displayName = displayName;

  // $FlowFixMe
  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp ? // $FlowFixMe
  Array.prototype.concat(target.foldedComponentIds, target.styledComponentId) : EMPTY_ARRAY;

  // $FlowFixMe
  WrappedStyledComponent.styledComponentId = styledComponentId;

  // fold the underlying StyledComponent target up since we folded the styles
  // $FlowFixMe
  WrappedStyledComponent.target = isTargetStyledComp ? target.target : target;

  // $FlowFixMe
  WrappedStyledComponent.withComponent = function withComponent(tag) {
    var previousComponentId = options.componentId,
        optionsToCopy = objectWithoutProperties(options, ['componentId']);


    var newComponentId = previousComponentId && previousComponentId + '-' + (isTag(tag) ? tag : escape(getComponentName(tag)));

    var newOptions = _extends({}, optionsToCopy, {
      attrs: finalAttrs,
      componentId: newComponentId,
      ParentComponent: ParentComponent
    });

    return createStyledComponent(tag, newOptions, rules);
  };

  if (true) {
    // $FlowFixMe
    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(displayName);
  }

  // $FlowFixMe
  WrappedStyledComponent.toString = function () {
    return '.' + WrappedStyledComponent.styledComponentId;
  };

  if (isClass) {
    hoistNonReactStatics(WrappedStyledComponent, target, {
      // all SC-specific things should not be hoisted
      attrs: true,
      componentStyle: true,
      displayName: true,
      foldedComponentIds: true,
      styledComponentId: true,
      target: true,
      withComponent: true
    });
  }

  return WrappedStyledComponent;
}

// 
// Thanks to ReactDOMFactories for this handy list!

var domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',

// SVG
'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];

// 

var styled = function styled(tag) {
  return constructWithOptions(createStyledComponent, tag);
};

// Shorthands for all valid HTML Elements
domElements.forEach(function (domElement) {
  styled[domElement] = styled(domElement);
});

// 

var GlobalStyle = function () {
  function GlobalStyle(rules, componentId) {
    classCallCheck(this, GlobalStyle);

    this.rules = rules;
    this.componentId = componentId;
    this.isStatic = isStaticRules(rules, EMPTY_ARRAY);

    if (!StyleSheet.master.hasId(componentId)) {
      StyleSheet.master.deferredInject(componentId, []);
    }
  }

  GlobalStyle.prototype.createStyles = function createStyles(executionContext, styleSheet) {
    var flatCSS = flatten(this.rules, executionContext, styleSheet);
    var css = stringifyRules(flatCSS, '');

    styleSheet.inject(this.componentId, css);
  };

  GlobalStyle.prototype.removeStyles = function removeStyles(styleSheet) {
    var componentId = this.componentId;

    if (styleSheet.hasId(componentId)) {
      styleSheet.remove(componentId);
    }
  };

  // TODO: overwrite in-place instead of remove+create?


  GlobalStyle.prototype.renderStyles = function renderStyles(executionContext, styleSheet) {
    this.removeStyles(styleSheet);
    this.createStyles(executionContext, styleSheet);
  };

  return GlobalStyle;
}();

// 

// place our cache into shared context so it'll persist between HMRs
if (IS_BROWSER) {
  window.scCGSHMRCache = {};
}

function createGlobalStyle(strings) {
  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  var rules = css.apply(undefined, [strings].concat(interpolations));
  var id = 'sc-global-' + murmurhash(JSON.stringify(rules));
  var style = new GlobalStyle(rules, id);

  var GlobalStyleComponent = function (_React$Component) {
    inherits(GlobalStyleComponent, _React$Component);

    function GlobalStyleComponent() {
      classCallCheck(this, GlobalStyleComponent);

      var _this = possibleConstructorReturn(this, _React$Component.call(this));

      var _this$constructor = _this.constructor,
          globalStyle = _this$constructor.globalStyle,
          styledComponentId = _this$constructor.styledComponentId;


      if (IS_BROWSER) {
        window.scCGSHMRCache[styledComponentId] = (window.scCGSHMRCache[styledComponentId] || 0) + 1;
      }

      /**
       * This fixes HMR compatibility. Don't ask me why, but this combination of
       * caching the closure variables via statics and then persisting the statics in
       * state works across HMR where no other combination did. ¯\_(ツ)_/¯
       */
      _this.state = {
        globalStyle: globalStyle,
        styledComponentId: styledComponentId
      };
      return _this;
    }

    GlobalStyleComponent.prototype.componentWillUnmount = function componentWillUnmount() {
      if (window.scCGSHMRCache[this.state.styledComponentId]) {
        window.scCGSHMRCache[this.state.styledComponentId] -= 1;
      }
      /**
       * Depending on the order "render" is called this can cause the styles to be lost
       * until the next render pass of the remaining instance, which may
       * not be immediate.
       */
      if (window.scCGSHMRCache[this.state.styledComponentId] === 0) {
        this.state.globalStyle.removeStyles(this.styleSheet);
      }
    };

    GlobalStyleComponent.prototype.render = function render() {
      var _this2 = this;

      if ("development" !== 'production' && react__WEBPACK_IMPORTED_MODULE_2___default.a.Children.count(this.props.children)) {
        // eslint-disable-next-line no-console
        console.warn('The global style component ' + this.state.styledComponentId + ' was given child JSX. createGlobalStyle does not render children.');
      }

      return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
        StyleSheetConsumer,
        null,
        function (styleSheet) {
          _this2.styleSheet = styleSheet || StyleSheet.master;

          var globalStyle = _this2.state.globalStyle;


          if (globalStyle.isStatic) {
            globalStyle.renderStyles(STATIC_EXECUTION_CONTEXT, _this2.styleSheet);

            return null;
          } else {
            return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
              ThemeConsumer,
              null,
              function (theme) {
                // $FlowFixMe
                var defaultProps = _this2.constructor.defaultProps;


                var context = _extends({}, _this2.props);

                if (typeof theme !== 'undefined') {
                  context.theme = determineTheme(_this2.props, theme, defaultProps);
                }

                globalStyle.renderStyles(context, _this2.styleSheet);

                return null;
              }
            );
          }
        }
      );
    };

    return GlobalStyleComponent;
  }(react__WEBPACK_IMPORTED_MODULE_2___default.a.Component);

  GlobalStyleComponent.globalStyle = style;
  GlobalStyleComponent.styledComponentId = id;


  return GlobalStyleComponent;
}

// 

var replaceWhitespace = function replaceWhitespace(str) {
  return str.replace(/\s|\\n/g, '');
};

function keyframes(strings) {
  /* Warning if you've used keyframes on React Native */
  if ("development" !== 'production' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    console.warn('`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.');
  }

  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  var rules = css.apply(undefined, [strings].concat(interpolations));

  var name = generateAlphabeticName(murmurhash(replaceWhitespace(JSON.stringify(rules))));

  return new Keyframes(name, stringifyRules(rules, name, '@keyframes'));
}

// 

var withTheme = (function (Component$$1) {
  var WithTheme = react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef(function (props, ref) {
    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
      ThemeConsumer,
      null,
      function (theme) {
        // $FlowFixMe
        var defaultProps = Component$$1.defaultProps;

        var themeProp = determineTheme(props, theme, defaultProps);

        if ("development" !== 'production' && themeProp === undefined) {
          // eslint-disable-next-line no-console
          console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "' + getComponentName(Component$$1) + '"');
        }

        return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(Component$$1, _extends({}, props, { theme: themeProp, ref: ref }));
      }
    );
  });

  hoistNonReactStatics(WithTheme, Component$$1);

  WithTheme.displayName = 'WithTheme(' + getComponentName(Component$$1) + ')';

  return WithTheme;
});

// 

/* eslint-disable */
var __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS = {
  StyleSheet: StyleSheet
};

// 

/* Warning if you've imported this file on React Native */
if ("development" !== 'production' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
  // eslint-disable-next-line no-console
  console.warn("It looks like you've imported 'styled-components' on React Native.\n" + "Perhaps you're looking to import 'styled-components/native'?\n" + 'Read more about this at https://www.styled-components.com/docs/basics#react-native');
}

/* Warning if there are several instances of styled-components */
if ("development" !== 'production' && "development" !== 'test' && typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Node.js') === -1 && navigator.userAgent.indexOf('jsdom') === -1) {
  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;

  if (window['__styled-components-init__'] === 1) {
    // eslint-disable-next-line no-console
    console.warn("It looks like there are several instances of 'styled-components' initialized in this application. " + 'This may cause dynamic styles not rendering properly, errors happening during rehydration process ' + 'and makes your application bigger without a good reason.\n\n' + 'See https://s-c.sh/2BAXzed for more info.');
  }

  window['__styled-components-init__'] += 1;
}

//

/* harmony default export */ __webpack_exports__["default"] = (styled);

//# sourceMappingURL=styled-components.browser.esm.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/stylis-rule-sheet/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stylis-rule-sheet/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (factory) {
	 true ? (module['exports'] = factory()) :
		undefined
}(function () {

	'use strict'

	return function (insertRule) {
		var delimiter = '/*|*/'
		var needle = delimiter+'}'

		function toSheet (block) {
			if (block)
				try {
					insertRule(block + '}')
				} catch (e) {}
		}

		return function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {
			switch (context) {
				// property
				case 1:
					// @import
					if (depth === 0 && content.charCodeAt(0) === 64)
						return insertRule(content+';'), ''
					break
				// selector
				case 2:
					if (ns === 0)
						return content + delimiter
					break
				// at-rule
				case 3:
					switch (ns) {
						// @font-face, @page
						case 102:
						case 112:
							return insertRule(selectors[0]+content), ''
						default:
							return content + (at === 0 ? delimiter : '')
					}
				case -2:
					content.split(needle).forEach(toSheet)
			}
		}
	}
}))


/***/ }),

/***/ "./node_modules/stylis/stylis.min.js":
/*!*******************************************!*\
  !*** ./node_modules/stylis/stylis.min.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(e){ true?module.exports=e(null):undefined}(function e(a){"use strict";var c=/^\0+/g,r=/[\0\r\f]/g,s=/: */g,t=/zoo|gra/,i=/([,: ])(transform)/g,f=/,+\s*(?![^(]*[)])/g,n=/ +\s*(?![^(]*[)])/g,l=/ *[\0] */g,o=/,\r+?/g,h=/([\t\r\n ])*\f?&/g,u=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,d=/\W+/g,b=/@(k\w+)\s*(\S*)\s*/,k=/::(place)/g,p=/:(read-only)/g,g=/\s+(?=[{\];=:>])/g,A=/([[}=:>])\s+/g,C=/(\{[^{]+?);(?=\})/g,w=/\s{2,}/g,v=/([^\(])(:+) */g,m=/[svh]\w+-[tblr]{2}/,x=/\(\s*(.*)\s*\)/g,$=/([\s\S]*?);/g,y=/-self|flex-/g,O=/[^]*?(:[rp][el]a[\w-]+)[^]*/,j=/stretch|:\s*\w+\-(?:conte|avail)/,z=/([^-])(image-set\()/,F="-webkit-",N="-moz-",S="-ms-",B=59,W=125,q=123,D=40,E=41,G=91,H=93,I=10,J=13,K=9,L=64,M=32,P=38,Q=45,R=95,T=42,U=44,V=58,X=39,Y=34,Z=47,_=62,ee=43,ae=126,ce=0,re=12,se=11,te=107,ie=109,fe=115,ne=112,le=111,oe=105,he=99,ue=100,de=112,be=1,ke=1,pe=0,ge=1,Ae=1,Ce=1,we=0,ve=0,me=0,xe=[],$e=[],ye=0,Oe=null,je=-2,ze=-1,Fe=0,Ne=1,Se=2,Be=3,We=0,qe=1,De="",Ee="",Ge="";function He(e,a,s,t,i){for(var f,n,o=0,h=0,u=0,d=0,g=0,A=0,C=0,w=0,m=0,$=0,y=0,O=0,j=0,z=0,R=0,we=0,$e=0,Oe=0,je=0,ze=s.length,Je=ze-1,Re="",Te="",Ue="",Ve="",Xe="",Ye="";R<ze;){if(C=s.charCodeAt(R),R===Je)if(h+d+u+o!==0){if(0!==h)C=h===Z?I:Z;d=u=o=0,ze++,Je++}if(h+d+u+o===0){if(R===Je){if(we>0)Te=Te.replace(r,"");if(Te.trim().length>0){switch(C){case M:case K:case B:case J:case I:break;default:Te+=s.charAt(R)}C=B}}if(1===$e)switch(C){case q:case W:case B:case Y:case X:case D:case E:case U:$e=0;case K:case J:case I:case M:break;default:for($e=0,je=R,g=C,R--,C=B;je<ze;)switch(s.charCodeAt(je++)){case I:case J:case B:++R,C=g,je=ze;break;case V:if(we>0)++R,C=g;case q:je=ze}}switch(C){case q:for(g=(Te=Te.trim()).charCodeAt(0),y=1,je=++R;R<ze;){switch(C=s.charCodeAt(R)){case q:y++;break;case W:y--;break;case Z:switch(A=s.charCodeAt(R+1)){case T:case Z:R=Qe(A,R,Je,s)}break;case G:C++;case D:C++;case Y:case X:for(;R++<Je&&s.charCodeAt(R)!==C;);}if(0===y)break;R++}if(Ue=s.substring(je,R),g===ce)g=(Te=Te.replace(c,"").trim()).charCodeAt(0);switch(g){case L:if(we>0)Te=Te.replace(r,"");switch(A=Te.charCodeAt(1)){case ue:case ie:case fe:case Q:f=a;break;default:f=xe}if(je=(Ue=He(a,f,Ue,A,i+1)).length,me>0&&0===je)je=Te.length;if(ye>0)if(f=Ie(xe,Te,Oe),n=Pe(Be,Ue,f,a,ke,be,je,A,i,t),Te=f.join(""),void 0!==n)if(0===(je=(Ue=n.trim()).length))A=0,Ue="";if(je>0)switch(A){case fe:Te=Te.replace(x,Me);case ue:case ie:case Q:Ue=Te+"{"+Ue+"}";break;case te:if(Ue=(Te=Te.replace(b,"$1 $2"+(qe>0?De:"")))+"{"+Ue+"}",1===Ae||2===Ae&&Le("@"+Ue,3))Ue="@"+F+Ue+"@"+Ue;else Ue="@"+Ue;break;default:if(Ue=Te+Ue,t===de)Ve+=Ue,Ue=""}else Ue="";break;default:Ue=He(a,Ie(a,Te,Oe),Ue,t,i+1)}Xe+=Ue,O=0,$e=0,z=0,we=0,Oe=0,j=0,Te="",Ue="",C=s.charCodeAt(++R);break;case W:case B:if((je=(Te=(we>0?Te.replace(r,""):Te).trim()).length)>1){if(0===z)if((g=Te.charCodeAt(0))===Q||g>96&&g<123)je=(Te=Te.replace(" ",":")).length;if(ye>0)if(void 0!==(n=Pe(Ne,Te,a,e,ke,be,Ve.length,t,i,t)))if(0===(je=(Te=n.trim()).length))Te="\0\0";switch(g=Te.charCodeAt(0),A=Te.charCodeAt(1),g){case ce:break;case L:if(A===oe||A===he){Ye+=Te+s.charAt(R);break}default:if(Te.charCodeAt(je-1)===V)break;Ve+=Ke(Te,g,A,Te.charCodeAt(2))}}O=0,$e=0,z=0,we=0,Oe=0,Te="",C=s.charCodeAt(++R)}}switch(C){case J:case I:if(h+d+u+o+ve===0)switch($){case E:case X:case Y:case L:case ae:case _:case T:case ee:case Z:case Q:case V:case U:case B:case q:case W:break;default:if(z>0)$e=1}if(h===Z)h=0;else if(ge+O===0&&t!==te&&Te.length>0)we=1,Te+="\0";if(ye*We>0)Pe(Fe,Te,a,e,ke,be,Ve.length,t,i,t);be=1,ke++;break;case B:case W:if(h+d+u+o===0){be++;break}default:switch(be++,Re=s.charAt(R),C){case K:case M:if(d+o+h===0)switch(w){case U:case V:case K:case M:Re="";break;default:if(C!==M)Re=" "}break;case ce:Re="\\0";break;case re:Re="\\f";break;case se:Re="\\v";break;case P:if(d+h+o===0&&ge>0)Oe=1,we=1,Re="\f"+Re;break;case 108:if(d+h+o+pe===0&&z>0)switch(R-z){case 2:if(w===ne&&s.charCodeAt(R-3)===V)pe=w;case 8:if(m===le)pe=m}break;case V:if(d+h+o===0)z=R;break;case U:if(h+u+d+o===0)we=1,Re+="\r";break;case Y:case X:if(0===h)d=d===C?0:0===d?C:d;break;case G:if(d+h+u===0)o++;break;case H:if(d+h+u===0)o--;break;case E:if(d+h+o===0)u--;break;case D:if(d+h+o===0){if(0===O)switch(2*w+3*m){case 533:break;default:y=0,O=1}u++}break;case L:if(h+u+d+o+z+j===0)j=1;break;case T:case Z:if(d+o+u>0)break;switch(h){case 0:switch(2*C+3*s.charCodeAt(R+1)){case 235:h=Z;break;case 220:je=R,h=T}break;case T:if(C===Z&&w===T&&je+2!==R){if(33===s.charCodeAt(je+2))Ve+=s.substring(je,R+1);Re="",h=0}}}if(0===h){if(ge+d+o+j===0&&t!==te&&C!==B)switch(C){case U:case ae:case _:case ee:case E:case D:if(0===O){switch(w){case K:case M:case I:case J:Re+="\0";break;default:Re="\0"+Re+(C===U?"":"\0")}we=1}else switch(C){case D:if(z+7===R&&108===w)z=0;O=++y;break;case E:if(0==(O=--y))we=1,Re+="\0"}break;case K:case M:switch(w){case ce:case q:case W:case B:case U:case re:case K:case M:case I:case J:break;default:if(0===O)we=1,Re+="\0"}}if(Te+=Re,C!==M&&C!==K)$=C}}m=w,w=C,R++}if(je=Ve.length,me>0)if(0===je&&0===Xe.length&&0===a[0].length==false)if(t!==ie||1===a.length&&(ge>0?Ee:Ge)===a[0])je=a.join(",").length+2;if(je>0){if(f=0===ge&&t!==te?function(e){for(var a,c,s=0,t=e.length,i=Array(t);s<t;++s){for(var f=e[s].split(l),n="",o=0,h=0,u=0,d=0,b=f.length;o<b;++o){if(0===(h=(c=f[o]).length)&&b>1)continue;if(u=n.charCodeAt(n.length-1),d=c.charCodeAt(0),a="",0!==o)switch(u){case T:case ae:case _:case ee:case M:case D:break;default:a=" "}switch(d){case P:c=a+Ee;case ae:case _:case ee:case M:case E:case D:break;case G:c=a+c+Ee;break;case V:switch(2*c.charCodeAt(1)+3*c.charCodeAt(2)){case 530:if(Ce>0){c=a+c.substring(8,h-1);break}default:if(o<1||f[o-1].length<1)c=a+Ee+c}break;case U:a="";default:if(h>1&&c.indexOf(":")>0)c=a+c.replace(v,"$1"+Ee+"$2");else c=a+c+Ee}n+=c}i[s]=n.replace(r,"").trim()}return i}(a):a,ye>0)if(void 0!==(n=Pe(Se,Ve,f,e,ke,be,je,t,i,t))&&0===(Ve=n).length)return Ye+Ve+Xe;if(Ve=f.join(",")+"{"+Ve+"}",Ae*pe!=0){if(2===Ae&&!Le(Ve,2))pe=0;switch(pe){case le:Ve=Ve.replace(p,":"+N+"$1")+Ve;break;case ne:Ve=Ve.replace(k,"::"+F+"input-$1")+Ve.replace(k,"::"+N+"$1")+Ve.replace(k,":"+S+"input-$1")+Ve}pe=0}}return Ye+Ve+Xe}function Ie(e,a,c){var r=a.trim().split(o),s=r,t=r.length,i=e.length;switch(i){case 0:case 1:for(var f=0,n=0===i?"":e[0]+" ";f<t;++f)s[f]=Je(n,s[f],c,i).trim();break;default:f=0;var l=0;for(s=[];f<t;++f)for(var h=0;h<i;++h)s[l++]=Je(e[h]+" ",r[f],c,i).trim()}return s}function Je(e,a,c,r){var s=a,t=s.charCodeAt(0);if(t<33)t=(s=s.trim()).charCodeAt(0);switch(t){case P:switch(ge+r){case 0:case 1:if(0===e.trim().length)break;default:return s.replace(h,"$1"+e.trim())}break;case V:switch(s.charCodeAt(1)){case 103:if(Ce>0&&ge>0)return s.replace(u,"$1").replace(h,"$1"+Ge);break;default:return e.trim()+s.replace(h,"$1"+e.trim())}default:if(c*ge>0&&s.indexOf("\f")>0)return s.replace(h,(e.charCodeAt(0)===V?"":"$1")+e.trim())}return e+s}function Ke(e,a,c,r){var l,o=0,h=e+";",u=2*a+3*c+4*r;if(944===u)return function(e){var a=e.length,c=e.indexOf(":",9)+1,r=e.substring(0,c).trim(),s=e.substring(c,a-1).trim();switch(e.charCodeAt(9)*qe){case 0:break;case Q:if(110!==e.charCodeAt(10))break;default:for(var t=s.split((s="",f)),i=0,c=0,a=t.length;i<a;c=0,++i){for(var l=t[i],o=l.split(n);l=o[c];){var h=l.charCodeAt(0);if(1===qe&&(h>L&&h<90||h>96&&h<123||h===R||h===Q&&l.charCodeAt(1)!==Q))switch(isNaN(parseFloat(l))+(-1!==l.indexOf("("))){case 1:switch(l){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:l+=De}}o[c++]=l}s+=(0===i?"":",")+o.join(" ")}}if(s=r+s+";",1===Ae||2===Ae&&Le(s,1))return F+s+s;return s}(h);else if(0===Ae||2===Ae&&!Le(h,1))return h;switch(u){case 1015:return 97===h.charCodeAt(10)?F+h+h:h;case 951:return 116===h.charCodeAt(3)?F+h+h:h;case 963:return 110===h.charCodeAt(5)?F+h+h:h;case 1009:if(100!==h.charCodeAt(4))break;case 969:case 942:return F+h+h;case 978:return F+h+N+h+h;case 1019:case 983:return F+h+N+h+S+h+h;case 883:if(h.charCodeAt(8)===Q)return F+h+h;if(h.indexOf("image-set(",11)>0)return h.replace(z,"$1"+F+"$2")+h;return h;case 932:if(h.charCodeAt(4)===Q)switch(h.charCodeAt(5)){case 103:return F+"box-"+h.replace("-grow","")+F+h+S+h.replace("grow","positive")+h;case 115:return F+h+S+h.replace("shrink","negative")+h;case 98:return F+h+S+h.replace("basis","preferred-size")+h}return F+h+S+h+h;case 964:return F+h+S+"flex-"+h+h;case 1023:if(99!==h.charCodeAt(8))break;return l=h.substring(h.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),F+"box-pack"+l+F+h+S+"flex-pack"+l+h;case 1005:return t.test(h)?h.replace(s,":"+F)+h.replace(s,":"+N)+h:h;case 1e3:switch(o=(l=h.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(o)){case 226:l=h.replace(m,"tb");break;case 232:l=h.replace(m,"tb-rl");break;case 220:l=h.replace(m,"lr");break;default:return h}return F+h+S+l+h;case 1017:if(-1===h.indexOf("sticky",9))return h;case 975:switch(o=(h=e).length-10,u=(l=(33===h.charCodeAt(o)?h.substring(0,o):h).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(l.charCodeAt(8)<111)break;case 115:h=h.replace(l,F+l)+";"+h;break;case 207:case 102:h=h.replace(l,F+(u>102?"inline-":"")+"box")+";"+h.replace(l,F+l)+";"+h.replace(l,S+l+"box")+";"+h}return h+";";case 938:if(h.charCodeAt(5)===Q)switch(h.charCodeAt(6)){case 105:return l=h.replace("-items",""),F+h+F+"box-"+l+S+"flex-"+l+h;case 115:return F+h+S+"flex-item-"+h.replace(y,"")+h;default:return F+h+S+"flex-line-pack"+h.replace("align-content","").replace(y,"")+h}break;case 973:case 989:if(h.charCodeAt(3)!==Q||122===h.charCodeAt(4))break;case 931:case 953:if(true===j.test(e))if(115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0))return Ke(e.replace("stretch","fill-available"),a,c,r).replace(":fill-available",":stretch");else return h.replace(l,F+l)+h.replace(l,N+l.replace("fill-",""))+h;break;case 962:if(h=F+h+(102===h.charCodeAt(5)?S+h:"")+h,c+r===211&&105===h.charCodeAt(13)&&h.indexOf("transform",10)>0)return h.substring(0,h.indexOf(";",27)+1).replace(i,"$1"+F+"$2")+h}return h}function Le(e,a){var c=e.indexOf(1===a?":":"{"),r=e.substring(0,3!==a?c:10),s=e.substring(c+1,e.length-1);return Oe(2!==a?r:r.replace(O,"$1"),s,a)}function Me(e,a){var c=Ke(a,a.charCodeAt(0),a.charCodeAt(1),a.charCodeAt(2));return c!==a+";"?c.replace($," or ($1)").substring(4):"("+a+")"}function Pe(e,a,c,r,s,t,i,f,n,l){for(var o,h=0,u=a;h<ye;++h)switch(o=$e[h].call(Te,e,u,c,r,s,t,i,f,n,l)){case void 0:case false:case true:case null:break;default:u=o}switch(u){case void 0:case false:case true:case null:case a:break;default:return u}}function Qe(e,a,c,r){for(var s=a+1;s<c;++s)switch(r.charCodeAt(s)){case Z:if(e===T)if(r.charCodeAt(s-1)===T&&a+2!==s)return s+1;break;case I:if(e===Z)return s+1}return s}function Re(e){for(var a in e){var c=e[a];switch(a){case"keyframe":qe=0|c;break;case"global":Ce=0|c;break;case"cascade":ge=0|c;break;case"compress":we=0|c;break;case"semicolon":ve=0|c;break;case"preserve":me=0|c;break;case"prefix":if(Oe=null,!c)Ae=0;else if("function"!=typeof c)Ae=1;else Ae=2,Oe=c}}return Re}function Te(a,c){if(void 0!==this&&this.constructor===Te)return e(a);var s=a,t=s.charCodeAt(0);if(t<33)t=(s=s.trim()).charCodeAt(0);if(qe>0)De=s.replace(d,t===G?"":"-");if(t=1,1===ge)Ge=s;else Ee=s;var i,f=[Ge];if(ye>0)if(void 0!==(i=Pe(ze,c,f,f,ke,be,0,0,0,0))&&"string"==typeof i)c=i;var n=He(xe,f,c,0,0);if(ye>0)if(void 0!==(i=Pe(je,n,f,f,ke,be,n.length,0,0,0))&&"string"!=typeof(n=i))t=0;return De="",Ge="",Ee="",pe=0,ke=1,be=1,we*t==0?n:n.replace(r,"").replace(g,"").replace(A,"$1").replace(C,"$1").replace(w," ")}if(Te.use=function e(a){switch(a){case void 0:case null:ye=$e.length=0;break;default:switch(a.constructor){case Array:for(var c=0,r=a.length;c<r;++c)e(a[c]);break;case Function:$e[ye++]=a;break;case Boolean:We=0|!!a}}return e},Te.set=Re,void 0!==a)Re(a);return Te});
//# sourceMappingURL=stylis.min.js.map

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(/*! punycode */ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js");
var util = __webpack_require__(/*! ./util */ "./node_modules/url/util.js");

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(/*! querystring */ "./node_modules/querystring-es3/index.js");

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),

/***/ "./node_modules/url/util.js":
/*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!******************************************************************************************************!*\
  !*** delegated ./node_modules/webpack/buildin/global.js from dll-reference dll_831a3634f66cb1dada0c ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_831a3634f66cb1dada0c */ "dll-reference dll_831a3634f66cb1dada0c"))("./node_modules/webpack/buildin/global.js");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./pages/chartmap.js":
/*!***************************!*\
  !*** ./pages/chartmap.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _components_Map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Map */ "./components/Map.js");
var _jsxFileName = "/Users/shanemccoy/Desktop/code/React-AM-Charts-demo/pages/chartmap.js";

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  width: 250px;\n  font-size: 2rem;\n  background: seashell;\n  font-weight: bold;\n  text-decoration: none;\n  border-radius: 10px;\n  border: 2px solid #333;\n  margin-bottom: 25px;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }





var BackBtn = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].button(_templateObject());

var ChartMap = function ChartMap(props) {
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
    href: "/",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(BackBtn, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20
    },
    __self: this
  }, "Back")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h1", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22
    },
    __self: this
  }, "Example Map Chart (Oregon!)"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Map__WEBPACK_IMPORTED_MODULE_3__["default"], {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23
    },
    __self: this
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (ChartMap);
    (function (Component, route) {
      if(!Component) return
      if (false) {}
      module.hot.accept()
      Component.__route = route

      if (module.hot.status() === 'idle') return

      var components = next.router.components
      for (var r in components) {
        if (!components.hasOwnProperty(r)) continue

        if (components[r].Component.__route === route) {
          next.router.update(r, Component)
        }
      }
    })(typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__.default : (module.exports.default || module.exports), "/chartmap")
  
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ 8:
/*!*********************************!*\
  !*** multi ./pages/chartmap.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__NEXT_REGISTER_PAGE('/chartmap', function() {
module.exports = __webpack_require__(/*! ./pages/chartmap.js */"./pages/chartmap.js");

return { page: module.exports.default }});

/***/ }),

/***/ "dll-reference dll_831a3634f66cb1dada0c":
/*!*******************************************!*\
  !*** external "dll_831a3634f66cb1dada0c" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = dll_831a3634f66cb1dada0c;

/***/ })

},[[8,"static/runtime/webpack.js"]]]));;
//# sourceMappingURL=chartmap.js.map